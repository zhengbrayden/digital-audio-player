
Board_Diagnostics.elf:     file format elf32-littlenios2
Board_Diagnostics.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00800248

Program Header:
    LOAD off    0x00001000 vaddr 0x00800000 paddr 0x00800000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00800020 paddr 0x00800020 align 2**12
         filesz 0x0001ccf0 memsz 0x0001ccf0 flags r-x
    LOAD off    0x0001dd10 vaddr 0x0081cd10 paddr 0x0081ea5c align 2**12
         filesz 0x00001d4c memsz 0x00001d4c flags rw-
    LOAD off    0x000207a8 vaddr 0x008207a8 paddr 0x008207a8 align 2**12
         filesz 0x00000000 memsz 0x00000178 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00800000  00800000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000228  00800020  00800020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0001be14  00800248  00800248  00001248  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000cb4  0081c05c  0081c05c  0001d05c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001d4c  0081cd10  0081ea5c  0001dd10  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000178  008207a8  008207a8  000207a8  2**2
                  ALLOC, SMALL_DATA
  6 .sdram_0      00000000  00820920  00820920  0001fa5c  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  0001fa5c  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001540  00000000  00000000  0001fa80  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   0003acad  00000000  00000000  00020fc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000e561  00000000  00000000  0005bc6d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00012dc2  00000000  00000000  0006a1ce  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00003248  00000000  00000000  0007cf90  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00004cfa  00000000  00000000  000801d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00026923  00000000  00000000  00084ed2  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000060  00000000  00000000  000ab7f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00002328  00000000  00000000  000ab858  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  000b1f5e  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  000b1f61  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  000b1f6d  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  000b1f6e  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  000b1f6f  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  000b1f73  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  000b1f77  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   0000000b  00000000  00000000  000b1f7b  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    0000000b  00000000  00000000  000b1f86  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   0000000b  00000000  00000000  000b1f91  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000003  00000000  00000000  000b1f9c  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 0000002f  00000000  00000000  000b1f9f  2**0
                  CONTENTS, READONLY
 29 .jdi          00004a3a  00000000  00000000  000b1fce  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0008f514  00000000  00000000  000b6a08  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00800000 l    d  .entry	00000000 .entry
00800020 l    d  .exceptions	00000000 .exceptions
00800248 l    d  .text	00000000 .text
0081c05c l    d  .rodata	00000000 .rodata
0081cd10 l    d  .rwdata	00000000 .rwdata
008207a8 l    d  .bss	00000000 .bss
00820920 l    d  .sdram_0	00000000 .sdram_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../Board_Diagnostics_bsp//obj/HAL/src/crt0.o
00800290 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 board_diag.c
00800294 l     F .text	0000006c MenuBegin
00800300 l     F .text	0000004c MenuItem
008003dc l     F .text	00000104 MenuEnd
008207a8 l     O .bss	00000004 entry.2854
008207ac l     O .bss	00000001 ch.2855
008004e0 l     F .text	000000b8 DoSevenSegMenu
008207ad l     O .bss	00000001 ch.2859
00800bd4 l     F .text	00000060 SevenSegCount
00800c34 l     F .text	00000234 SevenSegControl
00800598 l     F .text	00000164 TopMenu
008207ae l     O .bss	00000001 ch.2868
008006fc l     F .text	000000c4 TestLEDs
008007c0 l     F .text	00000100 TestLCD
008009cc l     F .text	00000184 TestButtons
008207af l     O .bss	00000004 entry.2883
008207b3 l     O .bss	00000001 ch.2882
008207b4 l     O .bss	00000004 entry.2891
008207b8 l     O .bss	00000001 ch.2890
008008c0 l     F .text	00000060 handle_button_interrupts
00800920 l     F .text	00000064 init_button_pio
00800984 l     F .text	00000048 disable_button_pio
00800b50 l     F .text	00000084 sevenseg_set_hex
0081cd10 l     O .rwdata	00000010 segments.2921
008207b9 l     O .bss	00000001 ch.2936
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00801274 l     F .text	00000008 __fp_unlock
00801288 l     F .text	0000019c __sinit.part.1
00801424 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 getc.c
00000000 l    df *ABS*	00000000 impure.c
0081cd20 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 refill.c
008030ac l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 sscanf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfscanf.c
0081c56e l     O .rodata	00000022 basefix.4340
00000000 l    df *ABS*	00000000 vfprintf.c
0081c5d2 l     O .rodata	00000010 zeroes.4404
00807010 l     F .text	000000bc __sbprintf
0081c5e2 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
0081c6f3 l     O .rodata	00000180 _ctype_b
00000000 l    df *ABS*	00000000 dtoa.c
008072d4 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 iswspace.c
00000000 l    df *ABS*	00000000 locale.c
0081d56c l     O .rwdata	00000020 lc_ctype_charset
0081d54c l     O .rwdata	00000020 lc_message_charset
0081d58c l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbrtowc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
0081c890 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strtod.c
0080b244 l     F .text	00000064 sulp
0081c9d8 l     O .rodata	00000014 fpi.2737
0081c9ec l     O .rodata	00000028 tinytens
0081c9c4 l     O .rodata	00000014 fpinan.2773
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 strtoll_r.c
00000000 l    df *ABS*	00000000 strtoul.c
00000000 l    df *ABS*	00000000 strtoull_r.c
00000000 l    df *ABS*	00000000 vfscanf.c
0081ca14 l     O .rodata	00000022 basefix.3791
00000000 l    df *ABS*	00000000 vfprintf.c
0081ca36 l     O .rodata	00000010 zeroes.4389
0081ca46 l     O .rodata	00000010 blanks.4388
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 vfprintf.c
00810c50 l     F .text	000000fc __sprint_r.part.0
0081ca66 l     O .rodata	00000010 blanks.4348
0081ca56 l     O .rodata	00000010 zeroes.4349
008121dc l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
008126bc l     F .text	00000100 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
0081cb86 l     O .rodata	00000010 blanks.4332
0081cb76 l     O .rodata	00000010 zeroes.4333
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 eqsf2.c
00000000 l    df *ABS*	00000000 gesf2.c
00000000 l    df *ABS*	00000000 lesf2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
00818050 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0081815c l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
00818188 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_isatty.c
008183f4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
008184d4 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
008185c0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_open.c
00818794 l     F .text	0000003c alt_get_errno
008187d0 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_read.c
008189e8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0081ea4c l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
00818c64 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
00818d98 l     F .text	00000034 alt_dev_reg
0081d76c l     O .rwdata	00001060 jtag_uart_0
0081e7cc l     O .rwdata	00000120 lcd_display
0081e8ec l     O .rwdata	000000c4 uart
0081e9b0 l     O .rwdata	00000030 audio_i2c_config
0081e9e0 l     O .rwdata	00000030 Audio
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
008190d0 l     F .text	00000210 altera_avalon_jtag_uart_irq
008192e0 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_lcd_16207.c
0081ea50 l     O .rwdata	00000004 colstart
00819918 l     F .text	000000b8 lcd_write_command
008199d0 l     F .text	000000d8 lcd_write_data
00819aa8 l     F .text	000000d0 lcd_clear_screen
00819b78 l     F .text	000001ec lcd_repaint_screen
00819d64 l     F .text	000000cc lcd_scroll_up
00819e30 l     F .text	000002ac lcd_handle_escape
0081a5b4 l     F .text	000000ac alt_lcd_16207_timeout
00000000 l    df *ABS*	00000000 altera_avalon_lcd_16207_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0081a7f4 l     F .text	0000007c alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_avalon_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_uart_init.c
0081aa98 l     F .text	000000a0 altera_avalon_uart_irq
0081ab38 l     F .text	000000e4 altera_avalon_uart_rxirq
0081ac1c l     F .text	00000148 altera_avalon_uart_txirq
00000000 l    df *ABS*	00000000 altera_avalon_uart_read.c
0081adb8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 altera_avalon_uart_write.c
0081afd0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0081b484 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0081b894 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
008207f4 g     O .bss	00000004 alt_instruction_exception_handler
00802fc0 g     F .text	00000018 putchar
0080a6b4 g     F .text	00000074 _mprec_log10
0080a7a0 g     F .text	0000008c __any_on
008090c4 g     F .text	00000054 _isatty_r
0081c89c g     O .rodata	00000028 __mprec_tinytens
008186d0 g     F .text	0000007c alt_main
00802fd8 g     F .text	000000c0 _puts_r
00820820 g     O .bss	00000100 alt_irq
00809224 g     F .text	00000060 _lseek_r
0081ea5c g       *ABS*	00000000 __flash_rwdata_start
00808b5c g     F .text	000000ac __sflags
008169d4 g     F .text	00000088 .hidden __eqdf2
00820920 g       *ABS*	00000000 __alt_heap_start
00802f7c g     F .text	0000003c printf
00814724 g     F .text	0000009c _wcrtomb_r
00803544 g     F .text	0000005c __sseek
008015c4 g     F .text	00000010 __sinit
00812298 g     F .text	00000140 __swbuf_r
00809148 g     F .text	0000007c _setlocale_r
0080142c g     F .text	00000068 __sfmoreglue
00810c38 g     F .text	00000018 ungetc
00818770 g     F .text	00000024 __malloc_unlock
0080b2a8 g     F .text	000015f8 _strtod_r
0080034c g     F .text	00000090 GetInputString
0080d610 g     F .text	000000f4 _sfread_r
008096d4 g     F .text	0000015c memmove
008015ac g     F .text	00000018 _cleanup
00809830 g     F .text	000000a8 _Balloc
00816a5c g     F .text	000000dc .hidden __gtdf2
0081bb78 g     F .text	00000024 altera_nios2_gen2_irq_init
00800000 g     F .entry	0000001c __reset
008207bc g     O .bss	00000004 edge_capture
00800020 g       *ABS*	00000000 __flash_exceptions_start
00802020 g     F .text	0000005c _fstat_r
008207c0 g     O .bss	00000004 errno
00803310 g     F .text	00000014 __srget
008034c0 g     F .text	00000008 __seofread
008134e8 g     F .text	0000123c ___svfiprintf_internal_r
008207e4 g     O .bss	00000004 alt_argv
00826a10 g       *ABS*	00000000 _gp
00818c34 g     F .text	00000030 usleep
0081d5ec g     O .rwdata	00000180 alt_fd_list
00802304 g     F .text	00000070 _getc_r
00802374 g     F .text	00000088 getc
00802fb8 g     F .text	00000008 _putchar_r
0081b624 g     F .text	00000090 alt_find_dev
0080958c g     F .text	00000148 memcpy
00812fec g     F .text	0000025c __hexnan
0080127c g     F .text	0000000c _cleanup_r
00817cc0 g     F .text	000000dc .hidden __floatsidf
0081b958 g     F .text	0000007c alt_io_redirect
00816b38 g     F .text	000000f4 .hidden __ltdf2
0081c05c g       *ABS*	00000000 __DTOR_END__
00803098 g     F .text	00000014 puts
0081bc2c g     F .text	0000009c alt_exception_cause_generated_bad_addr
00809330 g     F .text	000000d8 mbrtowc
0080af58 g     F .text	00000074 __fpclassifyd
0080a610 g     F .text	000000a4 __ratio
008121c0 g     F .text	0000001c __vfiprintf_internal
008194d8 g     F .text	0000021c altera_avalon_jtag_uart_read
00802f4c g     F .text	00000030 _printf_r
00815588 g     F .text	00000064 .hidden __udivsi3
00818430 g     F .text	000000a4 isatty
00809118 g     F .text	00000030 iswspace
0081c8ec g     O .rodata	000000c8 __mprec_tens
008091c4 g     F .text	0000000c __locale_charset
00815778 g     F .text	000000c8 .hidden __lesf2
0081496c g     F .text	00000074 .hidden __fixunsdfsi
0081bb9c g     F .text	00000090 alt_icache_flush
008207cc g     O .bss	00000004 __malloc_top_pad
0080d5a0 g     F .text	00000070 __ssrefill_r
0080d15c g     F .text	0000001c strtoul
0081ea24 g     O .rwdata	00000004 __mb_cur_max
008091f4 g     F .text	0000000c _localeconv_r
0080d178 g     F .text	00000320 _strtoull_r
00809c3c g     F .text	0000003c __i2b
00808c08 g     F .text	000004bc __sfvwrite_r
00803324 g     F .text	00000054 _sbrk_r
0080a994 g     F .text	00000060 _read_r
0081ea40 g     O .rwdata	00000004 alt_max_fd
00800ec8 g     F .text	000000f0 _fclose_r
00801244 g     F .text	00000030 fflush
008207c8 g     O .bss	00000004 __malloc_max_sbrked_mem
00818274 g     F .text	00000180 alt_irq_register
00803640 g     F .text	000017bc __ssvfscanf_r
00815840 g     F .text	000008ac .hidden __adddf3
00815644 g     F .text	00000078 .hidden __nesf2
0080a3b8 g     F .text	0000010c __b2d
00814f58 g     F .text	00000538 .hidden __umoddi3
008185fc g     F .text	000000d4 lseek
0081ea10 g     O .rwdata	00000004 _global_impure_ptr
0080a9f4 g     F .text	00000564 _realloc_r
00820920 g       *ABS*	00000000 __bss_end
0081ba70 g     F .text	00000108 alt_tick
0081ca76 g     O .rodata	00000100 __hexdig
008149e0 g     F .text	00000578 .hidden __udivdi3
00812618 g     F .text	00000024 _fputwc_r
0081c8c4 g     O .rodata	00000028 __mprec_bigtens
00809a20 g     F .text	00000104 __s2b
00817d9c g     F .text	000000a8 .hidden __floatunsidf
0080a0f8 g     F .text	00000060 __mcmp
0081a9f4 g     F .text	000000a4 altera_avalon_uart_init
008015e4 g     F .text	00000018 __fp_lock_all
0081b9d4 g     F .text	0000009c alt_alarm_stop
0080cbf0 g     F .text	0000001c strtol
008207dc g     O .bss	00000004 alt_irq_active
00801bc0 g     F .text	00000444 _fseeko_r
008000fc g     F .exceptions	000000d8 alt_irq_handler
0081d5c4 g     O .rwdata	00000028 alt_dev_null
0081b43c g     F .text	00000048 alt_dcache_flush_all
00809b24 g     F .text	00000068 __hi0bits
00817c40 g     F .text	00000080 .hidden __fixdfsi
0080c8a0 g     F .text	00000018 strtod
0081ea5c g       *ABS*	00000000 __ram_rwdata_end
0081ea38 g     O .rwdata	00000008 alt_dev_list
00818ca0 g     F .text	000000f8 write
0080a82c g     F .text	000000a0 _putc_r
008156bc g     F .text	000000bc .hidden __gtsf2
0081cd10 g       *ABS*	00000000 __ram_rodata_end
008181c4 g     F .text	000000b0 fstat
00801748 g     F .text	00000024 fprintf
00816b38 g     F .text	000000f4 .hidden __ledf2
00809e70 g     F .text	00000140 __pow5mult
00810d64 g     F .text	0000145c ___vfiprintf_internal_r
008207d8 g     O .bss	00000004 __nlocale_changed
008155ec g     F .text	00000058 .hidden __umodsi3
00820920 g       *ABS*	00000000 end
0081a0dc g     F .text	000004d8 altera_avalon_lcd_16207_write
00802004 g     F .text	0000001c fseeko
0081b00c g     F .text	000001ac altera_avalon_uart_write
00801ba4 g     F .text	0000001c fseek
0081901c g     F .text	000000b4 altera_avalon_jtag_uart_init
008001d4 g     F .exceptions	00000074 alt_instruction_exception_entry
0081c05c g       *ABS*	00000000 __CTOR_LIST__
01000000 g       *ABS*	00000000 __alt_stack_pointer
0081a870 g     F .text	00000074 alt_avalon_timer_sc_init
0081a944 g     F .text	00000060 altera_avalon_uart_write_fd
00817fec g     F .text	00000064 .hidden __clzsi2
0081a9a4 g     F .text	00000050 altera_avalon_uart_close_fd
008196f4 g     F .text	00000224 altera_avalon_jtag_uart_write
008015d4 g     F .text	00000004 __sfp_lock_acquire
008094a8 g     F .text	000000e4 memchr
00804dfc g     F .text	000021f8 ___vfprintf_internal_r
0080b0a4 g     F .text	00000058 _sprintf_r
00801890 g     F .text	00000310 _free_r
008091d0 g     F .text	00000010 __locale_mb_cur_max
0081bea8 g     F .text	00000180 __call_exitprocs
0080329c g     F .text	00000074 __srget_r
0080d498 g     F .text	00000108 _sungetc_r
008207d4 g     O .bss	00000004 __mlocale_changed
0081ea18 g     O .rwdata	00000004 __malloc_sbrk_base
00800248 g     F .text	0000004c _start
008207ec g     O .bss	00000004 _alt_tick_rate
0080cc0c g     F .text	00000304 _strtoll_r
00809fb0 g     F .text	00000148 __lshift
008207f0 g     O .bss	00000004 _alt_nticks
00818a24 g     F .text	000000fc read
00818e04 g     F .text	000000b4 alt_sys_init
00813318 g     F .text	000001d0 __ssprint_r
00802eec g     F .text	00000060 _open_r
0081bd90 g     F .text	00000118 __register_exitproc
00813248 g     F .text	000000d0 strncmp
00809c78 g     F .text	000001f8 __multiply
00819380 g     F .text	00000068 altera_avalon_jtag_uart_close
0081cd10 g       *ABS*	00000000 __ram_rwdata_start
0081c05c g       *ABS*	00000000 __ram_rodata_start
008207f8 g     O .bss	00000028 __malloc_current_mallinfo
00815644 g     F .text	00000078 .hidden __eqsf2
0080a4c4 g     F .text	0000014c __d2b
00818eb8 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0080cf10 g     F .text	0000024c _strtoul_r
0081b7bc g     F .text	000000a4 alt_get_fd
0081b2e4 g     F .text	00000158 alt_busy_sleep
00807280 g     F .text	00000054 _close_r
0081bd14 g     F .text	0000007c memcmp
00818f78 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00820920 g       *ABS*	00000000 __alt_stack_base
00818fc8 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00802204 g     F .text	000000cc _fwrite_r
00803378 g     F .text	0000007c sscanf
0080712c g     F .text	00000154 __swsetup_r
008160ec g     F .text	000008e8 .hidden __divdf3
00801494 g     F .text	00000118 __sfp
0080a728 g     F .text	00000078 __copybits
0081d144 g     O .rwdata	00000408 __malloc_av_
008015e0 g     F .text	00000004 __sinit_lock_release
00816c2c g     F .text	00000718 .hidden __muldf3
0080346c g     F .text	00000054 __sread
0081b6b4 g     F .text	00000108 alt_find_file
0081b4c0 g     F .text	000000a4 alt_dev_llist_insert
0081874c g     F .text	00000024 __malloc_lock
00801720 g     F .text	00000028 _fprintf_r
00818b84 g     F .text	000000b0 sbrk
0080e7f8 g     F .text	000021d8 ___svfprintf_internal_r
008011e8 g     F .text	0000005c _fflush_r
008123f0 g     F .text	000000c4 _calloc_r
00801708 g     F .text	00000018 fopen
008207a8 g       *ABS*	00000000 __bss_start
00802dc4 g     F .text	00000128 memset
00800e68 g     F .text	00000060 main
008207e8 g     O .bss	00000004 alt_envp
008207c4 g     O .bss	00000004 __malloc_max_total_mem
00818f18 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
008123d8 g     F .text	00000018 __swbuf
00815778 g     F .text	000000c8 .hidden __ltsf2
0081a660 g     F .text	00000134 altera_avalon_lcd_16207_init
008035a0 g     F .text	00000008 __sclose
01000000 g       *ABS*	00000000 __alt_heap_limit
00800fb8 g     F .text	00000014 fclose
0080c9b8 g     F .text	00000238 _strtol_r
00817e44 g     F .text	000001a8 .hidden __truncdfsf2
008074d4 g     F .text	00001688 _dtoa_r
008025b8 g     F .text	0000080c _malloc_r
00814880 g     F .text	00000030 __ascii_wctomb
0081ea44 g     O .rwdata	00000004 alt_errno
008109d0 g     F .text	000000d4 __submore
0080207c g     F .text	000000c4 _fwalk
0080944c g     F .text	0000005c _mbtowc_r
0080a8cc g     F .text	000000c8 putc
00815490 g     F .text	00000084 .hidden __divsi3
0080176c g     F .text	00000124 _malloc_trim_r
0081c05c g       *ABS*	00000000 __CTOR_END__
0080b168 g     F .text	000000dc strcmp
0081c05c g       *ABS*	00000000 __flash_rodata_start
0081c05c g       *ABS*	00000000 __DTOR_LIST__
008169d4 g     F .text	00000088 .hidden __nedf2
00818dcc g     F .text	00000038 alt_irq_init
00818b20 g     F .text	00000064 alt_release_fd
0080b0fc g     F .text	0000006c sprintf
0081cb96 g     O .rodata	00000100 .hidden __clz_tab
008207d0 g     O .bss	00000004 _PathLocale
0080c8b8 g     F .text	00000100 strtof
0081bcc8 g     F .text	00000014 atexit
008156bc g     F .text	000000bc .hidden __gesf2
008070cc g     F .text	00000060 _write_r
00809200 g     F .text	00000018 setlocale
0080b09c g     F .text	00000008 nanf
0081ea14 g     O .rwdata	00000004 _impure_ptr
008207e0 g     O .bss	00000004 alt_argc
00800fcc g     F .text	0000021c __sflush_r
00809284 g     F .text	000000ac _mbrtowc_r
0081b5c4 g     F .text	00000060 _do_dtors
008091ec g     F .text	00000008 __locale_cjk_lang
00801ba0 g     F .text	00000004 _fseek_r
008030c8 g     F .text	000001d4 __srefill_r
00800000 g       *ABS*	00000000 __alt_mem_sdram_0
00800020 g       .exceptions	00000000 alt_irq_entry
00809408 g     F .text	00000044 __ascii_mbtowc
0080a354 g     F .text	00000064 __ulp
008015fc g     F .text	00000018 __fp_unlock_all
0081a794 g     F .text	00000060 altera_avalon_lcd_16207_write_fd
0081ea30 g     O .rwdata	00000008 alt_fs_list
0080d704 g     F .text	000010f4 __ssvfiscanf_r
00800020 g       *ABS*	00000000 __ram_exceptions_start
00809218 g     F .text	0000000c localeconv
008022d0 g     F .text	00000034 fwrite
008033f4 g     F .text	00000078 _sscanf_r
0081ea5c g       *ABS*	00000000 _edata
0081a8e4 g     F .text	00000060 altera_avalon_uart_read_fd
00820920 g       *ABS*	00000000 _end
008124b4 g     F .text	00000164 __fputwc
00800248 g       *ABS*	00000000 __ram_exceptions_end
008193e8 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
008034c8 g     F .text	0000007c __swrite
0081ea1c g     O .rwdata	00000004 __malloc_trim_threshold
008091e0 g     F .text	0000000c __locale_msgcharset
0081bcdc g     F .text	00000038 exit
00802140 g     F .text	000000c4 _fwalk_reent
0080a158 g     F .text	000001fc __mdiff
00815514 g     F .text	00000074 .hidden __modsi3
0081ea20 g     O .rwdata	00000004 __ctype_ptr__
01000000 g       *ABS*	00000000 __alt_data_end
00800020 g     F .exceptions	00000000 alt_exception
008015d8 g     F .text	00000004 __sfp_lock_release
0080afcc g     F .text	000000d0 __sccl
0081c5f2 g     O .rodata	00000101 _ctype_
0081ea28 g     O .rwdata	00000004 __mbtowc
0081ad64 g     F .text	00000054 altera_avalon_uart_close
00801614 g     F .text	000000f4 _fopen_r
0081c028 g     F .text	00000034 _exit
0081b1b8 g     F .text	0000012c alt_alarm_start
0081490c g     F .text	00000060 .hidden __muldi3
008023fc g     F .text	000001bc __smakebuf_r
008035a8 g     F .text	00000098 strlen
00818894 g     F .text	00000154 open
00816a5c g     F .text	000000dc .hidden __gedf2
008127bc g     F .text	00000830 __gethex
0081ea2c g     O .rwdata	00000004 __wctomb
00810d4c g     F .text	00000018 __sprint_r
0081b860 g     F .text	00000034 alt_icache_flush_all
0081ea48 g     O .rwdata	00000004 alt_priority_mask
00806ff4 g     F .text	0000001c __vfprintf_internal
0081adf4 g     F .text	000001dc altera_avalon_uart_read
008148b0 g     F .text	0000005c _wctomb_r
00817344 g     F .text	000008fc .hidden __subdf3
00809b8c g     F .text	000000b0 __lo0bits
0081ea54 g     O .rwdata	00000008 alt_alarm_list
00810aa4 g     F .text	00000194 _ungetc_r
0081b564 g     F .text	00000060 _do_ctors
008147c0 g     F .text	000000c0 wcrtomb
0081808c g     F .text	000000d0 close
0081853c g     F .text	00000084 alt_load
0081263c g     F .text	00000080 fputwc
008015dc g     F .text	00000004 __sinit_lock_acquire
00809900 g     F .text	00000120 __multadd
008098d8 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00800000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
  800000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
  800004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
  800008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
  80000c:	00bffd16 	blt	zero,r2,800004 <__alt_data_end+0xff800004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  800010:	00402034 	movhi	at,128
    ori r1, r1, %lo(_start)
  800014:	08409214 	ori	at,at,584
    jmp r1
  800018:	0800683a 	jmp	at
  80001c:	00000000 	call	0 <__alt_mem_sdram_0-0x800000>

Disassembly of section .exceptions:

00800020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  800020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  800024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  800028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  80002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  800030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  800034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  800038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  80003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  800040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  800044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  800048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  80004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  800050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  800054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  800058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  80005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  800060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  800064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  800068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  80006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  800070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  800074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  800078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  80007c:	10000326 	beq	r2,zero,80008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  800080:	20000226 	beq	r4,zero,80008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  800084:	08000fc0 	call	8000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  800088:	00000706 	br	8000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  80008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  800090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  800094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  800098:	08001d40 	call	8001d4 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  80009c:	1000021e 	bne	r2,zero,8000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  8000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  8000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  8000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  8000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  8000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  8000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  8000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  8000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  8000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  8000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  8000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  8000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  8000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  8000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  8000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  8000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  8000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  8000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  8000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  8000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  8000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  8000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  8000f8:	ef80083a 	eret

008000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  8000fc:	defff904 	addi	sp,sp,-28
  800100:	dfc00615 	stw	ra,24(sp)
  800104:	df000515 	stw	fp,20(sp)
  800108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  80010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  800110:	0005313a 	rdctl	r2,ipending
  800114:	e0bffe15 	stw	r2,-8(fp)

  return active;
  800118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  80011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
  800120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  800124:	00800044 	movi	r2,1
  800128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  80012c:	e0fffb17 	ldw	r3,-20(fp)
  800130:	e0bffc17 	ldw	r2,-16(fp)
  800134:	1884703a 	and	r2,r3,r2
  800138:	10001526 	beq	r2,zero,800190 <alt_irq_handler+0x94>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
  80013c:	008020b4 	movhi	r2,130
  800140:	10820804 	addi	r2,r2,2080
  800144:	e0fffd17 	ldw	r3,-12(fp)
  800148:	180690fa 	slli	r3,r3,3
  80014c:	10c5883a 	add	r2,r2,r3
  800150:	10c00017 	ldw	r3,0(r2)
  800154:	008020b4 	movhi	r2,130
  800158:	10820804 	addi	r2,r2,2080
  80015c:	e13ffd17 	ldw	r4,-12(fp)
  800160:	200890fa 	slli	r4,r4,3
  800164:	1105883a 	add	r2,r2,r4
  800168:	10800104 	addi	r2,r2,4
  80016c:	10800017 	ldw	r2,0(r2)
  800170:	e17ffd17 	ldw	r5,-12(fp)
  800174:	1009883a 	mov	r4,r2
  800178:	183ee83a 	callr	r3
#endif
        break;
  80017c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  800180:	0005313a 	rdctl	r2,ipending
  800184:	e0bfff15 	stw	r2,-4(fp)

  return active;
  800188:	e0bfff17 	ldw	r2,-4(fp)
  80018c:	00000706 	br	8001ac <alt_irq_handler+0xb0>
      }
      mask <<= 1;
  800190:	e0bffc17 	ldw	r2,-16(fp)
  800194:	1085883a 	add	r2,r2,r2
  800198:	e0bffc15 	stw	r2,-16(fp)
      i++;
  80019c:	e0bffd17 	ldw	r2,-12(fp)
  8001a0:	10800044 	addi	r2,r2,1
  8001a4:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
  8001a8:	003fe006 	br	80012c <__alt_data_end+0xff80012c>

    active = alt_irq_pending ();
  8001ac:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
  8001b0:	e0bffb17 	ldw	r2,-20(fp)
  8001b4:	103fda1e 	bne	r2,zero,800120 <__alt_data_end+0xff800120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
  8001b8:	0001883a 	nop
}
  8001bc:	0001883a 	nop
  8001c0:	e037883a 	mov	sp,fp
  8001c4:	dfc00117 	ldw	ra,4(sp)
  8001c8:	df000017 	ldw	fp,0(sp)
  8001cc:	dec00204 	addi	sp,sp,8
  8001d0:	f800283a 	ret

008001d4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
  8001d4:	defffb04 	addi	sp,sp,-20
  8001d8:	dfc00415 	stw	ra,16(sp)
  8001dc:	df000315 	stw	fp,12(sp)
  8001e0:	df000304 	addi	fp,sp,12
  8001e4:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
  8001e8:	000531fa 	rdctl	r2,exception
  8001ec:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
  8001f0:	e0bffd17 	ldw	r2,-12(fp)
  8001f4:	10801f0c 	andi	r2,r2,124
  8001f8:	1004d0ba 	srli	r2,r2,2
  8001fc:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
  800200:	0005333a 	rdctl	r2,badaddr
  800204:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
  800208:	d0a77917 	ldw	r2,-25116(gp)
  80020c:	10000726 	beq	r2,zero,80022c <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
  800210:	d0a77917 	ldw	r2,-25116(gp)
  800214:	e0fffd17 	ldw	r3,-12(fp)
  800218:	e1bffe17 	ldw	r6,-8(fp)
  80021c:	e17fff17 	ldw	r5,-4(fp)
  800220:	1809883a 	mov	r4,r3
  800224:	103ee83a 	callr	r2
  800228:	00000206 	br	800234 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
  80022c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
  800230:	0005883a 	mov	r2,zero
}
  800234:	e037883a 	mov	sp,fp
  800238:	dfc00117 	ldw	ra,4(sp)
  80023c:	df000017 	ldw	fp,0(sp)
  800240:	dec00204 	addi	sp,sp,8
  800244:	f800283a 	ret

Disassembly of section .text:

00800248 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
  800248:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
  80024c:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
  800250:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
  800254:	00bffd16 	blt	zero,r2,80024c <__alt_data_end+0xff80024c>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  800258:	06c04034 	movhi	sp,256
    ori sp, sp, %lo(__alt_stack_pointer)
  80025c:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
  800260:	068020b4 	movhi	gp,130
    ori gp, gp, %lo(_gp)
  800264:	d69a8414 	ori	gp,gp,27152
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  800268:	008020b4 	movhi	r2,130
    ori r2, r2, %lo(__bss_start)
  80026c:	1081ea14 	ori	r2,r2,1960

    movhi r3, %hi(__bss_end)
  800270:	00c020b4 	movhi	r3,130
    ori r3, r3, %lo(__bss_end)
  800274:	18c24814 	ori	r3,r3,2336

    beq r2, r3, 1f
  800278:	10c00326 	beq	r2,r3,800288 <_start+0x40>

0:
    stw zero, (r2)
  80027c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  800280:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  800284:	10fffd36 	bltu	r2,r3,80027c <__alt_data_end+0xff80027c>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  800288:	081853c0 	call	81853c <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  80028c:	08186d00 	call	8186d0 <alt_main>

00800290 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  800290:	003fff06 	br	800290 <__alt_data_end+0xff800290>

00800294 <MenuBegin>:
 * 
 * Function to set the Menu "header".
 */

static void MenuBegin( char *title )
{
  800294:	defffd04 	addi	sp,sp,-12
  800298:	dfc00215 	stw	ra,8(sp)
  80029c:	df000115 	stw	fp,4(sp)
  8002a0:	df000104 	addi	fp,sp,4
  8002a4:	e13fff15 	stw	r4,-4(fp)
  printf("\n\n");
  8002a8:	010020b4 	movhi	r4,130
  8002ac:	21301704 	addi	r4,r4,-16292
  8002b0:	08030980 	call	803098 <puts>
  printf("----------------------------------\n");
  8002b4:	010020b4 	movhi	r4,130
  8002b8:	21301804 	addi	r4,r4,-16288
  8002bc:	08030980 	call	803098 <puts>
  printf("Nios II Board Diagnostics\n");
  8002c0:	010020b4 	movhi	r4,130
  8002c4:	21302104 	addi	r4,r4,-16252
  8002c8:	08030980 	call	803098 <puts>
  printf("----------------------------------\n");
  8002cc:	010020b4 	movhi	r4,130
  8002d0:	21301804 	addi	r4,r4,-16288
  8002d4:	08030980 	call	803098 <puts>
  printf(" %s\n",title);
  8002d8:	e17fff17 	ldw	r5,-4(fp)
  8002dc:	010020b4 	movhi	r4,130
  8002e0:	21302804 	addi	r4,r4,-16224
  8002e4:	0802f7c0 	call	802f7c <printf>
}
  8002e8:	0001883a 	nop
  8002ec:	e037883a 	mov	sp,fp
  8002f0:	dfc00117 	ldw	ra,4(sp)
  8002f4:	df000017 	ldw	fp,0(sp)
  8002f8:	dec00204 	addi	sp,sp,8
  8002fc:	f800283a 	ret

00800300 <MenuItem>:
 *    (defined by 'string').
 *
 **********************************************************************/

static void MenuItem( char letter, char *name )
{
  800300:	defffc04 	addi	sp,sp,-16
  800304:	dfc00315 	stw	ra,12(sp)
  800308:	df000215 	stw	fp,8(sp)
  80030c:	df000204 	addi	fp,sp,8
  800310:	2005883a 	mov	r2,r4
  800314:	e17fff15 	stw	r5,-4(fp)
  800318:	e0bffe05 	stb	r2,-8(fp)
  printf("     %c:  %s\n" ,letter, name);
  80031c:	e0bffe07 	ldb	r2,-8(fp)
  800320:	e1bfff17 	ldw	r6,-4(fp)
  800324:	100b883a 	mov	r5,r2
  800328:	010020b4 	movhi	r4,130
  80032c:	21302a04 	addi	r4,r4,-16216
  800330:	0802f7c0 	call	802f7c <printf>
}
  800334:	0001883a 	nop
  800338:	e037883a 	mov	sp,fp
  80033c:	dfc00117 	ldw	ra,4(sp)
  800340:	df000017 	ldw	fp,0(sp)
  800344:	dec00204 	addi	sp,sp,8
  800348:	f800283a 	ret

0080034c <GetInputString>:
*           returns the string, minus any '\r' characters it 
*           encounters.
*
******************************************************************/
void GetInputString( char* entry, int size, FILE * stream )
{
  80034c:	defff904 	addi	sp,sp,-28
  800350:	dfc00615 	stw	ra,24(sp)
  800354:	df000515 	stw	fp,20(sp)
  800358:	df000504 	addi	fp,sp,20
  80035c:	e13ffd15 	stw	r4,-12(fp)
  800360:	e17ffe15 	stw	r5,-8(fp)
  800364:	e1bfff15 	stw	r6,-4(fp)
  int i;
  int ch = 0;
  800368:	e03ffc15 	stw	zero,-16(fp)
  
  for(i = 0; (ch != '\n') && (i < size); )
  80036c:	e03ffb15 	stw	zero,-20(fp)
  800370:	00000e06 	br	8003ac <GetInputString+0x60>
  {
    if( (ch = getc(stream)) != '\r')
  800374:	e13fff17 	ldw	r4,-4(fp)
  800378:	08023740 	call	802374 <getc>
  80037c:	e0bffc15 	stw	r2,-16(fp)
  800380:	e0bffc17 	ldw	r2,-16(fp)
  800384:	10800360 	cmpeqi	r2,r2,13
  800388:	1000081e 	bne	r2,zero,8003ac <GetInputString+0x60>
    {
      entry[i] = ch;
  80038c:	e0bffb17 	ldw	r2,-20(fp)
  800390:	e0fffd17 	ldw	r3,-12(fp)
  800394:	1885883a 	add	r2,r3,r2
  800398:	e0fffc17 	ldw	r3,-16(fp)
  80039c:	10c00005 	stb	r3,0(r2)
      i++;
  8003a0:	e0bffb17 	ldw	r2,-20(fp)
  8003a4:	10800044 	addi	r2,r2,1
  8003a8:	e0bffb15 	stw	r2,-20(fp)
void GetInputString( char* entry, int size, FILE * stream )
{
  int i;
  int ch = 0;
  
  for(i = 0; (ch != '\n') && (i < size); )
  8003ac:	e0bffc17 	ldw	r2,-16(fp)
  8003b0:	108002a0 	cmpeqi	r2,r2,10
  8003b4:	1000031e 	bne	r2,zero,8003c4 <GetInputString+0x78>
  8003b8:	e0fffb17 	ldw	r3,-20(fp)
  8003bc:	e0bffe17 	ldw	r2,-8(fp)
  8003c0:	18bfec16 	blt	r3,r2,800374 <__alt_data_end+0xff800374>
    {
      entry[i] = ch;
      i++;
    }
  }
}
  8003c4:	0001883a 	nop
  8003c8:	e037883a 	mov	sp,fp
  8003cc:	dfc00117 	ldw	ra,4(sp)
  8003d0:	df000017 	ldw	fp,0(sp)
  8003d4:	dec00204 	addi	sp,sp,8
  8003d8:	f800283a 	ret

008003dc <MenuEnd>:
 *    and continues until either a 'q' or a character outside of the 
 *    range, enclosed by 'lowLetter' and 'highLetter', is reached.
 */

static int MenuEnd( char lowLetter, char highLetter )
{
  8003dc:	defffc04 	addi	sp,sp,-16
  8003e0:	dfc00315 	stw	ra,12(sp)
  8003e4:	df000215 	stw	fp,8(sp)
  8003e8:	df000204 	addi	fp,sp,8
  8003ec:	2007883a 	mov	r3,r4
  8003f0:	2805883a 	mov	r2,r5
  8003f4:	e0fffe05 	stb	r3,-8(fp)
  8003f8:	e0bfff05 	stb	r2,-4(fp)
  static char entry[4];
  static char ch;

  printf("     q:  Exit\n");
  8003fc:	010020b4 	movhi	r4,130
  800400:	21302e04 	addi	r4,r4,-16200
  800404:	08030980 	call	803098 <puts>
  printf("----------------------------------\n");
  800408:	010020b4 	movhi	r4,130
  80040c:	21301804 	addi	r4,r4,-16288
  800410:	08030980 	call	803098 <puts>
  printf("\nSelect Choice (%c-%c): [Followed by <enter>]",lowLetter,highLetter);
  800414:	e0bffe07 	ldb	r2,-8(fp)
  800418:	e0ffff07 	ldb	r3,-4(fp)
  80041c:	180d883a 	mov	r6,r3
  800420:	100b883a 	mov	r5,r2
  800424:	010020b4 	movhi	r4,130
  800428:	21303204 	addi	r4,r4,-16184
  80042c:	0802f7c0 	call	802f7c <printf>
  
  GetInputString( entry, sizeof(entry), stdin );
  800430:	d0a00117 	ldw	r2,-32764(gp)
  800434:	10800117 	ldw	r2,4(r2)
  800438:	100d883a 	mov	r6,r2
  80043c:	01400104 	movi	r5,4
  800440:	d1276604 	addi	r4,gp,-25192
  800444:	080034c0 	call	80034c <GetInputString>
  if(sscanf(entry, "%c\n", &ch))
  800448:	d1a76704 	addi	r6,gp,-25188
  80044c:	014020b4 	movhi	r5,130
  800450:	29703e04 	addi	r5,r5,-16136
  800454:	d1276604 	addi	r4,gp,-25192
  800458:	08033780 	call	803378 <sscanf>
  80045c:	10001726 	beq	r2,zero,8004bc <MenuEnd+0xe0>
  {
    if( ch >= 'A' && ch <= 'Z' )
  800460:	d0a76703 	ldbu	r2,-25188(gp)
  800464:	10803fcc 	andi	r2,r2,255
  800468:	1080201c 	xori	r2,r2,128
  80046c:	10bfe004 	addi	r2,r2,-128
  800470:	10801050 	cmplti	r2,r2,65
  800474:	1000091e 	bne	r2,zero,80049c <MenuEnd+0xc0>
  800478:	d0a76703 	ldbu	r2,-25188(gp)
  80047c:	10803fcc 	andi	r2,r2,255
  800480:	1080201c 	xori	r2,r2,128
  800484:	10bfe004 	addi	r2,r2,-128
  800488:	108016c8 	cmpgei	r2,r2,91
  80048c:	1000031e 	bne	r2,zero,80049c <MenuEnd+0xc0>
      ch += 'a' - 'A';
  800490:	d0a76703 	ldbu	r2,-25188(gp)
  800494:	10800804 	addi	r2,r2,32
  800498:	d0a76705 	stb	r2,-25188(gp)
    if( ch == 27 )
  80049c:	d0a76703 	ldbu	r2,-25188(gp)
  8004a0:	10803fcc 	andi	r2,r2,255
  8004a4:	1080201c 	xori	r2,r2,128
  8004a8:	10bfe004 	addi	r2,r2,-128
  8004ac:	108006d8 	cmpnei	r2,r2,27
  8004b0:	1000021e 	bne	r2,zero,8004bc <MenuEnd+0xe0>
      ch = 'q';        
  8004b4:	00801c44 	movi	r2,113
  8004b8:	d0a76705 	stb	r2,-25188(gp)
  }
  return ch;
  8004bc:	d0a76703 	ldbu	r2,-25188(gp)
  8004c0:	10803fcc 	andi	r2,r2,255
  8004c4:	1080201c 	xori	r2,r2,128
  8004c8:	10bfe004 	addi	r2,r2,-128
}
  8004cc:	e037883a 	mov	sp,fp
  8004d0:	dfc00117 	ldw	ra,4(sp)
  8004d4:	df000017 	ldw	fp,0(sp)
  8004d8:	dec00204 	addi	sp,sp,8
  8004dc:	f800283a 	ret

008004e0 <DoSevenSegMenu>:
 * Generates the Seven Segment Display menu.
 * 
 ******************************************************************************/

static void DoSevenSegMenu( void )
{
  8004e0:	defffe04 	addi	sp,sp,-8
  8004e4:	dfc00115 	stw	ra,4(sp)
  8004e8:	df000015 	stw	fp,0(sp)
  8004ec:	d839883a 	mov	fp,sp
  static char ch;

  while(1)
  {
    MenuBegin("Seven Segment Menu");
  8004f0:	010020b4 	movhi	r4,130
  8004f4:	21303f04 	addi	r4,r4,-16132
  8004f8:	08002940 	call	800294 <MenuBegin>
    MenuItem('a', "Count From 0 to FF.");
  8004fc:	014020b4 	movhi	r5,130
  800500:	29704404 	addi	r5,r5,-16112
  800504:	01001844 	movi	r4,97
  800508:	08003000 	call	800300 <MenuItem>
    MenuItem('b', "Control Individual Segments.");
  80050c:	014020b4 	movhi	r5,130
  800510:	29704904 	addi	r5,r5,-16092
  800514:	01001884 	movi	r4,98
  800518:	08003000 	call	800300 <MenuItem>
    ch = MenuEnd('a', 'b');
  80051c:	01401884 	movi	r5,98
  800520:	01001844 	movi	r4,97
  800524:	08003dc0 	call	8003dc <MenuEnd>
  800528:	d0a76745 	stb	r2,-25187(gp)
  
    switch(ch)
  80052c:	d0a76743 	ldbu	r2,-25187(gp)
  800530:	10803fcc 	andi	r2,r2,255
  800534:	1080201c 	xori	r2,r2,128
  800538:	10bfe004 	addi	r2,r2,-128
  80053c:	10c01860 	cmpeqi	r3,r2,97
  800540:	1800031e 	bne	r3,zero,800550 <DoSevenSegMenu+0x70>
  800544:	108018a0 	cmpeqi	r2,r2,98
  800548:	1000031e 	bne	r2,zero,800558 <DoSevenSegMenu+0x78>
  80054c:	00000406 	br	800560 <DoSevenSegMenu+0x80>
    {
      MenuCase('a', SevenSegCount);
  800550:	0800bd40 	call	800bd4 <SevenSegCount>
  800554:	00000206 	br	800560 <DoSevenSegMenu+0x80>
      MenuCase('b', SevenSegControl);
  800558:	0800c340 	call	800c34 <SevenSegControl>
  80055c:	0001883a 	nop
    }
    
    if ( ch == 'q' )
  800560:	d0a76743 	ldbu	r2,-25187(gp)
  800564:	10803fcc 	andi	r2,r2,255
  800568:	1080201c 	xori	r2,r2,128
  80056c:	10bfe004 	addi	r2,r2,-128
  800570:	10801c58 	cmpnei	r2,r2,113
  800574:	10000126 	beq	r2,zero,80057c <DoSevenSegMenu+0x9c>
    {
      break;
    }
  }
  800578:	003fdd06 	br	8004f0 <__alt_data_end+0xff8004f0>
      MenuCase('b', SevenSegControl);
    }
    
    if ( ch == 'q' )
    {
      break;
  80057c:	0001883a 	nop
    }
  }
}
  800580:	0001883a 	nop
  800584:	e037883a 	mov	sp,fp
  800588:	dfc00117 	ldw	ra,4(sp)
  80058c:	df000017 	ldw	fp,0(sp)
  800590:	dec00204 	addi	sp,sp,8
  800594:	f800283a 	ret

00800598 <TopMenu>:
 * Generates the top level menu for this diagnostics program.
 * 
 ******************************************************************************/

static char TopMenu( void )
{
  800598:	defffe04 	addi	sp,sp,-8
  80059c:	dfc00115 	stw	ra,4(sp)
  8005a0:	df000015 	stw	fp,0(sp)
  8005a4:	d839883a 	mov	fp,sp
  
  /* Output the top-level menu to STDOUT */

  while (1)
  {
    MenuBegin("Main Menu");
  8005a8:	010020b4 	movhi	r4,130
  8005ac:	21305104 	addi	r4,r4,-16060
  8005b0:	08002940 	call	800294 <MenuBegin>
#ifdef LED_PIO_NAME
    MenuItem( 'a', "Test LEDs (D1-D4)" );
  8005b4:	014020b4 	movhi	r5,130
  8005b8:	29705404 	addi	r5,r5,-16048
  8005bc:	01001844 	movi	r4,97
  8005c0:	08003000 	call	800300 <MenuItem>
#endif
#ifdef LCD_DISPLAY_NAME
    MenuItem( 'b', "LCD Display Test");
  8005c4:	014020b4 	movhi	r5,130
  8005c8:	29705904 	addi	r5,r5,-16028
  8005cc:	01001884 	movi	r4,98
  8005d0:	08003000 	call	800300 <MenuItem>
#endif
#ifdef BUTTON_PIO_NAME
    MenuItem( 'c', "Push Button Test");
  8005d4:	014020b4 	movhi	r5,130
  8005d8:	29705e04 	addi	r5,r5,-16008
  8005dc:	010018c4 	movi	r4,99
  8005e0:	08003000 	call	800300 <MenuItem>
#endif
#ifdef SEVEN_SEG_PIO_NAME
    MenuItem( 'd', "Seven Segment Menu" );
  8005e4:	014020b4 	movhi	r5,130
  8005e8:	29703f04 	addi	r5,r5,-16132
  8005ec:	01001904 	movi	r4,100
  8005f0:	08003000 	call	800300 <MenuItem>
#endif
#ifdef JTAG_UART_NAME
    MenuItem( 'e', "JTAG UART Menu" );
#endif  
    ch = MenuEnd('a', 'e');
  8005f4:	01401944 	movi	r5,101
  8005f8:	01001844 	movi	r4,97
  8005fc:	08003dc0 	call	8003dc <MenuEnd>
  800600:	d0a76785 	stb	r2,-25186(gp)

  
    switch(ch)
  800604:	d0a76783 	ldbu	r2,-25186(gp)
  800608:	10803fcc 	andi	r2,r2,255
  80060c:	1080201c 	xori	r2,r2,128
  800610:	10bfe004 	addi	r2,r2,-128
  800614:	10bfe7c4 	addi	r2,r2,-97
  800618:	10c00468 	cmpgeui	r3,r2,17
  80061c:	18001f1e 	bne	r3,zero,80069c <TopMenu+0x104>
  800620:	100690ba 	slli	r3,r2,2
  800624:	00802034 	movhi	r2,128
  800628:	10818e04 	addi	r2,r2,1592
  80062c:	1885883a 	add	r2,r3,r2
  800630:	10800017 	ldw	r2,0(r2)
  800634:	1000683a 	jmp	r2
  800638:	0080067c 	xorhi	r2,zero,25
  80063c:	00800684 	movi	r2,26
  800640:	0080068c 	andi	r2,zero,26
  800644:	00800694 	movui	r2,26
  800648:	0080069c 	xori	r2,zero,26
  80064c:	0080069c 	xori	r2,zero,26
  800650:	0080069c 	xori	r2,zero,26
  800654:	0080069c 	xori	r2,zero,26
  800658:	0080069c 	xori	r2,zero,26
  80065c:	0080069c 	xori	r2,zero,26
  800660:	0080069c 	xori	r2,zero,26
  800664:	0080069c 	xori	r2,zero,26
  800668:	0080069c 	xori	r2,zero,26
  80066c:	0080069c 	xori	r2,zero,26
  800670:	0080069c 	xori	r2,zero,26
  800674:	0080069c 	xori	r2,zero,26
  800678:	008006c0 	call	8006c <__alt_mem_sdram_0-0x77ff94>
    {
#ifdef LED_PIO_NAME
      MenuCase('a',TestLEDs);
  80067c:	08006fc0 	call	8006fc <TestLEDs>
  800680:	00001006 	br	8006c4 <TopMenu+0x12c>
#endif
#ifdef LCD_DISPLAY_NAME
      MenuCase('b',TestLCD);
  800684:	08007c00 	call	8007c0 <TestLCD>
  800688:	00000e06 	br	8006c4 <TopMenu+0x12c>
#endif
#ifdef BUTTON_PIO_NAME
      MenuCase('c',TestButtons);
  80068c:	08009cc0 	call	8009cc <TestButtons>
  800690:	00000c06 	br	8006c4 <TopMenu+0x12c>
#endif
#ifdef SEVEN_SEG_PIO_NAME
      MenuCase('d',DoSevenSegMenu);
  800694:	08004e00 	call	8004e0 <DoSevenSegMenu>
  800698:	00000a06 	br	8006c4 <TopMenu+0x12c>
#endif
#ifdef JTAG_UART_NAME
      MenuCase('e',DoJTAGUARTMenu);
#endif
      case 'q':	break;
      default:	printf("\n -ERROR: %c is an invalid entry.  Please try again\n", ch); break;
  80069c:	d0a76783 	ldbu	r2,-25186(gp)
  8006a0:	10803fcc 	andi	r2,r2,255
  8006a4:	1080201c 	xori	r2,r2,128
  8006a8:	10bfe004 	addi	r2,r2,-128
  8006ac:	100b883a 	mov	r5,r2
  8006b0:	010020b4 	movhi	r4,130
  8006b4:	21306304 	addi	r4,r4,-15988
  8006b8:	0802f7c0 	call	802f7c <printf>
  8006bc:	00000106 	br	8006c4 <TopMenu+0x12c>
      MenuCase('d',DoSevenSegMenu);
#endif
#ifdef JTAG_UART_NAME
      MenuCase('e',DoJTAGUARTMenu);
#endif
      case 'q':	break;
  8006c0:	0001883a 	nop
      default:	printf("\n -ERROR: %c is an invalid entry.  Please try again\n", ch); break;
    }
    
    if (ch == 'q' )
  8006c4:	d0a76783 	ldbu	r2,-25186(gp)
  8006c8:	10803fcc 	andi	r2,r2,255
  8006cc:	1080201c 	xori	r2,r2,128
  8006d0:	10bfe004 	addi	r2,r2,-128
  8006d4:	10801c58 	cmpnei	r2,r2,113
  8006d8:	10000126 	beq	r2,zero,8006e0 <TopMenu+0x148>
      break;
  }
  8006dc:	003fb206 	br	8005a8 <__alt_data_end+0xff8005a8>
      case 'q':	break;
      default:	printf("\n -ERROR: %c is an invalid entry.  Please try again\n", ch); break;
    }
    
    if (ch == 'q' )
      break;
  8006e0:	0001883a 	nop
  }
  return( ch );
  8006e4:	d0a76783 	ldbu	r2,-25186(gp)
}
  8006e8:	e037883a 	mov	sp,fp
  8006ec:	dfc00117 	ldw	ra,4(sp)
  8006f0:	df000017 	ldw	fp,0(sp)
  8006f4:	dec00204 	addi	sp,sp,8
  8006f8:	f800283a 	ret

008006fc <TestLEDs>:
 * This function tests LED functionality.
 * It exits when the user types a 'q'.
 */

static void TestLEDs(void)
{
  8006fc:	defffd04 	addi	sp,sp,-12
  800700:	dfc00215 	stw	ra,8(sp)
  800704:	df000115 	stw	fp,4(sp)
  800708:	df000104 	addi	fp,sp,4
  volatile alt_u8 led;
  static char ch;
  static char entry[4];
  
  /* Turn the LEDs on. */
  led = 0xff;
  80070c:	00bfffc4 	movi	r2,-1
  800710:	e0bfff05 	stb	r2,-4(fp)
  IOWR_ALTERA_AVALON_PIO_DATA(LED_PIO_BASE, led);
  800714:	e0bfff03 	ldbu	r2,-4(fp)
  800718:	10c03fcc 	andi	r3,r2,255
  80071c:	00804034 	movhi	r2,256
  800720:	10844c04 	addi	r2,r2,4400
  800724:	10c00035 	stwio	r3,0(r2)
  printf( "\nLEDs D1-D4 should now be on.\n" );
  800728:	010020b4 	movhi	r4,130
  80072c:	21307104 	addi	r4,r4,-15932
  800730:	08030980 	call	803098 <puts>
  printf( "\tPlease press 'q' [Followed by <enter>] to exit this test.\n" );
  800734:	010020b4 	movhi	r4,130
  800738:	21307904 	addi	r4,r4,-15900
  80073c:	08030980 	call	803098 <puts>
  
  /* Get the input string for exiting this test. */
  do {
    GetInputString( entry, sizeof(entry), stdin);
  800740:	d0a00117 	ldw	r2,-32764(gp)
  800744:	10800117 	ldw	r2,4(r2)
  800748:	100d883a 	mov	r6,r2
  80074c:	01400104 	movi	r5,4
  800750:	d12767c4 	addi	r4,gp,-25185
  800754:	080034c0 	call	80034c <GetInputString>
    sscanf( entry, "%c\n", &ch );
  800758:	d1a768c4 	addi	r6,gp,-25181
  80075c:	014020b4 	movhi	r5,130
  800760:	29703e04 	addi	r5,r5,-16136
  800764:	d12767c4 	addi	r4,gp,-25185
  800768:	08033780 	call	803378 <sscanf>
  } while ( ch != 'q' );
  80076c:	d0a768c3 	ldbu	r2,-25181(gp)
  800770:	10803fcc 	andi	r2,r2,255
  800774:	1080201c 	xori	r2,r2,128
  800778:	10bfe004 	addi	r2,r2,-128
  80077c:	10801c58 	cmpnei	r2,r2,113
  800780:	103fef1e 	bne	r2,zero,800740 <__alt_data_end+0xff800740>
  
  /* Turn the LEDs off and exit. */
  led = 0x0;
  800784:	e03fff05 	stb	zero,-4(fp)
  IOWR_ALTERA_AVALON_PIO_DATA(LED_PIO_BASE, led);
  800788:	e0bfff03 	ldbu	r2,-4(fp)
  80078c:	10c03fcc 	andi	r3,r2,255
  800790:	00804034 	movhi	r2,256
  800794:	10844c04 	addi	r2,r2,4400
  800798:	10c00035 	stwio	r3,0(r2)
  printf(".....Exiting LED Test.\n");
  80079c:	010020b4 	movhi	r4,130
  8007a0:	21308804 	addi	r4,r4,-15840
  8007a4:	08030980 	call	803098 <puts>
}
  8007a8:	0001883a 	nop
  8007ac:	e037883a 	mov	sp,fp
  8007b0:	dfc00117 	ldw	ra,4(sp)
  8007b4:	df000017 	ldw	fp,0(sp)
  8007b8:	dec00204 	addi	sp,sp,8
  8007bc:	f800283a 	ret

008007c0 <TestLCD>:
 * Tests the LCD by printing some simple output to each line.
 * 
 ******************************************************************************/

static void TestLCD( void )
{
  8007c0:	defffd04 	addi	sp,sp,-12
  8007c4:	dfc00215 	stw	ra,8(sp)
  8007c8:	df000115 	stw	fp,4(sp)
  8007cc:	df000104 	addi	fp,sp,4
  FILE *lcd;
  static char ch;
  static char entry[4];
  
  lcd = fopen("/dev/lcd_display", "w");
  8007d0:	014020b4 	movhi	r5,130
  8007d4:	29708e04 	addi	r5,r5,-15816
  8007d8:	010020b4 	movhi	r4,130
  8007dc:	21308f04 	addi	r4,r4,-15812
  8007e0:	08017080 	call	801708 <fopen>
  8007e4:	e0bfff15 	stw	r2,-4(fp)
  
  /* Write some simple text to the LCD. */
  if (lcd != NULL )
  8007e8:	e0bfff17 	ldw	r2,-4(fp)
  8007ec:	10000c26 	beq	r2,zero,800820 <TestLCD+0x60>
  {
    fprintf(lcd, "\nThis is the LCD Display.\n");
  8007f0:	e1ffff17 	ldw	r7,-4(fp)
  8007f4:	01800684 	movi	r6,26
  8007f8:	01400044 	movi	r5,1
  8007fc:	010020b4 	movhi	r4,130
  800800:	21309404 	addi	r4,r4,-15792
  800804:	08022d00 	call	8022d0 <fwrite>
    fprintf(lcd, "If you can see this, your LCD is functional.\n");
  800808:	e1ffff17 	ldw	r7,-4(fp)
  80080c:	01800b44 	movi	r6,45
  800810:	01400044 	movi	r5,1
  800814:	010020b4 	movhi	r4,130
  800818:	21309b04 	addi	r4,r4,-15764
  80081c:	08022d00 	call	8022d0 <fwrite>
  }
  printf("\nIf you can see messages scrolling on the LCD Display, then it is functional!\n");
  800820:	010020b4 	movhi	r4,130
  800824:	2130a704 	addi	r4,r4,-15716
  800828:	08030980 	call	803098 <puts>
  printf( "\tPlease press 'q' [Followed by <enter>] to exit this test.\n" );
  80082c:	010020b4 	movhi	r4,130
  800830:	21307904 	addi	r4,r4,-15900
  800834:	08030980 	call	803098 <puts>
  
  /* Get the input string for exiting this test. */
  do {
    GetInputString( entry, sizeof(entry), stdin);
  800838:	d0a00117 	ldw	r2,-32764(gp)
  80083c:	10800117 	ldw	r2,4(r2)
  800840:	100d883a 	mov	r6,r2
  800844:	01400104 	movi	r5,4
  800848:	d1276904 	addi	r4,gp,-25180
  80084c:	080034c0 	call	80034c <GetInputString>
    sscanf( entry, "%c\n", &ch );
  800850:	d1a76a04 	addi	r6,gp,-25176
  800854:	014020b4 	movhi	r5,130
  800858:	29703e04 	addi	r5,r5,-16136
  80085c:	d1276904 	addi	r4,gp,-25180
  800860:	08033780 	call	803378 <sscanf>
  } while ( ch != 'q' );
  800864:	d0a76a03 	ldbu	r2,-25176(gp)
  800868:	10803fcc 	andi	r2,r2,255
  80086c:	1080201c 	xori	r2,r2,128
  800870:	10bfe004 	addi	r2,r2,-128
  800874:	10801c58 	cmpnei	r2,r2,113
  800878:	103fef1e 	bne	r2,zero,800838 <__alt_data_end+0xff800838>

  /* Send the command sequence to clear the LCD. */
  if (lcd != NULL )
  80087c:	e0bfff17 	ldw	r2,-4(fp)
  800880:	10000726 	beq	r2,zero,8008a0 <TestLCD+0xe0>
  {
    fprintf(lcd, "%c%s", ESC, CLEAR_LCD_STRING);
  800884:	01c020b4 	movhi	r7,130
  800888:	39f0bb04 	addi	r7,r7,-15636
  80088c:	018006c4 	movi	r6,27
  800890:	014020b4 	movhi	r5,130
  800894:	2970bc04 	addi	r5,r5,-15632
  800898:	e13fff17 	ldw	r4,-4(fp)
  80089c:	08017480 	call	801748 <fprintf>
  }
  fclose( lcd );
  8008a0:	e13fff17 	ldw	r4,-4(fp)
  8008a4:	0800fb80 	call	800fb8 <fclose>

  return;
  8008a8:	0001883a 	nop
}
  8008ac:	e037883a 	mov	sp,fp
  8008b0:	dfc00117 	ldw	ra,4(sp)
  8008b4:	df000017 	ldw	fp,0(sp)
  8008b8:	dec00204 	addi	sp,sp,8
  8008bc:	f800283a 	ret

008008c0 <handle_button_interrupts>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void handle_button_interrupts(void* context)
#else
static void handle_button_interrupts(void* context, alt_u32 id)
#endif
{
  8008c0:	defffc04 	addi	sp,sp,-16
  8008c4:	df000315 	stw	fp,12(sp)
  8008c8:	df000304 	addi	fp,sp,12
  8008cc:	e13ffe15 	stw	r4,-8(fp)
  8008d0:	e17fff15 	stw	r5,-4(fp)
  /* Cast context to edge_capture's type.
   * It is important to keep this volatile,
   * to avoid compiler optimization issues.
   */
  volatile int* edge_capture_ptr = (volatile int*) context;
  8008d4:	e0bffe17 	ldw	r2,-8(fp)
  8008d8:	e0bffd15 	stw	r2,-12(fp)
  /* Store the value in the Button's edge capture register in *context. */
  *edge_capture_ptr = IORD_ALTERA_AVALON_PIO_EDGE_CAP(BUTTON_PIO_BASE);
  8008dc:	00804034 	movhi	r2,256
  8008e0:	10844b04 	addi	r2,r2,4396
  8008e4:	10c00037 	ldwio	r3,0(r2)
  8008e8:	e0bffd17 	ldw	r2,-12(fp)
  8008ec:	10c00015 	stw	r3,0(r2)
  /* Reset the Button's edge capture register. */
  IOWR_ALTERA_AVALON_PIO_EDGE_CAP(BUTTON_PIO_BASE, 0);
  8008f0:	0007883a 	mov	r3,zero
  8008f4:	00804034 	movhi	r2,256
  8008f8:	10844b04 	addi	r2,r2,4396
  8008fc:	10c00035 	stwio	r3,0(r2)
  /* 
   * Read the PIO to delay ISR exit. This is done to prevent a spurious
   * interrupt in systems with high processor -> pio latency and fast
   * interrupts.
   */
  IORD_ALTERA_AVALON_PIO_EDGE_CAP(BUTTON_PIO_BASE);
  800900:	00804034 	movhi	r2,256
  800904:	10844b04 	addi	r2,r2,4396
  800908:	10800037 	ldwio	r2,0(r2)
}
  80090c:	0001883a 	nop
  800910:	e037883a 	mov	sp,fp
  800914:	df000017 	ldw	fp,0(sp)
  800918:	dec00104 	addi	sp,sp,4
  80091c:	f800283a 	ret

00800920 <init_button_pio>:

/* Initialize the button_pio. */

static void init_button_pio()
{
  800920:	defffd04 	addi	sp,sp,-12
  800924:	dfc00215 	stw	ra,8(sp)
  800928:	df000115 	stw	fp,4(sp)
  80092c:	df000104 	addi	fp,sp,4
  /* Recast the edge_capture pointer to match the alt_irq_register() function
  * prototype. */
  void* edge_capture_ptr = (void*) &edge_capture;
  800930:	d0a76b04 	addi	r2,gp,-25172
  800934:	e0bfff15 	stw	r2,-4(fp)
  /* Enable all 4 button interrupts. */
  IOWR_ALTERA_AVALON_PIO_IRQ_MASK(BUTTON_PIO_BASE, 0xf);
  800938:	00c003c4 	movi	r3,15
  80093c:	00804034 	movhi	r2,256
  800940:	10844a04 	addi	r2,r2,4392
  800944:	10c00035 	stwio	r3,0(r2)
  /* Reset the edge capture register. */
  IOWR_ALTERA_AVALON_PIO_EDGE_CAP(BUTTON_PIO_BASE, 0x0);
  800948:	0007883a 	mov	r3,zero
  80094c:	00804034 	movhi	r2,256
  800950:	10844b04 	addi	r2,r2,4396
  800954:	10c00035 	stwio	r3,0(r2)
   */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(BUTTON_PIO_IRQ_INTERRUPT_CONTROLLER_ID, BUTTON_PIO_IRQ, 
    handle_button_interrupts, edge_capture_ptr, 0x0);
#else
  alt_irq_register( BUTTON_PIO_IRQ, edge_capture_ptr, 
  800958:	01802034 	movhi	r6,128
  80095c:	31823004 	addi	r6,r6,2240
  800960:	e17fff17 	ldw	r5,-4(fp)
  800964:	01000044 	movi	r4,1
  800968:	08182740 	call	818274 <alt_irq_register>
    handle_button_interrupts);
#endif
}
  80096c:	0001883a 	nop
  800970:	e037883a 	mov	sp,fp
  800974:	dfc00117 	ldw	ra,4(sp)
  800978:	df000017 	ldw	fp,0(sp)
  80097c:	dec00204 	addi	sp,sp,8
  800980:	f800283a 	ret

00800984 <disable_button_pio>:

/* Tear down the button_pio. */

static void disable_button_pio()
{
  800984:	defffe04 	addi	sp,sp,-8
  800988:	dfc00115 	stw	ra,4(sp)
  80098c:	df000015 	stw	fp,0(sp)
  800990:	d839883a 	mov	fp,sp
  /* Disable interrupts from the button_pio PIO component. */
  IOWR_ALTERA_AVALON_PIO_IRQ_MASK(BUTTON_PIO_BASE, 0x0);
  800994:	0007883a 	mov	r3,zero
  800998:	00804034 	movhi	r2,256
  80099c:	10844a04 	addi	r2,r2,4392
  8009a0:	10c00035 	stwio	r3,0(r2)
  /* Un-register the IRQ handler by passing a null handler. */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(BUTTON_PIO_IRQ_INTERRUPT_CONTROLLER_ID, BUTTON_PIO_IRQ, 
    NULL, NULL, NULL);
#else
  alt_irq_register( BUTTON_PIO_IRQ, NULL, NULL );
  8009a4:	000d883a 	mov	r6,zero
  8009a8:	000b883a 	mov	r5,zero
  8009ac:	01000044 	movi	r4,1
  8009b0:	08182740 	call	818274 <alt_irq_register>
#endif
}
  8009b4:	0001883a 	nop
  8009b8:	e037883a 	mov	sp,fp
  8009bc:	dfc00117 	ldw	ra,4(sp)
  8009c0:	df000017 	ldw	fp,0(sp)
  8009c4:	dec00204 	addi	sp,sp,8
  8009c8:	f800283a 	ret

008009cc <TestButtons>:
 * 
 ******************************************************************************/


static void TestButtons( void )
{
  8009cc:	defffb04 	addi	sp,sp,-20
  8009d0:	dfc00415 	stw	ra,16(sp)
  8009d4:	df000315 	stw	fp,12(sp)
  8009d8:	df000304 	addi	fp,sp,12
  /* Variable which holds the last value of edge_capture to avoid 
   * "double counting" button/switch presses
   */
  int last_tested;
  /* Initialize the Buttons/Switches (SW0-SW3) */
  init_button_pio();
  8009dc:	08009200 	call	800920 <init_button_pio>
  /* Initialize the variables which keep track of which buttons have been tested. */
  buttons_tested = 0x0;
  8009e0:	e03ffd05 	stb	zero,-12(fp)
  all_tested = 0xf;
  8009e4:	008003c4 	movi	r2,15
  8009e8:	e0bfff05 	stb	r2,-4(fp)

  /* Initialize edge_capture to avoid any "false" triggers from
   * a previous run.
   */
   
  edge_capture = 0;
  8009ec:	d0276b15 	stw	zero,-25172(gp)
  
  /* Set last_tested to a value that edge_capture can never equal
   * to avoid accidental equalities in the while() loop below.
   */
    
  last_tested = 0xffff;
  8009f0:	00bfffd4 	movui	r2,65535
  8009f4:	e0bffe15 	stw	r2,-8(fp)

  /* Print a quick message stating what is happening */
  
  printf("\nA loop will be run until all Push buttons (PB0-PB3) have been pressed.\n\n");
  8009f8:	010020b4 	movhi	r4,130
  8009fc:	2130be04 	addi	r4,r4,-15624
  800a00:	08030980 	call	803098 <puts>
  printf("\n\tNOTE:  Once a button press has been detected, for a particular button,\n\tany further presses will be ignored!\n\n");
  800a04:	010020b4 	movhi	r4,130
  800a08:	2130d104 	addi	r4,r4,-15548
  800a0c:	08030980 	call	803098 <puts>
  
  /* Loop until all buttons have been pressed.
   * This happens when buttons_tested == all_tested.
   */
  
  while (  buttons_tested != all_tested )
  800a10:	00003f06 	br	800b10 <TestButtons+0x144>
  { 
    if (last_tested == edge_capture)
  800a14:	d0a76b17 	ldw	r2,-25172(gp)
  800a18:	e0fffe17 	ldw	r3,-8(fp)
  800a1c:	1880011e 	bne	r3,r2,800a24 <TestButtons+0x58>
    {
      continue;
  800a20:	00003b06 	br	800b10 <TestButtons+0x144>
    }
    else
    {
      last_tested = edge_capture;
  800a24:	d0a76b17 	ldw	r2,-25172(gp)
  800a28:	e0bffe15 	stw	r2,-8(fp)
      switch (edge_capture)
  800a2c:	d0a76b17 	ldw	r2,-25172(gp)
  800a30:	10c000a0 	cmpeqi	r3,r2,2
  800a34:	1800151e 	bne	r3,zero,800a8c <TestButtons+0xc0>
  800a38:	10c000c8 	cmpgei	r3,r2,3
  800a3c:	1800031e 	bne	r3,zero,800a4c <TestButtons+0x80>
  800a40:	10800060 	cmpeqi	r2,r2,1
  800a44:	1000061e 	bne	r2,zero,800a60 <TestButtons+0x94>
  800a48:	00003106 	br	800b10 <TestButtons+0x144>
  800a4c:	10c00120 	cmpeqi	r3,r2,4
  800a50:	1800191e 	bne	r3,zero,800ab8 <TestButtons+0xec>
  800a54:	10800220 	cmpeqi	r2,r2,8
  800a58:	1000221e 	bne	r2,zero,800ae4 <TestButtons+0x118>
  800a5c:	00002c06 	br	800b10 <TestButtons+0x144>
      {
        case 0x1:
          if (buttons_tested & 0x1)
  800a60:	e0bffd03 	ldbu	r2,-12(fp)
  800a64:	1080004c 	andi	r2,r2,1
  800a68:	10000126 	beq	r2,zero,800a70 <TestButtons+0xa4>
          {
            continue;
  800a6c:	00002806 	br	800b10 <TestButtons+0x144>
          }
          else
          {
            printf("\nButton 1 (PB0) Pressed.\n");
  800a70:	010020b4 	movhi	r4,130
  800a74:	2130ed04 	addi	r4,r4,-15436
  800a78:	08030980 	call	803098 <puts>
            buttons_tested = buttons_tested | 0x1;
  800a7c:	e0bffd03 	ldbu	r2,-12(fp)
  800a80:	10800054 	ori	r2,r2,1
  800a84:	e0bffd05 	stb	r2,-12(fp)
          } 
          break;
  800a88:	00002106 	br	800b10 <TestButtons+0x144>
        case 0x2:
          if (buttons_tested & 0x2)
  800a8c:	e0bffd03 	ldbu	r2,-12(fp)
  800a90:	1080008c 	andi	r2,r2,2
  800a94:	10000126 	beq	r2,zero,800a9c <TestButtons+0xd0>
          {
            continue;
  800a98:	00001d06 	br	800b10 <TestButtons+0x144>
          } 
          else
          {
            printf("\nButton 2 (PB1) Pressed.\n");
  800a9c:	010020b4 	movhi	r4,130
  800aa0:	2130f404 	addi	r4,r4,-15408
  800aa4:	08030980 	call	803098 <puts>
            buttons_tested = buttons_tested | 0x2;
  800aa8:	e0bffd03 	ldbu	r2,-12(fp)
  800aac:	10800094 	ori	r2,r2,2
  800ab0:	e0bffd05 	stb	r2,-12(fp)
          }
          break;
  800ab4:	00001606 	br	800b10 <TestButtons+0x144>
        case 0x4:
          if (buttons_tested & 0x4)
  800ab8:	e0bffd03 	ldbu	r2,-12(fp)
  800abc:	1080010c 	andi	r2,r2,4
  800ac0:	10000126 	beq	r2,zero,800ac8 <TestButtons+0xfc>
          {
            continue;
  800ac4:	00001206 	br	800b10 <TestButtons+0x144>
          }
          else
          {
            printf("\nButton 3 (PB2) Pressed.\n");
  800ac8:	010020b4 	movhi	r4,130
  800acc:	2130fb04 	addi	r4,r4,-15380
  800ad0:	08030980 	call	803098 <puts>
            buttons_tested = buttons_tested | 0x4;
  800ad4:	e0bffd03 	ldbu	r2,-12(fp)
  800ad8:	10800114 	ori	r2,r2,4
  800adc:	e0bffd05 	stb	r2,-12(fp)
          }
          break;
  800ae0:	00000b06 	br	800b10 <TestButtons+0x144>
        case 0x8:
          if (buttons_tested & 0x8)
  800ae4:	e0bffd03 	ldbu	r2,-12(fp)
  800ae8:	1080020c 	andi	r2,r2,8
  800aec:	10000126 	beq	r2,zero,800af4 <TestButtons+0x128>
          {
            continue;
  800af0:	00000706 	br	800b10 <TestButtons+0x144>
          }
          else
          {
            printf("\nButton 4 (PB3) Pressed.\n");
  800af4:	010020b4 	movhi	r4,130
  800af8:	21310204 	addi	r4,r4,-15352
  800afc:	08030980 	call	803098 <puts>
            buttons_tested = buttons_tested | 0x8;
  800b00:	e0bffd03 	ldbu	r2,-12(fp)
  800b04:	10800214 	ori	r2,r2,8
  800b08:	e0bffd05 	stb	r2,-12(fp)
          }
          break;
  800b0c:	0001883a 	nop
  
  /* Loop until all buttons have been pressed.
   * This happens when buttons_tested == all_tested.
   */
  
  while (  buttons_tested != all_tested )
  800b10:	e0fffd03 	ldbu	r3,-12(fp)
  800b14:	e0bfff03 	ldbu	r2,-4(fp)
  800b18:	18bfbe1e 	bne	r3,r2,800a14 <__alt_data_end+0xff800a14>
          break;
      }
    }
  }
  /* Disable the button pio. */
  disable_button_pio();
  800b1c:	08009840 	call	800984 <disable_button_pio>

  printf ("\nAll Buttons (PB0-PB3) were pressed, at least, once.\n");
  800b20:	010020b4 	movhi	r4,130
  800b24:	21310904 	addi	r4,r4,-15324
  800b28:	08030980 	call	803098 <puts>
  usleep(2000000);
  800b2c:	010007f4 	movhi	r4,31
  800b30:	21212004 	addi	r4,r4,-31616
  800b34:	0818c340 	call	818c34 <usleep>
  return;
  800b38:	0001883a 	nop
}
  800b3c:	e037883a 	mov	sp,fp
  800b40:	dfc00117 	ldw	ra,4(sp)
  800b44:	df000017 	ldw	fp,0(sp)
  800b48:	dec00204 	addi	sp,sp,8
  800b4c:	f800283a 	ret

00800b50 <sevenseg_set_hex>:
 * the variable 'hex' into what is displayed on
 * the Seven Segment Display.
 *********************************************/
 
static void sevenseg_set_hex(alt_u8 hex)
{
  800b50:	defffd04 	addi	sp,sp,-12
  800b54:	df000215 	stw	fp,8(sp)
  800b58:	df000204 	addi	fp,sp,8
  800b5c:	2005883a 	mov	r2,r4
  800b60:	e0bfff05 	stb	r2,-4(fp)
  static alt_u8 segments[16] = {
    0x81, 0xCF, 0x92, 0x86, 0xCC, 0xA4, 0xA0, 0x8F, 0x80, 0x84, /* 0-9 */
    0x88, 0xE0, 0xF2, 0xC2, 0xB0, 0xB8 };                       /* a-f */

  alt_u32 data = segments[hex & 15] | (segments[(hex >> 4) & 15] << 8);
  800b64:	e0bfff03 	ldbu	r2,-4(fp)
  800b68:	10c003cc 	andi	r3,r2,15
  800b6c:	008020b4 	movhi	r2,130
  800b70:	10b34404 	addi	r2,r2,-13040
  800b74:	10c5883a 	add	r2,r2,r3
  800b78:	10800003 	ldbu	r2,0(r2)
  800b7c:	10c03fcc 	andi	r3,r2,255
  800b80:	e0bfff03 	ldbu	r2,-4(fp)
  800b84:	1004d13a 	srli	r2,r2,4
  800b88:	10803fcc 	andi	r2,r2,255
  800b8c:	110003cc 	andi	r4,r2,15
  800b90:	008020b4 	movhi	r2,130
  800b94:	10b34404 	addi	r2,r2,-13040
  800b98:	1105883a 	add	r2,r2,r4
  800b9c:	10800003 	ldbu	r2,0(r2)
  800ba0:	10803fcc 	andi	r2,r2,255
  800ba4:	1004923a 	slli	r2,r2,8
  800ba8:	1884b03a 	or	r2,r3,r2
  800bac:	e0bffe15 	stw	r2,-8(fp)

  IOWR_ALTERA_AVALON_PIO_DATA(SEVEN_SEG_PIO_BASE, data);
  800bb0:	e0fffe17 	ldw	r3,-8(fp)
  800bb4:	00804034 	movhi	r2,256
  800bb8:	10840804 	addi	r2,r2,4128
  800bbc:	10c00035 	stwio	r3,0(r2)
}
  800bc0:	0001883a 	nop
  800bc4:	e037883a 	mov	sp,fp
  800bc8:	df000017 	ldw	fp,0(sp)
  800bcc:	dec00104 	addi	sp,sp,4
  800bd0:	f800283a 	ret

00800bd4 <SevenSegCount>:
 * Displays from 0 to FF on the Seven Segment Display with
 * a 0.25s count delay implemented in a for loop.
 *******************************************/
 
static void SevenSegCount( void )
{
  800bd4:	defffd04 	addi	sp,sp,-12
  800bd8:	dfc00215 	stw	ra,8(sp)
  800bdc:	df000115 	stw	fp,4(sp)
  800be0:	df000104 	addi	fp,sp,4
  alt_u32 count;
  for (count = 0; count <= 0xff; count++)
  800be4:	e03fff15 	stw	zero,-4(fp)
  800be8:	00000906 	br	800c10 <SevenSegCount+0x3c>
  {
    sevenseg_set_hex( count );
  800bec:	e0bfff17 	ldw	r2,-4(fp)
  800bf0:	10803fcc 	andi	r2,r2,255
  800bf4:	1009883a 	mov	r4,r2
  800bf8:	0800b500 	call	800b50 <sevenseg_set_hex>
    usleep(50000);
  800bfc:	0130d414 	movui	r4,50000
  800c00:	0818c340 	call	818c34 <usleep>
 *******************************************/
 
static void SevenSegCount( void )
{
  alt_u32 count;
  for (count = 0; count <= 0xff; count++)
  800c04:	e0bfff17 	ldw	r2,-4(fp)
  800c08:	10800044 	addi	r2,r2,1
  800c0c:	e0bfff15 	stw	r2,-4(fp)
  800c10:	e0bfff17 	ldw	r2,-4(fp)
  800c14:	10804030 	cmpltui	r2,r2,256
  800c18:	103ff41e 	bne	r2,zero,800bec <__alt_data_end+0xff800bec>
  {
    sevenseg_set_hex( count );
    usleep(50000);
  }
}
  800c1c:	0001883a 	nop
  800c20:	e037883a 	mov	sp,fp
  800c24:	dfc00117 	ldw	ra,4(sp)
  800c28:	df000017 	ldw	fp,0(sp)
  800c2c:	dec00204 	addi	sp,sp,8
  800c30:	f800283a 	ret

00800c34 <SevenSegControl>:
 * Displays selected Seven Segment segments.
 * 
 ******************************************/

static void SevenSegControl(void)
{
  800c34:	defffb04 	addi	sp,sp,-20
  800c38:	dfc00415 	stw	ra,16(sp)
  800c3c:	df000315 	stw	fp,12(sp)
  800c40:	df000304 	addi	fp,sp,12
  alt_32 bits;
  alt_32 keyBit;
  static char ch;
  
  /* Turn all segments off at start of test. */
  bits = 0xffff;
  800c44:	00bfffd4 	movui	r2,65535
  800c48:	e0bffd15 	stw	r2,-12(fp)
  IOWR_ALTERA_AVALON_PIO_DATA(SEVEN_SEG_PIO_BASE, bits);
  800c4c:	00804034 	movhi	r2,256
  800c50:	10840804 	addi	r2,r2,4128
  800c54:	e0fffd17 	ldw	r3,-12(fp)
  800c58:	10c00035 	stwio	r3,0(r2)

  printf("\n");
  800c5c:	01000284 	movi	r4,10
  800c60:	0802fc00 	call	802fc0 <putchar>
  printf("\n");
  800c64:	01000284 	movi	r4,10
  800c68:	0802fc00 	call	802fc0 <putchar>
  printf("         +-A--+     +-a--+\n");
  800c6c:	010020b4 	movhi	r4,130
  800c70:	21311704 	addi	r4,r4,-15268
  800c74:	08030980 	call	803098 <puts>
  printf("         |    |     |    |\n");
  800c78:	010020b4 	movhi	r4,130
  800c7c:	21311e04 	addi	r4,r4,-15240
  800c80:	08030980 	call	803098 <puts>
  printf("         F    B     f    b\n");
  800c84:	010020b4 	movhi	r4,130
  800c88:	21312504 	addi	r4,r4,-15212
  800c8c:	08030980 	call	803098 <puts>
  printf("         |    |     |    |\n");
  800c90:	010020b4 	movhi	r4,130
  800c94:	21311e04 	addi	r4,r4,-15240
  800c98:	08030980 	call	803098 <puts>
  printf("         +-G--+     +-g--+\n");
  800c9c:	010020b4 	movhi	r4,130
  800ca0:	21312c04 	addi	r4,r4,-15184
  800ca4:	08030980 	call	803098 <puts>
  printf("         |    |     |    |\n");
  800ca8:	010020b4 	movhi	r4,130
  800cac:	21311e04 	addi	r4,r4,-15240
  800cb0:	08030980 	call	803098 <puts>
  printf("         E    C     e    c\n");
  800cb4:	010020b4 	movhi	r4,130
  800cb8:	21313304 	addi	r4,r4,-15156
  800cbc:	08030980 	call	803098 <puts>
  printf("         |    |     |    |\n");
  800cc0:	010020b4 	movhi	r4,130
  800cc4:	21311e04 	addi	r4,r4,-15240
  800cc8:	08030980 	call	803098 <puts>
  printf("         +-D--+ (H) +-d--+ (h)\n");
  800ccc:	010020b4 	movhi	r4,130
  800cd0:	21313a04 	addi	r4,r4,-15128
  800cd4:	08030980 	call	803098 <puts>
  printf("\n");
  800cd8:	01000284 	movi	r4,10
  800cdc:	0802fc00 	call	802fc0 <putchar>
  printf("Press 'q' [Followed by <enter>] to exit this test.\n");
  800ce0:	010020b4 	movhi	r4,130
  800ce4:	21314204 	addi	r4,r4,-15096
  800ce8:	08030980 	call	803098 <puts>
  
  do
  {
    /* Get terminal input. */
    GetInputString( entry, sizeof(entry), stdin);
  800cec:	d0a00117 	ldw	r2,-32764(gp)
  800cf0:	10c00117 	ldw	r3,4(r2)
  800cf4:	e0bfff04 	addi	r2,fp,-4
  800cf8:	180d883a 	mov	r6,r3
  800cfc:	01400104 	movi	r5,4
  800d00:	1009883a 	mov	r4,r2
  800d04:	080034c0 	call	80034c <GetInputString>
    sscanf( entry, "%c\n", &ch );
  800d08:	e0bfff04 	addi	r2,fp,-4
  800d0c:	d1a76a44 	addi	r6,gp,-25175
  800d10:	014020b4 	movhi	r5,130
  800d14:	29703e04 	addi	r5,r5,-16136
  800d18:	1009883a 	mov	r4,r2
  800d1c:	08033780 	call	803378 <sscanf>
    /* SSD pattern algorithm. */
    keyBit = 0;
  800d20:	e03ffe15 	stw	zero,-8(fp)
    if(ch >= 'a' && ch <= 'g')
  800d24:	d0a76a43 	ldbu	r2,-25175(gp)
  800d28:	10803fcc 	andi	r2,r2,255
  800d2c:	1080201c 	xori	r2,r2,128
  800d30:	10bfe004 	addi	r2,r2,-128
  800d34:	10801850 	cmplti	r2,r2,97
  800d38:	1000101e 	bne	r2,zero,800d7c <SevenSegControl+0x148>
  800d3c:	d0a76a43 	ldbu	r2,-25175(gp)
  800d40:	10803fcc 	andi	r2,r2,255
  800d44:	1080201c 	xori	r2,r2,128
  800d48:	10bfe004 	addi	r2,r2,-128
  800d4c:	10801a08 	cmpgei	r2,r2,104
  800d50:	10000a1e 	bne	r2,zero,800d7c <SevenSegControl+0x148>
      keyBit = 1 << ('g' - ch);
  800d54:	d0a76a43 	ldbu	r2,-25175(gp)
  800d58:	10803fcc 	andi	r2,r2,255
  800d5c:	1080201c 	xori	r2,r2,128
  800d60:	10bfe004 	addi	r2,r2,-128
  800d64:	00c019c4 	movi	r3,103
  800d68:	1885c83a 	sub	r2,r3,r2
  800d6c:	00c00044 	movi	r3,1
  800d70:	1884983a 	sll	r2,r3,r2
  800d74:	e0bffe15 	stw	r2,-8(fp)
  800d78:	00002706 	br	800e18 <SevenSegControl+0x1e4>
    else if(ch == 'h')
  800d7c:	d0a76a43 	ldbu	r2,-25175(gp)
  800d80:	10803fcc 	andi	r2,r2,255
  800d84:	1080201c 	xori	r2,r2,128
  800d88:	10bfe004 	addi	r2,r2,-128
  800d8c:	10801a18 	cmpnei	r2,r2,104
  800d90:	1000031e 	bne	r2,zero,800da0 <SevenSegControl+0x16c>
      keyBit = 1 << 7;
  800d94:	00802004 	movi	r2,128
  800d98:	e0bffe15 	stw	r2,-8(fp)
  800d9c:	00001e06 	br	800e18 <SevenSegControl+0x1e4>
    else if(ch >= 'A' && ch <= 'G')
  800da0:	d0a76a43 	ldbu	r2,-25175(gp)
  800da4:	10803fcc 	andi	r2,r2,255
  800da8:	1080201c 	xori	r2,r2,128
  800dac:	10bfe004 	addi	r2,r2,-128
  800db0:	10801050 	cmplti	r2,r2,65
  800db4:	1000101e 	bne	r2,zero,800df8 <SevenSegControl+0x1c4>
  800db8:	d0a76a43 	ldbu	r2,-25175(gp)
  800dbc:	10803fcc 	andi	r2,r2,255
  800dc0:	1080201c 	xori	r2,r2,128
  800dc4:	10bfe004 	addi	r2,r2,-128
  800dc8:	10801208 	cmpgei	r2,r2,72
  800dcc:	10000a1e 	bne	r2,zero,800df8 <SevenSegControl+0x1c4>
      keyBit = 1 << ('G' - ch + 8);
  800dd0:	d0a76a43 	ldbu	r2,-25175(gp)
  800dd4:	10803fcc 	andi	r2,r2,255
  800dd8:	1080201c 	xori	r2,r2,128
  800ddc:	10bfe004 	addi	r2,r2,-128
  800de0:	00c013c4 	movi	r3,79
  800de4:	1885c83a 	sub	r2,r3,r2
  800de8:	00c00044 	movi	r3,1
  800dec:	1884983a 	sll	r2,r3,r2
  800df0:	e0bffe15 	stw	r2,-8(fp)
  800df4:	00000806 	br	800e18 <SevenSegControl+0x1e4>
    else if(ch == 'H')
  800df8:	d0a76a43 	ldbu	r2,-25175(gp)
  800dfc:	10803fcc 	andi	r2,r2,255
  800e00:	1080201c 	xori	r2,r2,128
  800e04:	10bfe004 	addi	r2,r2,-128
  800e08:	10801218 	cmpnei	r2,r2,72
  800e0c:	1000021e 	bne	r2,zero,800e18 <SevenSegControl+0x1e4>
      keyBit = 1 << 15;
  800e10:	00a00014 	movui	r2,32768
  800e14:	e0bffe15 	stw	r2,-8(fp)
    bits ^= keyBit;
  800e18:	e0fffd17 	ldw	r3,-12(fp)
  800e1c:	e0bffe17 	ldw	r2,-8(fp)
  800e20:	1884f03a 	xor	r2,r3,r2
  800e24:	e0bffd15 	stw	r2,-12(fp)
    IOWR_ALTERA_AVALON_PIO_DATA(SEVEN_SEG_PIO_BASE, bits);
  800e28:	00804034 	movhi	r2,256
  800e2c:	10840804 	addi	r2,r2,4128
  800e30:	e0fffd17 	ldw	r3,-12(fp)
  800e34:	10c00035 	stwio	r3,0(r2)
  }
  while( ch != 'q' );
  800e38:	d0a76a43 	ldbu	r2,-25175(gp)
  800e3c:	10803fcc 	andi	r2,r2,255
  800e40:	1080201c 	xori	r2,r2,128
  800e44:	10bfe004 	addi	r2,r2,-128
  800e48:	10801c58 	cmpnei	r2,r2,113
  800e4c:	103fa71e 	bne	r2,zero,800cec <__alt_data_end+0xff800cec>
}
  800e50:	0001883a 	nop
  800e54:	e037883a 	mov	sp,fp
  800e58:	dfc00117 	ldw	ra,4(sp)
  800e5c:	df000017 	ldw	fp,0(sp)
  800e60:	dec00204 	addi	sp,sp,8
  800e64:	f800283a 	ret

00800e68 <main>:
}

#endif

int main()
{
  800e68:	defffd04 	addi	sp,sp,-12
  800e6c:	dfc00215 	stw	ra,8(sp)
  800e70:	df000115 	stw	fp,4(sp)
  800e74:	df000104 	addi	fp,sp,4
  /* Declare variable for received character. */
  int ch;
  while (1)
  {
    ch = TopMenu();
  800e78:	08005980 	call	800598 <TopMenu>
  800e7c:	10803fcc 	andi	r2,r2,255
  800e80:	1080201c 	xori	r2,r2,128
  800e84:	10bfe004 	addi	r2,r2,-128
  800e88:	e0bfff15 	stw	r2,-4(fp)
    if (ch == 'q')
  800e8c:	e0bfff17 	ldw	r2,-4(fp)
  800e90:	10801c58 	cmpnei	r2,r2,113
  800e94:	103ff81e 	bne	r2,zero,800e78 <__alt_data_end+0xff800e78>
    {
      printf( "\nExiting from Board Diagnostics.\n");
  800e98:	010020b4 	movhi	r4,130
  800e9c:	21314f04 	addi	r4,r4,-15044
  800ea0:	08030980 	call	803098 <puts>
      /* Send EOT to nios2-terminal on the other side of the link. */
      printf( "%c", EOT );
  800ea4:	01000104 	movi	r4,4
  800ea8:	0802fc00 	call	802fc0 <putchar>
      break;
  800eac:	0001883a 	nop
    }
  }
  return( 0 );
  800eb0:	0005883a 	mov	r2,zero
}
  800eb4:	e037883a 	mov	sp,fp
  800eb8:	dfc00117 	ldw	ra,4(sp)
  800ebc:	df000017 	ldw	fp,0(sp)
  800ec0:	dec00204 	addi	sp,sp,8
  800ec4:	f800283a 	ret

00800ec8 <_fclose_r>:
  800ec8:	28003926 	beq	r5,zero,800fb0 <_fclose_r+0xe8>
  800ecc:	defffc04 	addi	sp,sp,-16
  800ed0:	dc400115 	stw	r17,4(sp)
  800ed4:	dc000015 	stw	r16,0(sp)
  800ed8:	dfc00315 	stw	ra,12(sp)
  800edc:	dc800215 	stw	r18,8(sp)
  800ee0:	2023883a 	mov	r17,r4
  800ee4:	2821883a 	mov	r16,r5
  800ee8:	20000226 	beq	r4,zero,800ef4 <_fclose_r+0x2c>
  800eec:	20800e17 	ldw	r2,56(r4)
  800ef0:	10002726 	beq	r2,zero,800f90 <_fclose_r+0xc8>
  800ef4:	8080030f 	ldh	r2,12(r16)
  800ef8:	1000071e 	bne	r2,zero,800f18 <_fclose_r+0x50>
  800efc:	0005883a 	mov	r2,zero
  800f00:	dfc00317 	ldw	ra,12(sp)
  800f04:	dc800217 	ldw	r18,8(sp)
  800f08:	dc400117 	ldw	r17,4(sp)
  800f0c:	dc000017 	ldw	r16,0(sp)
  800f10:	dec00404 	addi	sp,sp,16
  800f14:	f800283a 	ret
  800f18:	800b883a 	mov	r5,r16
  800f1c:	8809883a 	mov	r4,r17
  800f20:	0800fcc0 	call	800fcc <__sflush_r>
  800f24:	1025883a 	mov	r18,r2
  800f28:	80800b17 	ldw	r2,44(r16)
  800f2c:	10000426 	beq	r2,zero,800f40 <_fclose_r+0x78>
  800f30:	81400717 	ldw	r5,28(r16)
  800f34:	8809883a 	mov	r4,r17
  800f38:	103ee83a 	callr	r2
  800f3c:	10001616 	blt	r2,zero,800f98 <_fclose_r+0xd0>
  800f40:	8080030b 	ldhu	r2,12(r16)
  800f44:	1080200c 	andi	r2,r2,128
  800f48:	1000151e 	bne	r2,zero,800fa0 <_fclose_r+0xd8>
  800f4c:	81400c17 	ldw	r5,48(r16)
  800f50:	28000526 	beq	r5,zero,800f68 <_fclose_r+0xa0>
  800f54:	80801004 	addi	r2,r16,64
  800f58:	28800226 	beq	r5,r2,800f64 <_fclose_r+0x9c>
  800f5c:	8809883a 	mov	r4,r17
  800f60:	08018900 	call	801890 <_free_r>
  800f64:	80000c15 	stw	zero,48(r16)
  800f68:	81401117 	ldw	r5,68(r16)
  800f6c:	28000326 	beq	r5,zero,800f7c <_fclose_r+0xb4>
  800f70:	8809883a 	mov	r4,r17
  800f74:	08018900 	call	801890 <_free_r>
  800f78:	80001115 	stw	zero,68(r16)
  800f7c:	08015d40 	call	8015d4 <__sfp_lock_acquire>
  800f80:	8000030d 	sth	zero,12(r16)
  800f84:	08015d80 	call	8015d8 <__sfp_lock_release>
  800f88:	9005883a 	mov	r2,r18
  800f8c:	003fdc06 	br	800f00 <__alt_data_end+0xff800f00>
  800f90:	08015c40 	call	8015c4 <__sinit>
  800f94:	003fd706 	br	800ef4 <__alt_data_end+0xff800ef4>
  800f98:	04bfffc4 	movi	r18,-1
  800f9c:	003fe806 	br	800f40 <__alt_data_end+0xff800f40>
  800fa0:	81400417 	ldw	r5,16(r16)
  800fa4:	8809883a 	mov	r4,r17
  800fa8:	08018900 	call	801890 <_free_r>
  800fac:	003fe706 	br	800f4c <__alt_data_end+0xff800f4c>
  800fb0:	0005883a 	mov	r2,zero
  800fb4:	f800283a 	ret

00800fb8 <fclose>:
  800fb8:	008020b4 	movhi	r2,130
  800fbc:	10ba8504 	addi	r2,r2,-5612
  800fc0:	200b883a 	mov	r5,r4
  800fc4:	11000017 	ldw	r4,0(r2)
  800fc8:	0800ec81 	jmpi	800ec8 <_fclose_r>

00800fcc <__sflush_r>:
  800fcc:	2880030b 	ldhu	r2,12(r5)
  800fd0:	defffb04 	addi	sp,sp,-20
  800fd4:	dcc00315 	stw	r19,12(sp)
  800fd8:	dc400115 	stw	r17,4(sp)
  800fdc:	dfc00415 	stw	ra,16(sp)
  800fe0:	dc800215 	stw	r18,8(sp)
  800fe4:	dc000015 	stw	r16,0(sp)
  800fe8:	10c0020c 	andi	r3,r2,8
  800fec:	2823883a 	mov	r17,r5
  800ff0:	2027883a 	mov	r19,r4
  800ff4:	1800311e 	bne	r3,zero,8010bc <__sflush_r+0xf0>
  800ff8:	28c00117 	ldw	r3,4(r5)
  800ffc:	10820014 	ori	r2,r2,2048
  801000:	2880030d 	sth	r2,12(r5)
  801004:	00c04b0e 	bge	zero,r3,801134 <__sflush_r+0x168>
  801008:	8a000a17 	ldw	r8,40(r17)
  80100c:	40002326 	beq	r8,zero,80109c <__sflush_r+0xd0>
  801010:	9c000017 	ldw	r16,0(r19)
  801014:	10c4000c 	andi	r3,r2,4096
  801018:	98000015 	stw	zero,0(r19)
  80101c:	18004826 	beq	r3,zero,801140 <__sflush_r+0x174>
  801020:	89801417 	ldw	r6,80(r17)
  801024:	10c0010c 	andi	r3,r2,4
  801028:	18000626 	beq	r3,zero,801044 <__sflush_r+0x78>
  80102c:	88c00117 	ldw	r3,4(r17)
  801030:	88800c17 	ldw	r2,48(r17)
  801034:	30cdc83a 	sub	r6,r6,r3
  801038:	10000226 	beq	r2,zero,801044 <__sflush_r+0x78>
  80103c:	88800f17 	ldw	r2,60(r17)
  801040:	308dc83a 	sub	r6,r6,r2
  801044:	89400717 	ldw	r5,28(r17)
  801048:	000f883a 	mov	r7,zero
  80104c:	9809883a 	mov	r4,r19
  801050:	403ee83a 	callr	r8
  801054:	00ffffc4 	movi	r3,-1
  801058:	10c04426 	beq	r2,r3,80116c <__sflush_r+0x1a0>
  80105c:	88c0030b 	ldhu	r3,12(r17)
  801060:	89000417 	ldw	r4,16(r17)
  801064:	88000115 	stw	zero,4(r17)
  801068:	197dffcc 	andi	r5,r3,63487
  80106c:	8940030d 	sth	r5,12(r17)
  801070:	89000015 	stw	r4,0(r17)
  801074:	18c4000c 	andi	r3,r3,4096
  801078:	18002c1e 	bne	r3,zero,80112c <__sflush_r+0x160>
  80107c:	89400c17 	ldw	r5,48(r17)
  801080:	9c000015 	stw	r16,0(r19)
  801084:	28000526 	beq	r5,zero,80109c <__sflush_r+0xd0>
  801088:	88801004 	addi	r2,r17,64
  80108c:	28800226 	beq	r5,r2,801098 <__sflush_r+0xcc>
  801090:	9809883a 	mov	r4,r19
  801094:	08018900 	call	801890 <_free_r>
  801098:	88000c15 	stw	zero,48(r17)
  80109c:	0005883a 	mov	r2,zero
  8010a0:	dfc00417 	ldw	ra,16(sp)
  8010a4:	dcc00317 	ldw	r19,12(sp)
  8010a8:	dc800217 	ldw	r18,8(sp)
  8010ac:	dc400117 	ldw	r17,4(sp)
  8010b0:	dc000017 	ldw	r16,0(sp)
  8010b4:	dec00504 	addi	sp,sp,20
  8010b8:	f800283a 	ret
  8010bc:	2c800417 	ldw	r18,16(r5)
  8010c0:	903ff626 	beq	r18,zero,80109c <__alt_data_end+0xff80109c>
  8010c4:	2c000017 	ldw	r16,0(r5)
  8010c8:	108000cc 	andi	r2,r2,3
  8010cc:	2c800015 	stw	r18,0(r5)
  8010d0:	84a1c83a 	sub	r16,r16,r18
  8010d4:	1000131e 	bne	r2,zero,801124 <__sflush_r+0x158>
  8010d8:	28800517 	ldw	r2,20(r5)
  8010dc:	88800215 	stw	r2,8(r17)
  8010e0:	04000316 	blt	zero,r16,8010f0 <__sflush_r+0x124>
  8010e4:	003fed06 	br	80109c <__alt_data_end+0xff80109c>
  8010e8:	90a5883a 	add	r18,r18,r2
  8010ec:	043feb0e 	bge	zero,r16,80109c <__alt_data_end+0xff80109c>
  8010f0:	88800917 	ldw	r2,36(r17)
  8010f4:	89400717 	ldw	r5,28(r17)
  8010f8:	800f883a 	mov	r7,r16
  8010fc:	900d883a 	mov	r6,r18
  801100:	9809883a 	mov	r4,r19
  801104:	103ee83a 	callr	r2
  801108:	80a1c83a 	sub	r16,r16,r2
  80110c:	00bff616 	blt	zero,r2,8010e8 <__alt_data_end+0xff8010e8>
  801110:	88c0030b 	ldhu	r3,12(r17)
  801114:	00bfffc4 	movi	r2,-1
  801118:	18c01014 	ori	r3,r3,64
  80111c:	88c0030d 	sth	r3,12(r17)
  801120:	003fdf06 	br	8010a0 <__alt_data_end+0xff8010a0>
  801124:	0005883a 	mov	r2,zero
  801128:	003fec06 	br	8010dc <__alt_data_end+0xff8010dc>
  80112c:	88801415 	stw	r2,80(r17)
  801130:	003fd206 	br	80107c <__alt_data_end+0xff80107c>
  801134:	28c00f17 	ldw	r3,60(r5)
  801138:	00ffb316 	blt	zero,r3,801008 <__alt_data_end+0xff801008>
  80113c:	003fd706 	br	80109c <__alt_data_end+0xff80109c>
  801140:	89400717 	ldw	r5,28(r17)
  801144:	000d883a 	mov	r6,zero
  801148:	01c00044 	movi	r7,1
  80114c:	9809883a 	mov	r4,r19
  801150:	403ee83a 	callr	r8
  801154:	100d883a 	mov	r6,r2
  801158:	00bfffc4 	movi	r2,-1
  80115c:	30801426 	beq	r6,r2,8011b0 <__sflush_r+0x1e4>
  801160:	8880030b 	ldhu	r2,12(r17)
  801164:	8a000a17 	ldw	r8,40(r17)
  801168:	003fae06 	br	801024 <__alt_data_end+0xff801024>
  80116c:	98c00017 	ldw	r3,0(r19)
  801170:	183fba26 	beq	r3,zero,80105c <__alt_data_end+0xff80105c>
  801174:	01000744 	movi	r4,29
  801178:	19000626 	beq	r3,r4,801194 <__sflush_r+0x1c8>
  80117c:	01000584 	movi	r4,22
  801180:	19000426 	beq	r3,r4,801194 <__sflush_r+0x1c8>
  801184:	88c0030b 	ldhu	r3,12(r17)
  801188:	18c01014 	ori	r3,r3,64
  80118c:	88c0030d 	sth	r3,12(r17)
  801190:	003fc306 	br	8010a0 <__alt_data_end+0xff8010a0>
  801194:	8880030b 	ldhu	r2,12(r17)
  801198:	88c00417 	ldw	r3,16(r17)
  80119c:	88000115 	stw	zero,4(r17)
  8011a0:	10bdffcc 	andi	r2,r2,63487
  8011a4:	8880030d 	sth	r2,12(r17)
  8011a8:	88c00015 	stw	r3,0(r17)
  8011ac:	003fb306 	br	80107c <__alt_data_end+0xff80107c>
  8011b0:	98800017 	ldw	r2,0(r19)
  8011b4:	103fea26 	beq	r2,zero,801160 <__alt_data_end+0xff801160>
  8011b8:	00c00744 	movi	r3,29
  8011bc:	10c00226 	beq	r2,r3,8011c8 <__sflush_r+0x1fc>
  8011c0:	00c00584 	movi	r3,22
  8011c4:	10c0031e 	bne	r2,r3,8011d4 <__sflush_r+0x208>
  8011c8:	9c000015 	stw	r16,0(r19)
  8011cc:	0005883a 	mov	r2,zero
  8011d0:	003fb306 	br	8010a0 <__alt_data_end+0xff8010a0>
  8011d4:	88c0030b 	ldhu	r3,12(r17)
  8011d8:	3005883a 	mov	r2,r6
  8011dc:	18c01014 	ori	r3,r3,64
  8011e0:	88c0030d 	sth	r3,12(r17)
  8011e4:	003fae06 	br	8010a0 <__alt_data_end+0xff8010a0>

008011e8 <_fflush_r>:
  8011e8:	defffd04 	addi	sp,sp,-12
  8011ec:	dc000115 	stw	r16,4(sp)
  8011f0:	dfc00215 	stw	ra,8(sp)
  8011f4:	2021883a 	mov	r16,r4
  8011f8:	20000226 	beq	r4,zero,801204 <_fflush_r+0x1c>
  8011fc:	20800e17 	ldw	r2,56(r4)
  801200:	10000c26 	beq	r2,zero,801234 <_fflush_r+0x4c>
  801204:	2880030f 	ldh	r2,12(r5)
  801208:	1000051e 	bne	r2,zero,801220 <_fflush_r+0x38>
  80120c:	0005883a 	mov	r2,zero
  801210:	dfc00217 	ldw	ra,8(sp)
  801214:	dc000117 	ldw	r16,4(sp)
  801218:	dec00304 	addi	sp,sp,12
  80121c:	f800283a 	ret
  801220:	8009883a 	mov	r4,r16
  801224:	dfc00217 	ldw	ra,8(sp)
  801228:	dc000117 	ldw	r16,4(sp)
  80122c:	dec00304 	addi	sp,sp,12
  801230:	0800fcc1 	jmpi	800fcc <__sflush_r>
  801234:	d9400015 	stw	r5,0(sp)
  801238:	08015c40 	call	8015c4 <__sinit>
  80123c:	d9400017 	ldw	r5,0(sp)
  801240:	003ff006 	br	801204 <__alt_data_end+0xff801204>

00801244 <fflush>:
  801244:	20000526 	beq	r4,zero,80125c <fflush+0x18>
  801248:	008020b4 	movhi	r2,130
  80124c:	10ba8504 	addi	r2,r2,-5612
  801250:	200b883a 	mov	r5,r4
  801254:	11000017 	ldw	r4,0(r2)
  801258:	08011e81 	jmpi	8011e8 <_fflush_r>
  80125c:	008020b4 	movhi	r2,130
  801260:	10ba8404 	addi	r2,r2,-5616
  801264:	11000017 	ldw	r4,0(r2)
  801268:	01402034 	movhi	r5,128
  80126c:	29447a04 	addi	r5,r5,4584
  801270:	08021401 	jmpi	802140 <_fwalk_reent>

00801274 <__fp_unlock>:
  801274:	0005883a 	mov	r2,zero
  801278:	f800283a 	ret

0080127c <_cleanup_r>:
  80127c:	01402034 	movhi	r5,128
  801280:	2943b204 	addi	r5,r5,3784
  801284:	08021401 	jmpi	802140 <_fwalk_reent>

00801288 <__sinit.part.1>:
  801288:	defff704 	addi	sp,sp,-36
  80128c:	00c02034 	movhi	r3,128
  801290:	dfc00815 	stw	ra,32(sp)
  801294:	ddc00715 	stw	r23,28(sp)
  801298:	dd800615 	stw	r22,24(sp)
  80129c:	dd400515 	stw	r21,20(sp)
  8012a0:	dd000415 	stw	r20,16(sp)
  8012a4:	dcc00315 	stw	r19,12(sp)
  8012a8:	dc800215 	stw	r18,8(sp)
  8012ac:	dc400115 	stw	r17,4(sp)
  8012b0:	dc000015 	stw	r16,0(sp)
  8012b4:	18c49f04 	addi	r3,r3,4732
  8012b8:	24000117 	ldw	r16,4(r4)
  8012bc:	20c00f15 	stw	r3,60(r4)
  8012c0:	2080bb04 	addi	r2,r4,748
  8012c4:	00c000c4 	movi	r3,3
  8012c8:	20c0b915 	stw	r3,740(r4)
  8012cc:	2080ba15 	stw	r2,744(r4)
  8012d0:	2000b815 	stw	zero,736(r4)
  8012d4:	05c00204 	movi	r23,8
  8012d8:	00800104 	movi	r2,4
  8012dc:	2025883a 	mov	r18,r4
  8012e0:	b80d883a 	mov	r6,r23
  8012e4:	81001704 	addi	r4,r16,92
  8012e8:	000b883a 	mov	r5,zero
  8012ec:	80000015 	stw	zero,0(r16)
  8012f0:	80000115 	stw	zero,4(r16)
  8012f4:	80000215 	stw	zero,8(r16)
  8012f8:	8080030d 	sth	r2,12(r16)
  8012fc:	80001915 	stw	zero,100(r16)
  801300:	8000038d 	sth	zero,14(r16)
  801304:	80000415 	stw	zero,16(r16)
  801308:	80000515 	stw	zero,20(r16)
  80130c:	80000615 	stw	zero,24(r16)
  801310:	0802dc40 	call	802dc4 <memset>
  801314:	05802034 	movhi	r22,128
  801318:	94400217 	ldw	r17,8(r18)
  80131c:	05402034 	movhi	r21,128
  801320:	05002034 	movhi	r20,128
  801324:	04c02034 	movhi	r19,128
  801328:	b58d1b04 	addi	r22,r22,13420
  80132c:	ad4d3204 	addi	r21,r21,13512
  801330:	a50d5104 	addi	r20,r20,13636
  801334:	9ccd6804 	addi	r19,r19,13728
  801338:	85800815 	stw	r22,32(r16)
  80133c:	85400915 	stw	r21,36(r16)
  801340:	85000a15 	stw	r20,40(r16)
  801344:	84c00b15 	stw	r19,44(r16)
  801348:	84000715 	stw	r16,28(r16)
  80134c:	00800284 	movi	r2,10
  801350:	8880030d 	sth	r2,12(r17)
  801354:	00800044 	movi	r2,1
  801358:	b80d883a 	mov	r6,r23
  80135c:	89001704 	addi	r4,r17,92
  801360:	000b883a 	mov	r5,zero
  801364:	88000015 	stw	zero,0(r17)
  801368:	88000115 	stw	zero,4(r17)
  80136c:	88000215 	stw	zero,8(r17)
  801370:	88001915 	stw	zero,100(r17)
  801374:	8880038d 	sth	r2,14(r17)
  801378:	88000415 	stw	zero,16(r17)
  80137c:	88000515 	stw	zero,20(r17)
  801380:	88000615 	stw	zero,24(r17)
  801384:	0802dc40 	call	802dc4 <memset>
  801388:	94000317 	ldw	r16,12(r18)
  80138c:	00800484 	movi	r2,18
  801390:	8c400715 	stw	r17,28(r17)
  801394:	8d800815 	stw	r22,32(r17)
  801398:	8d400915 	stw	r21,36(r17)
  80139c:	8d000a15 	stw	r20,40(r17)
  8013a0:	8cc00b15 	stw	r19,44(r17)
  8013a4:	8080030d 	sth	r2,12(r16)
  8013a8:	00800084 	movi	r2,2
  8013ac:	80000015 	stw	zero,0(r16)
  8013b0:	80000115 	stw	zero,4(r16)
  8013b4:	80000215 	stw	zero,8(r16)
  8013b8:	80001915 	stw	zero,100(r16)
  8013bc:	8080038d 	sth	r2,14(r16)
  8013c0:	80000415 	stw	zero,16(r16)
  8013c4:	80000515 	stw	zero,20(r16)
  8013c8:	80000615 	stw	zero,24(r16)
  8013cc:	b80d883a 	mov	r6,r23
  8013d0:	000b883a 	mov	r5,zero
  8013d4:	81001704 	addi	r4,r16,92
  8013d8:	0802dc40 	call	802dc4 <memset>
  8013dc:	00800044 	movi	r2,1
  8013e0:	84000715 	stw	r16,28(r16)
  8013e4:	85800815 	stw	r22,32(r16)
  8013e8:	85400915 	stw	r21,36(r16)
  8013ec:	85000a15 	stw	r20,40(r16)
  8013f0:	84c00b15 	stw	r19,44(r16)
  8013f4:	90800e15 	stw	r2,56(r18)
  8013f8:	dfc00817 	ldw	ra,32(sp)
  8013fc:	ddc00717 	ldw	r23,28(sp)
  801400:	dd800617 	ldw	r22,24(sp)
  801404:	dd400517 	ldw	r21,20(sp)
  801408:	dd000417 	ldw	r20,16(sp)
  80140c:	dcc00317 	ldw	r19,12(sp)
  801410:	dc800217 	ldw	r18,8(sp)
  801414:	dc400117 	ldw	r17,4(sp)
  801418:	dc000017 	ldw	r16,0(sp)
  80141c:	dec00904 	addi	sp,sp,36
  801420:	f800283a 	ret

00801424 <__fp_lock>:
  801424:	0005883a 	mov	r2,zero
  801428:	f800283a 	ret

0080142c <__sfmoreglue>:
  80142c:	defffc04 	addi	sp,sp,-16
  801430:	dc400115 	stw	r17,4(sp)
  801434:	2c7fffc4 	addi	r17,r5,-1
  801438:	8c401a24 	muli	r17,r17,104
  80143c:	dc800215 	stw	r18,8(sp)
  801440:	2825883a 	mov	r18,r5
  801444:	89401d04 	addi	r5,r17,116
  801448:	dc000015 	stw	r16,0(sp)
  80144c:	dfc00315 	stw	ra,12(sp)
  801450:	08025b80 	call	8025b8 <_malloc_r>
  801454:	1021883a 	mov	r16,r2
  801458:	10000726 	beq	r2,zero,801478 <__sfmoreglue+0x4c>
  80145c:	11000304 	addi	r4,r2,12
  801460:	10000015 	stw	zero,0(r2)
  801464:	14800115 	stw	r18,4(r2)
  801468:	11000215 	stw	r4,8(r2)
  80146c:	89801a04 	addi	r6,r17,104
  801470:	000b883a 	mov	r5,zero
  801474:	0802dc40 	call	802dc4 <memset>
  801478:	8005883a 	mov	r2,r16
  80147c:	dfc00317 	ldw	ra,12(sp)
  801480:	dc800217 	ldw	r18,8(sp)
  801484:	dc400117 	ldw	r17,4(sp)
  801488:	dc000017 	ldw	r16,0(sp)
  80148c:	dec00404 	addi	sp,sp,16
  801490:	f800283a 	ret

00801494 <__sfp>:
  801494:	defffb04 	addi	sp,sp,-20
  801498:	dc000015 	stw	r16,0(sp)
  80149c:	040020b4 	movhi	r16,130
  8014a0:	843a8404 	addi	r16,r16,-5616
  8014a4:	dcc00315 	stw	r19,12(sp)
  8014a8:	2027883a 	mov	r19,r4
  8014ac:	81000017 	ldw	r4,0(r16)
  8014b0:	dfc00415 	stw	ra,16(sp)
  8014b4:	dc800215 	stw	r18,8(sp)
  8014b8:	20800e17 	ldw	r2,56(r4)
  8014bc:	dc400115 	stw	r17,4(sp)
  8014c0:	1000021e 	bne	r2,zero,8014cc <__sfp+0x38>
  8014c4:	08012880 	call	801288 <__sinit.part.1>
  8014c8:	81000017 	ldw	r4,0(r16)
  8014cc:	2480b804 	addi	r18,r4,736
  8014d0:	047fffc4 	movi	r17,-1
  8014d4:	91000117 	ldw	r4,4(r18)
  8014d8:	94000217 	ldw	r16,8(r18)
  8014dc:	213fffc4 	addi	r4,r4,-1
  8014e0:	20000a16 	blt	r4,zero,80150c <__sfp+0x78>
  8014e4:	8080030f 	ldh	r2,12(r16)
  8014e8:	10000c26 	beq	r2,zero,80151c <__sfp+0x88>
  8014ec:	80c01d04 	addi	r3,r16,116
  8014f0:	00000206 	br	8014fc <__sfp+0x68>
  8014f4:	18bfe60f 	ldh	r2,-104(r3)
  8014f8:	10000826 	beq	r2,zero,80151c <__sfp+0x88>
  8014fc:	213fffc4 	addi	r4,r4,-1
  801500:	1c3ffd04 	addi	r16,r3,-12
  801504:	18c01a04 	addi	r3,r3,104
  801508:	247ffa1e 	bne	r4,r17,8014f4 <__alt_data_end+0xff8014f4>
  80150c:	90800017 	ldw	r2,0(r18)
  801510:	10001d26 	beq	r2,zero,801588 <__sfp+0xf4>
  801514:	1025883a 	mov	r18,r2
  801518:	003fee06 	br	8014d4 <__alt_data_end+0xff8014d4>
  80151c:	00bfffc4 	movi	r2,-1
  801520:	8080038d 	sth	r2,14(r16)
  801524:	00800044 	movi	r2,1
  801528:	8080030d 	sth	r2,12(r16)
  80152c:	80001915 	stw	zero,100(r16)
  801530:	80000015 	stw	zero,0(r16)
  801534:	80000215 	stw	zero,8(r16)
  801538:	80000115 	stw	zero,4(r16)
  80153c:	80000415 	stw	zero,16(r16)
  801540:	80000515 	stw	zero,20(r16)
  801544:	80000615 	stw	zero,24(r16)
  801548:	01800204 	movi	r6,8
  80154c:	000b883a 	mov	r5,zero
  801550:	81001704 	addi	r4,r16,92
  801554:	0802dc40 	call	802dc4 <memset>
  801558:	8005883a 	mov	r2,r16
  80155c:	80000c15 	stw	zero,48(r16)
  801560:	80000d15 	stw	zero,52(r16)
  801564:	80001115 	stw	zero,68(r16)
  801568:	80001215 	stw	zero,72(r16)
  80156c:	dfc00417 	ldw	ra,16(sp)
  801570:	dcc00317 	ldw	r19,12(sp)
  801574:	dc800217 	ldw	r18,8(sp)
  801578:	dc400117 	ldw	r17,4(sp)
  80157c:	dc000017 	ldw	r16,0(sp)
  801580:	dec00504 	addi	sp,sp,20
  801584:	f800283a 	ret
  801588:	01400104 	movi	r5,4
  80158c:	9809883a 	mov	r4,r19
  801590:	080142c0 	call	80142c <__sfmoreglue>
  801594:	90800015 	stw	r2,0(r18)
  801598:	103fde1e 	bne	r2,zero,801514 <__alt_data_end+0xff801514>
  80159c:	00800304 	movi	r2,12
  8015a0:	98800015 	stw	r2,0(r19)
  8015a4:	0005883a 	mov	r2,zero
  8015a8:	003ff006 	br	80156c <__alt_data_end+0xff80156c>

008015ac <_cleanup>:
  8015ac:	008020b4 	movhi	r2,130
  8015b0:	10ba8404 	addi	r2,r2,-5616
  8015b4:	11000017 	ldw	r4,0(r2)
  8015b8:	01402034 	movhi	r5,128
  8015bc:	2943b204 	addi	r5,r5,3784
  8015c0:	08021401 	jmpi	802140 <_fwalk_reent>

008015c4 <__sinit>:
  8015c4:	20800e17 	ldw	r2,56(r4)
  8015c8:	10000126 	beq	r2,zero,8015d0 <__sinit+0xc>
  8015cc:	f800283a 	ret
  8015d0:	08012881 	jmpi	801288 <__sinit.part.1>

008015d4 <__sfp_lock_acquire>:
  8015d4:	f800283a 	ret

008015d8 <__sfp_lock_release>:
  8015d8:	f800283a 	ret

008015dc <__sinit_lock_acquire>:
  8015dc:	f800283a 	ret

008015e0 <__sinit_lock_release>:
  8015e0:	f800283a 	ret

008015e4 <__fp_lock_all>:
  8015e4:	008020b4 	movhi	r2,130
  8015e8:	10ba8504 	addi	r2,r2,-5612
  8015ec:	11000017 	ldw	r4,0(r2)
  8015f0:	01402034 	movhi	r5,128
  8015f4:	29450904 	addi	r5,r5,5156
  8015f8:	080207c1 	jmpi	80207c <_fwalk>

008015fc <__fp_unlock_all>:
  8015fc:	008020b4 	movhi	r2,130
  801600:	10ba8504 	addi	r2,r2,-5612
  801604:	11000017 	ldw	r4,0(r2)
  801608:	01402034 	movhi	r5,128
  80160c:	29449d04 	addi	r5,r5,4724
  801610:	080207c1 	jmpi	80207c <_fwalk>

00801614 <_fopen_r>:
  801614:	defffa04 	addi	sp,sp,-24
  801618:	3005883a 	mov	r2,r6
  80161c:	dcc00415 	stw	r19,16(sp)
  801620:	d80d883a 	mov	r6,sp
  801624:	2827883a 	mov	r19,r5
  801628:	100b883a 	mov	r5,r2
  80162c:	dc800315 	stw	r18,12(sp)
  801630:	dfc00515 	stw	ra,20(sp)
  801634:	dc400215 	stw	r17,8(sp)
  801638:	dc000115 	stw	r16,4(sp)
  80163c:	2025883a 	mov	r18,r4
  801640:	0808b5c0 	call	808b5c <__sflags>
  801644:	10002726 	beq	r2,zero,8016e4 <_fopen_r+0xd0>
  801648:	9009883a 	mov	r4,r18
  80164c:	1023883a 	mov	r17,r2
  801650:	08014940 	call	801494 <__sfp>
  801654:	1021883a 	mov	r16,r2
  801658:	10002226 	beq	r2,zero,8016e4 <_fopen_r+0xd0>
  80165c:	d9800017 	ldw	r6,0(sp)
  801660:	01c06d84 	movi	r7,438
  801664:	980b883a 	mov	r5,r19
  801668:	9009883a 	mov	r4,r18
  80166c:	0802eec0 	call	802eec <_open_r>
  801670:	10001916 	blt	r2,zero,8016d8 <_fopen_r+0xc4>
  801674:	8080038d 	sth	r2,14(r16)
  801678:	00802034 	movhi	r2,128
  80167c:	108d1b04 	addi	r2,r2,13420
  801680:	80800815 	stw	r2,32(r16)
  801684:	00802034 	movhi	r2,128
  801688:	108d3204 	addi	r2,r2,13512
  80168c:	80800915 	stw	r2,36(r16)
  801690:	00802034 	movhi	r2,128
  801694:	108d5104 	addi	r2,r2,13636
  801698:	80800a15 	stw	r2,40(r16)
  80169c:	00802034 	movhi	r2,128
  8016a0:	108d6804 	addi	r2,r2,13728
  8016a4:	8440030d 	sth	r17,12(r16)
  8016a8:	84000715 	stw	r16,28(r16)
  8016ac:	80800b15 	stw	r2,44(r16)
  8016b0:	8c40400c 	andi	r17,r17,256
  8016b4:	88000d1e 	bne	r17,zero,8016ec <_fopen_r+0xd8>
  8016b8:	8005883a 	mov	r2,r16
  8016bc:	dfc00517 	ldw	ra,20(sp)
  8016c0:	dcc00417 	ldw	r19,16(sp)
  8016c4:	dc800317 	ldw	r18,12(sp)
  8016c8:	dc400217 	ldw	r17,8(sp)
  8016cc:	dc000117 	ldw	r16,4(sp)
  8016d0:	dec00604 	addi	sp,sp,24
  8016d4:	f800283a 	ret
  8016d8:	08015d40 	call	8015d4 <__sfp_lock_acquire>
  8016dc:	8000030d 	sth	zero,12(r16)
  8016e0:	08015d80 	call	8015d8 <__sfp_lock_release>
  8016e4:	0005883a 	mov	r2,zero
  8016e8:	003ff406 	br	8016bc <__alt_data_end+0xff8016bc>
  8016ec:	01c00084 	movi	r7,2
  8016f0:	000d883a 	mov	r6,zero
  8016f4:	800b883a 	mov	r5,r16
  8016f8:	9009883a 	mov	r4,r18
  8016fc:	0801ba00 	call	801ba0 <_fseek_r>
  801700:	8005883a 	mov	r2,r16
  801704:	003fed06 	br	8016bc <__alt_data_end+0xff8016bc>

00801708 <fopen>:
  801708:	008020b4 	movhi	r2,130
  80170c:	10ba8504 	addi	r2,r2,-5612
  801710:	280d883a 	mov	r6,r5
  801714:	200b883a 	mov	r5,r4
  801718:	11000017 	ldw	r4,0(r2)
  80171c:	08016141 	jmpi	801614 <_fopen_r>

00801720 <_fprintf_r>:
  801720:	defffe04 	addi	sp,sp,-8
  801724:	2809883a 	mov	r4,r5
  801728:	300b883a 	mov	r5,r6
  80172c:	dfc00015 	stw	ra,0(sp)
  801730:	d9c00115 	stw	r7,4(sp)
  801734:	d9800104 	addi	r6,sp,4
  801738:	0806ff40 	call	806ff4 <__vfprintf_internal>
  80173c:	dfc00017 	ldw	ra,0(sp)
  801740:	dec00204 	addi	sp,sp,8
  801744:	f800283a 	ret

00801748 <fprintf>:
  801748:	defffd04 	addi	sp,sp,-12
  80174c:	dfc00015 	stw	ra,0(sp)
  801750:	d9800115 	stw	r6,4(sp)
  801754:	d9c00215 	stw	r7,8(sp)
  801758:	d9800104 	addi	r6,sp,4
  80175c:	0806ff40 	call	806ff4 <__vfprintf_internal>
  801760:	dfc00017 	ldw	ra,0(sp)
  801764:	dec00304 	addi	sp,sp,12
  801768:	f800283a 	ret

0080176c <_malloc_trim_r>:
  80176c:	defffb04 	addi	sp,sp,-20
  801770:	dcc00315 	stw	r19,12(sp)
  801774:	04c020b4 	movhi	r19,130
  801778:	dc800215 	stw	r18,8(sp)
  80177c:	dc400115 	stw	r17,4(sp)
  801780:	dc000015 	stw	r16,0(sp)
  801784:	dfc00415 	stw	ra,16(sp)
  801788:	2821883a 	mov	r16,r5
  80178c:	9cf45104 	addi	r19,r19,-11964
  801790:	2025883a 	mov	r18,r4
  801794:	081874c0 	call	81874c <__malloc_lock>
  801798:	98800217 	ldw	r2,8(r19)
  80179c:	14400117 	ldw	r17,4(r2)
  8017a0:	00bfff04 	movi	r2,-4
  8017a4:	88a2703a 	and	r17,r17,r2
  8017a8:	8c21c83a 	sub	r16,r17,r16
  8017ac:	8403fbc4 	addi	r16,r16,4079
  8017b0:	8020d33a 	srli	r16,r16,12
  8017b4:	0083ffc4 	movi	r2,4095
  8017b8:	843fffc4 	addi	r16,r16,-1
  8017bc:	8020933a 	slli	r16,r16,12
  8017c0:	1400060e 	bge	r2,r16,8017dc <_malloc_trim_r+0x70>
  8017c4:	000b883a 	mov	r5,zero
  8017c8:	9009883a 	mov	r4,r18
  8017cc:	08033240 	call	803324 <_sbrk_r>
  8017d0:	98c00217 	ldw	r3,8(r19)
  8017d4:	1c47883a 	add	r3,r3,r17
  8017d8:	10c00a26 	beq	r2,r3,801804 <_malloc_trim_r+0x98>
  8017dc:	9009883a 	mov	r4,r18
  8017e0:	08187700 	call	818770 <__malloc_unlock>
  8017e4:	0005883a 	mov	r2,zero
  8017e8:	dfc00417 	ldw	ra,16(sp)
  8017ec:	dcc00317 	ldw	r19,12(sp)
  8017f0:	dc800217 	ldw	r18,8(sp)
  8017f4:	dc400117 	ldw	r17,4(sp)
  8017f8:	dc000017 	ldw	r16,0(sp)
  8017fc:	dec00504 	addi	sp,sp,20
  801800:	f800283a 	ret
  801804:	040bc83a 	sub	r5,zero,r16
  801808:	9009883a 	mov	r4,r18
  80180c:	08033240 	call	803324 <_sbrk_r>
  801810:	00ffffc4 	movi	r3,-1
  801814:	10c00d26 	beq	r2,r3,80184c <_malloc_trim_r+0xe0>
  801818:	00c020b4 	movhi	r3,130
  80181c:	18c1fe04 	addi	r3,r3,2040
  801820:	18800017 	ldw	r2,0(r3)
  801824:	99000217 	ldw	r4,8(r19)
  801828:	8c23c83a 	sub	r17,r17,r16
  80182c:	8c400054 	ori	r17,r17,1
  801830:	1421c83a 	sub	r16,r2,r16
  801834:	24400115 	stw	r17,4(r4)
  801838:	9009883a 	mov	r4,r18
  80183c:	1c000015 	stw	r16,0(r3)
  801840:	08187700 	call	818770 <__malloc_unlock>
  801844:	00800044 	movi	r2,1
  801848:	003fe706 	br	8017e8 <__alt_data_end+0xff8017e8>
  80184c:	000b883a 	mov	r5,zero
  801850:	9009883a 	mov	r4,r18
  801854:	08033240 	call	803324 <_sbrk_r>
  801858:	99000217 	ldw	r4,8(r19)
  80185c:	014003c4 	movi	r5,15
  801860:	1107c83a 	sub	r3,r2,r4
  801864:	28ffdd0e 	bge	r5,r3,8017dc <__alt_data_end+0xff8017dc>
  801868:	014020b4 	movhi	r5,130
  80186c:	297a8604 	addi	r5,r5,-5608
  801870:	29400017 	ldw	r5,0(r5)
  801874:	18c00054 	ori	r3,r3,1
  801878:	20c00115 	stw	r3,4(r4)
  80187c:	00c020b4 	movhi	r3,130
  801880:	1145c83a 	sub	r2,r2,r5
  801884:	18c1fe04 	addi	r3,r3,2040
  801888:	18800015 	stw	r2,0(r3)
  80188c:	003fd306 	br	8017dc <__alt_data_end+0xff8017dc>

00801890 <_free_r>:
  801890:	28004126 	beq	r5,zero,801998 <_free_r+0x108>
  801894:	defffd04 	addi	sp,sp,-12
  801898:	dc400115 	stw	r17,4(sp)
  80189c:	dc000015 	stw	r16,0(sp)
  8018a0:	2023883a 	mov	r17,r4
  8018a4:	2821883a 	mov	r16,r5
  8018a8:	dfc00215 	stw	ra,8(sp)
  8018ac:	081874c0 	call	81874c <__malloc_lock>
  8018b0:	81ffff17 	ldw	r7,-4(r16)
  8018b4:	00bfff84 	movi	r2,-2
  8018b8:	010020b4 	movhi	r4,130
  8018bc:	81bffe04 	addi	r6,r16,-8
  8018c0:	3884703a 	and	r2,r7,r2
  8018c4:	21345104 	addi	r4,r4,-11964
  8018c8:	308b883a 	add	r5,r6,r2
  8018cc:	2a400117 	ldw	r9,4(r5)
  8018d0:	22000217 	ldw	r8,8(r4)
  8018d4:	00ffff04 	movi	r3,-4
  8018d8:	48c6703a 	and	r3,r9,r3
  8018dc:	2a005726 	beq	r5,r8,801a3c <_free_r+0x1ac>
  8018e0:	28c00115 	stw	r3,4(r5)
  8018e4:	39c0004c 	andi	r7,r7,1
  8018e8:	3800091e 	bne	r7,zero,801910 <_free_r+0x80>
  8018ec:	823ffe17 	ldw	r8,-8(r16)
  8018f0:	22400204 	addi	r9,r4,8
  8018f4:	320dc83a 	sub	r6,r6,r8
  8018f8:	31c00217 	ldw	r7,8(r6)
  8018fc:	1205883a 	add	r2,r2,r8
  801900:	3a406526 	beq	r7,r9,801a98 <_free_r+0x208>
  801904:	32000317 	ldw	r8,12(r6)
  801908:	3a000315 	stw	r8,12(r7)
  80190c:	41c00215 	stw	r7,8(r8)
  801910:	28cf883a 	add	r7,r5,r3
  801914:	39c00117 	ldw	r7,4(r7)
  801918:	39c0004c 	andi	r7,r7,1
  80191c:	38003a26 	beq	r7,zero,801a08 <_free_r+0x178>
  801920:	10c00054 	ori	r3,r2,1
  801924:	30c00115 	stw	r3,4(r6)
  801928:	3087883a 	add	r3,r6,r2
  80192c:	18800015 	stw	r2,0(r3)
  801930:	00c07fc4 	movi	r3,511
  801934:	18801936 	bltu	r3,r2,80199c <_free_r+0x10c>
  801938:	1004d0fa 	srli	r2,r2,3
  80193c:	01c00044 	movi	r7,1
  801940:	21400117 	ldw	r5,4(r4)
  801944:	10c00044 	addi	r3,r2,1
  801948:	18c7883a 	add	r3,r3,r3
  80194c:	1005d0ba 	srai	r2,r2,2
  801950:	18c7883a 	add	r3,r3,r3
  801954:	18c7883a 	add	r3,r3,r3
  801958:	1907883a 	add	r3,r3,r4
  80195c:	3884983a 	sll	r2,r7,r2
  801960:	19c00017 	ldw	r7,0(r3)
  801964:	1a3ffe04 	addi	r8,r3,-8
  801968:	1144b03a 	or	r2,r2,r5
  80196c:	32000315 	stw	r8,12(r6)
  801970:	31c00215 	stw	r7,8(r6)
  801974:	20800115 	stw	r2,4(r4)
  801978:	19800015 	stw	r6,0(r3)
  80197c:	39800315 	stw	r6,12(r7)
  801980:	8809883a 	mov	r4,r17
  801984:	dfc00217 	ldw	ra,8(sp)
  801988:	dc400117 	ldw	r17,4(sp)
  80198c:	dc000017 	ldw	r16,0(sp)
  801990:	dec00304 	addi	sp,sp,12
  801994:	08187701 	jmpi	818770 <__malloc_unlock>
  801998:	f800283a 	ret
  80199c:	100ad27a 	srli	r5,r2,9
  8019a0:	00c00104 	movi	r3,4
  8019a4:	19404a36 	bltu	r3,r5,801ad0 <_free_r+0x240>
  8019a8:	100ad1ba 	srli	r5,r2,6
  8019ac:	28c00e44 	addi	r3,r5,57
  8019b0:	18c7883a 	add	r3,r3,r3
  8019b4:	29400e04 	addi	r5,r5,56
  8019b8:	18c7883a 	add	r3,r3,r3
  8019bc:	18c7883a 	add	r3,r3,r3
  8019c0:	1909883a 	add	r4,r3,r4
  8019c4:	20c00017 	ldw	r3,0(r4)
  8019c8:	01c020b4 	movhi	r7,130
  8019cc:	213ffe04 	addi	r4,r4,-8
  8019d0:	39f45104 	addi	r7,r7,-11964
  8019d4:	20c04426 	beq	r4,r3,801ae8 <_free_r+0x258>
  8019d8:	01ffff04 	movi	r7,-4
  8019dc:	19400117 	ldw	r5,4(r3)
  8019e0:	29ca703a 	and	r5,r5,r7
  8019e4:	1140022e 	bgeu	r2,r5,8019f0 <_free_r+0x160>
  8019e8:	18c00217 	ldw	r3,8(r3)
  8019ec:	20fffb1e 	bne	r4,r3,8019dc <__alt_data_end+0xff8019dc>
  8019f0:	19000317 	ldw	r4,12(r3)
  8019f4:	31000315 	stw	r4,12(r6)
  8019f8:	30c00215 	stw	r3,8(r6)
  8019fc:	21800215 	stw	r6,8(r4)
  801a00:	19800315 	stw	r6,12(r3)
  801a04:	003fde06 	br	801980 <__alt_data_end+0xff801980>
  801a08:	29c00217 	ldw	r7,8(r5)
  801a0c:	10c5883a 	add	r2,r2,r3
  801a10:	00c020b4 	movhi	r3,130
  801a14:	18f45304 	addi	r3,r3,-11956
  801a18:	38c03b26 	beq	r7,r3,801b08 <_free_r+0x278>
  801a1c:	2a000317 	ldw	r8,12(r5)
  801a20:	11400054 	ori	r5,r2,1
  801a24:	3087883a 	add	r3,r6,r2
  801a28:	3a000315 	stw	r8,12(r7)
  801a2c:	41c00215 	stw	r7,8(r8)
  801a30:	31400115 	stw	r5,4(r6)
  801a34:	18800015 	stw	r2,0(r3)
  801a38:	003fbd06 	br	801930 <__alt_data_end+0xff801930>
  801a3c:	39c0004c 	andi	r7,r7,1
  801a40:	10c5883a 	add	r2,r2,r3
  801a44:	3800071e 	bne	r7,zero,801a64 <_free_r+0x1d4>
  801a48:	81fffe17 	ldw	r7,-8(r16)
  801a4c:	31cdc83a 	sub	r6,r6,r7
  801a50:	30c00317 	ldw	r3,12(r6)
  801a54:	31400217 	ldw	r5,8(r6)
  801a58:	11c5883a 	add	r2,r2,r7
  801a5c:	28c00315 	stw	r3,12(r5)
  801a60:	19400215 	stw	r5,8(r3)
  801a64:	10c00054 	ori	r3,r2,1
  801a68:	30c00115 	stw	r3,4(r6)
  801a6c:	00c020b4 	movhi	r3,130
  801a70:	18fa8704 	addi	r3,r3,-5604
  801a74:	18c00017 	ldw	r3,0(r3)
  801a78:	21800215 	stw	r6,8(r4)
  801a7c:	10ffc036 	bltu	r2,r3,801980 <__alt_data_end+0xff801980>
  801a80:	008020b4 	movhi	r2,130
  801a84:	1081f304 	addi	r2,r2,1996
  801a88:	11400017 	ldw	r5,0(r2)
  801a8c:	8809883a 	mov	r4,r17
  801a90:	080176c0 	call	80176c <_malloc_trim_r>
  801a94:	003fba06 	br	801980 <__alt_data_end+0xff801980>
  801a98:	28c9883a 	add	r4,r5,r3
  801a9c:	21000117 	ldw	r4,4(r4)
  801aa0:	2100004c 	andi	r4,r4,1
  801aa4:	2000391e 	bne	r4,zero,801b8c <_free_r+0x2fc>
  801aa8:	29c00217 	ldw	r7,8(r5)
  801aac:	29000317 	ldw	r4,12(r5)
  801ab0:	1885883a 	add	r2,r3,r2
  801ab4:	10c00054 	ori	r3,r2,1
  801ab8:	39000315 	stw	r4,12(r7)
  801abc:	21c00215 	stw	r7,8(r4)
  801ac0:	30c00115 	stw	r3,4(r6)
  801ac4:	308d883a 	add	r6,r6,r2
  801ac8:	30800015 	stw	r2,0(r6)
  801acc:	003fac06 	br	801980 <__alt_data_end+0xff801980>
  801ad0:	00c00504 	movi	r3,20
  801ad4:	19401536 	bltu	r3,r5,801b2c <_free_r+0x29c>
  801ad8:	28c01704 	addi	r3,r5,92
  801adc:	18c7883a 	add	r3,r3,r3
  801ae0:	294016c4 	addi	r5,r5,91
  801ae4:	003fb406 	br	8019b8 <__alt_data_end+0xff8019b8>
  801ae8:	280bd0ba 	srai	r5,r5,2
  801aec:	00c00044 	movi	r3,1
  801af0:	38800117 	ldw	r2,4(r7)
  801af4:	194a983a 	sll	r5,r3,r5
  801af8:	2007883a 	mov	r3,r4
  801afc:	2884b03a 	or	r2,r5,r2
  801b00:	38800115 	stw	r2,4(r7)
  801b04:	003fbb06 	br	8019f4 <__alt_data_end+0xff8019f4>
  801b08:	21800515 	stw	r6,20(r4)
  801b0c:	21800415 	stw	r6,16(r4)
  801b10:	10c00054 	ori	r3,r2,1
  801b14:	31c00315 	stw	r7,12(r6)
  801b18:	31c00215 	stw	r7,8(r6)
  801b1c:	30c00115 	stw	r3,4(r6)
  801b20:	308d883a 	add	r6,r6,r2
  801b24:	30800015 	stw	r2,0(r6)
  801b28:	003f9506 	br	801980 <__alt_data_end+0xff801980>
  801b2c:	00c01504 	movi	r3,84
  801b30:	19400536 	bltu	r3,r5,801b48 <_free_r+0x2b8>
  801b34:	100ad33a 	srli	r5,r2,12
  801b38:	28c01bc4 	addi	r3,r5,111
  801b3c:	18c7883a 	add	r3,r3,r3
  801b40:	29401b84 	addi	r5,r5,110
  801b44:	003f9c06 	br	8019b8 <__alt_data_end+0xff8019b8>
  801b48:	00c05504 	movi	r3,340
  801b4c:	19400536 	bltu	r3,r5,801b64 <_free_r+0x2d4>
  801b50:	100ad3fa 	srli	r5,r2,15
  801b54:	28c01e04 	addi	r3,r5,120
  801b58:	18c7883a 	add	r3,r3,r3
  801b5c:	29401dc4 	addi	r5,r5,119
  801b60:	003f9506 	br	8019b8 <__alt_data_end+0xff8019b8>
  801b64:	00c15504 	movi	r3,1364
  801b68:	19400536 	bltu	r3,r5,801b80 <_free_r+0x2f0>
  801b6c:	100ad4ba 	srli	r5,r2,18
  801b70:	28c01f44 	addi	r3,r5,125
  801b74:	18c7883a 	add	r3,r3,r3
  801b78:	29401f04 	addi	r5,r5,124
  801b7c:	003f8e06 	br	8019b8 <__alt_data_end+0xff8019b8>
  801b80:	00c03f84 	movi	r3,254
  801b84:	01401f84 	movi	r5,126
  801b88:	003f8b06 	br	8019b8 <__alt_data_end+0xff8019b8>
  801b8c:	10c00054 	ori	r3,r2,1
  801b90:	30c00115 	stw	r3,4(r6)
  801b94:	308d883a 	add	r6,r6,r2
  801b98:	30800015 	stw	r2,0(r6)
  801b9c:	003f7806 	br	801980 <__alt_data_end+0xff801980>

00801ba0 <_fseek_r>:
  801ba0:	0801bc01 	jmpi	801bc0 <_fseeko_r>

00801ba4 <fseek>:
  801ba4:	008020b4 	movhi	r2,130
  801ba8:	10ba8504 	addi	r2,r2,-5612
  801bac:	300f883a 	mov	r7,r6
  801bb0:	280d883a 	mov	r6,r5
  801bb4:	200b883a 	mov	r5,r4
  801bb8:	11000017 	ldw	r4,0(r2)
  801bbc:	0801bc01 	jmpi	801bc0 <_fseeko_r>

00801bc0 <_fseeko_r>:
  801bc0:	deffe804 	addi	sp,sp,-96
  801bc4:	dd401415 	stw	r21,80(sp)
  801bc8:	dc801115 	stw	r18,68(sp)
  801bcc:	dc401015 	stw	r17,64(sp)
  801bd0:	dc000f15 	stw	r16,60(sp)
  801bd4:	dfc01715 	stw	ra,92(sp)
  801bd8:	ddc01615 	stw	r23,88(sp)
  801bdc:	dd801515 	stw	r22,84(sp)
  801be0:	dd001315 	stw	r20,76(sp)
  801be4:	dcc01215 	stw	r19,72(sp)
  801be8:	2023883a 	mov	r17,r4
  801bec:	2821883a 	mov	r16,r5
  801bf0:	302b883a 	mov	r21,r6
  801bf4:	3825883a 	mov	r18,r7
  801bf8:	20000226 	beq	r4,zero,801c04 <_fseeko_r+0x44>
  801bfc:	20800e17 	ldw	r2,56(r4)
  801c00:	10005a26 	beq	r2,zero,801d6c <_fseeko_r+0x1ac>
  801c04:	8080030b 	ldhu	r2,12(r16)
  801c08:	00c04204 	movi	r3,264
  801c0c:	1080420c 	andi	r2,r2,264
  801c10:	10c05b26 	beq	r2,r3,801d80 <_fseeko_r+0x1c0>
  801c14:	85000a17 	ldw	r20,40(r16)
  801c18:	a000f626 	beq	r20,zero,801ff4 <_fseeko_r+0x434>
  801c1c:	00800044 	movi	r2,1
  801c20:	90803e26 	beq	r18,r2,801d1c <_fseeko_r+0x15c>
  801c24:	00800084 	movi	r2,2
  801c28:	90801026 	beq	r18,r2,801c6c <_fseeko_r+0xac>
  801c2c:	90000f26 	beq	r18,zero,801c6c <_fseeko_r+0xac>
  801c30:	00800584 	movi	r2,22
  801c34:	88800015 	stw	r2,0(r17)
  801c38:	04ffffc4 	movi	r19,-1
  801c3c:	9805883a 	mov	r2,r19
  801c40:	dfc01717 	ldw	ra,92(sp)
  801c44:	ddc01617 	ldw	r23,88(sp)
  801c48:	dd801517 	ldw	r22,84(sp)
  801c4c:	dd401417 	ldw	r21,80(sp)
  801c50:	dd001317 	ldw	r20,76(sp)
  801c54:	dcc01217 	ldw	r19,72(sp)
  801c58:	dc801117 	ldw	r18,68(sp)
  801c5c:	dc401017 	ldw	r17,64(sp)
  801c60:	dc000f17 	ldw	r16,60(sp)
  801c64:	dec01804 	addi	sp,sp,96
  801c68:	f800283a 	ret
  801c6c:	80800417 	ldw	r2,16(r16)
  801c70:	002f883a 	mov	r23,zero
  801c74:	0027883a 	mov	r19,zero
  801c78:	1000cb26 	beq	r2,zero,801fa8 <_fseeko_r+0x3e8>
  801c7c:	8080030b 	ldhu	r2,12(r16)
  801c80:	10c2068c 	andi	r3,r2,2074
  801c84:	1800071e 	bne	r3,zero,801ca4 <_fseeko_r+0xe4>
  801c88:	10c1000c 	andi	r3,r2,1024
  801c8c:	1800451e 	bne	r3,zero,801da4 <_fseeko_r+0x1e4>
  801c90:	00c02034 	movhi	r3,128
  801c94:	18cd5104 	addi	r3,r3,13636
  801c98:	a0c0b726 	beq	r20,r3,801f78 <_fseeko_r+0x3b8>
  801c9c:	10820014 	ori	r2,r2,2048
  801ca0:	8080030d 	sth	r2,12(r16)
  801ca4:	800b883a 	mov	r5,r16
  801ca8:	8809883a 	mov	r4,r17
  801cac:	08011e80 	call	8011e8 <_fflush_r>
  801cb0:	1027883a 	mov	r19,r2
  801cb4:	103fe01e 	bne	r2,zero,801c38 <__alt_data_end+0xff801c38>
  801cb8:	81400717 	ldw	r5,28(r16)
  801cbc:	900f883a 	mov	r7,r18
  801cc0:	a80d883a 	mov	r6,r21
  801cc4:	8809883a 	mov	r4,r17
  801cc8:	a03ee83a 	callr	r20
  801ccc:	00ffffc4 	movi	r3,-1
  801cd0:	10ffd926 	beq	r2,r3,801c38 <__alt_data_end+0xff801c38>
  801cd4:	81400c17 	ldw	r5,48(r16)
  801cd8:	28000526 	beq	r5,zero,801cf0 <_fseeko_r+0x130>
  801cdc:	80801004 	addi	r2,r16,64
  801ce0:	28800226 	beq	r5,r2,801cec <_fseeko_r+0x12c>
  801ce4:	8809883a 	mov	r4,r17
  801ce8:	08018900 	call	801890 <_free_r>
  801cec:	80000c15 	stw	zero,48(r16)
  801cf0:	8080030b 	ldhu	r2,12(r16)
  801cf4:	80c00417 	ldw	r3,16(r16)
  801cf8:	80000115 	stw	zero,4(r16)
  801cfc:	10bdf7cc 	andi	r2,r2,63455
  801d00:	80c00015 	stw	r3,0(r16)
  801d04:	8080030d 	sth	r2,12(r16)
  801d08:	01800204 	movi	r6,8
  801d0c:	000b883a 	mov	r5,zero
  801d10:	81001704 	addi	r4,r16,92
  801d14:	0802dc40 	call	802dc4 <memset>
  801d18:	003fc806 	br	801c3c <__alt_data_end+0xff801c3c>
  801d1c:	800b883a 	mov	r5,r16
  801d20:	8809883a 	mov	r4,r17
  801d24:	08011e80 	call	8011e8 <_fflush_r>
  801d28:	8080030b 	ldhu	r2,12(r16)
  801d2c:	10c4000c 	andi	r3,r2,4096
  801d30:	18008726 	beq	r3,zero,801f50 <_fseeko_r+0x390>
  801d34:	84c01417 	ldw	r19,80(r16)
  801d38:	10c0010c 	andi	r3,r2,4
  801d3c:	1800431e 	bne	r3,zero,801e4c <_fseeko_r+0x28c>
  801d40:	1080020c 	andi	r2,r2,8
  801d44:	10008026 	beq	r2,zero,801f48 <_fseeko_r+0x388>
  801d48:	80c00017 	ldw	r3,0(r16)
  801d4c:	80800417 	ldw	r2,16(r16)
  801d50:	18000226 	beq	r3,zero,801d5c <_fseeko_r+0x19c>
  801d54:	1887c83a 	sub	r3,r3,r2
  801d58:	98e7883a 	add	r19,r19,r3
  801d5c:	aceb883a 	add	r21,r21,r19
  801d60:	05c00044 	movi	r23,1
  801d64:	0025883a 	mov	r18,zero
  801d68:	003fc306 	br	801c78 <__alt_data_end+0xff801c78>
  801d6c:	08015c40 	call	8015c4 <__sinit>
  801d70:	8080030b 	ldhu	r2,12(r16)
  801d74:	00c04204 	movi	r3,264
  801d78:	1080420c 	andi	r2,r2,264
  801d7c:	10ffa51e 	bne	r2,r3,801c14 <__alt_data_end+0xff801c14>
  801d80:	800b883a 	mov	r5,r16
  801d84:	8809883a 	mov	r4,r17
  801d88:	08011e80 	call	8011e8 <_fflush_r>
  801d8c:	003fa106 	br	801c14 <__alt_data_end+0xff801c14>
  801d90:	8080030b 	ldhu	r2,12(r16)
  801d94:	00c10004 	movi	r3,1024
  801d98:	80c01315 	stw	r3,76(r16)
  801d9c:	10c4b03a 	or	r2,r2,r3
  801da0:	8080030d 	sth	r2,12(r16)
  801da4:	9000311e 	bne	r18,zero,801e6c <_fseeko_r+0x2ac>
  801da8:	a82d883a 	mov	r22,r21
  801dac:	b800371e 	bne	r23,zero,801e8c <_fseeko_r+0x2cc>
  801db0:	8080030b 	ldhu	r2,12(r16)
  801db4:	1084000c 	andi	r2,r2,4096
  801db8:	10007f26 	beq	r2,zero,801fb8 <_fseeko_r+0x3f8>
  801dbc:	80801417 	ldw	r2,80(r16)
  801dc0:	81800117 	ldw	r6,4(r16)
  801dc4:	81400c17 	ldw	r5,48(r16)
  801dc8:	11a7c83a 	sub	r19,r2,r6
  801dcc:	28008226 	beq	r5,zero,801fd8 <_fseeko_r+0x418>
  801dd0:	81c00f17 	ldw	r7,60(r16)
  801dd4:	99e7c83a 	sub	r19,r19,r7
  801dd8:	81000e17 	ldw	r4,56(r16)
  801ddc:	80800417 	ldw	r2,16(r16)
  801de0:	99a7883a 	add	r19,r19,r6
  801de4:	2087c83a 	sub	r3,r4,r2
  801de8:	98e7c83a 	sub	r19,r19,r3
  801dec:	38c7883a 	add	r3,r7,r3
  801df0:	b4c02b16 	blt	r22,r19,801ea0 <_fseeko_r+0x2e0>
  801df4:	98c9883a 	add	r4,r19,r3
  801df8:	b100292e 	bgeu	r22,r4,801ea0 <_fseeko_r+0x2e0>
  801dfc:	b4e7c83a 	sub	r19,r22,r19
  801e00:	14c5883a 	add	r2,r2,r19
  801e04:	1ce7c83a 	sub	r19,r3,r19
  801e08:	80800015 	stw	r2,0(r16)
  801e0c:	84c00115 	stw	r19,4(r16)
  801e10:	28000526 	beq	r5,zero,801e28 <_fseeko_r+0x268>
  801e14:	80801004 	addi	r2,r16,64
  801e18:	28800226 	beq	r5,r2,801e24 <_fseeko_r+0x264>
  801e1c:	8809883a 	mov	r4,r17
  801e20:	08018900 	call	801890 <_free_r>
  801e24:	80000c15 	stw	zero,48(r16)
  801e28:	8080030b 	ldhu	r2,12(r16)
  801e2c:	01800204 	movi	r6,8
  801e30:	000b883a 	mov	r5,zero
  801e34:	10bff7cc 	andi	r2,r2,65503
  801e38:	8080030d 	sth	r2,12(r16)
  801e3c:	81001704 	addi	r4,r16,92
  801e40:	0802dc40 	call	802dc4 <memset>
  801e44:	0027883a 	mov	r19,zero
  801e48:	003f7c06 	br	801c3c <__alt_data_end+0xff801c3c>
  801e4c:	80c00117 	ldw	r3,4(r16)
  801e50:	80800c17 	ldw	r2,48(r16)
  801e54:	98e7c83a 	sub	r19,r19,r3
  801e58:	10003b26 	beq	r2,zero,801f48 <_fseeko_r+0x388>
  801e5c:	80c00f17 	ldw	r3,60(r16)
  801e60:	80800417 	ldw	r2,16(r16)
  801e64:	98e7c83a 	sub	r19,r19,r3
  801e68:	003fbc06 	br	801d5c <__alt_data_end+0xff801d5c>
  801e6c:	8140038f 	ldh	r5,14(r16)
  801e70:	d80d883a 	mov	r6,sp
  801e74:	8809883a 	mov	r4,r17
  801e78:	08020200 	call	802020 <_fstat_r>
  801e7c:	103f891e 	bne	r2,zero,801ca4 <__alt_data_end+0xff801ca4>
  801e80:	dd800417 	ldw	r22,16(sp)
  801e84:	adad883a 	add	r22,r21,r22
  801e88:	b83fc926 	beq	r23,zero,801db0 <__alt_data_end+0xff801db0>
  801e8c:	81400c17 	ldw	r5,48(r16)
  801e90:	81800117 	ldw	r6,4(r16)
  801e94:	28005026 	beq	r5,zero,801fd8 <_fseeko_r+0x418>
  801e98:	81c00f17 	ldw	r7,60(r16)
  801e9c:	003fce06 	br	801dd8 <__alt_data_end+0xff801dd8>
  801ea0:	84c01317 	ldw	r19,76(r16)
  801ea4:	81400717 	ldw	r5,28(r16)
  801ea8:	000f883a 	mov	r7,zero
  801eac:	04e7c83a 	sub	r19,zero,r19
  801eb0:	9da6703a 	and	r19,r19,r22
  801eb4:	980d883a 	mov	r6,r19
  801eb8:	8809883a 	mov	r4,r17
  801ebc:	a03ee83a 	callr	r20
  801ec0:	00ffffc4 	movi	r3,-1
  801ec4:	10ff7726 	beq	r2,r3,801ca4 <__alt_data_end+0xff801ca4>
  801ec8:	80800417 	ldw	r2,16(r16)
  801ecc:	81400c17 	ldw	r5,48(r16)
  801ed0:	80000115 	stw	zero,4(r16)
  801ed4:	80800015 	stw	r2,0(r16)
  801ed8:	28000526 	beq	r5,zero,801ef0 <_fseeko_r+0x330>
  801edc:	80801004 	addi	r2,r16,64
  801ee0:	28800226 	beq	r5,r2,801eec <_fseeko_r+0x32c>
  801ee4:	8809883a 	mov	r4,r17
  801ee8:	08018900 	call	801890 <_free_r>
  801eec:	80000c15 	stw	zero,48(r16)
  801ef0:	8080030b 	ldhu	r2,12(r16)
  801ef4:	b4e7c83a 	sub	r19,r22,r19
  801ef8:	10bff7cc 	andi	r2,r2,65503
  801efc:	8080030d 	sth	r2,12(r16)
  801f00:	98000b26 	beq	r19,zero,801f30 <_fseeko_r+0x370>
  801f04:	800b883a 	mov	r5,r16
  801f08:	8809883a 	mov	r4,r17
  801f0c:	08030c80 	call	8030c8 <__srefill_r>
  801f10:	103f641e 	bne	r2,zero,801ca4 <__alt_data_end+0xff801ca4>
  801f14:	80800117 	ldw	r2,4(r16)
  801f18:	14ff6236 	bltu	r2,r19,801ca4 <__alt_data_end+0xff801ca4>
  801f1c:	80c00017 	ldw	r3,0(r16)
  801f20:	14c5c83a 	sub	r2,r2,r19
  801f24:	80800115 	stw	r2,4(r16)
  801f28:	1ce7883a 	add	r19,r3,r19
  801f2c:	84c00015 	stw	r19,0(r16)
  801f30:	01800204 	movi	r6,8
  801f34:	000b883a 	mov	r5,zero
  801f38:	81001704 	addi	r4,r16,92
  801f3c:	0802dc40 	call	802dc4 <memset>
  801f40:	0027883a 	mov	r19,zero
  801f44:	003f3d06 	br	801c3c <__alt_data_end+0xff801c3c>
  801f48:	80800417 	ldw	r2,16(r16)
  801f4c:	003f8306 	br	801d5c <__alt_data_end+0xff801d5c>
  801f50:	81400717 	ldw	r5,28(r16)
  801f54:	900f883a 	mov	r7,r18
  801f58:	000d883a 	mov	r6,zero
  801f5c:	8809883a 	mov	r4,r17
  801f60:	a03ee83a 	callr	r20
  801f64:	1027883a 	mov	r19,r2
  801f68:	00bfffc4 	movi	r2,-1
  801f6c:	98bf3226 	beq	r19,r2,801c38 <__alt_data_end+0xff801c38>
  801f70:	8080030b 	ldhu	r2,12(r16)
  801f74:	003f7006 	br	801d38 <__alt_data_end+0xff801d38>
  801f78:	8140038f 	ldh	r5,14(r16)
  801f7c:	283f4716 	blt	r5,zero,801c9c <__alt_data_end+0xff801c9c>
  801f80:	d80d883a 	mov	r6,sp
  801f84:	8809883a 	mov	r4,r17
  801f88:	08020200 	call	802020 <_fstat_r>
  801f8c:	1000041e 	bne	r2,zero,801fa0 <_fseeko_r+0x3e0>
  801f90:	d8800117 	ldw	r2,4(sp)
  801f94:	00e00014 	movui	r3,32768
  801f98:	10bc000c 	andi	r2,r2,61440
  801f9c:	10ff7c26 	beq	r2,r3,801d90 <__alt_data_end+0xff801d90>
  801fa0:	8080030b 	ldhu	r2,12(r16)
  801fa4:	003f3d06 	br	801c9c <__alt_data_end+0xff801c9c>
  801fa8:	800b883a 	mov	r5,r16
  801fac:	8809883a 	mov	r4,r17
  801fb0:	08023fc0 	call	8023fc <__smakebuf_r>
  801fb4:	003f3106 	br	801c7c <__alt_data_end+0xff801c7c>
  801fb8:	81400717 	ldw	r5,28(r16)
  801fbc:	01c00044 	movi	r7,1
  801fc0:	000d883a 	mov	r6,zero
  801fc4:	8809883a 	mov	r4,r17
  801fc8:	a03ee83a 	callr	r20
  801fcc:	00ffffc4 	movi	r3,-1
  801fd0:	10ff7b1e 	bne	r2,r3,801dc0 <__alt_data_end+0xff801dc0>
  801fd4:	003f3306 	br	801ca4 <__alt_data_end+0xff801ca4>
  801fd8:	80c00017 	ldw	r3,0(r16)
  801fdc:	80800417 	ldw	r2,16(r16)
  801fe0:	000b883a 	mov	r5,zero
  801fe4:	1887c83a 	sub	r3,r3,r2
  801fe8:	98e7c83a 	sub	r19,r19,r3
  801fec:	30c7883a 	add	r3,r6,r3
  801ff0:	003f7f06 	br	801df0 <__alt_data_end+0xff801df0>
  801ff4:	00800744 	movi	r2,29
  801ff8:	88800015 	stw	r2,0(r17)
  801ffc:	04ffffc4 	movi	r19,-1
  802000:	003f0e06 	br	801c3c <__alt_data_end+0xff801c3c>

00802004 <fseeko>:
  802004:	008020b4 	movhi	r2,130
  802008:	10ba8504 	addi	r2,r2,-5612
  80200c:	300f883a 	mov	r7,r6
  802010:	280d883a 	mov	r6,r5
  802014:	200b883a 	mov	r5,r4
  802018:	11000017 	ldw	r4,0(r2)
  80201c:	0801bc01 	jmpi	801bc0 <_fseeko_r>

00802020 <_fstat_r>:
  802020:	defffd04 	addi	sp,sp,-12
  802024:	2805883a 	mov	r2,r5
  802028:	dc000015 	stw	r16,0(sp)
  80202c:	040020b4 	movhi	r16,130
  802030:	dc400115 	stw	r17,4(sp)
  802034:	8401f004 	addi	r16,r16,1984
  802038:	2023883a 	mov	r17,r4
  80203c:	300b883a 	mov	r5,r6
  802040:	1009883a 	mov	r4,r2
  802044:	dfc00215 	stw	ra,8(sp)
  802048:	80000015 	stw	zero,0(r16)
  80204c:	08181c40 	call	8181c4 <fstat>
  802050:	00ffffc4 	movi	r3,-1
  802054:	10c00526 	beq	r2,r3,80206c <_fstat_r+0x4c>
  802058:	dfc00217 	ldw	ra,8(sp)
  80205c:	dc400117 	ldw	r17,4(sp)
  802060:	dc000017 	ldw	r16,0(sp)
  802064:	dec00304 	addi	sp,sp,12
  802068:	f800283a 	ret
  80206c:	80c00017 	ldw	r3,0(r16)
  802070:	183ff926 	beq	r3,zero,802058 <__alt_data_end+0xff802058>
  802074:	88c00015 	stw	r3,0(r17)
  802078:	003ff706 	br	802058 <__alt_data_end+0xff802058>

0080207c <_fwalk>:
  80207c:	defff704 	addi	sp,sp,-36
  802080:	dd000415 	stw	r20,16(sp)
  802084:	dfc00815 	stw	ra,32(sp)
  802088:	ddc00715 	stw	r23,28(sp)
  80208c:	dd800615 	stw	r22,24(sp)
  802090:	dd400515 	stw	r21,20(sp)
  802094:	dcc00315 	stw	r19,12(sp)
  802098:	dc800215 	stw	r18,8(sp)
  80209c:	dc400115 	stw	r17,4(sp)
  8020a0:	dc000015 	stw	r16,0(sp)
  8020a4:	2500b804 	addi	r20,r4,736
  8020a8:	a0002326 	beq	r20,zero,802138 <_fwalk+0xbc>
  8020ac:	282b883a 	mov	r21,r5
  8020b0:	002f883a 	mov	r23,zero
  8020b4:	05800044 	movi	r22,1
  8020b8:	04ffffc4 	movi	r19,-1
  8020bc:	a4400117 	ldw	r17,4(r20)
  8020c0:	a4800217 	ldw	r18,8(r20)
  8020c4:	8c7fffc4 	addi	r17,r17,-1
  8020c8:	88000d16 	blt	r17,zero,802100 <_fwalk+0x84>
  8020cc:	94000304 	addi	r16,r18,12
  8020d0:	94800384 	addi	r18,r18,14
  8020d4:	8080000b 	ldhu	r2,0(r16)
  8020d8:	8c7fffc4 	addi	r17,r17,-1
  8020dc:	813ffd04 	addi	r4,r16,-12
  8020e0:	b080042e 	bgeu	r22,r2,8020f4 <_fwalk+0x78>
  8020e4:	9080000f 	ldh	r2,0(r18)
  8020e8:	14c00226 	beq	r2,r19,8020f4 <_fwalk+0x78>
  8020ec:	a83ee83a 	callr	r21
  8020f0:	b8aeb03a 	or	r23,r23,r2
  8020f4:	84001a04 	addi	r16,r16,104
  8020f8:	94801a04 	addi	r18,r18,104
  8020fc:	8cfff51e 	bne	r17,r19,8020d4 <__alt_data_end+0xff8020d4>
  802100:	a5000017 	ldw	r20,0(r20)
  802104:	a03fed1e 	bne	r20,zero,8020bc <__alt_data_end+0xff8020bc>
  802108:	b805883a 	mov	r2,r23
  80210c:	dfc00817 	ldw	ra,32(sp)
  802110:	ddc00717 	ldw	r23,28(sp)
  802114:	dd800617 	ldw	r22,24(sp)
  802118:	dd400517 	ldw	r21,20(sp)
  80211c:	dd000417 	ldw	r20,16(sp)
  802120:	dcc00317 	ldw	r19,12(sp)
  802124:	dc800217 	ldw	r18,8(sp)
  802128:	dc400117 	ldw	r17,4(sp)
  80212c:	dc000017 	ldw	r16,0(sp)
  802130:	dec00904 	addi	sp,sp,36
  802134:	f800283a 	ret
  802138:	002f883a 	mov	r23,zero
  80213c:	003ff206 	br	802108 <__alt_data_end+0xff802108>

00802140 <_fwalk_reent>:
  802140:	defff704 	addi	sp,sp,-36
  802144:	dd000415 	stw	r20,16(sp)
  802148:	dfc00815 	stw	ra,32(sp)
  80214c:	ddc00715 	stw	r23,28(sp)
  802150:	dd800615 	stw	r22,24(sp)
  802154:	dd400515 	stw	r21,20(sp)
  802158:	dcc00315 	stw	r19,12(sp)
  80215c:	dc800215 	stw	r18,8(sp)
  802160:	dc400115 	stw	r17,4(sp)
  802164:	dc000015 	stw	r16,0(sp)
  802168:	2500b804 	addi	r20,r4,736
  80216c:	a0002326 	beq	r20,zero,8021fc <_fwalk_reent+0xbc>
  802170:	282b883a 	mov	r21,r5
  802174:	2027883a 	mov	r19,r4
  802178:	002f883a 	mov	r23,zero
  80217c:	05800044 	movi	r22,1
  802180:	04bfffc4 	movi	r18,-1
  802184:	a4400117 	ldw	r17,4(r20)
  802188:	a4000217 	ldw	r16,8(r20)
  80218c:	8c7fffc4 	addi	r17,r17,-1
  802190:	88000c16 	blt	r17,zero,8021c4 <_fwalk_reent+0x84>
  802194:	84000304 	addi	r16,r16,12
  802198:	8080000b 	ldhu	r2,0(r16)
  80219c:	8c7fffc4 	addi	r17,r17,-1
  8021a0:	817ffd04 	addi	r5,r16,-12
  8021a4:	b080052e 	bgeu	r22,r2,8021bc <_fwalk_reent+0x7c>
  8021a8:	8080008f 	ldh	r2,2(r16)
  8021ac:	9809883a 	mov	r4,r19
  8021b0:	14800226 	beq	r2,r18,8021bc <_fwalk_reent+0x7c>
  8021b4:	a83ee83a 	callr	r21
  8021b8:	b8aeb03a 	or	r23,r23,r2
  8021bc:	84001a04 	addi	r16,r16,104
  8021c0:	8cbff51e 	bne	r17,r18,802198 <__alt_data_end+0xff802198>
  8021c4:	a5000017 	ldw	r20,0(r20)
  8021c8:	a03fee1e 	bne	r20,zero,802184 <__alt_data_end+0xff802184>
  8021cc:	b805883a 	mov	r2,r23
  8021d0:	dfc00817 	ldw	ra,32(sp)
  8021d4:	ddc00717 	ldw	r23,28(sp)
  8021d8:	dd800617 	ldw	r22,24(sp)
  8021dc:	dd400517 	ldw	r21,20(sp)
  8021e0:	dd000417 	ldw	r20,16(sp)
  8021e4:	dcc00317 	ldw	r19,12(sp)
  8021e8:	dc800217 	ldw	r18,8(sp)
  8021ec:	dc400117 	ldw	r17,4(sp)
  8021f0:	dc000017 	ldw	r16,0(sp)
  8021f4:	dec00904 	addi	sp,sp,36
  8021f8:	f800283a 	ret
  8021fc:	002f883a 	mov	r23,zero
  802200:	003ff206 	br	8021cc <__alt_data_end+0xff8021cc>

00802204 <_fwrite_r>:
  802204:	defff504 	addi	sp,sp,-44
  802208:	dc800815 	stw	r18,32(sp)
  80220c:	39a5383a 	mul	r18,r7,r6
  802210:	d8800304 	addi	r2,sp,12
  802214:	d8800015 	stw	r2,0(sp)
  802218:	00800044 	movi	r2,1
  80221c:	dcc00915 	stw	r19,36(sp)
  802220:	dc400715 	stw	r17,28(sp)
  802224:	dc000615 	stw	r16,24(sp)
  802228:	d9400315 	stw	r5,12(sp)
  80222c:	dfc00a15 	stw	ra,40(sp)
  802230:	dc800415 	stw	r18,16(sp)
  802234:	dc800215 	stw	r18,8(sp)
  802238:	d8800115 	stw	r2,4(sp)
  80223c:	3027883a 	mov	r19,r6
  802240:	3821883a 	mov	r16,r7
  802244:	2023883a 	mov	r17,r4
  802248:	d9400b17 	ldw	r5,44(sp)
  80224c:	20000226 	beq	r4,zero,802258 <_fwrite_r+0x54>
  802250:	20800e17 	ldw	r2,56(r4)
  802254:	10001a26 	beq	r2,zero,8022c0 <_fwrite_r+0xbc>
  802258:	2880030b 	ldhu	r2,12(r5)
  80225c:	10c8000c 	andi	r3,r2,8192
  802260:	1800061e 	bne	r3,zero,80227c <_fwrite_r+0x78>
  802264:	29001917 	ldw	r4,100(r5)
  802268:	00f7ffc4 	movi	r3,-8193
  80226c:	10880014 	ori	r2,r2,8192
  802270:	20c6703a 	and	r3,r4,r3
  802274:	2880030d 	sth	r2,12(r5)
  802278:	28c01915 	stw	r3,100(r5)
  80227c:	d80d883a 	mov	r6,sp
  802280:	8809883a 	mov	r4,r17
  802284:	0808c080 	call	808c08 <__sfvwrite_r>
  802288:	10000b26 	beq	r2,zero,8022b8 <_fwrite_r+0xb4>
  80228c:	d9000217 	ldw	r4,8(sp)
  802290:	980b883a 	mov	r5,r19
  802294:	9109c83a 	sub	r4,r18,r4
  802298:	08155880 	call	815588 <__udivsi3>
  80229c:	dfc00a17 	ldw	ra,40(sp)
  8022a0:	dcc00917 	ldw	r19,36(sp)
  8022a4:	dc800817 	ldw	r18,32(sp)
  8022a8:	dc400717 	ldw	r17,28(sp)
  8022ac:	dc000617 	ldw	r16,24(sp)
  8022b0:	dec00b04 	addi	sp,sp,44
  8022b4:	f800283a 	ret
  8022b8:	8005883a 	mov	r2,r16
  8022bc:	003ff706 	br	80229c <__alt_data_end+0xff80229c>
  8022c0:	d9400515 	stw	r5,20(sp)
  8022c4:	08015c40 	call	8015c4 <__sinit>
  8022c8:	d9400517 	ldw	r5,20(sp)
  8022cc:	003fe206 	br	802258 <__alt_data_end+0xff802258>

008022d0 <fwrite>:
  8022d0:	defffe04 	addi	sp,sp,-8
  8022d4:	008020b4 	movhi	r2,130
  8022d8:	d9c00015 	stw	r7,0(sp)
  8022dc:	10ba8504 	addi	r2,r2,-5612
  8022e0:	300f883a 	mov	r7,r6
  8022e4:	280d883a 	mov	r6,r5
  8022e8:	200b883a 	mov	r5,r4
  8022ec:	11000017 	ldw	r4,0(r2)
  8022f0:	dfc00115 	stw	ra,4(sp)
  8022f4:	08022040 	call	802204 <_fwrite_r>
  8022f8:	dfc00117 	ldw	ra,4(sp)
  8022fc:	dec00204 	addi	sp,sp,8
  802300:	f800283a 	ret

00802304 <_getc_r>:
  802304:	defffd04 	addi	sp,sp,-12
  802308:	dc000115 	stw	r16,4(sp)
  80230c:	dfc00215 	stw	ra,8(sp)
  802310:	2021883a 	mov	r16,r4
  802314:	20000226 	beq	r4,zero,802320 <_getc_r+0x1c>
  802318:	20800e17 	ldw	r2,56(r4)
  80231c:	10000c26 	beq	r2,zero,802350 <_getc_r+0x4c>
  802320:	28800117 	ldw	r2,4(r5)
  802324:	10bfffc4 	addi	r2,r2,-1
  802328:	28800115 	stw	r2,4(r5)
  80232c:	10000c16 	blt	r2,zero,802360 <_getc_r+0x5c>
  802330:	28800017 	ldw	r2,0(r5)
  802334:	10c00044 	addi	r3,r2,1
  802338:	28c00015 	stw	r3,0(r5)
  80233c:	10800003 	ldbu	r2,0(r2)
  802340:	dfc00217 	ldw	ra,8(sp)
  802344:	dc000117 	ldw	r16,4(sp)
  802348:	dec00304 	addi	sp,sp,12
  80234c:	f800283a 	ret
  802350:	d9400015 	stw	r5,0(sp)
  802354:	08015c40 	call	8015c4 <__sinit>
  802358:	d9400017 	ldw	r5,0(sp)
  80235c:	003ff006 	br	802320 <__alt_data_end+0xff802320>
  802360:	8009883a 	mov	r4,r16
  802364:	dfc00217 	ldw	ra,8(sp)
  802368:	dc000117 	ldw	r16,4(sp)
  80236c:	dec00304 	addi	sp,sp,12
  802370:	080329c1 	jmpi	80329c <__srget_r>

00802374 <getc>:
  802374:	008020b4 	movhi	r2,130
  802378:	defffd04 	addi	sp,sp,-12
  80237c:	10ba8504 	addi	r2,r2,-5612
  802380:	dc400115 	stw	r17,4(sp)
  802384:	14400017 	ldw	r17,0(r2)
  802388:	dc000015 	stw	r16,0(sp)
  80238c:	dfc00215 	stw	ra,8(sp)
  802390:	2021883a 	mov	r16,r4
  802394:	88000226 	beq	r17,zero,8023a0 <getc+0x2c>
  802398:	88800e17 	ldw	r2,56(r17)
  80239c:	10000d26 	beq	r2,zero,8023d4 <getc+0x60>
  8023a0:	80800117 	ldw	r2,4(r16)
  8023a4:	10bfffc4 	addi	r2,r2,-1
  8023a8:	80800115 	stw	r2,4(r16)
  8023ac:	10000c16 	blt	r2,zero,8023e0 <getc+0x6c>
  8023b0:	80800017 	ldw	r2,0(r16)
  8023b4:	10c00044 	addi	r3,r2,1
  8023b8:	80c00015 	stw	r3,0(r16)
  8023bc:	10800003 	ldbu	r2,0(r2)
  8023c0:	dfc00217 	ldw	ra,8(sp)
  8023c4:	dc400117 	ldw	r17,4(sp)
  8023c8:	dc000017 	ldw	r16,0(sp)
  8023cc:	dec00304 	addi	sp,sp,12
  8023d0:	f800283a 	ret
  8023d4:	8809883a 	mov	r4,r17
  8023d8:	08015c40 	call	8015c4 <__sinit>
  8023dc:	003ff006 	br	8023a0 <__alt_data_end+0xff8023a0>
  8023e0:	800b883a 	mov	r5,r16
  8023e4:	8809883a 	mov	r4,r17
  8023e8:	dfc00217 	ldw	ra,8(sp)
  8023ec:	dc400117 	ldw	r17,4(sp)
  8023f0:	dc000017 	ldw	r16,0(sp)
  8023f4:	dec00304 	addi	sp,sp,12
  8023f8:	080329c1 	jmpi	80329c <__srget_r>

008023fc <__smakebuf_r>:
  8023fc:	2880030b 	ldhu	r2,12(r5)
  802400:	10c0008c 	andi	r3,r2,2
  802404:	1800411e 	bne	r3,zero,80250c <__smakebuf_r+0x110>
  802408:	deffec04 	addi	sp,sp,-80
  80240c:	dc000f15 	stw	r16,60(sp)
  802410:	2821883a 	mov	r16,r5
  802414:	2940038f 	ldh	r5,14(r5)
  802418:	dc401015 	stw	r17,64(sp)
  80241c:	dfc01315 	stw	ra,76(sp)
  802420:	dcc01215 	stw	r19,72(sp)
  802424:	dc801115 	stw	r18,68(sp)
  802428:	2023883a 	mov	r17,r4
  80242c:	28001c16 	blt	r5,zero,8024a0 <__smakebuf_r+0xa4>
  802430:	d80d883a 	mov	r6,sp
  802434:	08020200 	call	802020 <_fstat_r>
  802438:	10001816 	blt	r2,zero,80249c <__smakebuf_r+0xa0>
  80243c:	d8800117 	ldw	r2,4(sp)
  802440:	00e00014 	movui	r3,32768
  802444:	10bc000c 	andi	r2,r2,61440
  802448:	14c80020 	cmpeqi	r19,r2,8192
  80244c:	10c03726 	beq	r2,r3,80252c <__smakebuf_r+0x130>
  802450:	80c0030b 	ldhu	r3,12(r16)
  802454:	18c20014 	ori	r3,r3,2048
  802458:	80c0030d 	sth	r3,12(r16)
  80245c:	00c80004 	movi	r3,8192
  802460:	10c0521e 	bne	r2,r3,8025ac <__smakebuf_r+0x1b0>
  802464:	8140038f 	ldh	r5,14(r16)
  802468:	8809883a 	mov	r4,r17
  80246c:	08090c40 	call	8090c4 <_isatty_r>
  802470:	10004c26 	beq	r2,zero,8025a4 <__smakebuf_r+0x1a8>
  802474:	8080030b 	ldhu	r2,12(r16)
  802478:	80c010c4 	addi	r3,r16,67
  80247c:	80c00015 	stw	r3,0(r16)
  802480:	10800054 	ori	r2,r2,1
  802484:	8080030d 	sth	r2,12(r16)
  802488:	00800044 	movi	r2,1
  80248c:	80c00415 	stw	r3,16(r16)
  802490:	80800515 	stw	r2,20(r16)
  802494:	04810004 	movi	r18,1024
  802498:	00000706 	br	8024b8 <__smakebuf_r+0xbc>
  80249c:	8080030b 	ldhu	r2,12(r16)
  8024a0:	10c0200c 	andi	r3,r2,128
  8024a4:	18001f1e 	bne	r3,zero,802524 <__smakebuf_r+0x128>
  8024a8:	04810004 	movi	r18,1024
  8024ac:	10820014 	ori	r2,r2,2048
  8024b0:	8080030d 	sth	r2,12(r16)
  8024b4:	0027883a 	mov	r19,zero
  8024b8:	900b883a 	mov	r5,r18
  8024bc:	8809883a 	mov	r4,r17
  8024c0:	08025b80 	call	8025b8 <_malloc_r>
  8024c4:	10002c26 	beq	r2,zero,802578 <__smakebuf_r+0x17c>
  8024c8:	80c0030b 	ldhu	r3,12(r16)
  8024cc:	01002034 	movhi	r4,128
  8024d0:	21049f04 	addi	r4,r4,4732
  8024d4:	89000f15 	stw	r4,60(r17)
  8024d8:	18c02014 	ori	r3,r3,128
  8024dc:	80c0030d 	sth	r3,12(r16)
  8024e0:	80800015 	stw	r2,0(r16)
  8024e4:	80800415 	stw	r2,16(r16)
  8024e8:	84800515 	stw	r18,20(r16)
  8024ec:	98001a1e 	bne	r19,zero,802558 <__smakebuf_r+0x15c>
  8024f0:	dfc01317 	ldw	ra,76(sp)
  8024f4:	dcc01217 	ldw	r19,72(sp)
  8024f8:	dc801117 	ldw	r18,68(sp)
  8024fc:	dc401017 	ldw	r17,64(sp)
  802500:	dc000f17 	ldw	r16,60(sp)
  802504:	dec01404 	addi	sp,sp,80
  802508:	f800283a 	ret
  80250c:	288010c4 	addi	r2,r5,67
  802510:	28800015 	stw	r2,0(r5)
  802514:	28800415 	stw	r2,16(r5)
  802518:	00800044 	movi	r2,1
  80251c:	28800515 	stw	r2,20(r5)
  802520:	f800283a 	ret
  802524:	04801004 	movi	r18,64
  802528:	003fe006 	br	8024ac <__alt_data_end+0xff8024ac>
  80252c:	81000a17 	ldw	r4,40(r16)
  802530:	00c02034 	movhi	r3,128
  802534:	18cd5104 	addi	r3,r3,13636
  802538:	20ffc51e 	bne	r4,r3,802450 <__alt_data_end+0xff802450>
  80253c:	8080030b 	ldhu	r2,12(r16)
  802540:	04810004 	movi	r18,1024
  802544:	84801315 	stw	r18,76(r16)
  802548:	1484b03a 	or	r2,r2,r18
  80254c:	8080030d 	sth	r2,12(r16)
  802550:	0027883a 	mov	r19,zero
  802554:	003fd806 	br	8024b8 <__alt_data_end+0xff8024b8>
  802558:	8140038f 	ldh	r5,14(r16)
  80255c:	8809883a 	mov	r4,r17
  802560:	08090c40 	call	8090c4 <_isatty_r>
  802564:	103fe226 	beq	r2,zero,8024f0 <__alt_data_end+0xff8024f0>
  802568:	8080030b 	ldhu	r2,12(r16)
  80256c:	10800054 	ori	r2,r2,1
  802570:	8080030d 	sth	r2,12(r16)
  802574:	003fde06 	br	8024f0 <__alt_data_end+0xff8024f0>
  802578:	8080030b 	ldhu	r2,12(r16)
  80257c:	10c0800c 	andi	r3,r2,512
  802580:	183fdb1e 	bne	r3,zero,8024f0 <__alt_data_end+0xff8024f0>
  802584:	10800094 	ori	r2,r2,2
  802588:	80c010c4 	addi	r3,r16,67
  80258c:	8080030d 	sth	r2,12(r16)
  802590:	00800044 	movi	r2,1
  802594:	80c00015 	stw	r3,0(r16)
  802598:	80c00415 	stw	r3,16(r16)
  80259c:	80800515 	stw	r2,20(r16)
  8025a0:	003fd306 	br	8024f0 <__alt_data_end+0xff8024f0>
  8025a4:	04810004 	movi	r18,1024
  8025a8:	003fc306 	br	8024b8 <__alt_data_end+0xff8024b8>
  8025ac:	0027883a 	mov	r19,zero
  8025b0:	04810004 	movi	r18,1024
  8025b4:	003fc006 	br	8024b8 <__alt_data_end+0xff8024b8>

008025b8 <_malloc_r>:
  8025b8:	defff504 	addi	sp,sp,-44
  8025bc:	dc800315 	stw	r18,12(sp)
  8025c0:	dfc00a15 	stw	ra,40(sp)
  8025c4:	df000915 	stw	fp,36(sp)
  8025c8:	ddc00815 	stw	r23,32(sp)
  8025cc:	dd800715 	stw	r22,28(sp)
  8025d0:	dd400615 	stw	r21,24(sp)
  8025d4:	dd000515 	stw	r20,20(sp)
  8025d8:	dcc00415 	stw	r19,16(sp)
  8025dc:	dc400215 	stw	r17,8(sp)
  8025e0:	dc000115 	stw	r16,4(sp)
  8025e4:	288002c4 	addi	r2,r5,11
  8025e8:	00c00584 	movi	r3,22
  8025ec:	2025883a 	mov	r18,r4
  8025f0:	18807f2e 	bgeu	r3,r2,8027f0 <_malloc_r+0x238>
  8025f4:	047ffe04 	movi	r17,-8
  8025f8:	1462703a 	and	r17,r2,r17
  8025fc:	8800a316 	blt	r17,zero,80288c <_malloc_r+0x2d4>
  802600:	8940a236 	bltu	r17,r5,80288c <_malloc_r+0x2d4>
  802604:	081874c0 	call	81874c <__malloc_lock>
  802608:	00807dc4 	movi	r2,503
  80260c:	1441e92e 	bgeu	r2,r17,802db4 <_malloc_r+0x7fc>
  802610:	8804d27a 	srli	r2,r17,9
  802614:	1000a126 	beq	r2,zero,80289c <_malloc_r+0x2e4>
  802618:	00c00104 	movi	r3,4
  80261c:	18811e36 	bltu	r3,r2,802a98 <_malloc_r+0x4e0>
  802620:	8804d1ba 	srli	r2,r17,6
  802624:	12000e44 	addi	r8,r2,57
  802628:	11c00e04 	addi	r7,r2,56
  80262c:	4209883a 	add	r4,r8,r8
  802630:	04c020b4 	movhi	r19,130
  802634:	2109883a 	add	r4,r4,r4
  802638:	9cf45104 	addi	r19,r19,-11964
  80263c:	2109883a 	add	r4,r4,r4
  802640:	9909883a 	add	r4,r19,r4
  802644:	24000117 	ldw	r16,4(r4)
  802648:	213ffe04 	addi	r4,r4,-8
  80264c:	24009726 	beq	r4,r16,8028ac <_malloc_r+0x2f4>
  802650:	80800117 	ldw	r2,4(r16)
  802654:	01bfff04 	movi	r6,-4
  802658:	014003c4 	movi	r5,15
  80265c:	1184703a 	and	r2,r2,r6
  802660:	1447c83a 	sub	r3,r2,r17
  802664:	28c00716 	blt	r5,r3,802684 <_malloc_r+0xcc>
  802668:	1800920e 	bge	r3,zero,8028b4 <_malloc_r+0x2fc>
  80266c:	84000317 	ldw	r16,12(r16)
  802670:	24008e26 	beq	r4,r16,8028ac <_malloc_r+0x2f4>
  802674:	80800117 	ldw	r2,4(r16)
  802678:	1184703a 	and	r2,r2,r6
  80267c:	1447c83a 	sub	r3,r2,r17
  802680:	28fff90e 	bge	r5,r3,802668 <__alt_data_end+0xff802668>
  802684:	3809883a 	mov	r4,r7
  802688:	018020b4 	movhi	r6,130
  80268c:	9c000417 	ldw	r16,16(r19)
  802690:	31b45104 	addi	r6,r6,-11964
  802694:	32000204 	addi	r8,r6,8
  802698:	82013426 	beq	r16,r8,802b6c <_malloc_r+0x5b4>
  80269c:	80c00117 	ldw	r3,4(r16)
  8026a0:	00bfff04 	movi	r2,-4
  8026a4:	188e703a 	and	r7,r3,r2
  8026a8:	3c45c83a 	sub	r2,r7,r17
  8026ac:	00c003c4 	movi	r3,15
  8026b0:	18811f16 	blt	r3,r2,802b30 <_malloc_r+0x578>
  8026b4:	32000515 	stw	r8,20(r6)
  8026b8:	32000415 	stw	r8,16(r6)
  8026bc:	10007f0e 	bge	r2,zero,8028bc <_malloc_r+0x304>
  8026c0:	00807fc4 	movi	r2,511
  8026c4:	11c0fd36 	bltu	r2,r7,802abc <_malloc_r+0x504>
  8026c8:	3806d0fa 	srli	r3,r7,3
  8026cc:	01c00044 	movi	r7,1
  8026d0:	30800117 	ldw	r2,4(r6)
  8026d4:	19400044 	addi	r5,r3,1
  8026d8:	294b883a 	add	r5,r5,r5
  8026dc:	1807d0ba 	srai	r3,r3,2
  8026e0:	294b883a 	add	r5,r5,r5
  8026e4:	294b883a 	add	r5,r5,r5
  8026e8:	298b883a 	add	r5,r5,r6
  8026ec:	38c6983a 	sll	r3,r7,r3
  8026f0:	29c00017 	ldw	r7,0(r5)
  8026f4:	2a7ffe04 	addi	r9,r5,-8
  8026f8:	1886b03a 	or	r3,r3,r2
  8026fc:	82400315 	stw	r9,12(r16)
  802700:	81c00215 	stw	r7,8(r16)
  802704:	30c00115 	stw	r3,4(r6)
  802708:	2c000015 	stw	r16,0(r5)
  80270c:	3c000315 	stw	r16,12(r7)
  802710:	2005d0ba 	srai	r2,r4,2
  802714:	01400044 	movi	r5,1
  802718:	288a983a 	sll	r5,r5,r2
  80271c:	19406f36 	bltu	r3,r5,8028dc <_malloc_r+0x324>
  802720:	28c4703a 	and	r2,r5,r3
  802724:	10000a1e 	bne	r2,zero,802750 <_malloc_r+0x198>
  802728:	00bfff04 	movi	r2,-4
  80272c:	294b883a 	add	r5,r5,r5
  802730:	2088703a 	and	r4,r4,r2
  802734:	28c4703a 	and	r2,r5,r3
  802738:	21000104 	addi	r4,r4,4
  80273c:	1000041e 	bne	r2,zero,802750 <_malloc_r+0x198>
  802740:	294b883a 	add	r5,r5,r5
  802744:	28c4703a 	and	r2,r5,r3
  802748:	21000104 	addi	r4,r4,4
  80274c:	103ffc26 	beq	r2,zero,802740 <__alt_data_end+0xff802740>
  802750:	02bfff04 	movi	r10,-4
  802754:	024003c4 	movi	r9,15
  802758:	21800044 	addi	r6,r4,1
  80275c:	318d883a 	add	r6,r6,r6
  802760:	318d883a 	add	r6,r6,r6
  802764:	318d883a 	add	r6,r6,r6
  802768:	998d883a 	add	r6,r19,r6
  80276c:	333ffe04 	addi	r12,r6,-8
  802770:	2017883a 	mov	r11,r4
  802774:	31800104 	addi	r6,r6,4
  802778:	34000017 	ldw	r16,0(r6)
  80277c:	31fffd04 	addi	r7,r6,-12
  802780:	81c0041e 	bne	r16,r7,802794 <_malloc_r+0x1dc>
  802784:	0000fb06 	br	802b74 <_malloc_r+0x5bc>
  802788:	1801030e 	bge	r3,zero,802b98 <_malloc_r+0x5e0>
  80278c:	84000317 	ldw	r16,12(r16)
  802790:	81c0f826 	beq	r16,r7,802b74 <_malloc_r+0x5bc>
  802794:	80800117 	ldw	r2,4(r16)
  802798:	1284703a 	and	r2,r2,r10
  80279c:	1447c83a 	sub	r3,r2,r17
  8027a0:	48fff90e 	bge	r9,r3,802788 <__alt_data_end+0xff802788>
  8027a4:	80800317 	ldw	r2,12(r16)
  8027a8:	81000217 	ldw	r4,8(r16)
  8027ac:	89400054 	ori	r5,r17,1
  8027b0:	81400115 	stw	r5,4(r16)
  8027b4:	20800315 	stw	r2,12(r4)
  8027b8:	11000215 	stw	r4,8(r2)
  8027bc:	8463883a 	add	r17,r16,r17
  8027c0:	9c400515 	stw	r17,20(r19)
  8027c4:	9c400415 	stw	r17,16(r19)
  8027c8:	18800054 	ori	r2,r3,1
  8027cc:	88800115 	stw	r2,4(r17)
  8027d0:	8a000315 	stw	r8,12(r17)
  8027d4:	8a000215 	stw	r8,8(r17)
  8027d8:	88e3883a 	add	r17,r17,r3
  8027dc:	88c00015 	stw	r3,0(r17)
  8027e0:	9009883a 	mov	r4,r18
  8027e4:	08187700 	call	818770 <__malloc_unlock>
  8027e8:	80800204 	addi	r2,r16,8
  8027ec:	00001b06 	br	80285c <_malloc_r+0x2a4>
  8027f0:	04400404 	movi	r17,16
  8027f4:	89402536 	bltu	r17,r5,80288c <_malloc_r+0x2d4>
  8027f8:	081874c0 	call	81874c <__malloc_lock>
  8027fc:	00800184 	movi	r2,6
  802800:	01000084 	movi	r4,2
  802804:	04c020b4 	movhi	r19,130
  802808:	1085883a 	add	r2,r2,r2
  80280c:	9cf45104 	addi	r19,r19,-11964
  802810:	1085883a 	add	r2,r2,r2
  802814:	9885883a 	add	r2,r19,r2
  802818:	14000117 	ldw	r16,4(r2)
  80281c:	10fffe04 	addi	r3,r2,-8
  802820:	80c0d926 	beq	r16,r3,802b88 <_malloc_r+0x5d0>
  802824:	80c00117 	ldw	r3,4(r16)
  802828:	81000317 	ldw	r4,12(r16)
  80282c:	00bfff04 	movi	r2,-4
  802830:	1884703a 	and	r2,r3,r2
  802834:	81400217 	ldw	r5,8(r16)
  802838:	8085883a 	add	r2,r16,r2
  80283c:	10c00117 	ldw	r3,4(r2)
  802840:	29000315 	stw	r4,12(r5)
  802844:	21400215 	stw	r5,8(r4)
  802848:	18c00054 	ori	r3,r3,1
  80284c:	10c00115 	stw	r3,4(r2)
  802850:	9009883a 	mov	r4,r18
  802854:	08187700 	call	818770 <__malloc_unlock>
  802858:	80800204 	addi	r2,r16,8
  80285c:	dfc00a17 	ldw	ra,40(sp)
  802860:	df000917 	ldw	fp,36(sp)
  802864:	ddc00817 	ldw	r23,32(sp)
  802868:	dd800717 	ldw	r22,28(sp)
  80286c:	dd400617 	ldw	r21,24(sp)
  802870:	dd000517 	ldw	r20,20(sp)
  802874:	dcc00417 	ldw	r19,16(sp)
  802878:	dc800317 	ldw	r18,12(sp)
  80287c:	dc400217 	ldw	r17,8(sp)
  802880:	dc000117 	ldw	r16,4(sp)
  802884:	dec00b04 	addi	sp,sp,44
  802888:	f800283a 	ret
  80288c:	00800304 	movi	r2,12
  802890:	90800015 	stw	r2,0(r18)
  802894:	0005883a 	mov	r2,zero
  802898:	003ff006 	br	80285c <__alt_data_end+0xff80285c>
  80289c:	01002004 	movi	r4,128
  8028a0:	02001004 	movi	r8,64
  8028a4:	01c00fc4 	movi	r7,63
  8028a8:	003f6106 	br	802630 <__alt_data_end+0xff802630>
  8028ac:	4009883a 	mov	r4,r8
  8028b0:	003f7506 	br	802688 <__alt_data_end+0xff802688>
  8028b4:	81000317 	ldw	r4,12(r16)
  8028b8:	003fde06 	br	802834 <__alt_data_end+0xff802834>
  8028bc:	81c5883a 	add	r2,r16,r7
  8028c0:	11400117 	ldw	r5,4(r2)
  8028c4:	9009883a 	mov	r4,r18
  8028c8:	29400054 	ori	r5,r5,1
  8028cc:	11400115 	stw	r5,4(r2)
  8028d0:	08187700 	call	818770 <__malloc_unlock>
  8028d4:	80800204 	addi	r2,r16,8
  8028d8:	003fe006 	br	80285c <__alt_data_end+0xff80285c>
  8028dc:	9c000217 	ldw	r16,8(r19)
  8028e0:	00bfff04 	movi	r2,-4
  8028e4:	85800117 	ldw	r22,4(r16)
  8028e8:	b0ac703a 	and	r22,r22,r2
  8028ec:	b4400336 	bltu	r22,r17,8028fc <_malloc_r+0x344>
  8028f0:	b445c83a 	sub	r2,r22,r17
  8028f4:	00c003c4 	movi	r3,15
  8028f8:	18805d16 	blt	r3,r2,802a70 <_malloc_r+0x4b8>
  8028fc:	05c020b4 	movhi	r23,130
  802900:	008020b4 	movhi	r2,130
  802904:	1081f304 	addi	r2,r2,1996
  802908:	bdfa8604 	addi	r23,r23,-5608
  80290c:	15400017 	ldw	r21,0(r2)
  802910:	b8c00017 	ldw	r3,0(r23)
  802914:	00bfffc4 	movi	r2,-1
  802918:	858d883a 	add	r6,r16,r22
  80291c:	8d6b883a 	add	r21,r17,r21
  802920:	1880ea26 	beq	r3,r2,802ccc <_malloc_r+0x714>
  802924:	ad4403c4 	addi	r21,r21,4111
  802928:	00bc0004 	movi	r2,-4096
  80292c:	a8aa703a 	and	r21,r21,r2
  802930:	a80b883a 	mov	r5,r21
  802934:	9009883a 	mov	r4,r18
  802938:	d9800015 	stw	r6,0(sp)
  80293c:	08033240 	call	803324 <_sbrk_r>
  802940:	1029883a 	mov	r20,r2
  802944:	00bfffc4 	movi	r2,-1
  802948:	d9800017 	ldw	r6,0(sp)
  80294c:	a080e826 	beq	r20,r2,802cf0 <_malloc_r+0x738>
  802950:	a180a636 	bltu	r20,r6,802bec <_malloc_r+0x634>
  802954:	070020b4 	movhi	fp,130
  802958:	e701fe04 	addi	fp,fp,2040
  80295c:	e0800017 	ldw	r2,0(fp)
  802960:	a887883a 	add	r3,r21,r2
  802964:	e0c00015 	stw	r3,0(fp)
  802968:	3500e626 	beq	r6,r20,802d04 <_malloc_r+0x74c>
  80296c:	b9000017 	ldw	r4,0(r23)
  802970:	00bfffc4 	movi	r2,-1
  802974:	2080ee26 	beq	r4,r2,802d30 <_malloc_r+0x778>
  802978:	a185c83a 	sub	r2,r20,r6
  80297c:	10c5883a 	add	r2,r2,r3
  802980:	e0800015 	stw	r2,0(fp)
  802984:	a0c001cc 	andi	r3,r20,7
  802988:	1800bc26 	beq	r3,zero,802c7c <_malloc_r+0x6c4>
  80298c:	a0e9c83a 	sub	r20,r20,r3
  802990:	00840204 	movi	r2,4104
  802994:	a5000204 	addi	r20,r20,8
  802998:	10c7c83a 	sub	r3,r2,r3
  80299c:	a545883a 	add	r2,r20,r21
  8029a0:	1083ffcc 	andi	r2,r2,4095
  8029a4:	18abc83a 	sub	r21,r3,r2
  8029a8:	a80b883a 	mov	r5,r21
  8029ac:	9009883a 	mov	r4,r18
  8029b0:	08033240 	call	803324 <_sbrk_r>
  8029b4:	00ffffc4 	movi	r3,-1
  8029b8:	10c0e126 	beq	r2,r3,802d40 <_malloc_r+0x788>
  8029bc:	1505c83a 	sub	r2,r2,r20
  8029c0:	1545883a 	add	r2,r2,r21
  8029c4:	10800054 	ori	r2,r2,1
  8029c8:	e0c00017 	ldw	r3,0(fp)
  8029cc:	9d000215 	stw	r20,8(r19)
  8029d0:	a0800115 	stw	r2,4(r20)
  8029d4:	a8c7883a 	add	r3,r21,r3
  8029d8:	e0c00015 	stw	r3,0(fp)
  8029dc:	84c00e26 	beq	r16,r19,802a18 <_malloc_r+0x460>
  8029e0:	018003c4 	movi	r6,15
  8029e4:	3580a72e 	bgeu	r6,r22,802c84 <_malloc_r+0x6cc>
  8029e8:	81400117 	ldw	r5,4(r16)
  8029ec:	013ffe04 	movi	r4,-8
  8029f0:	b0bffd04 	addi	r2,r22,-12
  8029f4:	1104703a 	and	r2,r2,r4
  8029f8:	2900004c 	andi	r4,r5,1
  8029fc:	2088b03a 	or	r4,r4,r2
  802a00:	81000115 	stw	r4,4(r16)
  802a04:	01400144 	movi	r5,5
  802a08:	8089883a 	add	r4,r16,r2
  802a0c:	21400115 	stw	r5,4(r4)
  802a10:	21400215 	stw	r5,8(r4)
  802a14:	3080cd36 	bltu	r6,r2,802d4c <_malloc_r+0x794>
  802a18:	008020b4 	movhi	r2,130
  802a1c:	1081f204 	addi	r2,r2,1992
  802a20:	11000017 	ldw	r4,0(r2)
  802a24:	20c0012e 	bgeu	r4,r3,802a2c <_malloc_r+0x474>
  802a28:	10c00015 	stw	r3,0(r2)
  802a2c:	008020b4 	movhi	r2,130
  802a30:	1081f104 	addi	r2,r2,1988
  802a34:	11000017 	ldw	r4,0(r2)
  802a38:	9c000217 	ldw	r16,8(r19)
  802a3c:	20c0012e 	bgeu	r4,r3,802a44 <_malloc_r+0x48c>
  802a40:	10c00015 	stw	r3,0(r2)
  802a44:	80c00117 	ldw	r3,4(r16)
  802a48:	00bfff04 	movi	r2,-4
  802a4c:	1886703a 	and	r3,r3,r2
  802a50:	1c45c83a 	sub	r2,r3,r17
  802a54:	1c400236 	bltu	r3,r17,802a60 <_malloc_r+0x4a8>
  802a58:	00c003c4 	movi	r3,15
  802a5c:	18800416 	blt	r3,r2,802a70 <_malloc_r+0x4b8>
  802a60:	9009883a 	mov	r4,r18
  802a64:	08187700 	call	818770 <__malloc_unlock>
  802a68:	0005883a 	mov	r2,zero
  802a6c:	003f7b06 	br	80285c <__alt_data_end+0xff80285c>
  802a70:	88c00054 	ori	r3,r17,1
  802a74:	80c00115 	stw	r3,4(r16)
  802a78:	8463883a 	add	r17,r16,r17
  802a7c:	10800054 	ori	r2,r2,1
  802a80:	9c400215 	stw	r17,8(r19)
  802a84:	88800115 	stw	r2,4(r17)
  802a88:	9009883a 	mov	r4,r18
  802a8c:	08187700 	call	818770 <__malloc_unlock>
  802a90:	80800204 	addi	r2,r16,8
  802a94:	003f7106 	br	80285c <__alt_data_end+0xff80285c>
  802a98:	00c00504 	movi	r3,20
  802a9c:	18804a2e 	bgeu	r3,r2,802bc8 <_malloc_r+0x610>
  802aa0:	00c01504 	movi	r3,84
  802aa4:	18806e36 	bltu	r3,r2,802c60 <_malloc_r+0x6a8>
  802aa8:	8804d33a 	srli	r2,r17,12
  802aac:	12001bc4 	addi	r8,r2,111
  802ab0:	11c01b84 	addi	r7,r2,110
  802ab4:	4209883a 	add	r4,r8,r8
  802ab8:	003edd06 	br	802630 <__alt_data_end+0xff802630>
  802abc:	3804d27a 	srli	r2,r7,9
  802ac0:	00c00104 	movi	r3,4
  802ac4:	1880442e 	bgeu	r3,r2,802bd8 <_malloc_r+0x620>
  802ac8:	00c00504 	movi	r3,20
  802acc:	18808136 	bltu	r3,r2,802cd4 <_malloc_r+0x71c>
  802ad0:	11401704 	addi	r5,r2,92
  802ad4:	10c016c4 	addi	r3,r2,91
  802ad8:	294b883a 	add	r5,r5,r5
  802adc:	294b883a 	add	r5,r5,r5
  802ae0:	294b883a 	add	r5,r5,r5
  802ae4:	994b883a 	add	r5,r19,r5
  802ae8:	28800017 	ldw	r2,0(r5)
  802aec:	018020b4 	movhi	r6,130
  802af0:	297ffe04 	addi	r5,r5,-8
  802af4:	31b45104 	addi	r6,r6,-11964
  802af8:	28806526 	beq	r5,r2,802c90 <_malloc_r+0x6d8>
  802afc:	01bfff04 	movi	r6,-4
  802b00:	10c00117 	ldw	r3,4(r2)
  802b04:	1986703a 	and	r3,r3,r6
  802b08:	38c0022e 	bgeu	r7,r3,802b14 <_malloc_r+0x55c>
  802b0c:	10800217 	ldw	r2,8(r2)
  802b10:	28bffb1e 	bne	r5,r2,802b00 <__alt_data_end+0xff802b00>
  802b14:	11400317 	ldw	r5,12(r2)
  802b18:	98c00117 	ldw	r3,4(r19)
  802b1c:	81400315 	stw	r5,12(r16)
  802b20:	80800215 	stw	r2,8(r16)
  802b24:	2c000215 	stw	r16,8(r5)
  802b28:	14000315 	stw	r16,12(r2)
  802b2c:	003ef806 	br	802710 <__alt_data_end+0xff802710>
  802b30:	88c00054 	ori	r3,r17,1
  802b34:	80c00115 	stw	r3,4(r16)
  802b38:	8463883a 	add	r17,r16,r17
  802b3c:	34400515 	stw	r17,20(r6)
  802b40:	34400415 	stw	r17,16(r6)
  802b44:	10c00054 	ori	r3,r2,1
  802b48:	8a000315 	stw	r8,12(r17)
  802b4c:	8a000215 	stw	r8,8(r17)
  802b50:	88c00115 	stw	r3,4(r17)
  802b54:	88a3883a 	add	r17,r17,r2
  802b58:	88800015 	stw	r2,0(r17)
  802b5c:	9009883a 	mov	r4,r18
  802b60:	08187700 	call	818770 <__malloc_unlock>
  802b64:	80800204 	addi	r2,r16,8
  802b68:	003f3c06 	br	80285c <__alt_data_end+0xff80285c>
  802b6c:	30c00117 	ldw	r3,4(r6)
  802b70:	003ee706 	br	802710 <__alt_data_end+0xff802710>
  802b74:	5ac00044 	addi	r11,r11,1
  802b78:	588000cc 	andi	r2,r11,3
  802b7c:	31800204 	addi	r6,r6,8
  802b80:	103efd1e 	bne	r2,zero,802778 <__alt_data_end+0xff802778>
  802b84:	00002406 	br	802c18 <_malloc_r+0x660>
  802b88:	14000317 	ldw	r16,12(r2)
  802b8c:	143f251e 	bne	r2,r16,802824 <__alt_data_end+0xff802824>
  802b90:	21000084 	addi	r4,r4,2
  802b94:	003ebc06 	br	802688 <__alt_data_end+0xff802688>
  802b98:	8085883a 	add	r2,r16,r2
  802b9c:	10c00117 	ldw	r3,4(r2)
  802ba0:	81000317 	ldw	r4,12(r16)
  802ba4:	81400217 	ldw	r5,8(r16)
  802ba8:	18c00054 	ori	r3,r3,1
  802bac:	10c00115 	stw	r3,4(r2)
  802bb0:	29000315 	stw	r4,12(r5)
  802bb4:	21400215 	stw	r5,8(r4)
  802bb8:	9009883a 	mov	r4,r18
  802bbc:	08187700 	call	818770 <__malloc_unlock>
  802bc0:	80800204 	addi	r2,r16,8
  802bc4:	003f2506 	br	80285c <__alt_data_end+0xff80285c>
  802bc8:	12001704 	addi	r8,r2,92
  802bcc:	11c016c4 	addi	r7,r2,91
  802bd0:	4209883a 	add	r4,r8,r8
  802bd4:	003e9606 	br	802630 <__alt_data_end+0xff802630>
  802bd8:	3804d1ba 	srli	r2,r7,6
  802bdc:	11400e44 	addi	r5,r2,57
  802be0:	10c00e04 	addi	r3,r2,56
  802be4:	294b883a 	add	r5,r5,r5
  802be8:	003fbc06 	br	802adc <__alt_data_end+0xff802adc>
  802bec:	84ff5926 	beq	r16,r19,802954 <__alt_data_end+0xff802954>
  802bf0:	008020b4 	movhi	r2,130
  802bf4:	10b45104 	addi	r2,r2,-11964
  802bf8:	14000217 	ldw	r16,8(r2)
  802bfc:	00bfff04 	movi	r2,-4
  802c00:	80c00117 	ldw	r3,4(r16)
  802c04:	1886703a 	and	r3,r3,r2
  802c08:	003f9106 	br	802a50 <__alt_data_end+0xff802a50>
  802c0c:	60800217 	ldw	r2,8(r12)
  802c10:	213fffc4 	addi	r4,r4,-1
  802c14:	1300651e 	bne	r2,r12,802dac <_malloc_r+0x7f4>
  802c18:	208000cc 	andi	r2,r4,3
  802c1c:	633ffe04 	addi	r12,r12,-8
  802c20:	103ffa1e 	bne	r2,zero,802c0c <__alt_data_end+0xff802c0c>
  802c24:	98800117 	ldw	r2,4(r19)
  802c28:	0146303a 	nor	r3,zero,r5
  802c2c:	1884703a 	and	r2,r3,r2
  802c30:	98800115 	stw	r2,4(r19)
  802c34:	294b883a 	add	r5,r5,r5
  802c38:	117f2836 	bltu	r2,r5,8028dc <__alt_data_end+0xff8028dc>
  802c3c:	283f2726 	beq	r5,zero,8028dc <__alt_data_end+0xff8028dc>
  802c40:	2886703a 	and	r3,r5,r2
  802c44:	5809883a 	mov	r4,r11
  802c48:	183ec31e 	bne	r3,zero,802758 <__alt_data_end+0xff802758>
  802c4c:	294b883a 	add	r5,r5,r5
  802c50:	2886703a 	and	r3,r5,r2
  802c54:	21000104 	addi	r4,r4,4
  802c58:	183ffc26 	beq	r3,zero,802c4c <__alt_data_end+0xff802c4c>
  802c5c:	003ebe06 	br	802758 <__alt_data_end+0xff802758>
  802c60:	00c05504 	movi	r3,340
  802c64:	18801236 	bltu	r3,r2,802cb0 <_malloc_r+0x6f8>
  802c68:	8804d3fa 	srli	r2,r17,15
  802c6c:	12001e04 	addi	r8,r2,120
  802c70:	11c01dc4 	addi	r7,r2,119
  802c74:	4209883a 	add	r4,r8,r8
  802c78:	003e6d06 	br	802630 <__alt_data_end+0xff802630>
  802c7c:	00c40004 	movi	r3,4096
  802c80:	003f4606 	br	80299c <__alt_data_end+0xff80299c>
  802c84:	00800044 	movi	r2,1
  802c88:	a0800115 	stw	r2,4(r20)
  802c8c:	003f7406 	br	802a60 <__alt_data_end+0xff802a60>
  802c90:	1805d0ba 	srai	r2,r3,2
  802c94:	01c00044 	movi	r7,1
  802c98:	30c00117 	ldw	r3,4(r6)
  802c9c:	388e983a 	sll	r7,r7,r2
  802ca0:	2805883a 	mov	r2,r5
  802ca4:	38c6b03a 	or	r3,r7,r3
  802ca8:	30c00115 	stw	r3,4(r6)
  802cac:	003f9b06 	br	802b1c <__alt_data_end+0xff802b1c>
  802cb0:	00c15504 	movi	r3,1364
  802cb4:	18801a36 	bltu	r3,r2,802d20 <_malloc_r+0x768>
  802cb8:	8804d4ba 	srli	r2,r17,18
  802cbc:	12001f44 	addi	r8,r2,125
  802cc0:	11c01f04 	addi	r7,r2,124
  802cc4:	4209883a 	add	r4,r8,r8
  802cc8:	003e5906 	br	802630 <__alt_data_end+0xff802630>
  802ccc:	ad400404 	addi	r21,r21,16
  802cd0:	003f1706 	br	802930 <__alt_data_end+0xff802930>
  802cd4:	00c01504 	movi	r3,84
  802cd8:	18802336 	bltu	r3,r2,802d68 <_malloc_r+0x7b0>
  802cdc:	3804d33a 	srli	r2,r7,12
  802ce0:	11401bc4 	addi	r5,r2,111
  802ce4:	10c01b84 	addi	r3,r2,110
  802ce8:	294b883a 	add	r5,r5,r5
  802cec:	003f7b06 	br	802adc <__alt_data_end+0xff802adc>
  802cf0:	9c000217 	ldw	r16,8(r19)
  802cf4:	00bfff04 	movi	r2,-4
  802cf8:	80c00117 	ldw	r3,4(r16)
  802cfc:	1886703a 	and	r3,r3,r2
  802d00:	003f5306 	br	802a50 <__alt_data_end+0xff802a50>
  802d04:	3083ffcc 	andi	r2,r6,4095
  802d08:	103f181e 	bne	r2,zero,80296c <__alt_data_end+0xff80296c>
  802d0c:	99000217 	ldw	r4,8(r19)
  802d10:	b545883a 	add	r2,r22,r21
  802d14:	10800054 	ori	r2,r2,1
  802d18:	20800115 	stw	r2,4(r4)
  802d1c:	003f3e06 	br	802a18 <__alt_data_end+0xff802a18>
  802d20:	01003f84 	movi	r4,254
  802d24:	02001fc4 	movi	r8,127
  802d28:	01c01f84 	movi	r7,126
  802d2c:	003e4006 	br	802630 <__alt_data_end+0xff802630>
  802d30:	008020b4 	movhi	r2,130
  802d34:	10ba8604 	addi	r2,r2,-5608
  802d38:	15000015 	stw	r20,0(r2)
  802d3c:	003f1106 	br	802984 <__alt_data_end+0xff802984>
  802d40:	00800044 	movi	r2,1
  802d44:	002b883a 	mov	r21,zero
  802d48:	003f1f06 	br	8029c8 <__alt_data_end+0xff8029c8>
  802d4c:	81400204 	addi	r5,r16,8
  802d50:	9009883a 	mov	r4,r18
  802d54:	08018900 	call	801890 <_free_r>
  802d58:	008020b4 	movhi	r2,130
  802d5c:	1081fe04 	addi	r2,r2,2040
  802d60:	10c00017 	ldw	r3,0(r2)
  802d64:	003f2c06 	br	802a18 <__alt_data_end+0xff802a18>
  802d68:	00c05504 	movi	r3,340
  802d6c:	18800536 	bltu	r3,r2,802d84 <_malloc_r+0x7cc>
  802d70:	3804d3fa 	srli	r2,r7,15
  802d74:	11401e04 	addi	r5,r2,120
  802d78:	10c01dc4 	addi	r3,r2,119
  802d7c:	294b883a 	add	r5,r5,r5
  802d80:	003f5606 	br	802adc <__alt_data_end+0xff802adc>
  802d84:	00c15504 	movi	r3,1364
  802d88:	18800536 	bltu	r3,r2,802da0 <_malloc_r+0x7e8>
  802d8c:	3804d4ba 	srli	r2,r7,18
  802d90:	11401f44 	addi	r5,r2,125
  802d94:	10c01f04 	addi	r3,r2,124
  802d98:	294b883a 	add	r5,r5,r5
  802d9c:	003f4f06 	br	802adc <__alt_data_end+0xff802adc>
  802da0:	01403f84 	movi	r5,254
  802da4:	00c01f84 	movi	r3,126
  802da8:	003f4c06 	br	802adc <__alt_data_end+0xff802adc>
  802dac:	98800117 	ldw	r2,4(r19)
  802db0:	003fa006 	br	802c34 <__alt_data_end+0xff802c34>
  802db4:	8808d0fa 	srli	r4,r17,3
  802db8:	20800044 	addi	r2,r4,1
  802dbc:	1085883a 	add	r2,r2,r2
  802dc0:	003e9006 	br	802804 <__alt_data_end+0xff802804>

00802dc4 <memset>:
  802dc4:	20c000cc 	andi	r3,r4,3
  802dc8:	2005883a 	mov	r2,r4
  802dcc:	18004426 	beq	r3,zero,802ee0 <memset+0x11c>
  802dd0:	31ffffc4 	addi	r7,r6,-1
  802dd4:	30004026 	beq	r6,zero,802ed8 <memset+0x114>
  802dd8:	2813883a 	mov	r9,r5
  802ddc:	200d883a 	mov	r6,r4
  802de0:	2007883a 	mov	r3,r4
  802de4:	00000406 	br	802df8 <memset+0x34>
  802de8:	3a3fffc4 	addi	r8,r7,-1
  802dec:	31800044 	addi	r6,r6,1
  802df0:	38003926 	beq	r7,zero,802ed8 <memset+0x114>
  802df4:	400f883a 	mov	r7,r8
  802df8:	18c00044 	addi	r3,r3,1
  802dfc:	32400005 	stb	r9,0(r6)
  802e00:	1a0000cc 	andi	r8,r3,3
  802e04:	403ff81e 	bne	r8,zero,802de8 <__alt_data_end+0xff802de8>
  802e08:	010000c4 	movi	r4,3
  802e0c:	21c02d2e 	bgeu	r4,r7,802ec4 <memset+0x100>
  802e10:	29003fcc 	andi	r4,r5,255
  802e14:	200c923a 	slli	r6,r4,8
  802e18:	3108b03a 	or	r4,r6,r4
  802e1c:	200c943a 	slli	r6,r4,16
  802e20:	218cb03a 	or	r6,r4,r6
  802e24:	010003c4 	movi	r4,15
  802e28:	21c0182e 	bgeu	r4,r7,802e8c <memset+0xc8>
  802e2c:	3b3ffc04 	addi	r12,r7,-16
  802e30:	6018d13a 	srli	r12,r12,4
  802e34:	1a000104 	addi	r8,r3,4
  802e38:	1ac00204 	addi	r11,r3,8
  802e3c:	6008913a 	slli	r4,r12,4
  802e40:	1a800304 	addi	r10,r3,12
  802e44:	1813883a 	mov	r9,r3
  802e48:	21000504 	addi	r4,r4,20
  802e4c:	1909883a 	add	r4,r3,r4
  802e50:	49800015 	stw	r6,0(r9)
  802e54:	41800015 	stw	r6,0(r8)
  802e58:	59800015 	stw	r6,0(r11)
  802e5c:	51800015 	stw	r6,0(r10)
  802e60:	42000404 	addi	r8,r8,16
  802e64:	4a400404 	addi	r9,r9,16
  802e68:	5ac00404 	addi	r11,r11,16
  802e6c:	52800404 	addi	r10,r10,16
  802e70:	413ff71e 	bne	r8,r4,802e50 <__alt_data_end+0xff802e50>
  802e74:	63000044 	addi	r12,r12,1
  802e78:	6018913a 	slli	r12,r12,4
  802e7c:	39c003cc 	andi	r7,r7,15
  802e80:	010000c4 	movi	r4,3
  802e84:	1b07883a 	add	r3,r3,r12
  802e88:	21c00e2e 	bgeu	r4,r7,802ec4 <memset+0x100>
  802e8c:	1813883a 	mov	r9,r3
  802e90:	3811883a 	mov	r8,r7
  802e94:	010000c4 	movi	r4,3
  802e98:	49800015 	stw	r6,0(r9)
  802e9c:	423fff04 	addi	r8,r8,-4
  802ea0:	4a400104 	addi	r9,r9,4
  802ea4:	223ffc36 	bltu	r4,r8,802e98 <__alt_data_end+0xff802e98>
  802ea8:	393fff04 	addi	r4,r7,-4
  802eac:	2008d0ba 	srli	r4,r4,2
  802eb0:	39c000cc 	andi	r7,r7,3
  802eb4:	21000044 	addi	r4,r4,1
  802eb8:	2109883a 	add	r4,r4,r4
  802ebc:	2109883a 	add	r4,r4,r4
  802ec0:	1907883a 	add	r3,r3,r4
  802ec4:	38000526 	beq	r7,zero,802edc <memset+0x118>
  802ec8:	19cf883a 	add	r7,r3,r7
  802ecc:	19400005 	stb	r5,0(r3)
  802ed0:	18c00044 	addi	r3,r3,1
  802ed4:	38fffd1e 	bne	r7,r3,802ecc <__alt_data_end+0xff802ecc>
  802ed8:	f800283a 	ret
  802edc:	f800283a 	ret
  802ee0:	2007883a 	mov	r3,r4
  802ee4:	300f883a 	mov	r7,r6
  802ee8:	003fc706 	br	802e08 <__alt_data_end+0xff802e08>

00802eec <_open_r>:
  802eec:	defffd04 	addi	sp,sp,-12
  802ef0:	2805883a 	mov	r2,r5
  802ef4:	dc000015 	stw	r16,0(sp)
  802ef8:	040020b4 	movhi	r16,130
  802efc:	dc400115 	stw	r17,4(sp)
  802f00:	300b883a 	mov	r5,r6
  802f04:	8401f004 	addi	r16,r16,1984
  802f08:	2023883a 	mov	r17,r4
  802f0c:	380d883a 	mov	r6,r7
  802f10:	1009883a 	mov	r4,r2
  802f14:	dfc00215 	stw	ra,8(sp)
  802f18:	80000015 	stw	zero,0(r16)
  802f1c:	08188940 	call	818894 <open>
  802f20:	00ffffc4 	movi	r3,-1
  802f24:	10c00526 	beq	r2,r3,802f3c <_open_r+0x50>
  802f28:	dfc00217 	ldw	ra,8(sp)
  802f2c:	dc400117 	ldw	r17,4(sp)
  802f30:	dc000017 	ldw	r16,0(sp)
  802f34:	dec00304 	addi	sp,sp,12
  802f38:	f800283a 	ret
  802f3c:	80c00017 	ldw	r3,0(r16)
  802f40:	183ff926 	beq	r3,zero,802f28 <__alt_data_end+0xff802f28>
  802f44:	88c00015 	stw	r3,0(r17)
  802f48:	003ff706 	br	802f28 <__alt_data_end+0xff802f28>

00802f4c <_printf_r>:
  802f4c:	defffd04 	addi	sp,sp,-12
  802f50:	2805883a 	mov	r2,r5
  802f54:	dfc00015 	stw	ra,0(sp)
  802f58:	d9800115 	stw	r6,4(sp)
  802f5c:	d9c00215 	stw	r7,8(sp)
  802f60:	21400217 	ldw	r5,8(r4)
  802f64:	d9c00104 	addi	r7,sp,4
  802f68:	100d883a 	mov	r6,r2
  802f6c:	0804dfc0 	call	804dfc <___vfprintf_internal_r>
  802f70:	dfc00017 	ldw	ra,0(sp)
  802f74:	dec00304 	addi	sp,sp,12
  802f78:	f800283a 	ret

00802f7c <printf>:
  802f7c:	defffc04 	addi	sp,sp,-16
  802f80:	dfc00015 	stw	ra,0(sp)
  802f84:	d9400115 	stw	r5,4(sp)
  802f88:	d9800215 	stw	r6,8(sp)
  802f8c:	d9c00315 	stw	r7,12(sp)
  802f90:	008020b4 	movhi	r2,130
  802f94:	10ba8504 	addi	r2,r2,-5612
  802f98:	10800017 	ldw	r2,0(r2)
  802f9c:	200b883a 	mov	r5,r4
  802fa0:	d9800104 	addi	r6,sp,4
  802fa4:	11000217 	ldw	r4,8(r2)
  802fa8:	0806ff40 	call	806ff4 <__vfprintf_internal>
  802fac:	dfc00017 	ldw	ra,0(sp)
  802fb0:	dec00404 	addi	sp,sp,16
  802fb4:	f800283a 	ret

00802fb8 <_putchar_r>:
  802fb8:	21800217 	ldw	r6,8(r4)
  802fbc:	080a82c1 	jmpi	80a82c <_putc_r>

00802fc0 <putchar>:
  802fc0:	008020b4 	movhi	r2,130
  802fc4:	10ba8504 	addi	r2,r2,-5612
  802fc8:	200b883a 	mov	r5,r4
  802fcc:	11000017 	ldw	r4,0(r2)
  802fd0:	21800217 	ldw	r6,8(r4)
  802fd4:	080a82c1 	jmpi	80a82c <_putc_r>

00802fd8 <_puts_r>:
  802fd8:	defff604 	addi	sp,sp,-40
  802fdc:	dc000715 	stw	r16,28(sp)
  802fe0:	2021883a 	mov	r16,r4
  802fe4:	2809883a 	mov	r4,r5
  802fe8:	dc400815 	stw	r17,32(sp)
  802fec:	dfc00915 	stw	ra,36(sp)
  802ff0:	2823883a 	mov	r17,r5
  802ff4:	08035a80 	call	8035a8 <strlen>
  802ff8:	10c00044 	addi	r3,r2,1
  802ffc:	d8800115 	stw	r2,4(sp)
  803000:	008020b4 	movhi	r2,130
  803004:	10b15904 	addi	r2,r2,-15004
  803008:	d8800215 	stw	r2,8(sp)
  80300c:	00800044 	movi	r2,1
  803010:	d8800315 	stw	r2,12(sp)
  803014:	00800084 	movi	r2,2
  803018:	dc400015 	stw	r17,0(sp)
  80301c:	d8c00615 	stw	r3,24(sp)
  803020:	dec00415 	stw	sp,16(sp)
  803024:	d8800515 	stw	r2,20(sp)
  803028:	80000226 	beq	r16,zero,803034 <_puts_r+0x5c>
  80302c:	80800e17 	ldw	r2,56(r16)
  803030:	10001426 	beq	r2,zero,803084 <_puts_r+0xac>
  803034:	81400217 	ldw	r5,8(r16)
  803038:	2880030b 	ldhu	r2,12(r5)
  80303c:	10c8000c 	andi	r3,r2,8192
  803040:	1800061e 	bne	r3,zero,80305c <_puts_r+0x84>
  803044:	29001917 	ldw	r4,100(r5)
  803048:	00f7ffc4 	movi	r3,-8193
  80304c:	10880014 	ori	r2,r2,8192
  803050:	20c6703a 	and	r3,r4,r3
  803054:	2880030d 	sth	r2,12(r5)
  803058:	28c01915 	stw	r3,100(r5)
  80305c:	d9800404 	addi	r6,sp,16
  803060:	8009883a 	mov	r4,r16
  803064:	0808c080 	call	808c08 <__sfvwrite_r>
  803068:	1000091e 	bne	r2,zero,803090 <_puts_r+0xb8>
  80306c:	00800284 	movi	r2,10
  803070:	dfc00917 	ldw	ra,36(sp)
  803074:	dc400817 	ldw	r17,32(sp)
  803078:	dc000717 	ldw	r16,28(sp)
  80307c:	dec00a04 	addi	sp,sp,40
  803080:	f800283a 	ret
  803084:	8009883a 	mov	r4,r16
  803088:	08015c40 	call	8015c4 <__sinit>
  80308c:	003fe906 	br	803034 <__alt_data_end+0xff803034>
  803090:	00bfffc4 	movi	r2,-1
  803094:	003ff606 	br	803070 <__alt_data_end+0xff803070>

00803098 <puts>:
  803098:	008020b4 	movhi	r2,130
  80309c:	10ba8504 	addi	r2,r2,-5612
  8030a0:	200b883a 	mov	r5,r4
  8030a4:	11000017 	ldw	r4,0(r2)
  8030a8:	0802fd81 	jmpi	802fd8 <_puts_r>

008030ac <lflush>:
  8030ac:	2080030b 	ldhu	r2,12(r4)
  8030b0:	00c00244 	movi	r3,9
  8030b4:	1080024c 	andi	r2,r2,9
  8030b8:	10c00226 	beq	r2,r3,8030c4 <lflush+0x18>
  8030bc:	0005883a 	mov	r2,zero
  8030c0:	f800283a 	ret
  8030c4:	08012441 	jmpi	801244 <fflush>

008030c8 <__srefill_r>:
  8030c8:	defffc04 	addi	sp,sp,-16
  8030cc:	dc400115 	stw	r17,4(sp)
  8030d0:	dc000015 	stw	r16,0(sp)
  8030d4:	dfc00315 	stw	ra,12(sp)
  8030d8:	dc800215 	stw	r18,8(sp)
  8030dc:	2023883a 	mov	r17,r4
  8030e0:	2821883a 	mov	r16,r5
  8030e4:	20000226 	beq	r4,zero,8030f0 <__srefill_r+0x28>
  8030e8:	20800e17 	ldw	r2,56(r4)
  8030ec:	10003c26 	beq	r2,zero,8031e0 <__srefill_r+0x118>
  8030f0:	80c0030b 	ldhu	r3,12(r16)
  8030f4:	1908000c 	andi	r4,r3,8192
  8030f8:	1805883a 	mov	r2,r3
  8030fc:	2000071e 	bne	r4,zero,80311c <__srefill_r+0x54>
  803100:	81001917 	ldw	r4,100(r16)
  803104:	18880014 	ori	r2,r3,8192
  803108:	00f7ffc4 	movi	r3,-8193
  80310c:	20c8703a 	and	r4,r4,r3
  803110:	8080030d 	sth	r2,12(r16)
  803114:	1007883a 	mov	r3,r2
  803118:	81001915 	stw	r4,100(r16)
  80311c:	80000115 	stw	zero,4(r16)
  803120:	1100080c 	andi	r4,r2,32
  803124:	2000571e 	bne	r4,zero,803284 <__srefill_r+0x1bc>
  803128:	1100010c 	andi	r4,r2,4
  80312c:	20001f26 	beq	r4,zero,8031ac <__srefill_r+0xe4>
  803130:	81400c17 	ldw	r5,48(r16)
  803134:	28000826 	beq	r5,zero,803158 <__srefill_r+0x90>
  803138:	80801004 	addi	r2,r16,64
  80313c:	28800226 	beq	r5,r2,803148 <__srefill_r+0x80>
  803140:	8809883a 	mov	r4,r17
  803144:	08018900 	call	801890 <_free_r>
  803148:	80800f17 	ldw	r2,60(r16)
  80314c:	80000c15 	stw	zero,48(r16)
  803150:	80800115 	stw	r2,4(r16)
  803154:	1000391e 	bne	r2,zero,80323c <__srefill_r+0x174>
  803158:	80800417 	ldw	r2,16(r16)
  80315c:	10004b26 	beq	r2,zero,80328c <__srefill_r+0x1c4>
  803160:	8480030b 	ldhu	r18,12(r16)
  803164:	908000cc 	andi	r2,r18,3
  803168:	10001f1e 	bne	r2,zero,8031e8 <__srefill_r+0x120>
  80316c:	81800417 	ldw	r6,16(r16)
  803170:	80800817 	ldw	r2,32(r16)
  803174:	81c00517 	ldw	r7,20(r16)
  803178:	81400717 	ldw	r5,28(r16)
  80317c:	81800015 	stw	r6,0(r16)
  803180:	8809883a 	mov	r4,r17
  803184:	103ee83a 	callr	r2
  803188:	80800115 	stw	r2,4(r16)
  80318c:	00800e0e 	bge	zero,r2,8031c8 <__srefill_r+0x100>
  803190:	0005883a 	mov	r2,zero
  803194:	dfc00317 	ldw	ra,12(sp)
  803198:	dc800217 	ldw	r18,8(sp)
  80319c:	dc400117 	ldw	r17,4(sp)
  8031a0:	dc000017 	ldw	r16,0(sp)
  8031a4:	dec00404 	addi	sp,sp,16
  8031a8:	f800283a 	ret
  8031ac:	1100040c 	andi	r4,r2,16
  8031b0:	20003026 	beq	r4,zero,803274 <__srefill_r+0x1ac>
  8031b4:	1080020c 	andi	r2,r2,8
  8031b8:	1000241e 	bne	r2,zero,80324c <__srefill_r+0x184>
  8031bc:	18c00114 	ori	r3,r3,4
  8031c0:	80c0030d 	sth	r3,12(r16)
  8031c4:	003fe406 	br	803158 <__alt_data_end+0xff803158>
  8031c8:	80c0030b 	ldhu	r3,12(r16)
  8031cc:	1000161e 	bne	r2,zero,803228 <__srefill_r+0x160>
  8031d0:	18c00814 	ori	r3,r3,32
  8031d4:	00bfffc4 	movi	r2,-1
  8031d8:	80c0030d 	sth	r3,12(r16)
  8031dc:	003fed06 	br	803194 <__alt_data_end+0xff803194>
  8031e0:	08015c40 	call	8015c4 <__sinit>
  8031e4:	003fc206 	br	8030f0 <__alt_data_end+0xff8030f0>
  8031e8:	008020b4 	movhi	r2,130
  8031ec:	10ba8404 	addi	r2,r2,-5616
  8031f0:	11000017 	ldw	r4,0(r2)
  8031f4:	01402034 	movhi	r5,128
  8031f8:	00800044 	movi	r2,1
  8031fc:	294c2b04 	addi	r5,r5,12460
  803200:	8080030d 	sth	r2,12(r16)
  803204:	080207c0 	call	80207c <_fwalk>
  803208:	00800244 	movi	r2,9
  80320c:	8480030d 	sth	r18,12(r16)
  803210:	9480024c 	andi	r18,r18,9
  803214:	90bfd51e 	bne	r18,r2,80316c <__alt_data_end+0xff80316c>
  803218:	800b883a 	mov	r5,r16
  80321c:	8809883a 	mov	r4,r17
  803220:	0800fcc0 	call	800fcc <__sflush_r>
  803224:	003fd106 	br	80316c <__alt_data_end+0xff80316c>
  803228:	18c01014 	ori	r3,r3,64
  80322c:	80000115 	stw	zero,4(r16)
  803230:	00bfffc4 	movi	r2,-1
  803234:	80c0030d 	sth	r3,12(r16)
  803238:	003fd606 	br	803194 <__alt_data_end+0xff803194>
  80323c:	80c00e17 	ldw	r3,56(r16)
  803240:	0005883a 	mov	r2,zero
  803244:	80c00015 	stw	r3,0(r16)
  803248:	003fd206 	br	803194 <__alt_data_end+0xff803194>
  80324c:	800b883a 	mov	r5,r16
  803250:	8809883a 	mov	r4,r17
  803254:	08011e80 	call	8011e8 <_fflush_r>
  803258:	10000a1e 	bne	r2,zero,803284 <__srefill_r+0x1bc>
  80325c:	8080030b 	ldhu	r2,12(r16)
  803260:	00fffdc4 	movi	r3,-9
  803264:	80000215 	stw	zero,8(r16)
  803268:	1886703a 	and	r3,r3,r2
  80326c:	80000615 	stw	zero,24(r16)
  803270:	003fd206 	br	8031bc <__alt_data_end+0xff8031bc>
  803274:	00800244 	movi	r2,9
  803278:	88800015 	stw	r2,0(r17)
  80327c:	18c01014 	ori	r3,r3,64
  803280:	80c0030d 	sth	r3,12(r16)
  803284:	00bfffc4 	movi	r2,-1
  803288:	003fc206 	br	803194 <__alt_data_end+0xff803194>
  80328c:	800b883a 	mov	r5,r16
  803290:	8809883a 	mov	r4,r17
  803294:	08023fc0 	call	8023fc <__smakebuf_r>
  803298:	003fb106 	br	803160 <__alt_data_end+0xff803160>

0080329c <__srget_r>:
  80329c:	defffd04 	addi	sp,sp,-12
  8032a0:	dc400115 	stw	r17,4(sp)
  8032a4:	dc000015 	stw	r16,0(sp)
  8032a8:	dfc00215 	stw	ra,8(sp)
  8032ac:	2023883a 	mov	r17,r4
  8032b0:	2821883a 	mov	r16,r5
  8032b4:	20000226 	beq	r4,zero,8032c0 <__srget_r+0x24>
  8032b8:	20800e17 	ldw	r2,56(r4)
  8032bc:	10001026 	beq	r2,zero,803300 <__srget_r+0x64>
  8032c0:	800b883a 	mov	r5,r16
  8032c4:	8809883a 	mov	r4,r17
  8032c8:	08030c80 	call	8030c8 <__srefill_r>
  8032cc:	10000e1e 	bne	r2,zero,803308 <__srget_r+0x6c>
  8032d0:	80c00017 	ldw	r3,0(r16)
  8032d4:	80800117 	ldw	r2,4(r16)
  8032d8:	19000044 	addi	r4,r3,1
  8032dc:	10bfffc4 	addi	r2,r2,-1
  8032e0:	80800115 	stw	r2,4(r16)
  8032e4:	81000015 	stw	r4,0(r16)
  8032e8:	18800003 	ldbu	r2,0(r3)
  8032ec:	dfc00217 	ldw	ra,8(sp)
  8032f0:	dc400117 	ldw	r17,4(sp)
  8032f4:	dc000017 	ldw	r16,0(sp)
  8032f8:	dec00304 	addi	sp,sp,12
  8032fc:	f800283a 	ret
  803300:	08015c40 	call	8015c4 <__sinit>
  803304:	003fee06 	br	8032c0 <__alt_data_end+0xff8032c0>
  803308:	00bfffc4 	movi	r2,-1
  80330c:	003ff706 	br	8032ec <__alt_data_end+0xff8032ec>

00803310 <__srget>:
  803310:	008020b4 	movhi	r2,130
  803314:	10ba8504 	addi	r2,r2,-5612
  803318:	200b883a 	mov	r5,r4
  80331c:	11000017 	ldw	r4,0(r2)
  803320:	080329c1 	jmpi	80329c <__srget_r>

00803324 <_sbrk_r>:
  803324:	defffd04 	addi	sp,sp,-12
  803328:	dc000015 	stw	r16,0(sp)
  80332c:	040020b4 	movhi	r16,130
  803330:	dc400115 	stw	r17,4(sp)
  803334:	8401f004 	addi	r16,r16,1984
  803338:	2023883a 	mov	r17,r4
  80333c:	2809883a 	mov	r4,r5
  803340:	dfc00215 	stw	ra,8(sp)
  803344:	80000015 	stw	zero,0(r16)
  803348:	0818b840 	call	818b84 <sbrk>
  80334c:	00ffffc4 	movi	r3,-1
  803350:	10c00526 	beq	r2,r3,803368 <_sbrk_r+0x44>
  803354:	dfc00217 	ldw	ra,8(sp)
  803358:	dc400117 	ldw	r17,4(sp)
  80335c:	dc000017 	ldw	r16,0(sp)
  803360:	dec00304 	addi	sp,sp,12
  803364:	f800283a 	ret
  803368:	80c00017 	ldw	r3,0(r16)
  80336c:	183ff926 	beq	r3,zero,803354 <__alt_data_end+0xff803354>
  803370:	88c00015 	stw	r3,0(r17)
  803374:	003ff706 	br	803354 <__alt_data_end+0xff803354>

00803378 <sscanf>:
  803378:	deffe204 	addi	sp,sp,-120
  80337c:	dc001a15 	stw	r16,104(sp)
  803380:	2821883a 	mov	r16,r5
  803384:	dfc01b15 	stw	ra,108(sp)
  803388:	d9801c15 	stw	r6,112(sp)
  80338c:	d9c01d15 	stw	r7,116(sp)
  803390:	00c08104 	movi	r3,516
  803394:	d8c0030d 	sth	r3,12(sp)
  803398:	d9000015 	stw	r4,0(sp)
  80339c:	d9000415 	stw	r4,16(sp)
  8033a0:	08035a80 	call	8035a8 <strlen>
  8033a4:	00c020b4 	movhi	r3,130
  8033a8:	18fa8504 	addi	r3,r3,-5612
  8033ac:	d8800115 	stw	r2,4(sp)
  8033b0:	d8800515 	stw	r2,20(sp)
  8033b4:	19000017 	ldw	r4,0(r3)
  8033b8:	00802034 	movhi	r2,128
  8033bc:	108d3004 	addi	r2,r2,13504
  8033c0:	d8800815 	stw	r2,32(sp)
  8033c4:	d9c01c04 	addi	r7,sp,112
  8033c8:	800d883a 	mov	r6,r16
  8033cc:	d80b883a 	mov	r5,sp
  8033d0:	00bfffc4 	movi	r2,-1
  8033d4:	d8000c15 	stw	zero,48(sp)
  8033d8:	d8001115 	stw	zero,68(sp)
  8033dc:	d880038d 	sth	r2,14(sp)
  8033e0:	08036400 	call	803640 <__ssvfscanf_r>
  8033e4:	dfc01b17 	ldw	ra,108(sp)
  8033e8:	dc001a17 	ldw	r16,104(sp)
  8033ec:	dec01e04 	addi	sp,sp,120
  8033f0:	f800283a 	ret

008033f4 <_sscanf_r>:
  8033f4:	deffe204 	addi	sp,sp,-120
  8033f8:	dc001b15 	stw	r16,108(sp)
  8033fc:	2021883a 	mov	r16,r4
  803400:	dfc01c15 	stw	ra,112(sp)
  803404:	d9c01d15 	stw	r7,116(sp)
  803408:	00808104 	movi	r2,516
  80340c:	2809883a 	mov	r4,r5
  803410:	d9400015 	stw	r5,0(sp)
  803414:	d9400415 	stw	r5,16(sp)
  803418:	d9801a15 	stw	r6,104(sp)
  80341c:	d880030d 	sth	r2,12(sp)
  803420:	08035a80 	call	8035a8 <strlen>
  803424:	d8800115 	stw	r2,4(sp)
  803428:	d8800515 	stw	r2,20(sp)
  80342c:	d9801a17 	ldw	r6,104(sp)
  803430:	00802034 	movhi	r2,128
  803434:	108d3004 	addi	r2,r2,13504
  803438:	d8800815 	stw	r2,32(sp)
  80343c:	d9c01d04 	addi	r7,sp,116
  803440:	d80b883a 	mov	r5,sp
  803444:	8009883a 	mov	r4,r16
  803448:	00bfffc4 	movi	r2,-1
  80344c:	d8000c15 	stw	zero,48(sp)
  803450:	d8001115 	stw	zero,68(sp)
  803454:	d880038d 	sth	r2,14(sp)
  803458:	08036400 	call	803640 <__ssvfscanf_r>
  80345c:	dfc01c17 	ldw	ra,112(sp)
  803460:	dc001b17 	ldw	r16,108(sp)
  803464:	dec01e04 	addi	sp,sp,120
  803468:	f800283a 	ret

0080346c <__sread>:
  80346c:	defffe04 	addi	sp,sp,-8
  803470:	dc000015 	stw	r16,0(sp)
  803474:	2821883a 	mov	r16,r5
  803478:	2940038f 	ldh	r5,14(r5)
  80347c:	dfc00115 	stw	ra,4(sp)
  803480:	080a9940 	call	80a994 <_read_r>
  803484:	10000716 	blt	r2,zero,8034a4 <__sread+0x38>
  803488:	80c01417 	ldw	r3,80(r16)
  80348c:	1887883a 	add	r3,r3,r2
  803490:	80c01415 	stw	r3,80(r16)
  803494:	dfc00117 	ldw	ra,4(sp)
  803498:	dc000017 	ldw	r16,0(sp)
  80349c:	dec00204 	addi	sp,sp,8
  8034a0:	f800283a 	ret
  8034a4:	80c0030b 	ldhu	r3,12(r16)
  8034a8:	18fbffcc 	andi	r3,r3,61439
  8034ac:	80c0030d 	sth	r3,12(r16)
  8034b0:	dfc00117 	ldw	ra,4(sp)
  8034b4:	dc000017 	ldw	r16,0(sp)
  8034b8:	dec00204 	addi	sp,sp,8
  8034bc:	f800283a 	ret

008034c0 <__seofread>:
  8034c0:	0005883a 	mov	r2,zero
  8034c4:	f800283a 	ret

008034c8 <__swrite>:
  8034c8:	2880030b 	ldhu	r2,12(r5)
  8034cc:	defffb04 	addi	sp,sp,-20
  8034d0:	dcc00315 	stw	r19,12(sp)
  8034d4:	dc800215 	stw	r18,8(sp)
  8034d8:	dc400115 	stw	r17,4(sp)
  8034dc:	dc000015 	stw	r16,0(sp)
  8034e0:	dfc00415 	stw	ra,16(sp)
  8034e4:	10c0400c 	andi	r3,r2,256
  8034e8:	2821883a 	mov	r16,r5
  8034ec:	2023883a 	mov	r17,r4
  8034f0:	3025883a 	mov	r18,r6
  8034f4:	3827883a 	mov	r19,r7
  8034f8:	18000526 	beq	r3,zero,803510 <__swrite+0x48>
  8034fc:	2940038f 	ldh	r5,14(r5)
  803500:	01c00084 	movi	r7,2
  803504:	000d883a 	mov	r6,zero
  803508:	08092240 	call	809224 <_lseek_r>
  80350c:	8080030b 	ldhu	r2,12(r16)
  803510:	8140038f 	ldh	r5,14(r16)
  803514:	10bbffcc 	andi	r2,r2,61439
  803518:	980f883a 	mov	r7,r19
  80351c:	900d883a 	mov	r6,r18
  803520:	8809883a 	mov	r4,r17
  803524:	8080030d 	sth	r2,12(r16)
  803528:	dfc00417 	ldw	ra,16(sp)
  80352c:	dcc00317 	ldw	r19,12(sp)
  803530:	dc800217 	ldw	r18,8(sp)
  803534:	dc400117 	ldw	r17,4(sp)
  803538:	dc000017 	ldw	r16,0(sp)
  80353c:	dec00504 	addi	sp,sp,20
  803540:	08070cc1 	jmpi	8070cc <_write_r>

00803544 <__sseek>:
  803544:	defffe04 	addi	sp,sp,-8
  803548:	dc000015 	stw	r16,0(sp)
  80354c:	2821883a 	mov	r16,r5
  803550:	2940038f 	ldh	r5,14(r5)
  803554:	dfc00115 	stw	ra,4(sp)
  803558:	08092240 	call	809224 <_lseek_r>
  80355c:	00ffffc4 	movi	r3,-1
  803560:	10c00826 	beq	r2,r3,803584 <__sseek+0x40>
  803564:	80c0030b 	ldhu	r3,12(r16)
  803568:	80801415 	stw	r2,80(r16)
  80356c:	18c40014 	ori	r3,r3,4096
  803570:	80c0030d 	sth	r3,12(r16)
  803574:	dfc00117 	ldw	ra,4(sp)
  803578:	dc000017 	ldw	r16,0(sp)
  80357c:	dec00204 	addi	sp,sp,8
  803580:	f800283a 	ret
  803584:	80c0030b 	ldhu	r3,12(r16)
  803588:	18fbffcc 	andi	r3,r3,61439
  80358c:	80c0030d 	sth	r3,12(r16)
  803590:	dfc00117 	ldw	ra,4(sp)
  803594:	dc000017 	ldw	r16,0(sp)
  803598:	dec00204 	addi	sp,sp,8
  80359c:	f800283a 	ret

008035a0 <__sclose>:
  8035a0:	2940038f 	ldh	r5,14(r5)
  8035a4:	08072801 	jmpi	807280 <_close_r>

008035a8 <strlen>:
  8035a8:	208000cc 	andi	r2,r4,3
  8035ac:	10002026 	beq	r2,zero,803630 <strlen+0x88>
  8035b0:	20800007 	ldb	r2,0(r4)
  8035b4:	10002026 	beq	r2,zero,803638 <strlen+0x90>
  8035b8:	2005883a 	mov	r2,r4
  8035bc:	00000206 	br	8035c8 <strlen+0x20>
  8035c0:	10c00007 	ldb	r3,0(r2)
  8035c4:	18001826 	beq	r3,zero,803628 <strlen+0x80>
  8035c8:	10800044 	addi	r2,r2,1
  8035cc:	10c000cc 	andi	r3,r2,3
  8035d0:	183ffb1e 	bne	r3,zero,8035c0 <__alt_data_end+0xff8035c0>
  8035d4:	10c00017 	ldw	r3,0(r2)
  8035d8:	01ffbff4 	movhi	r7,65279
  8035dc:	39ffbfc4 	addi	r7,r7,-257
  8035e0:	00ca303a 	nor	r5,zero,r3
  8035e4:	01a02074 	movhi	r6,32897
  8035e8:	19c7883a 	add	r3,r3,r7
  8035ec:	31a02004 	addi	r6,r6,-32640
  8035f0:	1946703a 	and	r3,r3,r5
  8035f4:	1986703a 	and	r3,r3,r6
  8035f8:	1800091e 	bne	r3,zero,803620 <strlen+0x78>
  8035fc:	10800104 	addi	r2,r2,4
  803600:	10c00017 	ldw	r3,0(r2)
  803604:	19cb883a 	add	r5,r3,r7
  803608:	00c6303a 	nor	r3,zero,r3
  80360c:	28c6703a 	and	r3,r5,r3
  803610:	1986703a 	and	r3,r3,r6
  803614:	183ff926 	beq	r3,zero,8035fc <__alt_data_end+0xff8035fc>
  803618:	00000106 	br	803620 <strlen+0x78>
  80361c:	10800044 	addi	r2,r2,1
  803620:	10c00007 	ldb	r3,0(r2)
  803624:	183ffd1e 	bne	r3,zero,80361c <__alt_data_end+0xff80361c>
  803628:	1105c83a 	sub	r2,r2,r4
  80362c:	f800283a 	ret
  803630:	2005883a 	mov	r2,r4
  803634:	003fe706 	br	8035d4 <__alt_data_end+0xff8035d4>
  803638:	0005883a 	mov	r2,zero
  80363c:	f800283a 	ret

00803640 <__ssvfscanf_r>:
  803640:	2880030b 	ldhu	r2,12(r5)
  803644:	deff4b04 	addi	sp,sp,-724
  803648:	df00b315 	stw	fp,716(sp)
  80364c:	dd80b115 	stw	r22,708(sp)
  803650:	dfc0b415 	stw	ra,720(sp)
  803654:	ddc0b215 	stw	r23,712(sp)
  803658:	dd40b015 	stw	r21,704(sp)
  80365c:	dd00af15 	stw	r20,700(sp)
  803660:	dcc0ae15 	stw	r19,696(sp)
  803664:	dc80ad15 	stw	r18,692(sp)
  803668:	dc40ac15 	stw	r17,688(sp)
  80366c:	dc00ab15 	stw	r16,684(sp)
  803670:	10c8000c 	andi	r3,r2,8192
  803674:	d9c09c15 	stw	r7,624(sp)
  803678:	2839883a 	mov	fp,r5
  80367c:	202d883a 	mov	r22,r4
  803680:	1800061e 	bne	r3,zero,80369c <__ssvfscanf_r+0x5c>
  803684:	29001917 	ldw	r4,100(r5)
  803688:	00f7ffc4 	movi	r3,-8193
  80368c:	10880014 	ori	r2,r2,8192
  803690:	20c6703a 	and	r3,r4,r3
  803694:	2880030d 	sth	r2,12(r5)
  803698:	28c01915 	stw	r3,100(r5)
  80369c:	30800003 	ldbu	r2,0(r6)
  8036a0:	0021883a 	mov	r16,zero
  8036a4:	05c020b4 	movhi	r23,130
  8036a8:	d800a115 	stw	zero,644(sp)
  8036ac:	d8009e15 	stw	zero,632(sp)
  8036b0:	d800a015 	stw	zero,640(sp)
  8036b4:	d8809b15 	stw	r2,620(sp)
  8036b8:	bdfa8804 	addi	r23,r23,-5600
  8036bc:	8025883a 	mov	r18,r16
  8036c0:	35000044 	addi	r20,r6,1
  8036c4:	10001e26 	beq	r2,zero,803740 <__ssvfscanf_r+0x100>
  8036c8:	b9c00017 	ldw	r7,0(r23)
  8036cc:	3887883a 	add	r3,r7,r2
  8036d0:	18c00043 	ldbu	r3,1(r3)
  8036d4:	18c0020c 	andi	r3,r3,8
  8036d8:	18001b26 	beq	r3,zero,803748 <__ssvfscanf_r+0x108>
  8036dc:	e0800117 	ldw	r2,4(fp)
  8036e0:	00800e0e 	bge	zero,r2,80371c <__ssvfscanf_r+0xdc>
  8036e4:	e0c00017 	ldw	r3,0(fp)
  8036e8:	b9000017 	ldw	r4,0(r23)
  8036ec:	18800003 	ldbu	r2,0(r3)
  8036f0:	2085883a 	add	r2,r4,r2
  8036f4:	10800043 	ldbu	r2,1(r2)
  8036f8:	1080020c 	andi	r2,r2,8
  8036fc:	10000b26 	beq	r2,zero,80372c <__ssvfscanf_r+0xec>
  803700:	e0800117 	ldw	r2,4(fp)
  803704:	18c00044 	addi	r3,r3,1
  803708:	e0c00015 	stw	r3,0(fp)
  80370c:	10bfffc4 	addi	r2,r2,-1
  803710:	e0800115 	stw	r2,4(fp)
  803714:	94800044 	addi	r18,r18,1
  803718:	00bff216 	blt	zero,r2,8036e4 <__alt_data_end+0xff8036e4>
  80371c:	e00b883a 	mov	r5,fp
  803720:	b009883a 	mov	r4,r22
  803724:	080d5a00 	call	80d5a0 <__ssrefill_r>
  803728:	103fee26 	beq	r2,zero,8036e4 <__alt_data_end+0xff8036e4>
  80372c:	a00d883a 	mov	r6,r20
  803730:	30800003 	ldbu	r2,0(r6)
  803734:	35000044 	addi	r20,r6,1
  803738:	d8809b15 	stw	r2,620(sp)
  80373c:	103fe21e 	bne	r2,zero,8036c8 <__alt_data_end+0xff8036c8>
  803740:	d880a017 	ldw	r2,640(sp)
  803744:	00009906 	br	8039ac <__ssvfscanf_r+0x36c>
  803748:	00c00944 	movi	r3,37
  80374c:	10c0881e 	bne	r2,r3,803970 <__ssvfscanf_r+0x330>
  803750:	30c00043 	ldbu	r3,1(r6)
  803754:	0023883a 	mov	r17,zero
  803758:	0027883a 	mov	r19,zero
  80375c:	01001e04 	movi	r4,120
  803760:	01401b04 	movi	r5,108
  803764:	a1800044 	addi	r6,r20,1
  803768:	20c0a236 	bltu	r4,r3,8039f4 <__ssvfscanf_r+0x3b4>
  80376c:	180490ba 	slli	r2,r3,2
  803770:	02002034 	movhi	r8,128
  803774:	420de104 	addi	r8,r8,14212
  803778:	1205883a 	add	r2,r2,r8
  80377c:	10800017 	ldw	r2,0(r2)
  803780:	1000683a 	jmp	r2
  803784:	008039a8 	cmpgeui	r2,zero,230
  803788:	008039f4 	movhi	r2,231
  80378c:	008039f4 	movhi	r2,231
  803790:	008039f4 	movhi	r2,231
  803794:	008039f4 	movhi	r2,231
  803798:	008039f4 	movhi	r2,231
  80379c:	008039f4 	movhi	r2,231
  8037a0:	008039f4 	movhi	r2,231
  8037a4:	008039f4 	movhi	r2,231
  8037a8:	008039f4 	movhi	r2,231
  8037ac:	008039f4 	movhi	r2,231
  8037b0:	008039f4 	movhi	r2,231
  8037b4:	008039f4 	movhi	r2,231
  8037b8:	008039f4 	movhi	r2,231
  8037bc:	008039f4 	movhi	r2,231
  8037c0:	008039f4 	movhi	r2,231
  8037c4:	008039f4 	movhi	r2,231
  8037c8:	008039f4 	movhi	r2,231
  8037cc:	008039f4 	movhi	r2,231
  8037d0:	008039f4 	movhi	r2,231
  8037d4:	008039f4 	movhi	r2,231
  8037d8:	008039f4 	movhi	r2,231
  8037dc:	008039f4 	movhi	r2,231
  8037e0:	008039f4 	movhi	r2,231
  8037e4:	008039f4 	movhi	r2,231
  8037e8:	008039f4 	movhi	r2,231
  8037ec:	008039f4 	movhi	r2,231
  8037f0:	008039f4 	movhi	r2,231
  8037f4:	008039f4 	movhi	r2,231
  8037f8:	008039f4 	movhi	r2,231
  8037fc:	008039f4 	movhi	r2,231
  803800:	008039f4 	movhi	r2,231
  803804:	008039f4 	movhi	r2,231
  803808:	008039f4 	movhi	r2,231
  80380c:	008039f4 	movhi	r2,231
  803810:	008039f4 	movhi	r2,231
  803814:	008039f4 	movhi	r2,231
  803818:	00803968 	cmpgeui	r2,zero,229
  80381c:	008039f4 	movhi	r2,231
  803820:	008039f4 	movhi	r2,231
  803824:	008039f4 	movhi	r2,231
  803828:	008039f4 	movhi	r2,231
  80382c:	008039dc 	xori	r2,zero,231
  803830:	008039f4 	movhi	r2,231
  803834:	008039f4 	movhi	r2,231
  803838:	008039f4 	movhi	r2,231
  80383c:	008039f4 	movhi	r2,231
  803840:	008039f4 	movhi	r2,231
  803844:	00803b10 	cmplti	r2,zero,236
  803848:	00803b10 	cmplti	r2,zero,236
  80384c:	00803b10 	cmplti	r2,zero,236
  803850:	00803b10 	cmplti	r2,zero,236
  803854:	00803b10 	cmplti	r2,zero,236
  803858:	00803b10 	cmplti	r2,zero,236
  80385c:	00803b10 	cmplti	r2,zero,236
  803860:	00803b10 	cmplti	r2,zero,236
  803864:	00803b10 	cmplti	r2,zero,236
  803868:	00803b10 	cmplti	r2,zero,236
  80386c:	008039f4 	movhi	r2,231
  803870:	008039f4 	movhi	r2,231
  803874:	008039f4 	movhi	r2,231
  803878:	008039f4 	movhi	r2,231
  80387c:	008039f4 	movhi	r2,231
  803880:	008039f4 	movhi	r2,231
  803884:	008039f4 	movhi	r2,231
  803888:	008039f4 	movhi	r2,231
  80388c:	008039f4 	movhi	r2,231
  803890:	008039f4 	movhi	r2,231
  803894:	00803ae4 	muli	r2,zero,235
  803898:	00803b94 	movui	r2,238
  80389c:	008039f4 	movhi	r2,231
  8038a0:	00803b94 	movui	r2,238
  8038a4:	008039f4 	movhi	r2,231
  8038a8:	008039f4 	movhi	r2,231
  8038ac:	008039f4 	movhi	r2,231
  8038b0:	008039f4 	movhi	r2,231
  8038b4:	00803b80 	call	803b8 <__alt_mem_sdram_0-0x77fc48>
  8038b8:	008039f4 	movhi	r2,231
  8038bc:	008039f4 	movhi	r2,231
  8038c0:	00803b54 	movui	r2,237
  8038c4:	008039f4 	movhi	r2,231
  8038c8:	008039f4 	movhi	r2,231
  8038cc:	008039f4 	movhi	r2,231
  8038d0:	008039f4 	movhi	r2,231
  8038d4:	008039f4 	movhi	r2,231
  8038d8:	008039f4 	movhi	r2,231
  8038dc:	008039f4 	movhi	r2,231
  8038e0:	008039f4 	movhi	r2,231
  8038e4:	00803b2c 	andhi	r2,zero,236
  8038e8:	008039f4 	movhi	r2,231
  8038ec:	008039f4 	movhi	r2,231
  8038f0:	00803cc8 	cmpgei	r2,zero,243
  8038f4:	008039f4 	movhi	r2,231
  8038f8:	008039f4 	movhi	r2,231
  8038fc:	008039f4 	movhi	r2,231
  803900:	008039f4 	movhi	r2,231
  803904:	008039f4 	movhi	r2,231
  803908:	008039f4 	movhi	r2,231
  80390c:	008039f4 	movhi	r2,231
  803910:	00803c4c 	andi	r2,zero,241
  803914:	00803c24 	muli	r2,zero,240
  803918:	00803b94 	movui	r2,238
  80391c:	00803b94 	movui	r2,238
  803920:	00803b94 	movui	r2,238
  803924:	00803c10 	cmplti	r2,zero,240
  803928:	00803d54 	movui	r2,245
  80392c:	008039f4 	movhi	r2,231
  803930:	008039f4 	movhi	r2,231
  803934:	00803bfc 	xorhi	r2,zero,239
  803938:	008039f4 	movhi	r2,231
  80393c:	00803bcc 	andi	r2,zero,239
  803940:	00803ba8 	cmpgeui	r2,zero,238
  803944:	00803ab8 	rdprs	r2,zero,234
  803948:	008039f4 	movhi	r2,231
  80394c:	008039f4 	movhi	r2,231
  803950:	00803aa4 	muli	r2,zero,234
  803954:	008039f4 	movhi	r2,231
  803958:	00803a2c 	andhi	r2,zero,232
  80395c:	008039f4 	movhi	r2,231
  803960:	008039f4 	movhi	r2,231
  803964:	00803b2c 	andhi	r2,zero,236
  803968:	d9809d15 	stw	r6,628(sp)
  80396c:	3029883a 	mov	r20,r6
  803970:	e0800117 	ldw	r2,4(fp)
  803974:	0081aa0e 	bge	zero,r2,804020 <__ssvfscanf_r+0x9e0>
  803978:	e0800017 	ldw	r2,0(fp)
  80397c:	a0ffffc3 	ldbu	r3,-1(r20)
  803980:	11000003 	ldbu	r4,0(r2)
  803984:	20ff6e1e 	bne	r4,r3,803740 <__alt_data_end+0xff803740>
  803988:	e0c00117 	ldw	r3,4(fp)
  80398c:	10800044 	addi	r2,r2,1
  803990:	e0800015 	stw	r2,0(fp)
  803994:	18bfffc4 	addi	r2,r3,-1
  803998:	e0800115 	stw	r2,4(fp)
  80399c:	94800044 	addi	r18,r18,1
  8039a0:	a00d883a 	mov	r6,r20
  8039a4:	003f6206 	br	803730 <__alt_data_end+0xff803730>
  8039a8:	00bfffc4 	movi	r2,-1
  8039ac:	dfc0b417 	ldw	ra,720(sp)
  8039b0:	df00b317 	ldw	fp,716(sp)
  8039b4:	ddc0b217 	ldw	r23,712(sp)
  8039b8:	dd80b117 	ldw	r22,708(sp)
  8039bc:	dd40b017 	ldw	r21,704(sp)
  8039c0:	dd00af17 	ldw	r20,700(sp)
  8039c4:	dcc0ae17 	ldw	r19,696(sp)
  8039c8:	dc80ad17 	ldw	r18,692(sp)
  8039cc:	dc40ac17 	ldw	r17,688(sp)
  8039d0:	dc00ab17 	ldw	r16,684(sp)
  8039d4:	dec0b504 	addi	sp,sp,724
  8039d8:	f800283a 	ret
  8039dc:	a0800043 	ldbu	r2,1(r20)
  8039e0:	3029883a 	mov	r20,r6
  8039e4:	8c400414 	ori	r17,r17,16
  8039e8:	10c03fcc 	andi	r3,r2,255
  8039ec:	a1800044 	addi	r6,r20,1
  8039f0:	20ff5e2e 	bgeu	r4,r3,80376c <__alt_data_end+0xff80376c>
  8039f4:	38c7883a 	add	r3,r7,r3
  8039f8:	18800043 	ldbu	r2,1(r3)
  8039fc:	d9809d15 	stw	r6,628(sp)
  803a00:	00c00044 	movi	r3,1
  803a04:	108000cc 	andi	r2,r2,3
  803a08:	10c18f26 	beq	r2,r3,804048 <__ssvfscanf_r+0xa08>
  803a0c:	e0800117 	ldw	r2,4(fp)
  803a10:	00808716 	blt	zero,r2,803c30 <__ssvfscanf_r+0x5f0>
  803a14:	e00b883a 	mov	r5,fp
  803a18:	b009883a 	mov	r4,r22
  803a1c:	080d5a00 	call	80d5a0 <__ssrefill_r>
  803a20:	1001431e 	bne	r2,zero,803f30 <__ssvfscanf_r+0x8f0>
  803a24:	b9c00017 	ldw	r7,0(r23)
  803a28:	00008106 	br	803c30 <__ssvfscanf_r+0x5f0>
  803a2c:	e0800117 	ldw	r2,4(fp)
  803a30:	d9809d15 	stw	r6,628(sp)
  803a34:	0081a30e 	bge	zero,r2,8040c4 <__ssvfscanf_r+0xa84>
  803a38:	00802074 	movhi	r2,129
  803a3c:	10b3c404 	addi	r2,r2,-12528
  803a40:	02000284 	movi	r8,10
  803a44:	d880a115 	stw	r2,644(sp)
  803a48:	da009e15 	stw	r8,632(sp)
  803a4c:	050000c4 	movi	r20,3
  803a50:	e0c00017 	ldw	r3,0(fp)
  803a54:	00000206 	br	803a60 <__ssvfscanf_r+0x420>
  803a58:	18c00044 	addi	r3,r3,1
  803a5c:	e0c00015 	stw	r3,0(fp)
  803a60:	19000003 	ldbu	r4,0(r3)
  803a64:	20803fcc 	andi	r2,r4,255
  803a68:	3885883a 	add	r2,r7,r2
  803a6c:	10800043 	ldbu	r2,1(r2)
  803a70:	1140020c 	andi	r5,r2,8
  803a74:	2801ab26 	beq	r5,zero,804124 <__ssvfscanf_r+0xae4>
  803a78:	e0800117 	ldw	r2,4(fp)
  803a7c:	94800044 	addi	r18,r18,1
  803a80:	10bfffc4 	addi	r2,r2,-1
  803a84:	e0800115 	stw	r2,4(fp)
  803a88:	00bff316 	blt	zero,r2,803a58 <__alt_data_end+0xff803a58>
  803a8c:	e00b883a 	mov	r5,fp
  803a90:	b009883a 	mov	r4,r22
  803a94:	080d5a00 	call	80d5a0 <__ssrefill_r>
  803a98:	1001251e 	bne	r2,zero,803f30 <__ssvfscanf_r+0x8f0>
  803a9c:	b9c00017 	ldw	r7,0(r23)
  803aa0:	003feb06 	br	803a50 <__alt_data_end+0xff803a50>
  803aa4:	e0800117 	ldw	r2,4(fp)
  803aa8:	d9809d15 	stw	r6,628(sp)
  803aac:	00818b0e 	bge	zero,r2,8040dc <__ssvfscanf_r+0xa9c>
  803ab0:	05000084 	movi	r20,2
  803ab4:	003fe606 	br	803a50 <__alt_data_end+0xff803a50>
  803ab8:	e0800117 	ldw	r2,4(fp)
  803abc:	d9809d15 	stw	r6,628(sp)
  803ac0:	8c408814 	ori	r17,r17,544
  803ac4:	00801d0e 	bge	zero,r2,803b3c <__ssvfscanf_r+0x4fc>
  803ac8:	00802074 	movhi	r2,129
  803acc:	10b3c404 	addi	r2,r2,-12528
  803ad0:	02000404 	movi	r8,16
  803ad4:	d880a115 	stw	r2,644(sp)
  803ad8:	da009e15 	stw	r8,632(sp)
  803adc:	050000c4 	movi	r20,3
  803ae0:	003fdb06 	br	803a50 <__alt_data_end+0xff803a50>
  803ae4:	e0800117 	ldw	r2,4(fp)
  803ae8:	d9809d15 	stw	r6,628(sp)
  803aec:	8c400054 	ori	r17,r17,1
  803af0:	00bfc80e 	bge	zero,r2,803a14 <__alt_data_end+0xff803a14>
  803af4:	00c02074 	movhi	r3,129
  803af8:	18f26e04 	addi	r3,r3,-13896
  803afc:	02000284 	movi	r8,10
  803b00:	d8c0a115 	stw	r3,644(sp)
  803b04:	da009e15 	stw	r8,632(sp)
  803b08:	050000c4 	movi	r20,3
  803b0c:	003fd006 	br	803a50 <__alt_data_end+0xff803a50>
  803b10:	9cc002a4 	muli	r19,r19,10
  803b14:	a0800043 	ldbu	r2,1(r20)
  803b18:	3029883a 	mov	r20,r6
  803b1c:	98e7883a 	add	r19,r19,r3
  803b20:	9cfff404 	addi	r19,r19,-48
  803b24:	10c03fcc 	andi	r3,r2,255
  803b28:	003f0e06 	br	803764 <__alt_data_end+0xff803764>
  803b2c:	e0800117 	ldw	r2,4(fp)
  803b30:	d9809d15 	stw	r6,628(sp)
  803b34:	8c408014 	ori	r17,r17,512
  803b38:	00bfe316 	blt	zero,r2,803ac8 <__alt_data_end+0xff803ac8>
  803b3c:	e00b883a 	mov	r5,fp
  803b40:	b009883a 	mov	r4,r22
  803b44:	080d5a00 	call	80d5a0 <__ssrefill_r>
  803b48:	1000f91e 	bne	r2,zero,803f30 <__ssvfscanf_r+0x8f0>
  803b4c:	b9c00017 	ldw	r7,0(r23)
  803b50:	003fdd06 	br	803ac8 <__alt_data_end+0xff803ac8>
  803b54:	e0800117 	ldw	r2,4(fp)
  803b58:	d9809d15 	stw	r6,628(sp)
  803b5c:	8c400054 	ori	r17,r17,1
  803b60:	0080140e 	bge	zero,r2,803bb4 <__ssvfscanf_r+0x574>
  803b64:	00802074 	movhi	r2,129
  803b68:	10b3c404 	addi	r2,r2,-12528
  803b6c:	02000204 	movi	r8,8
  803b70:	d880a115 	stw	r2,644(sp)
  803b74:	da009e15 	stw	r8,632(sp)
  803b78:	050000c4 	movi	r20,3
  803b7c:	003fb406 	br	803a50 <__alt_data_end+0xff803a50>
  803b80:	a0800043 	ldbu	r2,1(r20)
  803b84:	8c400094 	ori	r17,r17,2
  803b88:	3029883a 	mov	r20,r6
  803b8c:	10c03fcc 	andi	r3,r2,255
  803b90:	003ef406 	br	803764 <__alt_data_end+0xff803764>
  803b94:	e0800117 	ldw	r2,4(fp)
  803b98:	d9809d15 	stw	r6,628(sp)
  803b9c:	0081420e 	bge	zero,r2,8040a8 <__ssvfscanf_r+0xa68>
  803ba0:	05000104 	movi	r20,4
  803ba4:	003faa06 	br	803a50 <__alt_data_end+0xff803a50>
  803ba8:	e0800117 	ldw	r2,4(fp)
  803bac:	d9809d15 	stw	r6,628(sp)
  803bb0:	00bfec16 	blt	zero,r2,803b64 <__alt_data_end+0xff803b64>
  803bb4:	e00b883a 	mov	r5,fp
  803bb8:	b009883a 	mov	r4,r22
  803bbc:	080d5a00 	call	80d5a0 <__ssrefill_r>
  803bc0:	1000db1e 	bne	r2,zero,803f30 <__ssvfscanf_r+0x8f0>
  803bc4:	b9c00017 	ldw	r7,0(r23)
  803bc8:	003fe606 	br	803b64 <__alt_data_end+0xff803b64>
  803bcc:	d9809d15 	stw	r6,628(sp)
  803bd0:	8880040c 	andi	r2,r17,16
  803bd4:	10009c1e 	bne	r2,zero,803e48 <__ssvfscanf_r+0x808>
  803bd8:	8880010c 	andi	r2,r17,4
  803bdc:	10011e26 	beq	r2,zero,804058 <__ssvfscanf_r+0xa18>
  803be0:	da009c17 	ldw	r8,624(sp)
  803be4:	3029883a 	mov	r20,r6
  803be8:	40800017 	ldw	r2,0(r8)
  803bec:	42000104 	addi	r8,r8,4
  803bf0:	da009c15 	stw	r8,624(sp)
  803bf4:	1480000d 	sth	r18,0(r2)
  803bf8:	003ecc06 	br	80372c <__alt_data_end+0xff80372c>
  803bfc:	a0c00043 	ldbu	r3,1(r20)
  803c00:	19410c26 	beq	r3,r5,804034 <__ssvfscanf_r+0x9f4>
  803c04:	8c400054 	ori	r17,r17,1
  803c08:	3029883a 	mov	r20,r6
  803c0c:	003ed506 	br	803764 <__alt_data_end+0xff803764>
  803c10:	a0800043 	ldbu	r2,1(r20)
  803c14:	8c400114 	ori	r17,r17,4
  803c18:	3029883a 	mov	r20,r6
  803c1c:	10c03fcc 	andi	r3,r2,255
  803c20:	003ed006 	br	803764 <__alt_data_end+0xff803764>
  803c24:	e0800117 	ldw	r2,4(fp)
  803c28:	d9809d15 	stw	r6,628(sp)
  803c2c:	00bf790e 	bge	zero,r2,803a14 <__alt_data_end+0xff803a14>
  803c30:	00802074 	movhi	r2,129
  803c34:	10b26e04 	addi	r2,r2,-13896
  803c38:	02000284 	movi	r8,10
  803c3c:	d880a115 	stw	r2,644(sp)
  803c40:	da009e15 	stw	r8,632(sp)
  803c44:	050000c4 	movi	r20,3
  803c48:	003f8106 	br	803a50 <__alt_data_end+0xff803a50>
  803c4c:	e0800117 	ldw	r2,4(fp)
  803c50:	d9809d15 	stw	r6,628(sp)
  803c54:	0080c40e 	bge	zero,r2,803f68 <__ssvfscanf_r+0x928>
  803c58:	9800011e 	bne	r19,zero,803c60 <__ssvfscanf_r+0x620>
  803c5c:	04c00044 	movi	r19,1
  803c60:	8880004c 	andi	r2,r17,1
  803c64:	1000441e 	bne	r2,zero,803d78 <__ssvfscanf_r+0x738>
  803c68:	8c40040c 	andi	r17,r17,16
  803c6c:	8800da26 	beq	r17,zero,803fd8 <__ssvfscanf_r+0x998>
  803c70:	0021883a 	mov	r16,zero
  803c74:	00000806 	br	803c98 <__ssvfscanf_r+0x658>
  803c78:	1887883a 	add	r3,r3,r2
  803c7c:	e00b883a 	mov	r5,fp
  803c80:	b009883a 	mov	r4,r22
  803c84:	e0c00015 	stw	r3,0(fp)
  803c88:	80a1883a 	add	r16,r16,r2
  803c8c:	98a7c83a 	sub	r19,r19,r2
  803c90:	080d5a00 	call	80d5a0 <__ssrefill_r>
  803c94:	1000ca1e 	bne	r2,zero,803fc0 <__ssvfscanf_r+0x980>
  803c98:	e0800117 	ldw	r2,4(fp)
  803c9c:	e0c00017 	ldw	r3,0(fp)
  803ca0:	14fff516 	blt	r2,r19,803c78 <__alt_data_end+0xff803c78>
  803ca4:	14c5c83a 	sub	r2,r2,r19
  803ca8:	1cd5883a 	add	r10,r3,r19
  803cac:	84e1883a 	add	r16,r16,r19
  803cb0:	e0800115 	stw	r2,4(fp)
  803cb4:	e2800015 	stw	r10,0(fp)
  803cb8:	dd009d17 	ldw	r20,628(sp)
  803cbc:	9425883a 	add	r18,r18,r16
  803cc0:	a00d883a 	mov	r6,r20
  803cc4:	003e9a06 	br	803730 <__alt_data_end+0xff803730>
  803cc8:	300b883a 	mov	r5,r6
  803ccc:	d9005884 	addi	r4,sp,354
  803cd0:	d9809d15 	stw	r6,628(sp)
  803cd4:	080afcc0 	call	80afcc <__sccl>
  803cd8:	1029883a 	mov	r20,r2
  803cdc:	e0800117 	ldw	r2,4(fp)
  803ce0:	0081050e 	bge	zero,r2,8040f8 <__ssvfscanf_r+0xab8>
  803ce4:	e1000017 	ldw	r4,0(fp)
  803ce8:	20800003 	ldbu	r2,0(r4)
  803cec:	98005926 	beq	r19,zero,803e54 <__ssvfscanf_r+0x814>
  803cf0:	8c40040c 	andi	r17,r17,16
  803cf4:	88005a26 	beq	r17,zero,803e60 <__ssvfscanf_r+0x820>
  803cf8:	9823883a 	mov	r17,r19
  803cfc:	0021883a 	mov	r16,zero
  803d00:	00000106 	br	803d08 <__ssvfscanf_r+0x6c8>
  803d04:	20800003 	ldbu	r2,0(r4)
  803d08:	10803fcc 	andi	r2,r2,255
  803d0c:	d8c05884 	addi	r3,sp,354
  803d10:	1885883a 	add	r2,r3,r2
  803d14:	10800007 	ldb	r2,0(r2)
  803d18:	1000ad26 	beq	r2,zero,803fd0 <__ssvfscanf_r+0x990>
  803d1c:	e0800117 	ldw	r2,4(fp)
  803d20:	21000044 	addi	r4,r4,1
  803d24:	84000044 	addi	r16,r16,1
  803d28:	10bfffc4 	addi	r2,r2,-1
  803d2c:	e0800115 	stw	r2,4(fp)
  803d30:	e1000015 	stw	r4,0(fp)
  803d34:	84c0a026 	beq	r16,r19,803fb8 <__ssvfscanf_r+0x978>
  803d38:	00bff216 	blt	zero,r2,803d04 <__alt_data_end+0xff803d04>
  803d3c:	e00b883a 	mov	r5,fp
  803d40:	b009883a 	mov	r4,r22
  803d44:	080d5a00 	call	80d5a0 <__ssrefill_r>
  803d48:	10009a1e 	bne	r2,zero,803fb4 <__ssvfscanf_r+0x974>
  803d4c:	e1000017 	ldw	r4,0(fp)
  803d50:	003fec06 	br	803d04 <__alt_data_end+0xff803d04>
  803d54:	e0800117 	ldw	r2,4(fp)
  803d58:	d9809d15 	stw	r6,628(sp)
  803d5c:	0080eb0e 	bge	zero,r2,80410c <__ssvfscanf_r+0xacc>
  803d60:	00802074 	movhi	r2,129
  803d64:	10b26e04 	addi	r2,r2,-13896
  803d68:	d880a115 	stw	r2,644(sp)
  803d6c:	d8009e15 	stw	zero,632(sp)
  803d70:	050000c4 	movi	r20,3
  803d74:	003f3606 	br	803a50 <__alt_data_end+0xff803a50>
  803d78:	dd409904 	addi	r21,sp,612
  803d7c:	8c40040c 	andi	r17,r17,16
  803d80:	01800204 	movi	r6,8
  803d84:	000b883a 	mov	r5,zero
  803d88:	a809883a 	mov	r4,r21
  803d8c:	dc409f15 	stw	r17,636(sp)
  803d90:	0802dc40 	call	802dc4 <memset>
  803d94:	dc409f17 	ldw	r17,636(sp)
  803d98:	88006e26 	beq	r17,zero,803f54 <__ssvfscanf_r+0x914>
  803d9c:	0029883a 	mov	r20,zero
  803da0:	0023883a 	mov	r17,zero
  803da4:	08091d00 	call	8091d0 <__locale_mb_cur_max>
  803da8:	14406126 	beq	r2,r17,803f30 <__ssvfscanf_r+0x8f0>
  803dac:	e0800017 	ldw	r2,0(fp)
  803db0:	e0c00117 	ldw	r3,4(fp)
  803db4:	d9000104 	addi	r4,sp,4
  803db8:	12000003 	ldbu	r8,0(r2)
  803dbc:	18ffffc4 	addi	r3,r3,-1
  803dc0:	10800044 	addi	r2,r2,1
  803dc4:	e0c00115 	stw	r3,4(fp)
  803dc8:	e0800015 	stw	r2,0(fp)
  803dcc:	8c000044 	addi	r16,r17,1
  803dd0:	dd400015 	stw	r21,0(sp)
  803dd4:	2463883a 	add	r17,r4,r17
  803dd8:	200d883a 	mov	r6,r4
  803ddc:	a00b883a 	mov	r5,r20
  803de0:	800f883a 	mov	r7,r16
  803de4:	b009883a 	mov	r4,r22
  803de8:	8a000005 	stb	r8,0(r17)
  803dec:	08092840 	call	809284 <_mbrtowc_r>
  803df0:	017fffc4 	movi	r5,-1
  803df4:	11404e26 	beq	r2,r5,803f30 <__ssvfscanf_r+0x8f0>
  803df8:	1000601e 	bne	r2,zero,803f7c <__ssvfscanf_r+0x93c>
  803dfc:	da009f17 	ldw	r8,636(sp)
  803e00:	4000641e 	bne	r8,zero,803f94 <__ssvfscanf_r+0x954>
  803e04:	a0000015 	stw	zero,0(r20)
  803e08:	9425883a 	add	r18,r18,r16
  803e0c:	9967883a 	add	r19,r19,r5
  803e10:	a5000104 	addi	r20,r20,4
  803e14:	e0800117 	ldw	r2,4(fp)
  803e18:	0023883a 	mov	r17,zero
  803e1c:	00804b16 	blt	zero,r2,803f4c <__ssvfscanf_r+0x90c>
  803e20:	e00b883a 	mov	r5,fp
  803e24:	b009883a 	mov	r4,r22
  803e28:	080d5a00 	call	80d5a0 <__ssrefill_r>
  803e2c:	10004726 	beq	r2,zero,803f4c <__ssvfscanf_r+0x90c>
  803e30:	88003f1e 	bne	r17,zero,803f30 <__ssvfscanf_r+0x8f0>
  803e34:	d8c09f17 	ldw	r3,636(sp)
  803e38:	1800031e 	bne	r3,zero,803e48 <__ssvfscanf_r+0x808>
  803e3c:	da00a017 	ldw	r8,640(sp)
  803e40:	42000044 	addi	r8,r8,1
  803e44:	da00a015 	stw	r8,640(sp)
  803e48:	dd009d17 	ldw	r20,628(sp)
  803e4c:	a00d883a 	mov	r6,r20
  803e50:	003e3706 	br	803730 <__alt_data_end+0xff803730>
  803e54:	8c40040c 	andi	r17,r17,16
  803e58:	04ffffc4 	movi	r19,-1
  803e5c:	883fa61e 	bne	r17,zero,803cf8 <__alt_data_end+0xff803cf8>
  803e60:	da009c17 	ldw	r8,624(sp)
  803e64:	9abfffc4 	addi	r10,r19,-1
  803e68:	44000017 	ldw	r16,0(r8)
  803e6c:	44400104 	addi	r17,r8,4
  803e70:	8007883a 	mov	r3,r16
  803e74:	82ab883a 	add	r21,r16,r10
  803e78:	00000306 	br	803e88 <__ssvfscanf_r+0x848>
  803e7c:	e1000017 	ldw	r4,0(fp)
  803e80:	9807883a 	mov	r3,r19
  803e84:	20800003 	ldbu	r2,0(r4)
  803e88:	10803fcc 	andi	r2,r2,255
  803e8c:	d9405884 	addi	r5,sp,354
  803e90:	2885883a 	add	r2,r5,r2
  803e94:	10800007 	ldb	r2,0(r2)
  803e98:	10004b26 	beq	r2,zero,803fc8 <__ssvfscanf_r+0x988>
  803e9c:	e0800117 	ldw	r2,4(fp)
  803ea0:	21400044 	addi	r5,r4,1
  803ea4:	e1400015 	stw	r5,0(fp)
  803ea8:	10bfffc4 	addi	r2,r2,-1
  803eac:	e0800115 	stw	r2,4(fp)
  803eb0:	20800003 	ldbu	r2,0(r4)
  803eb4:	1cc00044 	addi	r19,r3,1
  803eb8:	18800005 	stb	r2,0(r3)
  803ebc:	1d400726 	beq	r3,r21,803edc <__ssvfscanf_r+0x89c>
  803ec0:	e0800117 	ldw	r2,4(fp)
  803ec4:	00bfed16 	blt	zero,r2,803e7c <__alt_data_end+0xff803e7c>
  803ec8:	e00b883a 	mov	r5,fp
  803ecc:	b009883a 	mov	r4,r22
  803ed0:	080d5a00 	call	80d5a0 <__ssrefill_r>
  803ed4:	103fe926 	beq	r2,zero,803e7c <__alt_data_end+0xff803e7c>
  803ed8:	84c01526 	beq	r16,r19,803f30 <__ssvfscanf_r+0x8f0>
  803edc:	9c21c83a 	sub	r16,r19,r16
  803ee0:	803e1726 	beq	r16,zero,803740 <__alt_data_end+0xff803740>
  803ee4:	da00a017 	ldw	r8,640(sp)
  803ee8:	98000005 	stb	zero,0(r19)
  803eec:	dc409c15 	stw	r17,624(sp)
  803ef0:	42000044 	addi	r8,r8,1
  803ef4:	da00a015 	stw	r8,640(sp)
  803ef8:	9425883a 	add	r18,r18,r16
  803efc:	a00d883a 	mov	r6,r20
  803f00:	003e0b06 	br	803730 <__alt_data_end+0xff803730>
  803f04:	017fff84 	movi	r5,-2
  803f08:	11439b1e 	bne	r2,r5,804d78 <__ssvfscanf_r+0x1738>
  803f0c:	8821883a 	mov	r16,r17
  803f10:	e0800117 	ldw	r2,4(fp)
  803f14:	0082e516 	blt	zero,r2,804aac <__ssvfscanf_r+0x146c>
  803f18:	e00b883a 	mov	r5,fp
  803f1c:	b009883a 	mov	r4,r22
  803f20:	080d5a00 	call	80d5a0 <__ssrefill_r>
  803f24:	1002e126 	beq	r2,zero,804aac <__ssvfscanf_r+0x146c>
  803f28:	dc409f17 	ldw	r17,636(sp)
  803f2c:	8002e826 	beq	r16,zero,804ad0 <__ssvfscanf_r+0x1490>
  803f30:	da00a017 	ldw	r8,640(sp)
  803f34:	403e9c26 	beq	r8,zero,8039a8 <__alt_data_end+0xff8039a8>
  803f38:	e080030b 	ldhu	r2,12(fp)
  803f3c:	1080100c 	andi	r2,r2,64
  803f40:	103e991e 	bne	r2,zero,8039a8 <__alt_data_end+0xff8039a8>
  803f44:	4005883a 	mov	r2,r8
  803f48:	003e9806 	br	8039ac <__alt_data_end+0xff8039ac>
  803f4c:	983f951e 	bne	r19,zero,803da4 <__alt_data_end+0xff803da4>
  803f50:	003fb806 	br	803e34 <__alt_data_end+0xff803e34>
  803f54:	da009c17 	ldw	r8,624(sp)
  803f58:	45000017 	ldw	r20,0(r8)
  803f5c:	42000104 	addi	r8,r8,4
  803f60:	da009c15 	stw	r8,624(sp)
  803f64:	003f8e06 	br	803da0 <__alt_data_end+0xff803da0>
  803f68:	e00b883a 	mov	r5,fp
  803f6c:	b009883a 	mov	r4,r22
  803f70:	080d5a00 	call	80d5a0 <__ssrefill_r>
  803f74:	103f3826 	beq	r2,zero,803c58 <__alt_data_end+0xff803c58>
  803f78:	003fed06 	br	803f30 <__alt_data_end+0xff803f30>
  803f7c:	00ffff84 	movi	r3,-2
  803f80:	10c0071e 	bne	r2,r3,803fa0 <__ssvfscanf_r+0x960>
  803f84:	e0800117 	ldw	r2,4(fp)
  803f88:	8023883a 	mov	r17,r16
  803f8c:	00bf8516 	blt	zero,r2,803da4 <__alt_data_end+0xff803da4>
  803f90:	003fa306 	br	803e20 <__alt_data_end+0xff803e20>
  803f94:	9425883a 	add	r18,r18,r16
  803f98:	9cffffc4 	addi	r19,r19,-1
  803f9c:	003f9d06 	br	803e14 <__alt_data_end+0xff803e14>
  803fa0:	da009f17 	ldw	r8,636(sp)
  803fa4:	9425883a 	add	r18,r18,r16
  803fa8:	9cffffc4 	addi	r19,r19,-1
  803fac:	403f9826 	beq	r8,zero,803e10 <__alt_data_end+0xff803e10>
  803fb0:	003f9806 	br	803e14 <__alt_data_end+0xff803e14>
  803fb4:	8023883a 	mov	r17,r16
  803fb8:	8821883a 	mov	r16,r17
  803fbc:	003fce06 	br	803ef8 <__alt_data_end+0xff803ef8>
  803fc0:	803f3d1e 	bne	r16,zero,803cb8 <__alt_data_end+0xff803cb8>
  803fc4:	003fda06 	br	803f30 <__alt_data_end+0xff803f30>
  803fc8:	1827883a 	mov	r19,r3
  803fcc:	003fc306 	br	803edc <__alt_data_end+0xff803edc>
  803fd0:	803fc91e 	bne	r16,zero,803ef8 <__alt_data_end+0xff803ef8>
  803fd4:	003dda06 	br	803740 <__alt_data_end+0xff803740>
  803fd8:	da009c17 	ldw	r8,624(sp)
  803fdc:	df000015 	stw	fp,0(sp)
  803fe0:	980f883a 	mov	r7,r19
  803fe4:	41400017 	ldw	r5,0(r8)
  803fe8:	01800044 	movi	r6,1
  803fec:	b009883a 	mov	r4,r22
  803ff0:	080d6100 	call	80d610 <_sfread_r>
  803ff4:	da009c17 	ldw	r8,624(sp)
  803ff8:	40c00104 	addi	r3,r8,4
  803ffc:	103fcc26 	beq	r2,zero,803f30 <__alt_data_end+0xff803f30>
  804000:	da00a017 	ldw	r8,640(sp)
  804004:	dd009d17 	ldw	r20,628(sp)
  804008:	90a5883a 	add	r18,r18,r2
  80400c:	42000044 	addi	r8,r8,1
  804010:	da00a015 	stw	r8,640(sp)
  804014:	d8c09c15 	stw	r3,624(sp)
  804018:	a00d883a 	mov	r6,r20
  80401c:	003dc406 	br	803730 <__alt_data_end+0xff803730>
  804020:	e00b883a 	mov	r5,fp
  804024:	b009883a 	mov	r4,r22
  804028:	080d5a00 	call	80d5a0 <__ssrefill_r>
  80402c:	103e5226 	beq	r2,zero,803978 <__alt_data_end+0xff803978>
  804030:	003fbf06 	br	803f30 <__alt_data_end+0xff803f30>
  804034:	a0800083 	ldbu	r2,2(r20)
  804038:	8c400094 	ori	r17,r17,2
  80403c:	a5000084 	addi	r20,r20,2
  804040:	10c03fcc 	andi	r3,r2,255
  804044:	003dc706 	br	803764 <__alt_data_end+0xff803764>
  804048:	e0800117 	ldw	r2,4(fp)
  80404c:	88e2b03a 	or	r17,r17,r3
  804050:	00bef716 	blt	zero,r2,803c30 <__alt_data_end+0xff803c30>
  804054:	003e6f06 	br	803a14 <__alt_data_end+0xff803a14>
  804058:	8880004c 	andi	r2,r17,1
  80405c:	10000b1e 	bne	r2,zero,80408c <__ssvfscanf_r+0xa4c>
  804060:	8c40008c 	andi	r17,r17,2
  804064:	88000926 	beq	r17,zero,80408c <__ssvfscanf_r+0xa4c>
  804068:	da009c17 	ldw	r8,624(sp)
  80406c:	9007d7fa 	srai	r3,r18,31
  804070:	dd009d17 	ldw	r20,628(sp)
  804074:	40800017 	ldw	r2,0(r8)
  804078:	42000104 	addi	r8,r8,4
  80407c:	da009c15 	stw	r8,624(sp)
  804080:	14800015 	stw	r18,0(r2)
  804084:	10c00115 	stw	r3,4(r2)
  804088:	003da806 	br	80372c <__alt_data_end+0xff80372c>
  80408c:	da009c17 	ldw	r8,624(sp)
  804090:	dd009d17 	ldw	r20,628(sp)
  804094:	40800017 	ldw	r2,0(r8)
  804098:	42000104 	addi	r8,r8,4
  80409c:	da009c15 	stw	r8,624(sp)
  8040a0:	14800015 	stw	r18,0(r2)
  8040a4:	003da106 	br	80372c <__alt_data_end+0xff80372c>
  8040a8:	e00b883a 	mov	r5,fp
  8040ac:	b009883a 	mov	r4,r22
  8040b0:	080d5a00 	call	80d5a0 <__ssrefill_r>
  8040b4:	103f9e1e 	bne	r2,zero,803f30 <__alt_data_end+0xff803f30>
  8040b8:	b9c00017 	ldw	r7,0(r23)
  8040bc:	05000104 	movi	r20,4
  8040c0:	003e6306 	br	803a50 <__alt_data_end+0xff803a50>
  8040c4:	e00b883a 	mov	r5,fp
  8040c8:	b009883a 	mov	r4,r22
  8040cc:	080d5a00 	call	80d5a0 <__ssrefill_r>
  8040d0:	103f971e 	bne	r2,zero,803f30 <__alt_data_end+0xff803f30>
  8040d4:	b9c00017 	ldw	r7,0(r23)
  8040d8:	003e5706 	br	803a38 <__alt_data_end+0xff803a38>
  8040dc:	e00b883a 	mov	r5,fp
  8040e0:	b009883a 	mov	r4,r22
  8040e4:	080d5a00 	call	80d5a0 <__ssrefill_r>
  8040e8:	103f911e 	bne	r2,zero,803f30 <__alt_data_end+0xff803f30>
  8040ec:	b9c00017 	ldw	r7,0(r23)
  8040f0:	05000084 	movi	r20,2
  8040f4:	003e5606 	br	803a50 <__alt_data_end+0xff803a50>
  8040f8:	e00b883a 	mov	r5,fp
  8040fc:	b009883a 	mov	r4,r22
  804100:	080d5a00 	call	80d5a0 <__ssrefill_r>
  804104:	103ef726 	beq	r2,zero,803ce4 <__alt_data_end+0xff803ce4>
  804108:	003f8906 	br	803f30 <__alt_data_end+0xff803f30>
  80410c:	e00b883a 	mov	r5,fp
  804110:	b009883a 	mov	r4,r22
  804114:	080d5a00 	call	80d5a0 <__ssrefill_r>
  804118:	103f851e 	bne	r2,zero,803f30 <__alt_data_end+0xff803f30>
  80411c:	b9c00017 	ldw	r7,0(r23)
  804120:	003f0f06 	br	803d60 <__alt_data_end+0xff803d60>
  804124:	014000c4 	movi	r5,3
  804128:	a1414a26 	beq	r20,r5,804654 <__ssvfscanf_r+0x1014>
  80412c:	01000104 	movi	r4,4
  804130:	a101f11e 	bne	r20,r4,8048f8 <__ssvfscanf_r+0x12b8>
  804134:	b009883a 	mov	r4,r22
  804138:	08091f40 	call	8091f4 <_localeconv_r>
  80413c:	10800017 	ldw	r2,0(r2)
  804140:	98ffffc4 	addi	r3,r19,-1
  804144:	d880a315 	stw	r2,652(sp)
  804148:	00805704 	movi	r2,348
  80414c:	10c21e2e 	bgeu	r2,r3,8049c8 <__ssvfscanf_r+0x1388>
  804150:	9cffa8c4 	addi	r19,r19,-349
  804154:	dcc0a215 	stw	r19,648(sp)
  804158:	04c05744 	movi	r19,349
  80415c:	8d01e014 	ori	r20,r17,1920
  804160:	0023883a 	mov	r17,zero
  804164:	dc000104 	addi	r16,sp,4
  804168:	8805883a 	mov	r2,r17
  80416c:	0019883a 	mov	r12,zero
  804170:	8023883a 	mov	r17,r16
  804174:	b007883a 	mov	r3,r22
  804178:	9821883a 	mov	r16,r19
  80417c:	002b883a 	mov	r21,zero
  804180:	d800a515 	stw	zero,660(sp)
  804184:	d800a415 	stw	zero,656(sp)
  804188:	d8009f15 	stw	zero,636(sp)
  80418c:	01c01384 	movi	r7,78
  804190:	602d883a 	mov	r22,r12
  804194:	1027883a 	mov	r19,r2
  804198:	e1000017 	ldw	r4,0(fp)
  80419c:	21400003 	ldbu	r5,0(r4)
  8041a0:	28bff544 	addi	r2,r5,-43
  8041a4:	10803fcc 	andi	r2,r2,255
  8041a8:	38810e36 	bltu	r7,r2,8045e4 <__ssvfscanf_r+0xfa4>
  8041ac:	100490ba 	slli	r2,r2,2
  8041b0:	01802034 	movhi	r6,128
  8041b4:	31907104 	addi	r6,r6,16836
  8041b8:	1185883a 	add	r2,r2,r6
  8041bc:	10800017 	ldw	r2,0(r2)
  8041c0:	1000683a 	jmp	r2
  8041c4:	008044bc 	xorhi	r2,zero,274
  8041c8:	008045e4 	muli	r2,zero,279
  8041cc:	008044bc 	xorhi	r2,zero,274
  8041d0:	008045e4 	muli	r2,zero,279
  8041d4:	008045e4 	muli	r2,zero,279
  8041d8:	00804490 	cmplti	r2,zero,274
  8041dc:	00804300 	call	80430 <__alt_mem_sdram_0-0x77fbd0>
  8041e0:	00804300 	call	80430 <__alt_mem_sdram_0-0x77fbd0>
  8041e4:	00804300 	call	80430 <__alt_mem_sdram_0-0x77fbd0>
  8041e8:	00804300 	call	80430 <__alt_mem_sdram_0-0x77fbd0>
  8041ec:	00804300 	call	80430 <__alt_mem_sdram_0-0x77fbd0>
  8041f0:	00804300 	call	80430 <__alt_mem_sdram_0-0x77fbd0>
  8041f4:	00804300 	call	80430 <__alt_mem_sdram_0-0x77fbd0>
  8041f8:	00804300 	call	80430 <__alt_mem_sdram_0-0x77fbd0>
  8041fc:	00804300 	call	80430 <__alt_mem_sdram_0-0x77fbd0>
  804200:	008045e4 	muli	r2,zero,279
  804204:	008045e4 	muli	r2,zero,279
  804208:	008045e4 	muli	r2,zero,279
  80420c:	008045e4 	muli	r2,zero,279
  804210:	008045e4 	muli	r2,zero,279
  804214:	008045e4 	muli	r2,zero,279
  804218:	008045e4 	muli	r2,zero,279
  80421c:	008045d4 	movui	r2,279
  804220:	008045e4 	muli	r2,zero,279
  804224:	008045e4 	muli	r2,zero,279
  804228:	008045e4 	muli	r2,zero,279
  80422c:	00804590 	cmplti	r2,zero,278
  804230:	00804574 	movhi	r2,277
  804234:	008045e4 	muli	r2,zero,279
  804238:	008045e4 	muli	r2,zero,279
  80423c:	00804540 	call	80454 <__alt_mem_sdram_0-0x77fbac>
  804240:	008045e4 	muli	r2,zero,279
  804244:	008045e4 	muli	r2,zero,279
  804248:	008045e4 	muli	r2,zero,279
  80424c:	008045e4 	muli	r2,zero,279
  804250:	00804508 	cmpgei	r2,zero,276
  804254:	008045e4 	muli	r2,zero,279
  804258:	008045e4 	muli	r2,zero,279
  80425c:	008045e4 	muli	r2,zero,279
  804260:	008045e4 	muli	r2,zero,279
  804264:	008045e4 	muli	r2,zero,279
  804268:	008044ec 	andhi	r2,zero,275
  80426c:	008045e4 	muli	r2,zero,279
  804270:	008045e4 	muli	r2,zero,279
  804274:	008045e4 	muli	r2,zero,279
  804278:	008045e4 	muli	r2,zero,279
  80427c:	008044d0 	cmplti	r2,zero,275
  804280:	008045e4 	muli	r2,zero,279
  804284:	008045e4 	muli	r2,zero,279
  804288:	008045e4 	muli	r2,zero,279
  80428c:	008045e4 	muli	r2,zero,279
  804290:	008045e4 	muli	r2,zero,279
  804294:	008045e4 	muli	r2,zero,279
  804298:	008045e4 	muli	r2,zero,279
  80429c:	008045d4 	movui	r2,279
  8042a0:	008045e4 	muli	r2,zero,279
  8042a4:	008045e4 	muli	r2,zero,279
  8042a8:	008045e4 	muli	r2,zero,279
  8042ac:	00804590 	cmplti	r2,zero,278
  8042b0:	00804574 	movhi	r2,277
  8042b4:	008045e4 	muli	r2,zero,279
  8042b8:	008045e4 	muli	r2,zero,279
  8042bc:	00804540 	call	80454 <__alt_mem_sdram_0-0x77fbac>
  8042c0:	008045e4 	muli	r2,zero,279
  8042c4:	008045e4 	muli	r2,zero,279
  8042c8:	008045e4 	muli	r2,zero,279
  8042cc:	008045e4 	muli	r2,zero,279
  8042d0:	00804508 	cmpgei	r2,zero,276
  8042d4:	008045e4 	muli	r2,zero,279
  8042d8:	008045e4 	muli	r2,zero,279
  8042dc:	008045e4 	muli	r2,zero,279
  8042e0:	008045e4 	muli	r2,zero,279
  8042e4:	008045e4 	muli	r2,zero,279
  8042e8:	008044ec 	andhi	r2,zero,275
  8042ec:	008045e4 	muli	r2,zero,279
  8042f0:	008045e4 	muli	r2,zero,279
  8042f4:	008045e4 	muli	r2,zero,279
  8042f8:	008045e4 	muli	r2,zero,279
  8042fc:	008044d0 	cmplti	r2,zero,275
  804300:	a8803fcc 	andi	r2,r21,255
  804304:	1080201c 	xori	r2,r2,128
  804308:	10bfe004 	addi	r2,r2,-128
  80430c:	b085883a 	add	r2,r22,r2
  804310:	10000d1e 	bne	r2,zero,804348 <__ssvfscanf_r+0xd08>
  804314:	00bf9fc4 	movi	r2,-385
  804318:	a0a8703a 	and	r20,r20,r2
  80431c:	89400005 	stb	r5,0(r17)
  804320:	8c400044 	addi	r17,r17,1
  804324:	e0800117 	ldw	r2,4(fp)
  804328:	843fffc4 	addi	r16,r16,-1
  80432c:	94800044 	addi	r18,r18,1
  804330:	10bfffc4 	addi	r2,r2,-1
  804334:	e0800115 	stw	r2,4(fp)
  804338:	0080b40e 	bge	zero,r2,80460c <__ssvfscanf_r+0xfcc>
  80433c:	21000044 	addi	r4,r4,1
  804340:	e1000015 	stw	r4,0(fp)
  804344:	803f941e 	bne	r16,zero,804198 <__alt_data_end+0xff804198>
  804348:	8821883a 	mov	r16,r17
  80434c:	b019883a 	mov	r12,r22
  804350:	9823883a 	mov	r17,r19
  804354:	182d883a 	mov	r22,r3
  804358:	9801961e 	bne	r19,zero,8049b4 <__ssvfscanf_r+0x1374>
  80435c:	633fffc4 	addi	r12,r12,-1
  804360:	00800044 	movi	r2,1
  804364:	1302882e 	bgeu	r2,r12,804d88 <__ssvfscanf_r+0x1748>
  804368:	a8803fcc 	andi	r2,r21,255
  80436c:	1080201c 	xori	r2,r2,128
  804370:	10bfe004 	addi	r2,r2,-128
  804374:	113fffc4 	addi	r4,r2,-1
  804378:	01400184 	movi	r5,6
  80437c:	29001136 	bltu	r5,r4,8043c4 <__ssvfscanf_r+0xd84>
  804380:	01000084 	movi	r4,2
  804384:	2082900e 	bge	r4,r2,804dc8 <__ssvfscanf_r+0x1788>
  804388:	00c000c4 	movi	r3,3
  80438c:	10c00d26 	beq	r2,r3,8043c4 <__ssvfscanf_r+0xd84>
  804390:	9425c83a 	sub	r18,r18,r16
  804394:	1827883a 	mov	r19,r3
  804398:	843fffc4 	addi	r16,r16,-1
  80439c:	81400007 	ldb	r5,0(r16)
  8043a0:	e00d883a 	mov	r6,fp
  8043a4:	b009883a 	mov	r4,r22
  8043a8:	080d4980 	call	80d498 <_sungetc_r>
  8043ac:	a8bfffc4 	addi	r2,r21,-1
  8043b0:	10c03fcc 	andi	r3,r2,255
  8043b4:	8493883a 	add	r9,r16,r18
  8043b8:	102b883a 	mov	r21,r2
  8043bc:	98fff636 	bltu	r19,r3,804398 <__alt_data_end+0xff804398>
  8043c0:	4825883a 	mov	r18,r9
  8043c4:	a080400c 	andi	r2,r20,256
  8043c8:	10001426 	beq	r2,zero,80441c <__ssvfscanf_r+0xddc>
  8043cc:	a081000c 	andi	r2,r20,1024
  8043d0:	1002571e 	bne	r2,zero,804d30 <__ssvfscanf_r+0x16f0>
  8043d4:	817fffc7 	ldb	r5,-1(r16)
  8043d8:	00801944 	movi	r2,101
  8043dc:	84ffffc4 	addi	r19,r16,-1
  8043e0:	957fffc4 	addi	r21,r18,-1
  8043e4:	28800826 	beq	r5,r2,804408 <__ssvfscanf_r+0xdc8>
  8043e8:	00801144 	movi	r2,69
  8043ec:	28800626 	beq	r5,r2,804408 <__ssvfscanf_r+0xdc8>
  8043f0:	e00d883a 	mov	r6,fp
  8043f4:	b009883a 	mov	r4,r22
  8043f8:	080d4980 	call	80d498 <_sungetc_r>
  8043fc:	817fff87 	ldb	r5,-2(r16)
  804400:	84ffff84 	addi	r19,r16,-2
  804404:	957fff84 	addi	r21,r18,-2
  804408:	e00d883a 	mov	r6,fp
  80440c:	b009883a 	mov	r4,r22
  804410:	080d4980 	call	80d498 <_sungetc_r>
  804414:	a825883a 	mov	r18,r21
  804418:	9821883a 	mov	r16,r19
  80441c:	a080040c 	andi	r2,r20,16
  804420:	103e891e 	bne	r2,zero,803e48 <__alt_data_end+0xff803e48>
  804424:	80000005 	stb	zero,0(r16)
  804428:	a081800c 	andi	r2,r20,1536
  80442c:	01010004 	movi	r4,1024
  804430:	1101dd26 	beq	r2,r4,804ba8 <__ssvfscanf_r+0x1568>
  804434:	da00a417 	ldw	r8,656(sp)
  804438:	4001e71e 	bne	r8,zero,804bd8 <__ssvfscanf_r+0x1598>
  80443c:	000d883a 	mov	r6,zero
  804440:	d9400104 	addi	r5,sp,4
  804444:	b009883a 	mov	r4,r22
  804448:	080b2a80 	call	80b2a8 <_strtod_r>
  80444c:	1021883a 	mov	r16,r2
  804450:	a080004c 	andi	r2,r20,1
  804454:	1000021e 	bne	r2,zero,804460 <__ssvfscanf_r+0xe20>
  804458:	a2c0008c 	andi	r11,r20,2
  80445c:	5801e826 	beq	r11,zero,804c00 <__ssvfscanf_r+0x15c0>
  804460:	da009c17 	ldw	r8,624(sp)
  804464:	40800017 	ldw	r2,0(r8)
  804468:	42000104 	addi	r8,r8,4
  80446c:	da009c15 	stw	r8,624(sp)
  804470:	14000015 	stw	r16,0(r2)
  804474:	10c00115 	stw	r3,4(r2)
  804478:	da00a017 	ldw	r8,640(sp)
  80447c:	dd009d17 	ldw	r20,628(sp)
  804480:	42000044 	addi	r8,r8,1
  804484:	da00a015 	stw	r8,640(sp)
  804488:	a00d883a 	mov	r6,r20
  80448c:	003ca806 	br	803730 <__alt_data_end+0xff803730>
  804490:	a080400c 	andi	r2,r20,256
  804494:	103f9a26 	beq	r2,zero,804300 <__alt_data_end+0xff804300>
  804498:	da00a217 	ldw	r8,648(sp)
  80449c:	00bfdfc4 	movi	r2,-129
  8044a0:	a0a8703a 	and	r20,r20,r2
  8044a4:	9cc00044 	addi	r19,r19,1
  8044a8:	403f9e26 	beq	r8,zero,804324 <__alt_data_end+0xff804324>
  8044ac:	423fffc4 	addi	r8,r8,-1
  8044b0:	da00a215 	stw	r8,648(sp)
  8044b4:	84000044 	addi	r16,r16,1
  8044b8:	003f9a06 	br	804324 <__alt_data_end+0xff804324>
  8044bc:	a080200c 	andi	r2,r20,128
  8044c0:	103fa126 	beq	r2,zero,804348 <__alt_data_end+0xff804348>
  8044c4:	00bfdfc4 	movi	r2,-129
  8044c8:	a0a8703a 	and	r20,r20,r2
  8044cc:	003f9306 	br	80431c <__alt_data_end+0xff80431c>
  8044d0:	a8803fcc 	andi	r2,r21,255
  8044d4:	1080201c 	xori	r2,r2,128
  8044d8:	10bfe004 	addi	r2,r2,-128
  8044dc:	020001c4 	movi	r8,7
  8044e0:	123f991e 	bne	r2,r8,804348 <__alt_data_end+0xff804348>
  8044e4:	05400204 	movi	r21,8
  8044e8:	003f8c06 	br	80431c <__alt_data_end+0xff80431c>
  8044ec:	a8803fcc 	andi	r2,r21,255
  8044f0:	1080201c 	xori	r2,r2,128
  8044f4:	10bfe004 	addi	r2,r2,-128
  8044f8:	01800184 	movi	r6,6
  8044fc:	11bf921e 	bne	r2,r6,804348 <__alt_data_end+0xff804348>
  804500:	054001c4 	movi	r21,7
  804504:	003f8506 	br	80431c <__alt_data_end+0xff80431c>
  804508:	b000491e 	bne	r22,zero,804630 <__ssvfscanf_r+0xff0>
  80450c:	9800031e 	bne	r19,zero,80451c <__ssvfscanf_r+0xedc>
  804510:	a081c00c 	andi	r2,r20,1792
  804514:	0181c004 	movi	r6,1792
  804518:	11819f26 	beq	r2,r6,804b98 <__ssvfscanf_r+0x1558>
  80451c:	a8803fcc 	andi	r2,r21,255
  804520:	1080201c 	xori	r2,r2,128
  804524:	10bfe004 	addi	r2,r2,-128
  804528:	01800044 	movi	r6,1
  80452c:	11800226 	beq	r2,r6,804538 <__ssvfscanf_r+0xef8>
  804530:	01800104 	movi	r6,4
  804534:	11bf841e 	bne	r2,r6,804348 <__alt_data_end+0xff804348>
  804538:	ad400044 	addi	r21,r21,1
  80453c:	003f7706 	br	80431c <__alt_data_end+0xff80431c>
  804540:	a8803fcc 	andi	r2,r21,255
  804544:	1080201c 	xori	r2,r2,128
  804548:	10bfe004 	addi	r2,r2,-128
  80454c:	10003c1e 	bne	r2,zero,804640 <__ssvfscanf_r+0x1000>
  804550:	9801141e 	bne	r19,zero,8049a4 <__ssvfscanf_r+0x1364>
  804554:	a081c00c 	andi	r2,r20,1792
  804558:	0181c004 	movi	r6,1792
  80455c:	11818226 	beq	r2,r6,804b68 <__ssvfscanf_r+0x1528>
  804560:	8821883a 	mov	r16,r17
  804564:	b019883a 	mov	r12,r22
  804568:	9823883a 	mov	r17,r19
  80456c:	182d883a 	mov	r22,r3
  804570:	003f7a06 	br	80435c <__alt_data_end+0xff80435c>
  804574:	a8803fcc 	andi	r2,r21,255
  804578:	1080201c 	xori	r2,r2,128
  80457c:	10bfe004 	addi	r2,r2,-128
  804580:	01800084 	movi	r6,2
  804584:	11bf701e 	bne	r2,r6,804348 <__alt_data_end+0xff804348>
  804588:	054000c4 	movi	r21,3
  80458c:	003f6306 	br	80431c <__alt_data_end+0xff80431c>
  804590:	a081400c 	andi	r2,r20,1280
  804594:	01810004 	movi	r6,1024
  804598:	11800326 	beq	r2,r6,8045a8 <__ssvfscanf_r+0xf68>
  80459c:	a184703a 	and	r2,r20,r6
  8045a0:	103f6926 	beq	r2,zero,804348 <__alt_data_end+0xff804348>
  8045a4:	983fee26 	beq	r19,zero,804560 <__alt_data_end+0xff804560>
  8045a8:	a080800c 	andi	r2,r20,512
  8045ac:	1000041e 	bne	r2,zero,8045c0 <__ssvfscanf_r+0xf80>
  8045b0:	da009f17 	ldw	r8,636(sp)
  8045b4:	dc40a515 	stw	r17,660(sp)
  8045b8:	9a27c83a 	sub	r19,r19,r8
  8045bc:	dcc0a415 	stw	r19,656(sp)
  8045c0:	00be1fc4 	movi	r2,-1921
  8045c4:	a0a8703a 	and	r20,r20,r2
  8045c8:	a5006014 	ori	r20,r20,384
  8045cc:	0027883a 	mov	r19,zero
  8045d0:	003f5206 	br	80431c <__alt_data_end+0xff80431c>
  8045d4:	00800044 	movi	r2,1
  8045d8:	b0bf5b1e 	bne	r22,r2,804348 <__alt_data_end+0xff804348>
  8045dc:	05800084 	movi	r22,2
  8045e0:	003f4e06 	br	80431c <__alt_data_end+0xff80431c>
  8045e4:	d980a317 	ldw	r6,652(sp)
  8045e8:	30800003 	ldbu	r2,0(r6)
  8045ec:	29803fcc 	andi	r6,r5,255
  8045f0:	30bf551e 	bne	r6,r2,804348 <__alt_data_end+0xff804348>
  8045f4:	a080800c 	andi	r2,r20,512
  8045f8:	103f5326 	beq	r2,zero,804348 <__alt_data_end+0xff804348>
  8045fc:	023f5fc4 	movi	r8,-641
  804600:	a228703a 	and	r20,r20,r8
  804604:	dcc09f15 	stw	r19,636(sp)
  804608:	003f4406 	br	80431c <__alt_data_end+0xff80431c>
  80460c:	1809883a 	mov	r4,r3
  804610:	e00b883a 	mov	r5,fp
  804614:	d8c0a615 	stw	r3,664(sp)
  804618:	d9c0aa15 	stw	r7,680(sp)
  80461c:	080d5a00 	call	80d5a0 <__ssrefill_r>
  804620:	d8c0a617 	ldw	r3,664(sp)
  804624:	d9c0aa17 	ldw	r7,680(sp)
  804628:	103f4626 	beq	r2,zero,804344 <__alt_data_end+0xff804344>
  80462c:	003f4606 	br	804348 <__alt_data_end+0xff804348>
  804630:	00800084 	movi	r2,2
  804634:	b0bfb91e 	bne	r22,r2,80451c <__alt_data_end+0xff80451c>
  804638:	058000c4 	movi	r22,3
  80463c:	003f3706 	br	80431c <__alt_data_end+0xff80431c>
  804640:	018000c4 	movi	r6,3
  804644:	11bfbc26 	beq	r2,r6,804538 <__alt_data_end+0xff804538>
  804648:	01800144 	movi	r6,5
  80464c:	11bfba26 	beq	r2,r6,804538 <__alt_data_end+0xff804538>
  804650:	003f3d06 	br	804348 <__alt_data_end+0xff804348>
  804654:	98bfffc4 	addi	r2,r19,-1
  804658:	01405704 	movi	r5,348
  80465c:	2880d82e 	bgeu	r5,r2,8049c0 <__ssvfscanf_r+0x1380>
  804660:	99ffa8c4 	addi	r7,r19,-349
  804664:	04c05744 	movi	r19,349
  804668:	8c436014 	ori	r17,r17,3456
  80466c:	9013883a 	mov	r9,r18
  804670:	8825883a 	mov	r18,r17
  804674:	dc409e17 	ldw	r17,632(sp)
  804678:	0029883a 	mov	r20,zero
  80467c:	dc000104 	addi	r16,sp,4
  804680:	05401344 	movi	r21,77
  804684:	02c08004 	movi	r11,512
  804688:	01bf7fc4 	movi	r6,-513
  80468c:	023fdfc4 	movi	r8,-129
  804690:	20bff544 	addi	r2,r4,-43
  804694:	10803fcc 	andi	r2,r2,255
  804698:	a8807236 	bltu	r21,r2,804864 <__ssvfscanf_r+0x1224>
  80469c:	100490ba 	slli	r2,r2,2
  8046a0:	01402034 	movhi	r5,128
  8046a4:	2951ad04 	addi	r5,r5,18100
  8046a8:	1145883a 	add	r2,r2,r5
  8046ac:	10800017 	ldw	r2,0(r2)
  8046b0:	1000683a 	jmp	r2
  8046b4:	008048e8 	cmpgeui	r2,zero,291
  8046b8:	00804864 	muli	r2,zero,289
  8046bc:	008048e8 	cmpgeui	r2,zero,291
  8046c0:	00804864 	muli	r2,zero,289
  8046c4:	00804864 	muli	r2,zero,289
  8046c8:	008048c0 	call	8048c <__alt_mem_sdram_0-0x77fb74>
  8046cc:	008048a0 	cmpeqi	r2,zero,290
  8046d0:	008048a0 	cmpeqi	r2,zero,290
  8046d4:	008048a0 	cmpeqi	r2,zero,290
  8046d8:	008048a0 	cmpeqi	r2,zero,290
  8046dc:	008048a0 	cmpeqi	r2,zero,290
  8046e0:	008048a0 	cmpeqi	r2,zero,290
  8046e4:	008048a0 	cmpeqi	r2,zero,290
  8046e8:	00804848 	cmpgei	r2,zero,289
  8046ec:	00804848 	cmpgei	r2,zero,289
  8046f0:	00804864 	muli	r2,zero,289
  8046f4:	00804864 	muli	r2,zero,289
  8046f8:	00804864 	muli	r2,zero,289
  8046fc:	00804864 	muli	r2,zero,289
  804700:	00804864 	muli	r2,zero,289
  804704:	00804864 	muli	r2,zero,289
  804708:	00804864 	muli	r2,zero,289
  80470c:	00804834 	movhi	r2,288
  804710:	00804834 	movhi	r2,288
  804714:	00804834 	movhi	r2,288
  804718:	00804834 	movhi	r2,288
  80471c:	00804834 	movhi	r2,288
  804720:	00804834 	movhi	r2,288
  804724:	00804864 	muli	r2,zero,289
  804728:	00804864 	muli	r2,zero,289
  80472c:	00804864 	muli	r2,zero,289
  804730:	00804864 	muli	r2,zero,289
  804734:	00804864 	muli	r2,zero,289
  804738:	00804864 	muli	r2,zero,289
  80473c:	00804864 	muli	r2,zero,289
  804740:	00804864 	muli	r2,zero,289
  804744:	00804864 	muli	r2,zero,289
  804748:	00804864 	muli	r2,zero,289
  80474c:	00804864 	muli	r2,zero,289
  804750:	00804864 	muli	r2,zero,289
  804754:	00804864 	muli	r2,zero,289
  804758:	00804864 	muli	r2,zero,289
  80475c:	00804864 	muli	r2,zero,289
  804760:	00804864 	muli	r2,zero,289
  804764:	00804864 	muli	r2,zero,289
  804768:	008047ec 	andhi	r2,zero,287
  80476c:	00804864 	muli	r2,zero,289
  804770:	00804864 	muli	r2,zero,289
  804774:	00804864 	muli	r2,zero,289
  804778:	00804864 	muli	r2,zero,289
  80477c:	00804864 	muli	r2,zero,289
  804780:	00804864 	muli	r2,zero,289
  804784:	00804864 	muli	r2,zero,289
  804788:	00804864 	muli	r2,zero,289
  80478c:	00804834 	movhi	r2,288
  804790:	00804834 	movhi	r2,288
  804794:	00804834 	movhi	r2,288
  804798:	00804834 	movhi	r2,288
  80479c:	00804834 	movhi	r2,288
  8047a0:	00804834 	movhi	r2,288
  8047a4:	00804864 	muli	r2,zero,289
  8047a8:	00804864 	muli	r2,zero,289
  8047ac:	00804864 	muli	r2,zero,289
  8047b0:	00804864 	muli	r2,zero,289
  8047b4:	00804864 	muli	r2,zero,289
  8047b8:	00804864 	muli	r2,zero,289
  8047bc:	00804864 	muli	r2,zero,289
  8047c0:	00804864 	muli	r2,zero,289
  8047c4:	00804864 	muli	r2,zero,289
  8047c8:	00804864 	muli	r2,zero,289
  8047cc:	00804864 	muli	r2,zero,289
  8047d0:	00804864 	muli	r2,zero,289
  8047d4:	00804864 	muli	r2,zero,289
  8047d8:	00804864 	muli	r2,zero,289
  8047dc:	00804864 	muli	r2,zero,289
  8047e0:	00804864 	muli	r2,zero,289
  8047e4:	00804864 	muli	r2,zero,289
  8047e8:	008047ec 	andhi	r2,zero,287
  8047ec:	9081800c 	andi	r2,r18,1536
  8047f0:	12c01c1e 	bne	r2,r11,804864 <__ssvfscanf_r+0x1224>
  8047f4:	91a4703a 	and	r18,r18,r6
  8047f8:	94814014 	ori	r18,r18,1280
  8047fc:	04400404 	movi	r17,16
  804800:	81000005 	stb	r4,0(r16)
  804804:	84000044 	addi	r16,r16,1
  804808:	e0800117 	ldw	r2,4(fp)
  80480c:	10bfffc4 	addi	r2,r2,-1
  804810:	e0800115 	stw	r2,4(fp)
  804814:	0080540e 	bge	zero,r2,804968 <__ssvfscanf_r+0x1328>
  804818:	18c00044 	addi	r3,r3,1
  80481c:	e0c00015 	stw	r3,0(fp)
  804820:	9cffffc4 	addi	r19,r19,-1
  804824:	98000f26 	beq	r19,zero,804864 <__ssvfscanf_r+0x1224>
  804828:	e0c00017 	ldw	r3,0(fp)
  80482c:	19000003 	ldbu	r4,0(r3)
  804830:	003f9706 	br	804690 <__alt_data_end+0xff804690>
  804834:	00800284 	movi	r2,10
  804838:	14400a0e 	bge	r2,r17,804864 <__ssvfscanf_r+0x1224>
  80483c:	00bd1fc4 	movi	r2,-2945
  804840:	90a4703a 	and	r18,r18,r2
  804844:	003fee06 	br	804800 <__alt_data_end+0xff804800>
  804848:	014020b4 	movhi	r5,130
  80484c:	8c63883a 	add	r17,r17,r17
  804850:	29715b84 	addi	r5,r5,-14994
  804854:	2c45883a 	add	r2,r5,r17
  804858:	1440000f 	ldh	r17,0(r2)
  80485c:	00800204 	movi	r2,8
  804860:	147ff616 	blt	r2,r17,80483c <__alt_data_end+0xff80483c>
  804864:	dc409e15 	stw	r17,632(sp)
  804868:	9023883a 	mov	r17,r18
  80486c:	8880400c 	andi	r2,r17,256
  804870:	4825883a 	mov	r18,r9
  804874:	10000426 	beq	r2,zero,804888 <__ssvfscanf_r+0x1248>
  804878:	d9800104 	addi	r6,sp,4
  80487c:	3400be36 	bltu	r6,r16,804b78 <__ssvfscanf_r+0x1538>
  804880:	da000104 	addi	r8,sp,4
  804884:	443bae26 	beq	r8,r16,803740 <__alt_data_end+0xff803740>
  804888:	8880040c 	andi	r2,r17,16
  80488c:	10009326 	beq	r2,zero,804adc <__ssvfscanf_r+0x149c>
  804890:	d8800104 	addi	r2,sp,4
  804894:	80a1c83a 	sub	r16,r16,r2
  804898:	8521883a 	add	r16,r16,r20
  80489c:	003d0606 	br	803cb8 <__alt_data_end+0xff803cb8>
  8048a0:	014020b4 	movhi	r5,130
  8048a4:	8c63883a 	add	r17,r17,r17
  8048a8:	29715b84 	addi	r5,r5,-14994
  8048ac:	2c45883a 	add	r2,r5,r17
  8048b0:	1440000f 	ldh	r17,0(r2)
  8048b4:	00bd1fc4 	movi	r2,-2945
  8048b8:	90a4703a 	and	r18,r18,r2
  8048bc:	003fd006 	br	804800 <__alt_data_end+0xff804800>
  8048c0:	9082000c 	andi	r2,r18,2048
  8048c4:	103fce26 	beq	r2,zero,804800 <__alt_data_end+0xff804800>
  8048c8:	8800021e 	bne	r17,zero,8048d4 <__ssvfscanf_r+0x1294>
  8048cc:	94808014 	ori	r18,r18,512
  8048d0:	04400204 	movi	r17,8
  8048d4:	9081000c 	andi	r2,r18,1024
  8048d8:	10009426 	beq	r2,zero,804b2c <__ssvfscanf_r+0x14ec>
  8048dc:	00be9fc4 	movi	r2,-1409
  8048e0:	90a4703a 	and	r18,r18,r2
  8048e4:	003fc606 	br	804800 <__alt_data_end+0xff804800>
  8048e8:	9080200c 	andi	r2,r18,128
  8048ec:	103fdd26 	beq	r2,zero,804864 <__alt_data_end+0xff804864>
  8048f0:	9224703a 	and	r18,r18,r8
  8048f4:	003fc206 	br	804800 <__alt_data_end+0xff804800>
  8048f8:	9800011e 	bne	r19,zero,804900 <__ssvfscanf_r+0x12c0>
  8048fc:	04ffffc4 	movi	r19,-1
  804900:	8900004c 	andi	r4,r17,1
  804904:	20005b1e 	bne	r4,zero,804a74 <__ssvfscanf_r+0x1434>
  804908:	8c40040c 	andi	r17,r17,16
  80490c:	88003026 	beq	r17,zero,8049d0 <__ssvfscanf_r+0x1390>
  804910:	0021883a 	mov	r16,zero
  804914:	00000306 	br	804924 <__ssvfscanf_r+0x12e4>
  804918:	18800003 	ldbu	r2,0(r3)
  80491c:	3885883a 	add	r2,r7,r2
  804920:	10800043 	ldbu	r2,1(r2)
  804924:	1080020c 	andi	r2,r2,8
  804928:	103ce31e 	bne	r2,zero,803cb8 <__alt_data_end+0xff803cb8>
  80492c:	e0800117 	ldw	r2,4(fp)
  804930:	18c00044 	addi	r3,r3,1
  804934:	84000044 	addi	r16,r16,1
  804938:	10bfffc4 	addi	r2,r2,-1
  80493c:	e0800115 	stw	r2,4(fp)
  804940:	e0c00015 	stw	r3,0(fp)
  804944:	84fcdc26 	beq	r16,r19,803cb8 <__alt_data_end+0xff803cb8>
  804948:	00bff316 	blt	zero,r2,804918 <__alt_data_end+0xff804918>
  80494c:	e00b883a 	mov	r5,fp
  804950:	b009883a 	mov	r4,r22
  804954:	080d5a00 	call	80d5a0 <__ssrefill_r>
  804958:	103cd71e 	bne	r2,zero,803cb8 <__alt_data_end+0xff803cb8>
  80495c:	b9c00017 	ldw	r7,0(r23)
  804960:	e0c00017 	ldw	r3,0(fp)
  804964:	003fec06 	br	804918 <__alt_data_end+0xff804918>
  804968:	e00b883a 	mov	r5,fp
  80496c:	b009883a 	mov	r4,r22
  804970:	d980a715 	stw	r6,668(sp)
  804974:	d9c0aa15 	stw	r7,680(sp)
  804978:	da00a815 	stw	r8,672(sp)
  80497c:	da40a915 	stw	r9,676(sp)
  804980:	dac0a615 	stw	r11,664(sp)
  804984:	080d5a00 	call	80d5a0 <__ssrefill_r>
  804988:	d980a717 	ldw	r6,668(sp)
  80498c:	d9c0aa17 	ldw	r7,680(sp)
  804990:	da00a817 	ldw	r8,672(sp)
  804994:	da40a917 	ldw	r9,676(sp)
  804998:	dac0a617 	ldw	r11,664(sp)
  80499c:	103fa026 	beq	r2,zero,804820 <__alt_data_end+0xff804820>
  8049a0:	003fb006 	br	804864 <__alt_data_end+0xff804864>
  8049a4:	8821883a 	mov	r16,r17
  8049a8:	b019883a 	mov	r12,r22
  8049ac:	9823883a 	mov	r17,r19
  8049b0:	182d883a 	mov	r22,r3
  8049b4:	00bfbfc4 	movi	r2,-257
  8049b8:	a0a8703a 	and	r20,r20,r2
  8049bc:	003e6706 	br	80435c <__alt_data_end+0xff80435c>
  8049c0:	000f883a 	mov	r7,zero
  8049c4:	003f2806 	br	804668 <__alt_data_end+0xff804668>
  8049c8:	d800a215 	stw	zero,648(sp)
  8049cc:	003de306 	br	80415c <__alt_data_end+0xff80415c>
  8049d0:	da009c17 	ldw	r8,624(sp)
  8049d4:	9abfffc4 	addi	r10,r19,-1
  8049d8:	44400017 	ldw	r17,0(r8)
  8049dc:	44000104 	addi	r16,r8,4
  8049e0:	880b883a 	mov	r5,r17
  8049e4:	8aa9883a 	add	r20,r17,r10
  8049e8:	00000606 	br	804a04 <__ssvfscanf_r+0x13c4>
  8049ec:	e0c00017 	ldw	r3,0(fp)
  8049f0:	b9000017 	ldw	r4,0(r23)
  8049f4:	a80b883a 	mov	r5,r21
  8049f8:	18800003 	ldbu	r2,0(r3)
  8049fc:	2085883a 	add	r2,r4,r2
  804a00:	10800043 	ldbu	r2,1(r2)
  804a04:	1080020c 	andi	r2,r2,8
  804a08:	1000551e 	bne	r2,zero,804b60 <__ssvfscanf_r+0x1520>
  804a0c:	e0800117 	ldw	r2,4(fp)
  804a10:	19000044 	addi	r4,r3,1
  804a14:	e1000015 	stw	r4,0(fp)
  804a18:	10bfffc4 	addi	r2,r2,-1
  804a1c:	e0800115 	stw	r2,4(fp)
  804a20:	18800003 	ldbu	r2,0(r3)
  804a24:	2d400044 	addi	r21,r5,1
  804a28:	a827883a 	mov	r19,r21
  804a2c:	28800005 	stb	r2,0(r5)
  804a30:	2d000626 	beq	r5,r20,804a4c <__ssvfscanf_r+0x140c>
  804a34:	e0800117 	ldw	r2,4(fp)
  804a38:	00bfec16 	blt	zero,r2,8049ec <__alt_data_end+0xff8049ec>
  804a3c:	e00b883a 	mov	r5,fp
  804a40:	b009883a 	mov	r4,r22
  804a44:	080d5a00 	call	80d5a0 <__ssrefill_r>
  804a48:	103fe826 	beq	r2,zero,8049ec <__alt_data_end+0xff8049ec>
  804a4c:	da00a017 	ldw	r8,640(sp)
  804a50:	dd009d17 	ldw	r20,628(sp)
  804a54:	9c63c83a 	sub	r17,r19,r17
  804a58:	42000044 	addi	r8,r8,1
  804a5c:	98000005 	stb	zero,0(r19)
  804a60:	9465883a 	add	r18,r18,r17
  804a64:	da00a015 	stw	r8,640(sp)
  804a68:	dc009c15 	stw	r16,624(sp)
  804a6c:	a00d883a 	mov	r6,r20
  804a70:	003b2f06 	br	803730 <__alt_data_end+0xff803730>
  804a74:	dd409904 	addi	r21,sp,612
  804a78:	8c40040c 	andi	r17,r17,16
  804a7c:	01800204 	movi	r6,8
  804a80:	000b883a 	mov	r5,zero
  804a84:	a809883a 	mov	r4,r21
  804a88:	0802dc40 	call	802dc4 <memset>
  804a8c:	8800401e 	bne	r17,zero,804b90 <__ssvfscanf_r+0x1550>
  804a90:	da009c17 	ldw	r8,624(sp)
  804a94:	45000017 	ldw	r20,0(r8)
  804a98:	42000104 	addi	r8,r8,4
  804a9c:	da009c15 	stw	r8,624(sp)
  804aa0:	000d883a 	mov	r6,zero
  804aa4:	3021883a 	mov	r16,r6
  804aa8:	dc409f15 	stw	r17,636(sp)
  804aac:	e0800017 	ldw	r2,0(fp)
  804ab0:	b8c00017 	ldw	r3,0(r23)
  804ab4:	10800003 	ldbu	r2,0(r2)
  804ab8:	1885883a 	add	r2,r3,r2
  804abc:	10800043 	ldbu	r2,1(r2)
  804ac0:	1080020c 	andi	r2,r2,8
  804ac4:	1000011e 	bne	r2,zero,804acc <__ssvfscanf_r+0x148c>
  804ac8:	9800701e 	bne	r19,zero,804c8c <__ssvfscanf_r+0x164c>
  804acc:	dc409f17 	ldw	r17,636(sp)
  804ad0:	883cdd1e 	bne	r17,zero,803e48 <__alt_data_end+0xff803e48>
  804ad4:	a0000015 	stw	zero,0(r20)
  804ad8:	003cd806 	br	803e3c <__alt_data_end+0xff803e3c>
  804adc:	d9c09e17 	ldw	r7,632(sp)
  804ae0:	da00a117 	ldw	r8,644(sp)
  804ae4:	000d883a 	mov	r6,zero
  804ae8:	d9400104 	addi	r5,sp,4
  804aec:	b009883a 	mov	r4,r22
  804af0:	80000005 	stb	zero,0(r16)
  804af4:	403ee83a 	callr	r8
  804af8:	88c0080c 	andi	r3,r17,32
  804afc:	1800121e 	bne	r3,zero,804b48 <__ssvfscanf_r+0x1508>
  804b00:	88c0010c 	andi	r3,r17,4
  804b04:	18004d26 	beq	r3,zero,804c3c <__ssvfscanf_r+0x15fc>
  804b08:	da009c17 	ldw	r8,624(sp)
  804b0c:	40c00017 	ldw	r3,0(r8)
  804b10:	42000104 	addi	r8,r8,4
  804b14:	da009c15 	stw	r8,624(sp)
  804b18:	1880000d 	sth	r2,0(r3)
  804b1c:	da00a017 	ldw	r8,640(sp)
  804b20:	42000044 	addi	r8,r8,1
  804b24:	da00a015 	stw	r8,640(sp)
  804b28:	003f5906 	br	804890 <__alt_data_end+0xff804890>
  804b2c:	00bf1fc4 	movi	r2,-897
  804b30:	90a4703a 	and	r18,r18,r2
  804b34:	38000226 	beq	r7,zero,804b40 <__ssvfscanf_r+0x1500>
  804b38:	39ffffc4 	addi	r7,r7,-1
  804b3c:	9cc00044 	addi	r19,r19,1
  804b40:	a5000044 	addi	r20,r20,1
  804b44:	003f3006 	br	804808 <__alt_data_end+0xff804808>
  804b48:	da009c17 	ldw	r8,624(sp)
  804b4c:	40c00017 	ldw	r3,0(r8)
  804b50:	42000104 	addi	r8,r8,4
  804b54:	da009c15 	stw	r8,624(sp)
  804b58:	18800015 	stw	r2,0(r3)
  804b5c:	003fef06 	br	804b1c <__alt_data_end+0xff804b1c>
  804b60:	2827883a 	mov	r19,r5
  804b64:	003fb906 	br	804a4c <__alt_data_end+0xff804a4c>
  804b68:	01be1fc4 	movi	r6,-1921
  804b6c:	a1a8703a 	and	r20,r20,r6
  804b70:	05400044 	movi	r21,1
  804b74:	003de906 	br	80431c <__alt_data_end+0xff80431c>
  804b78:	817fffc7 	ldb	r5,-1(r16)
  804b7c:	e00d883a 	mov	r6,fp
  804b80:	b009883a 	mov	r4,r22
  804b84:	843fffc4 	addi	r16,r16,-1
  804b88:	080d4980 	call	80d498 <_sungetc_r>
  804b8c:	003f3c06 	br	804880 <__alt_data_end+0xff804880>
  804b90:	dd009b04 	addi	r20,sp,620
  804b94:	003fc206 	br	804aa0 <__alt_data_end+0xff804aa0>
  804b98:	00be1fc4 	movi	r2,-1921
  804b9c:	a0a8703a 	and	r20,r20,r2
  804ba0:	05800044 	movi	r22,1
  804ba4:	003ddd06 	br	80431c <__alt_data_end+0xff80431c>
  804ba8:	d8c09f17 	ldw	r3,636(sp)
  804bac:	88e3c83a 	sub	r17,r17,r3
  804bb0:	044dc83a 	sub	r6,zero,r17
  804bb4:	883e2126 	beq	r17,zero,80443c <__alt_data_end+0xff80443c>
  804bb8:	d88055c4 	addi	r2,sp,343
  804bbc:	80800136 	bltu	r16,r2,804bc4 <__ssvfscanf_r+0x1584>
  804bc0:	dc005584 	addi	r16,sp,342
  804bc4:	014020b4 	movhi	r5,130
  804bc8:	29715a04 	addi	r5,r5,-15000
  804bcc:	8009883a 	mov	r4,r16
  804bd0:	080b0fc0 	call	80b0fc <sprintf>
  804bd4:	003e1906 	br	80443c <__alt_data_end+0xff80443c>
  804bd8:	d8c0a517 	ldw	r3,660(sp)
  804bdc:	000d883a 	mov	r6,zero
  804be0:	01c00284 	movi	r7,10
  804be4:	19400044 	addi	r5,r3,1
  804be8:	b009883a 	mov	r4,r22
  804bec:	080c9b80 	call	80c9b8 <_strtol_r>
  804bf0:	da00a417 	ldw	r8,656(sp)
  804bf4:	dc00a517 	ldw	r16,660(sp)
  804bf8:	120dc83a 	sub	r6,r2,r8
  804bfc:	003fee06 	br	804bb8 <__alt_data_end+0xff804bb8>
  804c00:	da009c17 	ldw	r8,624(sp)
  804c04:	180b883a 	mov	r5,r3
  804c08:	8009883a 	mov	r4,r16
  804c0c:	45000017 	ldw	r20,0(r8)
  804c10:	44400104 	addi	r17,r8,4
  804c14:	d8c0a615 	stw	r3,664(sp)
  804c18:	080af580 	call	80af58 <__fpclassifyd>
  804c1c:	d8c0a617 	ldw	r3,664(sp)
  804c20:	10006426 	beq	r2,zero,804db4 <__ssvfscanf_r+0x1774>
  804c24:	8009883a 	mov	r4,r16
  804c28:	180b883a 	mov	r5,r3
  804c2c:	0817e440 	call	817e44 <__truncdfsf2>
  804c30:	a0800015 	stw	r2,0(r20)
  804c34:	dc409c15 	stw	r17,624(sp)
  804c38:	003e0f06 	br	804478 <__alt_data_end+0xff804478>
  804c3c:	88c0004c 	andi	r3,r17,1
  804c40:	183fc11e 	bne	r3,zero,804b48 <__alt_data_end+0xff804b48>
  804c44:	8c40008c 	andi	r17,r17,2
  804c48:	883fbf26 	beq	r17,zero,804b48 <__alt_data_end+0xff804b48>
  804c4c:	da00a117 	ldw	r8,644(sp)
  804c50:	00802074 	movhi	r2,129
  804c54:	10b3c404 	addi	r2,r2,-12528
  804c58:	d9c09e17 	ldw	r7,632(sp)
  804c5c:	000d883a 	mov	r6,zero
  804c60:	d9400104 	addi	r5,sp,4
  804c64:	b009883a 	mov	r4,r22
  804c68:	40806226 	beq	r8,r2,804df4 <__ssvfscanf_r+0x17b4>
  804c6c:	080cc0c0 	call	80cc0c <_strtoll_r>
  804c70:	da009c17 	ldw	r8,624(sp)
  804c74:	41000017 	ldw	r4,0(r8)
  804c78:	42000104 	addi	r8,r8,4
  804c7c:	da009c15 	stw	r8,624(sp)
  804c80:	20800015 	stw	r2,0(r4)
  804c84:	20c00115 	stw	r3,4(r4)
  804c88:	003fa406 	br	804b1c <__alt_data_end+0xff804b1c>
  804c8c:	08091d00 	call	8091d0 <__locale_mb_cur_max>
  804c90:	80bca726 	beq	r16,r2,803f30 <__alt_data_end+0xff803f30>
  804c94:	e0800017 	ldw	r2,0(fp)
  804c98:	e1000117 	ldw	r4,4(fp)
  804c9c:	d8c00104 	addi	r3,sp,4
  804ca0:	12000003 	ldbu	r8,0(r2)
  804ca4:	213fffc4 	addi	r4,r4,-1
  804ca8:	10800044 	addi	r2,r2,1
  804cac:	e1000115 	stw	r4,4(fp)
  804cb0:	e0800015 	stw	r2,0(fp)
  804cb4:	84400044 	addi	r17,r16,1
  804cb8:	dd400015 	stw	r21,0(sp)
  804cbc:	1c21883a 	add	r16,r3,r16
  804cc0:	b009883a 	mov	r4,r22
  804cc4:	880f883a 	mov	r7,r17
  804cc8:	180d883a 	mov	r6,r3
  804ccc:	a00b883a 	mov	r5,r20
  804cd0:	82000005 	stb	r8,0(r16)
  804cd4:	08092840 	call	809284 <_mbrtowc_r>
  804cd8:	013fffc4 	movi	r4,-1
  804cdc:	113c9426 	beq	r2,r4,803f30 <__alt_data_end+0xff803f30>
  804ce0:	103c881e 	bne	r2,zero,803f04 <__alt_data_end+0xff803f04>
  804ce4:	a0000015 	stw	zero,0(r20)
  804ce8:	0009883a 	mov	r4,zero
  804cec:	08091180 	call	809118 <iswspace>
  804cf0:	10001a26 	beq	r2,zero,804d5c <__ssvfscanf_r+0x171c>
  804cf4:	8821883a 	mov	r16,r17
  804cf8:	dc409f17 	ldw	r17,636(sp)
  804cfc:	803f7426 	beq	r16,zero,804ad0 <__alt_data_end+0xff804ad0>
  804d00:	843fffc4 	addi	r16,r16,-1
  804d04:	d9800104 	addi	r6,sp,4
  804d08:	342b883a 	add	r21,r6,r16
  804d0c:	00000106 	br	804d14 <__ssvfscanf_r+0x16d4>
  804d10:	843fffc4 	addi	r16,r16,-1
  804d14:	a9400003 	ldbu	r5,0(r21)
  804d18:	e00d883a 	mov	r6,fp
  804d1c:	b009883a 	mov	r4,r22
  804d20:	080d4980 	call	80d498 <_sungetc_r>
  804d24:	ad7fffc4 	addi	r21,r21,-1
  804d28:	803ff91e 	bne	r16,zero,804d10 <__alt_data_end+0xff804d10>
  804d2c:	003f6806 	br	804ad0 <__alt_data_end+0xff804ad0>
  804d30:	d9800104 	addi	r6,sp,4
  804d34:	802b883a 	mov	r21,r16
  804d38:	343a812e 	bgeu	r6,r16,803740 <__alt_data_end+0xff803740>
  804d3c:	ad7fffc4 	addi	r21,r21,-1
  804d40:	a9400007 	ldb	r5,0(r21)
  804d44:	e00d883a 	mov	r6,fp
  804d48:	b009883a 	mov	r4,r22
  804d4c:	080d4980 	call	80d498 <_sungetc_r>
  804d50:	da000104 	addi	r8,sp,4
  804d54:	457ff91e 	bne	r8,r21,804d3c <__alt_data_end+0xff804d3c>
  804d58:	003a7906 	br	803740 <__alt_data_end+0xff803740>
  804d5c:	da009f17 	ldw	r8,636(sp)
  804d60:	9465883a 	add	r18,r18,r17
  804d64:	9cffffc4 	addi	r19,r19,-1
  804d68:	4000051e 	bne	r8,zero,804d80 <__ssvfscanf_r+0x1740>
  804d6c:	a5000104 	addi	r20,r20,4
  804d70:	0021883a 	mov	r16,zero
  804d74:	003c6606 	br	803f10 <__alt_data_end+0xff803f10>
  804d78:	a1000017 	ldw	r4,0(r20)
  804d7c:	003fdb06 	br	804cec <__alt_data_end+0xff804cec>
  804d80:	0021883a 	mov	r16,zero
  804d84:	003c6206 	br	803f10 <__alt_data_end+0xff803f10>
  804d88:	d8800104 	addi	r2,sp,4
  804d8c:	802b883a 	mov	r21,r16
  804d90:	143a6b2e 	bgeu	r2,r16,803740 <__alt_data_end+0xff803740>
  804d94:	ad7fffc4 	addi	r21,r21,-1
  804d98:	a9400007 	ldb	r5,0(r21)
  804d9c:	e00d883a 	mov	r6,fp
  804da0:	b009883a 	mov	r4,r22
  804da4:	080d4980 	call	80d498 <_sungetc_r>
  804da8:	d8c00104 	addi	r3,sp,4
  804dac:	1d7ff91e 	bne	r3,r21,804d94 <__alt_data_end+0xff804d94>
  804db0:	003a6306 	br	803740 <__alt_data_end+0xff803740>
  804db4:	0009883a 	mov	r4,zero
  804db8:	080b09c0 	call	80b09c <nanf>
  804dbc:	a0800015 	stw	r2,0(r20)
  804dc0:	dc409c15 	stw	r17,624(sp)
  804dc4:	003dac06 	br	804478 <__alt_data_end+0xff804478>
  804dc8:	d9000104 	addi	r4,sp,4
  804dcc:	802b883a 	mov	r21,r16
  804dd0:	243a5b2e 	bgeu	r4,r16,803740 <__alt_data_end+0xff803740>
  804dd4:	ad7fffc4 	addi	r21,r21,-1
  804dd8:	a9400007 	ldb	r5,0(r21)
  804ddc:	e00d883a 	mov	r6,fp
  804de0:	b009883a 	mov	r4,r22
  804de4:	080d4980 	call	80d498 <_sungetc_r>
  804de8:	d9400104 	addi	r5,sp,4
  804dec:	2d7ff91e 	bne	r5,r21,804dd4 <__alt_data_end+0xff804dd4>
  804df0:	003a5306 	br	803740 <__alt_data_end+0xff803740>
  804df4:	080d1780 	call	80d178 <_strtoull_r>
  804df8:	003f9d06 	br	804c70 <__alt_data_end+0xff804c70>

00804dfc <___vfprintf_internal_r>:
  804dfc:	deffb804 	addi	sp,sp,-288
  804e00:	dfc04715 	stw	ra,284(sp)
  804e04:	ddc04515 	stw	r23,276(sp)
  804e08:	dd404315 	stw	r21,268(sp)
  804e0c:	d9002c15 	stw	r4,176(sp)
  804e10:	282f883a 	mov	r23,r5
  804e14:	302b883a 	mov	r21,r6
  804e18:	d9c02d15 	stw	r7,180(sp)
  804e1c:	df004615 	stw	fp,280(sp)
  804e20:	dd804415 	stw	r22,272(sp)
  804e24:	dd004215 	stw	r20,264(sp)
  804e28:	dcc04115 	stw	r19,260(sp)
  804e2c:	dc804015 	stw	r18,256(sp)
  804e30:	dc403f15 	stw	r17,252(sp)
  804e34:	dc003e15 	stw	r16,248(sp)
  804e38:	08091f40 	call	8091f4 <_localeconv_r>
  804e3c:	10800017 	ldw	r2,0(r2)
  804e40:	1009883a 	mov	r4,r2
  804e44:	d8803415 	stw	r2,208(sp)
  804e48:	08035a80 	call	8035a8 <strlen>
  804e4c:	d8803715 	stw	r2,220(sp)
  804e50:	d8802c17 	ldw	r2,176(sp)
  804e54:	10000226 	beq	r2,zero,804e60 <___vfprintf_internal_r+0x64>
  804e58:	10800e17 	ldw	r2,56(r2)
  804e5c:	1000f926 	beq	r2,zero,805244 <___vfprintf_internal_r+0x448>
  804e60:	b880030b 	ldhu	r2,12(r23)
  804e64:	10c8000c 	andi	r3,r2,8192
  804e68:	1800061e 	bne	r3,zero,804e84 <___vfprintf_internal_r+0x88>
  804e6c:	b9001917 	ldw	r4,100(r23)
  804e70:	00f7ffc4 	movi	r3,-8193
  804e74:	10880014 	ori	r2,r2,8192
  804e78:	20c6703a 	and	r3,r4,r3
  804e7c:	b880030d 	sth	r2,12(r23)
  804e80:	b8c01915 	stw	r3,100(r23)
  804e84:	10c0020c 	andi	r3,r2,8
  804e88:	1800c126 	beq	r3,zero,805190 <___vfprintf_internal_r+0x394>
  804e8c:	b8c00417 	ldw	r3,16(r23)
  804e90:	1800bf26 	beq	r3,zero,805190 <___vfprintf_internal_r+0x394>
  804e94:	1080068c 	andi	r2,r2,26
  804e98:	00c00284 	movi	r3,10
  804e9c:	10c0c426 	beq	r2,r3,8051b0 <___vfprintf_internal_r+0x3b4>
  804ea0:	d8c00404 	addi	r3,sp,16
  804ea4:	050020b4 	movhi	r20,130
  804ea8:	d9001e04 	addi	r4,sp,120
  804eac:	a5317484 	addi	r20,r20,-14894
  804eb0:	d8c01e15 	stw	r3,120(sp)
  804eb4:	d8002015 	stw	zero,128(sp)
  804eb8:	d8001f15 	stw	zero,124(sp)
  804ebc:	d8003315 	stw	zero,204(sp)
  804ec0:	d8003615 	stw	zero,216(sp)
  804ec4:	d8003815 	stw	zero,224(sp)
  804ec8:	1811883a 	mov	r8,r3
  804ecc:	d8003915 	stw	zero,228(sp)
  804ed0:	d8003a15 	stw	zero,232(sp)
  804ed4:	d8002f15 	stw	zero,188(sp)
  804ed8:	d9002815 	stw	r4,160(sp)
  804edc:	a8800007 	ldb	r2,0(r21)
  804ee0:	10027b26 	beq	r2,zero,8058d0 <___vfprintf_internal_r+0xad4>
  804ee4:	00c00944 	movi	r3,37
  804ee8:	a821883a 	mov	r16,r21
  804eec:	10c0021e 	bne	r2,r3,804ef8 <___vfprintf_internal_r+0xfc>
  804ef0:	00001406 	br	804f44 <___vfprintf_internal_r+0x148>
  804ef4:	10c00326 	beq	r2,r3,804f04 <___vfprintf_internal_r+0x108>
  804ef8:	84000044 	addi	r16,r16,1
  804efc:	80800007 	ldb	r2,0(r16)
  804f00:	103ffc1e 	bne	r2,zero,804ef4 <__alt_data_end+0xff804ef4>
  804f04:	8563c83a 	sub	r17,r16,r21
  804f08:	88000e26 	beq	r17,zero,804f44 <___vfprintf_internal_r+0x148>
  804f0c:	d8c02017 	ldw	r3,128(sp)
  804f10:	d8801f17 	ldw	r2,124(sp)
  804f14:	45400015 	stw	r21,0(r8)
  804f18:	1c47883a 	add	r3,r3,r17
  804f1c:	10800044 	addi	r2,r2,1
  804f20:	d8c02015 	stw	r3,128(sp)
  804f24:	44400115 	stw	r17,4(r8)
  804f28:	d8801f15 	stw	r2,124(sp)
  804f2c:	00c001c4 	movi	r3,7
  804f30:	1880a716 	blt	r3,r2,8051d0 <___vfprintf_internal_r+0x3d4>
  804f34:	42000204 	addi	r8,r8,8
  804f38:	d9402f17 	ldw	r5,188(sp)
  804f3c:	2c4b883a 	add	r5,r5,r17
  804f40:	d9402f15 	stw	r5,188(sp)
  804f44:	80800007 	ldb	r2,0(r16)
  804f48:	1000a826 	beq	r2,zero,8051ec <___vfprintf_internal_r+0x3f0>
  804f4c:	84400047 	ldb	r17,1(r16)
  804f50:	00bfffc4 	movi	r2,-1
  804f54:	85400044 	addi	r21,r16,1
  804f58:	d8002785 	stb	zero,158(sp)
  804f5c:	0007883a 	mov	r3,zero
  804f60:	000f883a 	mov	r7,zero
  804f64:	d8802915 	stw	r2,164(sp)
  804f68:	d8003115 	stw	zero,196(sp)
  804f6c:	0025883a 	mov	r18,zero
  804f70:	01401604 	movi	r5,88
  804f74:	01800244 	movi	r6,9
  804f78:	02800a84 	movi	r10,42
  804f7c:	02401b04 	movi	r9,108
  804f80:	ad400044 	addi	r21,r21,1
  804f84:	88bff804 	addi	r2,r17,-32
  804f88:	28830436 	bltu	r5,r2,805b9c <___vfprintf_internal_r+0xda0>
  804f8c:	100490ba 	slli	r2,r2,2
  804f90:	01002034 	movhi	r4,128
  804f94:	2113e904 	addi	r4,r4,20388
  804f98:	1105883a 	add	r2,r2,r4
  804f9c:	10800017 	ldw	r2,0(r2)
  804fa0:	1000683a 	jmp	r2
  804fa4:	00805abc 	xorhi	r2,zero,362
  804fa8:	00805b9c 	xori	r2,zero,366
  804fac:	00805b9c 	xori	r2,zero,366
  804fb0:	00805adc 	xori	r2,zero,363
  804fb4:	00805b9c 	xori	r2,zero,366
  804fb8:	00805b9c 	xori	r2,zero,366
  804fbc:	00805b9c 	xori	r2,zero,366
  804fc0:	00805b9c 	xori	r2,zero,366
  804fc4:	00805b9c 	xori	r2,zero,366
  804fc8:	00805b9c 	xori	r2,zero,366
  804fcc:	00805250 	cmplti	r2,zero,329
  804fd0:	008059f8 	rdprs	r2,zero,359
  804fd4:	00805b9c 	xori	r2,zero,366
  804fd8:	00805118 	cmpnei	r2,zero,324
  804fdc:	00805278 	rdprs	r2,zero,329
  804fe0:	00805b9c 	xori	r2,zero,366
  804fe4:	008052b8 	rdprs	r2,zero,330
  804fe8:	008052c4 	movi	r2,331
  804fec:	008052c4 	movi	r2,331
  804ff0:	008052c4 	movi	r2,331
  804ff4:	008052c4 	movi	r2,331
  804ff8:	008052c4 	movi	r2,331
  804ffc:	008052c4 	movi	r2,331
  805000:	008052c4 	movi	r2,331
  805004:	008052c4 	movi	r2,331
  805008:	008052c4 	movi	r2,331
  80500c:	00805b9c 	xori	r2,zero,366
  805010:	00805b9c 	xori	r2,zero,366
  805014:	00805b9c 	xori	r2,zero,366
  805018:	00805b9c 	xori	r2,zero,366
  80501c:	00805b9c 	xori	r2,zero,366
  805020:	00805b9c 	xori	r2,zero,366
  805024:	00805b9c 	xori	r2,zero,366
  805028:	00805b9c 	xori	r2,zero,366
  80502c:	00805b9c 	xori	r2,zero,366
  805030:	00805b9c 	xori	r2,zero,366
  805034:	008052f8 	rdprs	r2,zero,331
  805038:	008053b4 	movhi	r2,334
  80503c:	00805b9c 	xori	r2,zero,366
  805040:	008053b4 	movhi	r2,334
  805044:	00805b9c 	xori	r2,zero,366
  805048:	00805b9c 	xori	r2,zero,366
  80504c:	00805b9c 	xori	r2,zero,366
  805050:	00805b9c 	xori	r2,zero,366
  805054:	00805454 	movui	r2,337
  805058:	00805b9c 	xori	r2,zero,366
  80505c:	00805b9c 	xori	r2,zero,366
  805060:	00805460 	cmpeqi	r2,zero,337
  805064:	00805b9c 	xori	r2,zero,366
  805068:	00805b9c 	xori	r2,zero,366
  80506c:	00805b9c 	xori	r2,zero,366
  805070:	00805b9c 	xori	r2,zero,366
  805074:	00805b9c 	xori	r2,zero,366
  805078:	008058d8 	cmpnei	r2,zero,355
  80507c:	00805b9c 	xori	r2,zero,366
  805080:	00805b9c 	xori	r2,zero,366
  805084:	00805938 	rdprs	r2,zero,356
  805088:	00805b9c 	xori	r2,zero,366
  80508c:	00805b9c 	xori	r2,zero,366
  805090:	00805b9c 	xori	r2,zero,366
  805094:	00805b9c 	xori	r2,zero,366
  805098:	00805b9c 	xori	r2,zero,366
  80509c:	00805b9c 	xori	r2,zero,366
  8050a0:	00805b9c 	xori	r2,zero,366
  8050a4:	00805b9c 	xori	r2,zero,366
  8050a8:	00805b9c 	xori	r2,zero,366
  8050ac:	00805b9c 	xori	r2,zero,366
  8050b0:	00805b48 	cmpgei	r2,zero,365
  8050b4:	00805ae8 	cmpgeui	r2,zero,363
  8050b8:	008053b4 	movhi	r2,334
  8050bc:	008053b4 	movhi	r2,334
  8050c0:	008053b4 	movhi	r2,334
  8050c4:	00805af8 	rdprs	r2,zero,363
  8050c8:	00805ae8 	cmpgeui	r2,zero,363
  8050cc:	00805b9c 	xori	r2,zero,366
  8050d0:	00805b9c 	xori	r2,zero,366
  8050d4:	00805b04 	movi	r2,364
  8050d8:	00805b9c 	xori	r2,zero,366
  8050dc:	00805b14 	movui	r2,364
  8050e0:	008059e8 	cmpgeui	r2,zero,359
  8050e4:	00805124 	muli	r2,zero,324
  8050e8:	00805a08 	cmpgei	r2,zero,360
  8050ec:	00805b9c 	xori	r2,zero,366
  8050f0:	00805a14 	movui	r2,360
  8050f4:	00805b9c 	xori	r2,zero,366
  8050f8:	00805a70 	cmpltui	r2,zero,361
  8050fc:	00805b9c 	xori	r2,zero,366
  805100:	00805b9c 	xori	r2,zero,366
  805104:	00805a80 	call	805a8 <__alt_mem_sdram_0-0x77fa58>
  805108:	d9003117 	ldw	r4,196(sp)
  80510c:	d8802d15 	stw	r2,180(sp)
  805110:	0109c83a 	sub	r4,zero,r4
  805114:	d9003115 	stw	r4,196(sp)
  805118:	94800114 	ori	r18,r18,4
  80511c:	ac400007 	ldb	r17,0(r21)
  805120:	003f9706 	br	804f80 <__alt_data_end+0xff804f80>
  805124:	00800c04 	movi	r2,48
  805128:	d9002d17 	ldw	r4,180(sp)
  80512c:	d9402917 	ldw	r5,164(sp)
  805130:	d8802705 	stb	r2,156(sp)
  805134:	00801e04 	movi	r2,120
  805138:	d8802745 	stb	r2,157(sp)
  80513c:	d8002785 	stb	zero,158(sp)
  805140:	20c00104 	addi	r3,r4,4
  805144:	24c00017 	ldw	r19,0(r4)
  805148:	002d883a 	mov	r22,zero
  80514c:	90800094 	ori	r2,r18,2
  805150:	28029a16 	blt	r5,zero,805bbc <___vfprintf_internal_r+0xdc0>
  805154:	00bfdfc4 	movi	r2,-129
  805158:	90a4703a 	and	r18,r18,r2
  80515c:	d8c02d15 	stw	r3,180(sp)
  805160:	94800094 	ori	r18,r18,2
  805164:	9802871e 	bne	r19,zero,805b84 <___vfprintf_internal_r+0xd88>
  805168:	008020b4 	movhi	r2,130
  80516c:	10b16d04 	addi	r2,r2,-14924
  805170:	d8803915 	stw	r2,228(sp)
  805174:	04401e04 	movi	r17,120
  805178:	d8802917 	ldw	r2,164(sp)
  80517c:	0039883a 	mov	fp,zero
  805180:	1001e926 	beq	r2,zero,805928 <___vfprintf_internal_r+0xb2c>
  805184:	0027883a 	mov	r19,zero
  805188:	002d883a 	mov	r22,zero
  80518c:	00020506 	br	8059a4 <___vfprintf_internal_r+0xba8>
  805190:	d9002c17 	ldw	r4,176(sp)
  805194:	b80b883a 	mov	r5,r23
  805198:	080712c0 	call	80712c <__swsetup_r>
  80519c:	1005ac1e 	bne	r2,zero,806850 <___vfprintf_internal_r+0x1a54>
  8051a0:	b880030b 	ldhu	r2,12(r23)
  8051a4:	00c00284 	movi	r3,10
  8051a8:	1080068c 	andi	r2,r2,26
  8051ac:	10ff3c1e 	bne	r2,r3,804ea0 <__alt_data_end+0xff804ea0>
  8051b0:	b880038f 	ldh	r2,14(r23)
  8051b4:	103f3a16 	blt	r2,zero,804ea0 <__alt_data_end+0xff804ea0>
  8051b8:	d9c02d17 	ldw	r7,180(sp)
  8051bc:	d9002c17 	ldw	r4,176(sp)
  8051c0:	a80d883a 	mov	r6,r21
  8051c4:	b80b883a 	mov	r5,r23
  8051c8:	08070100 	call	807010 <__sbprintf>
  8051cc:	00001106 	br	805214 <___vfprintf_internal_r+0x418>
  8051d0:	d9002c17 	ldw	r4,176(sp)
  8051d4:	d9801e04 	addi	r6,sp,120
  8051d8:	b80b883a 	mov	r5,r23
  8051dc:	0810d4c0 	call	810d4c <__sprint_r>
  8051e0:	1000081e 	bne	r2,zero,805204 <___vfprintf_internal_r+0x408>
  8051e4:	da000404 	addi	r8,sp,16
  8051e8:	003f5306 	br	804f38 <__alt_data_end+0xff804f38>
  8051ec:	d8802017 	ldw	r2,128(sp)
  8051f0:	10000426 	beq	r2,zero,805204 <___vfprintf_internal_r+0x408>
  8051f4:	d9002c17 	ldw	r4,176(sp)
  8051f8:	d9801e04 	addi	r6,sp,120
  8051fc:	b80b883a 	mov	r5,r23
  805200:	0810d4c0 	call	810d4c <__sprint_r>
  805204:	b880030b 	ldhu	r2,12(r23)
  805208:	1080100c 	andi	r2,r2,64
  80520c:	1005901e 	bne	r2,zero,806850 <___vfprintf_internal_r+0x1a54>
  805210:	d8802f17 	ldw	r2,188(sp)
  805214:	dfc04717 	ldw	ra,284(sp)
  805218:	df004617 	ldw	fp,280(sp)
  80521c:	ddc04517 	ldw	r23,276(sp)
  805220:	dd804417 	ldw	r22,272(sp)
  805224:	dd404317 	ldw	r21,268(sp)
  805228:	dd004217 	ldw	r20,264(sp)
  80522c:	dcc04117 	ldw	r19,260(sp)
  805230:	dc804017 	ldw	r18,256(sp)
  805234:	dc403f17 	ldw	r17,252(sp)
  805238:	dc003e17 	ldw	r16,248(sp)
  80523c:	dec04804 	addi	sp,sp,288
  805240:	f800283a 	ret
  805244:	d9002c17 	ldw	r4,176(sp)
  805248:	08015c40 	call	8015c4 <__sinit>
  80524c:	003f0406 	br	804e60 <__alt_data_end+0xff804e60>
  805250:	d8802d17 	ldw	r2,180(sp)
  805254:	d9002d17 	ldw	r4,180(sp)
  805258:	10800017 	ldw	r2,0(r2)
  80525c:	d8803115 	stw	r2,196(sp)
  805260:	20800104 	addi	r2,r4,4
  805264:	d9003117 	ldw	r4,196(sp)
  805268:	203fa716 	blt	r4,zero,805108 <__alt_data_end+0xff805108>
  80526c:	d8802d15 	stw	r2,180(sp)
  805270:	ac400007 	ldb	r17,0(r21)
  805274:	003f4206 	br	804f80 <__alt_data_end+0xff804f80>
  805278:	ac400007 	ldb	r17,0(r21)
  80527c:	aac00044 	addi	r11,r21,1
  805280:	8a872826 	beq	r17,r10,806f24 <___vfprintf_internal_r+0x2128>
  805284:	88bff404 	addi	r2,r17,-48
  805288:	0009883a 	mov	r4,zero
  80528c:	30867d36 	bltu	r6,r2,806c84 <___vfprintf_internal_r+0x1e88>
  805290:	5c400007 	ldb	r17,0(r11)
  805294:	210002a4 	muli	r4,r4,10
  805298:	5d400044 	addi	r21,r11,1
  80529c:	a817883a 	mov	r11,r21
  8052a0:	2089883a 	add	r4,r4,r2
  8052a4:	88bff404 	addi	r2,r17,-48
  8052a8:	30bff92e 	bgeu	r6,r2,805290 <__alt_data_end+0xff805290>
  8052ac:	2005c916 	blt	r4,zero,8069d4 <___vfprintf_internal_r+0x1bd8>
  8052b0:	d9002915 	stw	r4,164(sp)
  8052b4:	003f3306 	br	804f84 <__alt_data_end+0xff804f84>
  8052b8:	94802014 	ori	r18,r18,128
  8052bc:	ac400007 	ldb	r17,0(r21)
  8052c0:	003f2f06 	br	804f80 <__alt_data_end+0xff804f80>
  8052c4:	a809883a 	mov	r4,r21
  8052c8:	d8003115 	stw	zero,196(sp)
  8052cc:	88bff404 	addi	r2,r17,-48
  8052d0:	0017883a 	mov	r11,zero
  8052d4:	24400007 	ldb	r17,0(r4)
  8052d8:	5ac002a4 	muli	r11,r11,10
  8052dc:	ad400044 	addi	r21,r21,1
  8052e0:	a809883a 	mov	r4,r21
  8052e4:	12d7883a 	add	r11,r2,r11
  8052e8:	88bff404 	addi	r2,r17,-48
  8052ec:	30bff92e 	bgeu	r6,r2,8052d4 <__alt_data_end+0xff8052d4>
  8052f0:	dac03115 	stw	r11,196(sp)
  8052f4:	003f2306 	br	804f84 <__alt_data_end+0xff804f84>
  8052f8:	18c03fcc 	andi	r3,r3,255
  8052fc:	18072b1e 	bne	r3,zero,806fac <___vfprintf_internal_r+0x21b0>
  805300:	94800414 	ori	r18,r18,16
  805304:	9080080c 	andi	r2,r18,32
  805308:	10037b26 	beq	r2,zero,8060f8 <___vfprintf_internal_r+0x12fc>
  80530c:	d9402d17 	ldw	r5,180(sp)
  805310:	28800117 	ldw	r2,4(r5)
  805314:	2cc00017 	ldw	r19,0(r5)
  805318:	29400204 	addi	r5,r5,8
  80531c:	d9402d15 	stw	r5,180(sp)
  805320:	102d883a 	mov	r22,r2
  805324:	10044b16 	blt	r2,zero,806454 <___vfprintf_internal_r+0x1658>
  805328:	d9402917 	ldw	r5,164(sp)
  80532c:	df002783 	ldbu	fp,158(sp)
  805330:	2803bc16 	blt	r5,zero,806224 <___vfprintf_internal_r+0x1428>
  805334:	00ffdfc4 	movi	r3,-129
  805338:	9d84b03a 	or	r2,r19,r22
  80533c:	90e4703a 	and	r18,r18,r3
  805340:	10017726 	beq	r2,zero,805920 <___vfprintf_internal_r+0xb24>
  805344:	b0038326 	beq	r22,zero,806154 <___vfprintf_internal_r+0x1358>
  805348:	dc402a15 	stw	r17,168(sp)
  80534c:	dc001e04 	addi	r16,sp,120
  805350:	b023883a 	mov	r17,r22
  805354:	402d883a 	mov	r22,r8
  805358:	9809883a 	mov	r4,r19
  80535c:	880b883a 	mov	r5,r17
  805360:	01800284 	movi	r6,10
  805364:	000f883a 	mov	r7,zero
  805368:	0814f580 	call	814f58 <__umoddi3>
  80536c:	10800c04 	addi	r2,r2,48
  805370:	843fffc4 	addi	r16,r16,-1
  805374:	9809883a 	mov	r4,r19
  805378:	880b883a 	mov	r5,r17
  80537c:	80800005 	stb	r2,0(r16)
  805380:	01800284 	movi	r6,10
  805384:	000f883a 	mov	r7,zero
  805388:	08149e00 	call	8149e0 <__udivdi3>
  80538c:	1027883a 	mov	r19,r2
  805390:	10c4b03a 	or	r2,r2,r3
  805394:	1823883a 	mov	r17,r3
  805398:	103fef1e 	bne	r2,zero,805358 <__alt_data_end+0xff805358>
  80539c:	d8c02817 	ldw	r3,160(sp)
  8053a0:	dc402a17 	ldw	r17,168(sp)
  8053a4:	b011883a 	mov	r8,r22
  8053a8:	1c07c83a 	sub	r3,r3,r16
  8053ac:	d8c02e15 	stw	r3,184(sp)
  8053b0:	00005906 	br	805518 <___vfprintf_internal_r+0x71c>
  8053b4:	18c03fcc 	andi	r3,r3,255
  8053b8:	1806fa1e 	bne	r3,zero,806fa4 <___vfprintf_internal_r+0x21a8>
  8053bc:	9080020c 	andi	r2,r18,8
  8053c0:	10048a26 	beq	r2,zero,8065ec <___vfprintf_internal_r+0x17f0>
  8053c4:	d8c02d17 	ldw	r3,180(sp)
  8053c8:	d9002d17 	ldw	r4,180(sp)
  8053cc:	d9402d17 	ldw	r5,180(sp)
  8053d0:	18c00017 	ldw	r3,0(r3)
  8053d4:	21000117 	ldw	r4,4(r4)
  8053d8:	29400204 	addi	r5,r5,8
  8053dc:	d8c03615 	stw	r3,216(sp)
  8053e0:	d9003815 	stw	r4,224(sp)
  8053e4:	d9402d15 	stw	r5,180(sp)
  8053e8:	d9003617 	ldw	r4,216(sp)
  8053ec:	d9403817 	ldw	r5,224(sp)
  8053f0:	da003d15 	stw	r8,244(sp)
  8053f4:	04000044 	movi	r16,1
  8053f8:	080af580 	call	80af58 <__fpclassifyd>
  8053fc:	da003d17 	ldw	r8,244(sp)
  805400:	14041f1e 	bne	r2,r16,806480 <___vfprintf_internal_r+0x1684>
  805404:	d9003617 	ldw	r4,216(sp)
  805408:	d9403817 	ldw	r5,224(sp)
  80540c:	000d883a 	mov	r6,zero
  805410:	000f883a 	mov	r7,zero
  805414:	0816b380 	call	816b38 <__ledf2>
  805418:	da003d17 	ldw	r8,244(sp)
  80541c:	1005be16 	blt	r2,zero,806b18 <___vfprintf_internal_r+0x1d1c>
  805420:	df002783 	ldbu	fp,158(sp)
  805424:	008011c4 	movi	r2,71
  805428:	1445330e 	bge	r2,r17,8068f8 <___vfprintf_internal_r+0x1afc>
  80542c:	040020b4 	movhi	r16,130
  805430:	84316504 	addi	r16,r16,-14956
  805434:	00c000c4 	movi	r3,3
  805438:	00bfdfc4 	movi	r2,-129
  80543c:	d8c02a15 	stw	r3,168(sp)
  805440:	90a4703a 	and	r18,r18,r2
  805444:	d8c02e15 	stw	r3,184(sp)
  805448:	d8002915 	stw	zero,164(sp)
  80544c:	d8003215 	stw	zero,200(sp)
  805450:	00003706 	br	805530 <___vfprintf_internal_r+0x734>
  805454:	94800214 	ori	r18,r18,8
  805458:	ac400007 	ldb	r17,0(r21)
  80545c:	003ec806 	br	804f80 <__alt_data_end+0xff804f80>
  805460:	18c03fcc 	andi	r3,r3,255
  805464:	1806db1e 	bne	r3,zero,806fd4 <___vfprintf_internal_r+0x21d8>
  805468:	94800414 	ori	r18,r18,16
  80546c:	9080080c 	andi	r2,r18,32
  805470:	1002d826 	beq	r2,zero,805fd4 <___vfprintf_internal_r+0x11d8>
  805474:	d9402d17 	ldw	r5,180(sp)
  805478:	d8c02917 	ldw	r3,164(sp)
  80547c:	d8002785 	stb	zero,158(sp)
  805480:	28800204 	addi	r2,r5,8
  805484:	2cc00017 	ldw	r19,0(r5)
  805488:	2d800117 	ldw	r22,4(r5)
  80548c:	18048f16 	blt	r3,zero,8066cc <___vfprintf_internal_r+0x18d0>
  805490:	013fdfc4 	movi	r4,-129
  805494:	9d86b03a 	or	r3,r19,r22
  805498:	d8802d15 	stw	r2,180(sp)
  80549c:	9124703a 	and	r18,r18,r4
  8054a0:	1802d91e 	bne	r3,zero,806008 <___vfprintf_internal_r+0x120c>
  8054a4:	d8c02917 	ldw	r3,164(sp)
  8054a8:	0039883a 	mov	fp,zero
  8054ac:	1805c326 	beq	r3,zero,806bbc <___vfprintf_internal_r+0x1dc0>
  8054b0:	0027883a 	mov	r19,zero
  8054b4:	002d883a 	mov	r22,zero
  8054b8:	dc001e04 	addi	r16,sp,120
  8054bc:	9806d0fa 	srli	r3,r19,3
  8054c0:	b008977a 	slli	r4,r22,29
  8054c4:	b02cd0fa 	srli	r22,r22,3
  8054c8:	9cc001cc 	andi	r19,r19,7
  8054cc:	98800c04 	addi	r2,r19,48
  8054d0:	843fffc4 	addi	r16,r16,-1
  8054d4:	20e6b03a 	or	r19,r4,r3
  8054d8:	80800005 	stb	r2,0(r16)
  8054dc:	9d86b03a 	or	r3,r19,r22
  8054e0:	183ff61e 	bne	r3,zero,8054bc <__alt_data_end+0xff8054bc>
  8054e4:	90c0004c 	andi	r3,r18,1
  8054e8:	18013b26 	beq	r3,zero,8059d8 <___vfprintf_internal_r+0xbdc>
  8054ec:	10803fcc 	andi	r2,r2,255
  8054f0:	1080201c 	xori	r2,r2,128
  8054f4:	10bfe004 	addi	r2,r2,-128
  8054f8:	00c00c04 	movi	r3,48
  8054fc:	10c13626 	beq	r2,r3,8059d8 <___vfprintf_internal_r+0xbdc>
  805500:	80ffffc5 	stb	r3,-1(r16)
  805504:	d8c02817 	ldw	r3,160(sp)
  805508:	80bfffc4 	addi	r2,r16,-1
  80550c:	1021883a 	mov	r16,r2
  805510:	1887c83a 	sub	r3,r3,r2
  805514:	d8c02e15 	stw	r3,184(sp)
  805518:	d8802e17 	ldw	r2,184(sp)
  80551c:	d9002917 	ldw	r4,164(sp)
  805520:	1100010e 	bge	r2,r4,805528 <___vfprintf_internal_r+0x72c>
  805524:	2005883a 	mov	r2,r4
  805528:	d8802a15 	stw	r2,168(sp)
  80552c:	d8003215 	stw	zero,200(sp)
  805530:	e7003fcc 	andi	fp,fp,255
  805534:	e700201c 	xori	fp,fp,128
  805538:	e73fe004 	addi	fp,fp,-128
  80553c:	e0000326 	beq	fp,zero,80554c <___vfprintf_internal_r+0x750>
  805540:	d8c02a17 	ldw	r3,168(sp)
  805544:	18c00044 	addi	r3,r3,1
  805548:	d8c02a15 	stw	r3,168(sp)
  80554c:	90c0008c 	andi	r3,r18,2
  805550:	d8c02b15 	stw	r3,172(sp)
  805554:	18000326 	beq	r3,zero,805564 <___vfprintf_internal_r+0x768>
  805558:	d8c02a17 	ldw	r3,168(sp)
  80555c:	18c00084 	addi	r3,r3,2
  805560:	d8c02a15 	stw	r3,168(sp)
  805564:	90c0210c 	andi	r3,r18,132
  805568:	d8c03015 	stw	r3,192(sp)
  80556c:	1801a31e 	bne	r3,zero,805bfc <___vfprintf_internal_r+0xe00>
  805570:	d9003117 	ldw	r4,196(sp)
  805574:	d8c02a17 	ldw	r3,168(sp)
  805578:	20e7c83a 	sub	r19,r4,r3
  80557c:	04c19f0e 	bge	zero,r19,805bfc <___vfprintf_internal_r+0xe00>
  805580:	02400404 	movi	r9,16
  805584:	d8c02017 	ldw	r3,128(sp)
  805588:	d8801f17 	ldw	r2,124(sp)
  80558c:	4cc50d0e 	bge	r9,r19,8069c4 <___vfprintf_internal_r+0x1bc8>
  805590:	014020b4 	movhi	r5,130
  805594:	29717884 	addi	r5,r5,-14878
  805598:	dc403b15 	stw	r17,236(sp)
  80559c:	d9403515 	stw	r5,212(sp)
  8055a0:	9823883a 	mov	r17,r19
  8055a4:	482d883a 	mov	r22,r9
  8055a8:	9027883a 	mov	r19,r18
  8055ac:	070001c4 	movi	fp,7
  8055b0:	8025883a 	mov	r18,r16
  8055b4:	dc002c17 	ldw	r16,176(sp)
  8055b8:	00000306 	br	8055c8 <___vfprintf_internal_r+0x7cc>
  8055bc:	8c7ffc04 	addi	r17,r17,-16
  8055c0:	42000204 	addi	r8,r8,8
  8055c4:	b440130e 	bge	r22,r17,805614 <___vfprintf_internal_r+0x818>
  8055c8:	010020b4 	movhi	r4,130
  8055cc:	18c00404 	addi	r3,r3,16
  8055d0:	10800044 	addi	r2,r2,1
  8055d4:	21317884 	addi	r4,r4,-14878
  8055d8:	41000015 	stw	r4,0(r8)
  8055dc:	45800115 	stw	r22,4(r8)
  8055e0:	d8c02015 	stw	r3,128(sp)
  8055e4:	d8801f15 	stw	r2,124(sp)
  8055e8:	e0bff40e 	bge	fp,r2,8055bc <__alt_data_end+0xff8055bc>
  8055ec:	d9801e04 	addi	r6,sp,120
  8055f0:	b80b883a 	mov	r5,r23
  8055f4:	8009883a 	mov	r4,r16
  8055f8:	0810d4c0 	call	810d4c <__sprint_r>
  8055fc:	103f011e 	bne	r2,zero,805204 <__alt_data_end+0xff805204>
  805600:	8c7ffc04 	addi	r17,r17,-16
  805604:	d8c02017 	ldw	r3,128(sp)
  805608:	d8801f17 	ldw	r2,124(sp)
  80560c:	da000404 	addi	r8,sp,16
  805610:	b47fed16 	blt	r22,r17,8055c8 <__alt_data_end+0xff8055c8>
  805614:	9021883a 	mov	r16,r18
  805618:	9825883a 	mov	r18,r19
  80561c:	8827883a 	mov	r19,r17
  805620:	dc403b17 	ldw	r17,236(sp)
  805624:	d9403517 	ldw	r5,212(sp)
  805628:	98c7883a 	add	r3,r19,r3
  80562c:	10800044 	addi	r2,r2,1
  805630:	41400015 	stw	r5,0(r8)
  805634:	44c00115 	stw	r19,4(r8)
  805638:	d8c02015 	stw	r3,128(sp)
  80563c:	d8801f15 	stw	r2,124(sp)
  805640:	010001c4 	movi	r4,7
  805644:	2082a316 	blt	r4,r2,8060d4 <___vfprintf_internal_r+0x12d8>
  805648:	df002787 	ldb	fp,158(sp)
  80564c:	42000204 	addi	r8,r8,8
  805650:	e0000c26 	beq	fp,zero,805684 <___vfprintf_internal_r+0x888>
  805654:	d8801f17 	ldw	r2,124(sp)
  805658:	d9002784 	addi	r4,sp,158
  80565c:	18c00044 	addi	r3,r3,1
  805660:	10800044 	addi	r2,r2,1
  805664:	41000015 	stw	r4,0(r8)
  805668:	01000044 	movi	r4,1
  80566c:	41000115 	stw	r4,4(r8)
  805670:	d8c02015 	stw	r3,128(sp)
  805674:	d8801f15 	stw	r2,124(sp)
  805678:	010001c4 	movi	r4,7
  80567c:	20823c16 	blt	r4,r2,805f70 <___vfprintf_internal_r+0x1174>
  805680:	42000204 	addi	r8,r8,8
  805684:	d8802b17 	ldw	r2,172(sp)
  805688:	10000c26 	beq	r2,zero,8056bc <___vfprintf_internal_r+0x8c0>
  80568c:	d8801f17 	ldw	r2,124(sp)
  805690:	d9002704 	addi	r4,sp,156
  805694:	18c00084 	addi	r3,r3,2
  805698:	10800044 	addi	r2,r2,1
  80569c:	41000015 	stw	r4,0(r8)
  8056a0:	01000084 	movi	r4,2
  8056a4:	41000115 	stw	r4,4(r8)
  8056a8:	d8c02015 	stw	r3,128(sp)
  8056ac:	d8801f15 	stw	r2,124(sp)
  8056b0:	010001c4 	movi	r4,7
  8056b4:	20823616 	blt	r4,r2,805f90 <___vfprintf_internal_r+0x1194>
  8056b8:	42000204 	addi	r8,r8,8
  8056bc:	d9003017 	ldw	r4,192(sp)
  8056c0:	00802004 	movi	r2,128
  8056c4:	20819926 	beq	r4,r2,805d2c <___vfprintf_internal_r+0xf30>
  8056c8:	d9402917 	ldw	r5,164(sp)
  8056cc:	d8802e17 	ldw	r2,184(sp)
  8056d0:	28adc83a 	sub	r22,r5,r2
  8056d4:	0580310e 	bge	zero,r22,80579c <___vfprintf_internal_r+0x9a0>
  8056d8:	07000404 	movi	fp,16
  8056dc:	d8801f17 	ldw	r2,124(sp)
  8056e0:	e584140e 	bge	fp,r22,806734 <___vfprintf_internal_r+0x1938>
  8056e4:	014020b4 	movhi	r5,130
  8056e8:	29717484 	addi	r5,r5,-14894
  8056ec:	dc402915 	stw	r17,164(sp)
  8056f0:	d9402b15 	stw	r5,172(sp)
  8056f4:	b023883a 	mov	r17,r22
  8056f8:	04c001c4 	movi	r19,7
  8056fc:	a82d883a 	mov	r22,r21
  805700:	902b883a 	mov	r21,r18
  805704:	8025883a 	mov	r18,r16
  805708:	dc002c17 	ldw	r16,176(sp)
  80570c:	00000306 	br	80571c <___vfprintf_internal_r+0x920>
  805710:	8c7ffc04 	addi	r17,r17,-16
  805714:	42000204 	addi	r8,r8,8
  805718:	e440110e 	bge	fp,r17,805760 <___vfprintf_internal_r+0x964>
  80571c:	18c00404 	addi	r3,r3,16
  805720:	10800044 	addi	r2,r2,1
  805724:	45000015 	stw	r20,0(r8)
  805728:	47000115 	stw	fp,4(r8)
  80572c:	d8c02015 	stw	r3,128(sp)
  805730:	d8801f15 	stw	r2,124(sp)
  805734:	98bff60e 	bge	r19,r2,805710 <__alt_data_end+0xff805710>
  805738:	d9801e04 	addi	r6,sp,120
  80573c:	b80b883a 	mov	r5,r23
  805740:	8009883a 	mov	r4,r16
  805744:	0810d4c0 	call	810d4c <__sprint_r>
  805748:	103eae1e 	bne	r2,zero,805204 <__alt_data_end+0xff805204>
  80574c:	8c7ffc04 	addi	r17,r17,-16
  805750:	d8c02017 	ldw	r3,128(sp)
  805754:	d8801f17 	ldw	r2,124(sp)
  805758:	da000404 	addi	r8,sp,16
  80575c:	e47fef16 	blt	fp,r17,80571c <__alt_data_end+0xff80571c>
  805760:	9021883a 	mov	r16,r18
  805764:	a825883a 	mov	r18,r21
  805768:	b02b883a 	mov	r21,r22
  80576c:	882d883a 	mov	r22,r17
  805770:	dc402917 	ldw	r17,164(sp)
  805774:	d9002b17 	ldw	r4,172(sp)
  805778:	1d87883a 	add	r3,r3,r22
  80577c:	10800044 	addi	r2,r2,1
  805780:	41000015 	stw	r4,0(r8)
  805784:	45800115 	stw	r22,4(r8)
  805788:	d8c02015 	stw	r3,128(sp)
  80578c:	d8801f15 	stw	r2,124(sp)
  805790:	010001c4 	movi	r4,7
  805794:	2081ee16 	blt	r4,r2,805f50 <___vfprintf_internal_r+0x1154>
  805798:	42000204 	addi	r8,r8,8
  80579c:	9080400c 	andi	r2,r18,256
  8057a0:	1001181e 	bne	r2,zero,805c04 <___vfprintf_internal_r+0xe08>
  8057a4:	d9402e17 	ldw	r5,184(sp)
  8057a8:	d8801f17 	ldw	r2,124(sp)
  8057ac:	44000015 	stw	r16,0(r8)
  8057b0:	1947883a 	add	r3,r3,r5
  8057b4:	10800044 	addi	r2,r2,1
  8057b8:	41400115 	stw	r5,4(r8)
  8057bc:	d8c02015 	stw	r3,128(sp)
  8057c0:	d8801f15 	stw	r2,124(sp)
  8057c4:	010001c4 	movi	r4,7
  8057c8:	2081d316 	blt	r4,r2,805f18 <___vfprintf_internal_r+0x111c>
  8057cc:	42000204 	addi	r8,r8,8
  8057d0:	9480010c 	andi	r18,r18,4
  8057d4:	90003226 	beq	r18,zero,8058a0 <___vfprintf_internal_r+0xaa4>
  8057d8:	d9403117 	ldw	r5,196(sp)
  8057dc:	d8802a17 	ldw	r2,168(sp)
  8057e0:	28a1c83a 	sub	r16,r5,r2
  8057e4:	04002e0e 	bge	zero,r16,8058a0 <___vfprintf_internal_r+0xaa4>
  8057e8:	04400404 	movi	r17,16
  8057ec:	d8801f17 	ldw	r2,124(sp)
  8057f0:	8c04a20e 	bge	r17,r16,806a7c <___vfprintf_internal_r+0x1c80>
  8057f4:	014020b4 	movhi	r5,130
  8057f8:	29717884 	addi	r5,r5,-14878
  8057fc:	d9403515 	stw	r5,212(sp)
  805800:	048001c4 	movi	r18,7
  805804:	dcc02c17 	ldw	r19,176(sp)
  805808:	00000306 	br	805818 <___vfprintf_internal_r+0xa1c>
  80580c:	843ffc04 	addi	r16,r16,-16
  805810:	42000204 	addi	r8,r8,8
  805814:	8c00130e 	bge	r17,r16,805864 <___vfprintf_internal_r+0xa68>
  805818:	010020b4 	movhi	r4,130
  80581c:	18c00404 	addi	r3,r3,16
  805820:	10800044 	addi	r2,r2,1
  805824:	21317884 	addi	r4,r4,-14878
  805828:	41000015 	stw	r4,0(r8)
  80582c:	44400115 	stw	r17,4(r8)
  805830:	d8c02015 	stw	r3,128(sp)
  805834:	d8801f15 	stw	r2,124(sp)
  805838:	90bff40e 	bge	r18,r2,80580c <__alt_data_end+0xff80580c>
  80583c:	d9801e04 	addi	r6,sp,120
  805840:	b80b883a 	mov	r5,r23
  805844:	9809883a 	mov	r4,r19
  805848:	0810d4c0 	call	810d4c <__sprint_r>
  80584c:	103e6d1e 	bne	r2,zero,805204 <__alt_data_end+0xff805204>
  805850:	843ffc04 	addi	r16,r16,-16
  805854:	d8c02017 	ldw	r3,128(sp)
  805858:	d8801f17 	ldw	r2,124(sp)
  80585c:	da000404 	addi	r8,sp,16
  805860:	8c3fed16 	blt	r17,r16,805818 <__alt_data_end+0xff805818>
  805864:	d9403517 	ldw	r5,212(sp)
  805868:	1c07883a 	add	r3,r3,r16
  80586c:	10800044 	addi	r2,r2,1
  805870:	41400015 	stw	r5,0(r8)
  805874:	44000115 	stw	r16,4(r8)
  805878:	d8c02015 	stw	r3,128(sp)
  80587c:	d8801f15 	stw	r2,124(sp)
  805880:	010001c4 	movi	r4,7
  805884:	2080060e 	bge	r4,r2,8058a0 <___vfprintf_internal_r+0xaa4>
  805888:	d9002c17 	ldw	r4,176(sp)
  80588c:	d9801e04 	addi	r6,sp,120
  805890:	b80b883a 	mov	r5,r23
  805894:	0810d4c0 	call	810d4c <__sprint_r>
  805898:	103e5a1e 	bne	r2,zero,805204 <__alt_data_end+0xff805204>
  80589c:	d8c02017 	ldw	r3,128(sp)
  8058a0:	d8803117 	ldw	r2,196(sp)
  8058a4:	d9002a17 	ldw	r4,168(sp)
  8058a8:	1100010e 	bge	r2,r4,8058b0 <___vfprintf_internal_r+0xab4>
  8058ac:	2005883a 	mov	r2,r4
  8058b0:	d9402f17 	ldw	r5,188(sp)
  8058b4:	288b883a 	add	r5,r5,r2
  8058b8:	d9402f15 	stw	r5,188(sp)
  8058bc:	18019e1e 	bne	r3,zero,805f38 <___vfprintf_internal_r+0x113c>
  8058c0:	a8800007 	ldb	r2,0(r21)
  8058c4:	d8001f15 	stw	zero,124(sp)
  8058c8:	da000404 	addi	r8,sp,16
  8058cc:	103d851e 	bne	r2,zero,804ee4 <__alt_data_end+0xff804ee4>
  8058d0:	a821883a 	mov	r16,r21
  8058d4:	003d9b06 	br	804f44 <__alt_data_end+0xff804f44>
  8058d8:	18c03fcc 	andi	r3,r3,255
  8058dc:	1805c11e 	bne	r3,zero,806fe4 <___vfprintf_internal_r+0x21e8>
  8058e0:	94800414 	ori	r18,r18,16
  8058e4:	9080080c 	andi	r2,r18,32
  8058e8:	10020c26 	beq	r2,zero,80611c <___vfprintf_internal_r+0x1320>
  8058ec:	d8802d17 	ldw	r2,180(sp)
  8058f0:	d9002917 	ldw	r4,164(sp)
  8058f4:	d8002785 	stb	zero,158(sp)
  8058f8:	10c00204 	addi	r3,r2,8
  8058fc:	14c00017 	ldw	r19,0(r2)
  805900:	15800117 	ldw	r22,4(r2)
  805904:	20040f16 	blt	r4,zero,806944 <___vfprintf_internal_r+0x1b48>
  805908:	013fdfc4 	movi	r4,-129
  80590c:	9d84b03a 	or	r2,r19,r22
  805910:	d8c02d15 	stw	r3,180(sp)
  805914:	9124703a 	and	r18,r18,r4
  805918:	0039883a 	mov	fp,zero
  80591c:	103e891e 	bne	r2,zero,805344 <__alt_data_end+0xff805344>
  805920:	d9002917 	ldw	r4,164(sp)
  805924:	2002c11e 	bne	r4,zero,80642c <___vfprintf_internal_r+0x1630>
  805928:	d8002915 	stw	zero,164(sp)
  80592c:	d8002e15 	stw	zero,184(sp)
  805930:	dc001e04 	addi	r16,sp,120
  805934:	003ef806 	br	805518 <__alt_data_end+0xff805518>
  805938:	18c03fcc 	andi	r3,r3,255
  80593c:	18059d1e 	bne	r3,zero,806fb4 <___vfprintf_internal_r+0x21b8>
  805940:	014020b4 	movhi	r5,130
  805944:	29716804 	addi	r5,r5,-14944
  805948:	d9403915 	stw	r5,228(sp)
  80594c:	9080080c 	andi	r2,r18,32
  805950:	10005226 	beq	r2,zero,805a9c <___vfprintf_internal_r+0xca0>
  805954:	d8802d17 	ldw	r2,180(sp)
  805958:	14c00017 	ldw	r19,0(r2)
  80595c:	15800117 	ldw	r22,4(r2)
  805960:	10800204 	addi	r2,r2,8
  805964:	d8802d15 	stw	r2,180(sp)
  805968:	9080004c 	andi	r2,r18,1
  80596c:	10019026 	beq	r2,zero,805fb0 <___vfprintf_internal_r+0x11b4>
  805970:	9d84b03a 	or	r2,r19,r22
  805974:	10036926 	beq	r2,zero,80671c <___vfprintf_internal_r+0x1920>
  805978:	d8c02917 	ldw	r3,164(sp)
  80597c:	00800c04 	movi	r2,48
  805980:	d8802705 	stb	r2,156(sp)
  805984:	dc402745 	stb	r17,157(sp)
  805988:	d8002785 	stb	zero,158(sp)
  80598c:	90800094 	ori	r2,r18,2
  805990:	18045d16 	blt	r3,zero,806b08 <___vfprintf_internal_r+0x1d0c>
  805994:	00bfdfc4 	movi	r2,-129
  805998:	90a4703a 	and	r18,r18,r2
  80599c:	94800094 	ori	r18,r18,2
  8059a0:	0039883a 	mov	fp,zero
  8059a4:	d9003917 	ldw	r4,228(sp)
  8059a8:	dc001e04 	addi	r16,sp,120
  8059ac:	988003cc 	andi	r2,r19,15
  8059b0:	b006973a 	slli	r3,r22,28
  8059b4:	2085883a 	add	r2,r4,r2
  8059b8:	9826d13a 	srli	r19,r19,4
  8059bc:	10800003 	ldbu	r2,0(r2)
  8059c0:	b02cd13a 	srli	r22,r22,4
  8059c4:	843fffc4 	addi	r16,r16,-1
  8059c8:	1ce6b03a 	or	r19,r3,r19
  8059cc:	80800005 	stb	r2,0(r16)
  8059d0:	9d84b03a 	or	r2,r19,r22
  8059d4:	103ff51e 	bne	r2,zero,8059ac <__alt_data_end+0xff8059ac>
  8059d8:	d8c02817 	ldw	r3,160(sp)
  8059dc:	1c07c83a 	sub	r3,r3,r16
  8059e0:	d8c02e15 	stw	r3,184(sp)
  8059e4:	003ecc06 	br	805518 <__alt_data_end+0xff805518>
  8059e8:	18c03fcc 	andi	r3,r3,255
  8059ec:	183e9f26 	beq	r3,zero,80546c <__alt_data_end+0xff80546c>
  8059f0:	d9c02785 	stb	r7,158(sp)
  8059f4:	003e9d06 	br	80546c <__alt_data_end+0xff80546c>
  8059f8:	00c00044 	movi	r3,1
  8059fc:	01c00ac4 	movi	r7,43
  805a00:	ac400007 	ldb	r17,0(r21)
  805a04:	003d5e06 	br	804f80 <__alt_data_end+0xff804f80>
  805a08:	94800814 	ori	r18,r18,32
  805a0c:	ac400007 	ldb	r17,0(r21)
  805a10:	003d5b06 	br	804f80 <__alt_data_end+0xff804f80>
  805a14:	d8c02d17 	ldw	r3,180(sp)
  805a18:	d8002785 	stb	zero,158(sp)
  805a1c:	1c000017 	ldw	r16,0(r3)
  805a20:	1cc00104 	addi	r19,r3,4
  805a24:	80041926 	beq	r16,zero,806a8c <___vfprintf_internal_r+0x1c90>
  805a28:	d9002917 	ldw	r4,164(sp)
  805a2c:	2003d016 	blt	r4,zero,806970 <___vfprintf_internal_r+0x1b74>
  805a30:	200d883a 	mov	r6,r4
  805a34:	000b883a 	mov	r5,zero
  805a38:	8009883a 	mov	r4,r16
  805a3c:	da003d15 	stw	r8,244(sp)
  805a40:	08094a80 	call	8094a8 <memchr>
  805a44:	da003d17 	ldw	r8,244(sp)
  805a48:	10045426 	beq	r2,zero,806b9c <___vfprintf_internal_r+0x1da0>
  805a4c:	1405c83a 	sub	r2,r2,r16
  805a50:	d8802e15 	stw	r2,184(sp)
  805a54:	1003cc16 	blt	r2,zero,806988 <___vfprintf_internal_r+0x1b8c>
  805a58:	df002783 	ldbu	fp,158(sp)
  805a5c:	d8802a15 	stw	r2,168(sp)
  805a60:	dcc02d15 	stw	r19,180(sp)
  805a64:	d8002915 	stw	zero,164(sp)
  805a68:	d8003215 	stw	zero,200(sp)
  805a6c:	003eb006 	br	805530 <__alt_data_end+0xff805530>
  805a70:	18c03fcc 	andi	r3,r3,255
  805a74:	183f9b26 	beq	r3,zero,8058e4 <__alt_data_end+0xff8058e4>
  805a78:	d9c02785 	stb	r7,158(sp)
  805a7c:	003f9906 	br	8058e4 <__alt_data_end+0xff8058e4>
  805a80:	18c03fcc 	andi	r3,r3,255
  805a84:	1805551e 	bne	r3,zero,806fdc <___vfprintf_internal_r+0x21e0>
  805a88:	014020b4 	movhi	r5,130
  805a8c:	29716d04 	addi	r5,r5,-14924
  805a90:	d9403915 	stw	r5,228(sp)
  805a94:	9080080c 	andi	r2,r18,32
  805a98:	103fae1e 	bne	r2,zero,805954 <__alt_data_end+0xff805954>
  805a9c:	9080040c 	andi	r2,r18,16
  805aa0:	1002de26 	beq	r2,zero,80661c <___vfprintf_internal_r+0x1820>
  805aa4:	d8c02d17 	ldw	r3,180(sp)
  805aa8:	002d883a 	mov	r22,zero
  805aac:	1cc00017 	ldw	r19,0(r3)
  805ab0:	18c00104 	addi	r3,r3,4
  805ab4:	d8c02d15 	stw	r3,180(sp)
  805ab8:	003fab06 	br	805968 <__alt_data_end+0xff805968>
  805abc:	38803fcc 	andi	r2,r7,255
  805ac0:	1080201c 	xori	r2,r2,128
  805ac4:	10bfe004 	addi	r2,r2,-128
  805ac8:	1002d21e 	bne	r2,zero,806614 <___vfprintf_internal_r+0x1818>
  805acc:	00c00044 	movi	r3,1
  805ad0:	01c00804 	movi	r7,32
  805ad4:	ac400007 	ldb	r17,0(r21)
  805ad8:	003d2906 	br	804f80 <__alt_data_end+0xff804f80>
  805adc:	94800054 	ori	r18,r18,1
  805ae0:	ac400007 	ldb	r17,0(r21)
  805ae4:	003d2606 	br	804f80 <__alt_data_end+0xff804f80>
  805ae8:	18c03fcc 	andi	r3,r3,255
  805aec:	183e0526 	beq	r3,zero,805304 <__alt_data_end+0xff805304>
  805af0:	d9c02785 	stb	r7,158(sp)
  805af4:	003e0306 	br	805304 <__alt_data_end+0xff805304>
  805af8:	94801014 	ori	r18,r18,64
  805afc:	ac400007 	ldb	r17,0(r21)
  805b00:	003d1f06 	br	804f80 <__alt_data_end+0xff804f80>
  805b04:	ac400007 	ldb	r17,0(r21)
  805b08:	8a438726 	beq	r17,r9,806928 <___vfprintf_internal_r+0x1b2c>
  805b0c:	94800414 	ori	r18,r18,16
  805b10:	003d1b06 	br	804f80 <__alt_data_end+0xff804f80>
  805b14:	18c03fcc 	andi	r3,r3,255
  805b18:	1805341e 	bne	r3,zero,806fec <___vfprintf_internal_r+0x21f0>
  805b1c:	9080080c 	andi	r2,r18,32
  805b20:	1002cd26 	beq	r2,zero,806658 <___vfprintf_internal_r+0x185c>
  805b24:	d9402d17 	ldw	r5,180(sp)
  805b28:	d9002f17 	ldw	r4,188(sp)
  805b2c:	28800017 	ldw	r2,0(r5)
  805b30:	2007d7fa 	srai	r3,r4,31
  805b34:	29400104 	addi	r5,r5,4
  805b38:	d9402d15 	stw	r5,180(sp)
  805b3c:	11000015 	stw	r4,0(r2)
  805b40:	10c00115 	stw	r3,4(r2)
  805b44:	003ce506 	br	804edc <__alt_data_end+0xff804edc>
  805b48:	d8c02d17 	ldw	r3,180(sp)
  805b4c:	d9002d17 	ldw	r4,180(sp)
  805b50:	d8002785 	stb	zero,158(sp)
  805b54:	18800017 	ldw	r2,0(r3)
  805b58:	21000104 	addi	r4,r4,4
  805b5c:	00c00044 	movi	r3,1
  805b60:	d8c02a15 	stw	r3,168(sp)
  805b64:	d8801405 	stb	r2,80(sp)
  805b68:	d9002d15 	stw	r4,180(sp)
  805b6c:	d8c02e15 	stw	r3,184(sp)
  805b70:	d8002915 	stw	zero,164(sp)
  805b74:	d8003215 	stw	zero,200(sp)
  805b78:	dc001404 	addi	r16,sp,80
  805b7c:	0039883a 	mov	fp,zero
  805b80:	003e7206 	br	80554c <__alt_data_end+0xff80554c>
  805b84:	010020b4 	movhi	r4,130
  805b88:	21316d04 	addi	r4,r4,-14924
  805b8c:	0039883a 	mov	fp,zero
  805b90:	d9003915 	stw	r4,228(sp)
  805b94:	04401e04 	movi	r17,120
  805b98:	003f8206 	br	8059a4 <__alt_data_end+0xff8059a4>
  805b9c:	18c03fcc 	andi	r3,r3,255
  805ba0:	1805061e 	bne	r3,zero,806fbc <___vfprintf_internal_r+0x21c0>
  805ba4:	883d9126 	beq	r17,zero,8051ec <__alt_data_end+0xff8051ec>
  805ba8:	00c00044 	movi	r3,1
  805bac:	d8c02a15 	stw	r3,168(sp)
  805bb0:	dc401405 	stb	r17,80(sp)
  805bb4:	d8002785 	stb	zero,158(sp)
  805bb8:	003fec06 	br	805b6c <__alt_data_end+0xff805b6c>
  805bbc:	014020b4 	movhi	r5,130
  805bc0:	29716d04 	addi	r5,r5,-14924
  805bc4:	d9403915 	stw	r5,228(sp)
  805bc8:	d8c02d15 	stw	r3,180(sp)
  805bcc:	1025883a 	mov	r18,r2
  805bd0:	04401e04 	movi	r17,120
  805bd4:	9d84b03a 	or	r2,r19,r22
  805bd8:	1000fc1e 	bne	r2,zero,805fcc <___vfprintf_internal_r+0x11d0>
  805bdc:	0039883a 	mov	fp,zero
  805be0:	00800084 	movi	r2,2
  805be4:	10803fcc 	andi	r2,r2,255
  805be8:	00c00044 	movi	r3,1
  805bec:	10c20f26 	beq	r2,r3,80642c <___vfprintf_internal_r+0x1630>
  805bf0:	00c00084 	movi	r3,2
  805bf4:	10fd6326 	beq	r2,r3,805184 <__alt_data_end+0xff805184>
  805bf8:	003e2d06 	br	8054b0 <__alt_data_end+0xff8054b0>
  805bfc:	d8c02017 	ldw	r3,128(sp)
  805c00:	003e9306 	br	805650 <__alt_data_end+0xff805650>
  805c04:	00801944 	movi	r2,101
  805c08:	14407e0e 	bge	r2,r17,805e04 <___vfprintf_internal_r+0x1008>
  805c0c:	d9003617 	ldw	r4,216(sp)
  805c10:	d9403817 	ldw	r5,224(sp)
  805c14:	000d883a 	mov	r6,zero
  805c18:	000f883a 	mov	r7,zero
  805c1c:	d8c03c15 	stw	r3,240(sp)
  805c20:	da003d15 	stw	r8,244(sp)
  805c24:	08169d40 	call	8169d4 <__eqdf2>
  805c28:	d8c03c17 	ldw	r3,240(sp)
  805c2c:	da003d17 	ldw	r8,244(sp)
  805c30:	1000f71e 	bne	r2,zero,806010 <___vfprintf_internal_r+0x1214>
  805c34:	d8801f17 	ldw	r2,124(sp)
  805c38:	010020b4 	movhi	r4,130
  805c3c:	21317404 	addi	r4,r4,-14896
  805c40:	18c00044 	addi	r3,r3,1
  805c44:	10800044 	addi	r2,r2,1
  805c48:	41000015 	stw	r4,0(r8)
  805c4c:	01000044 	movi	r4,1
  805c50:	41000115 	stw	r4,4(r8)
  805c54:	d8c02015 	stw	r3,128(sp)
  805c58:	d8801f15 	stw	r2,124(sp)
  805c5c:	010001c4 	movi	r4,7
  805c60:	2082b816 	blt	r4,r2,806744 <___vfprintf_internal_r+0x1948>
  805c64:	42000204 	addi	r8,r8,8
  805c68:	d8802617 	ldw	r2,152(sp)
  805c6c:	d9403317 	ldw	r5,204(sp)
  805c70:	11400216 	blt	r2,r5,805c7c <___vfprintf_internal_r+0xe80>
  805c74:	9080004c 	andi	r2,r18,1
  805c78:	103ed526 	beq	r2,zero,8057d0 <__alt_data_end+0xff8057d0>
  805c7c:	d8803717 	ldw	r2,220(sp)
  805c80:	d9003417 	ldw	r4,208(sp)
  805c84:	d9403717 	ldw	r5,220(sp)
  805c88:	1887883a 	add	r3,r3,r2
  805c8c:	d8801f17 	ldw	r2,124(sp)
  805c90:	41000015 	stw	r4,0(r8)
  805c94:	41400115 	stw	r5,4(r8)
  805c98:	10800044 	addi	r2,r2,1
  805c9c:	d8c02015 	stw	r3,128(sp)
  805ca0:	d8801f15 	stw	r2,124(sp)
  805ca4:	010001c4 	movi	r4,7
  805ca8:	20832916 	blt	r4,r2,806950 <___vfprintf_internal_r+0x1b54>
  805cac:	42000204 	addi	r8,r8,8
  805cb0:	d8803317 	ldw	r2,204(sp)
  805cb4:	143fffc4 	addi	r16,r2,-1
  805cb8:	043ec50e 	bge	zero,r16,8057d0 <__alt_data_end+0xff8057d0>
  805cbc:	04400404 	movi	r17,16
  805cc0:	d8801f17 	ldw	r2,124(sp)
  805cc4:	8c00880e 	bge	r17,r16,805ee8 <___vfprintf_internal_r+0x10ec>
  805cc8:	014020b4 	movhi	r5,130
  805ccc:	29717484 	addi	r5,r5,-14894
  805cd0:	d9402b15 	stw	r5,172(sp)
  805cd4:	058001c4 	movi	r22,7
  805cd8:	dcc02c17 	ldw	r19,176(sp)
  805cdc:	00000306 	br	805cec <___vfprintf_internal_r+0xef0>
  805ce0:	42000204 	addi	r8,r8,8
  805ce4:	843ffc04 	addi	r16,r16,-16
  805ce8:	8c00820e 	bge	r17,r16,805ef4 <___vfprintf_internal_r+0x10f8>
  805cec:	18c00404 	addi	r3,r3,16
  805cf0:	10800044 	addi	r2,r2,1
  805cf4:	45000015 	stw	r20,0(r8)
  805cf8:	44400115 	stw	r17,4(r8)
  805cfc:	d8c02015 	stw	r3,128(sp)
  805d00:	d8801f15 	stw	r2,124(sp)
  805d04:	b0bff60e 	bge	r22,r2,805ce0 <__alt_data_end+0xff805ce0>
  805d08:	d9801e04 	addi	r6,sp,120
  805d0c:	b80b883a 	mov	r5,r23
  805d10:	9809883a 	mov	r4,r19
  805d14:	0810d4c0 	call	810d4c <__sprint_r>
  805d18:	103d3a1e 	bne	r2,zero,805204 <__alt_data_end+0xff805204>
  805d1c:	d8c02017 	ldw	r3,128(sp)
  805d20:	d8801f17 	ldw	r2,124(sp)
  805d24:	da000404 	addi	r8,sp,16
  805d28:	003fee06 	br	805ce4 <__alt_data_end+0xff805ce4>
  805d2c:	d9403117 	ldw	r5,196(sp)
  805d30:	d8802a17 	ldw	r2,168(sp)
  805d34:	28adc83a 	sub	r22,r5,r2
  805d38:	05be630e 	bge	zero,r22,8056c8 <__alt_data_end+0xff8056c8>
  805d3c:	07000404 	movi	fp,16
  805d40:	d8801f17 	ldw	r2,124(sp)
  805d44:	e5838f0e 	bge	fp,r22,806b84 <___vfprintf_internal_r+0x1d88>
  805d48:	014020b4 	movhi	r5,130
  805d4c:	29717484 	addi	r5,r5,-14894
  805d50:	dc403015 	stw	r17,192(sp)
  805d54:	d9402b15 	stw	r5,172(sp)
  805d58:	b023883a 	mov	r17,r22
  805d5c:	04c001c4 	movi	r19,7
  805d60:	a82d883a 	mov	r22,r21
  805d64:	902b883a 	mov	r21,r18
  805d68:	8025883a 	mov	r18,r16
  805d6c:	dc002c17 	ldw	r16,176(sp)
  805d70:	00000306 	br	805d80 <___vfprintf_internal_r+0xf84>
  805d74:	8c7ffc04 	addi	r17,r17,-16
  805d78:	42000204 	addi	r8,r8,8
  805d7c:	e440110e 	bge	fp,r17,805dc4 <___vfprintf_internal_r+0xfc8>
  805d80:	18c00404 	addi	r3,r3,16
  805d84:	10800044 	addi	r2,r2,1
  805d88:	45000015 	stw	r20,0(r8)
  805d8c:	47000115 	stw	fp,4(r8)
  805d90:	d8c02015 	stw	r3,128(sp)
  805d94:	d8801f15 	stw	r2,124(sp)
  805d98:	98bff60e 	bge	r19,r2,805d74 <__alt_data_end+0xff805d74>
  805d9c:	d9801e04 	addi	r6,sp,120
  805da0:	b80b883a 	mov	r5,r23
  805da4:	8009883a 	mov	r4,r16
  805da8:	0810d4c0 	call	810d4c <__sprint_r>
  805dac:	103d151e 	bne	r2,zero,805204 <__alt_data_end+0xff805204>
  805db0:	8c7ffc04 	addi	r17,r17,-16
  805db4:	d8c02017 	ldw	r3,128(sp)
  805db8:	d8801f17 	ldw	r2,124(sp)
  805dbc:	da000404 	addi	r8,sp,16
  805dc0:	e47fef16 	blt	fp,r17,805d80 <__alt_data_end+0xff805d80>
  805dc4:	9021883a 	mov	r16,r18
  805dc8:	a825883a 	mov	r18,r21
  805dcc:	b02b883a 	mov	r21,r22
  805dd0:	882d883a 	mov	r22,r17
  805dd4:	dc403017 	ldw	r17,192(sp)
  805dd8:	d9002b17 	ldw	r4,172(sp)
  805ddc:	1d87883a 	add	r3,r3,r22
  805de0:	10800044 	addi	r2,r2,1
  805de4:	41000015 	stw	r4,0(r8)
  805de8:	45800115 	stw	r22,4(r8)
  805dec:	d8c02015 	stw	r3,128(sp)
  805df0:	d8801f15 	stw	r2,124(sp)
  805df4:	010001c4 	movi	r4,7
  805df8:	20818e16 	blt	r4,r2,806434 <___vfprintf_internal_r+0x1638>
  805dfc:	42000204 	addi	r8,r8,8
  805e00:	003e3106 	br	8056c8 <__alt_data_end+0xff8056c8>
  805e04:	d9403317 	ldw	r5,204(sp)
  805e08:	00800044 	movi	r2,1
  805e0c:	18c00044 	addi	r3,r3,1
  805e10:	1141530e 	bge	r2,r5,806360 <___vfprintf_internal_r+0x1564>
  805e14:	dc401f17 	ldw	r17,124(sp)
  805e18:	00800044 	movi	r2,1
  805e1c:	40800115 	stw	r2,4(r8)
  805e20:	8c400044 	addi	r17,r17,1
  805e24:	44000015 	stw	r16,0(r8)
  805e28:	d8c02015 	stw	r3,128(sp)
  805e2c:	dc401f15 	stw	r17,124(sp)
  805e30:	008001c4 	movi	r2,7
  805e34:	14416b16 	blt	r2,r17,8063e4 <___vfprintf_internal_r+0x15e8>
  805e38:	42000204 	addi	r8,r8,8
  805e3c:	d8803717 	ldw	r2,220(sp)
  805e40:	d9003417 	ldw	r4,208(sp)
  805e44:	8c400044 	addi	r17,r17,1
  805e48:	10c7883a 	add	r3,r2,r3
  805e4c:	40800115 	stw	r2,4(r8)
  805e50:	41000015 	stw	r4,0(r8)
  805e54:	d8c02015 	stw	r3,128(sp)
  805e58:	dc401f15 	stw	r17,124(sp)
  805e5c:	008001c4 	movi	r2,7
  805e60:	14416916 	blt	r2,r17,806408 <___vfprintf_internal_r+0x160c>
  805e64:	45800204 	addi	r22,r8,8
  805e68:	d9003617 	ldw	r4,216(sp)
  805e6c:	d9403817 	ldw	r5,224(sp)
  805e70:	000d883a 	mov	r6,zero
  805e74:	000f883a 	mov	r7,zero
  805e78:	d8c03c15 	stw	r3,240(sp)
  805e7c:	08169d40 	call	8169d4 <__eqdf2>
  805e80:	d8c03c17 	ldw	r3,240(sp)
  805e84:	1000bc26 	beq	r2,zero,806178 <___vfprintf_internal_r+0x137c>
  805e88:	d9403317 	ldw	r5,204(sp)
  805e8c:	84000044 	addi	r16,r16,1
  805e90:	8c400044 	addi	r17,r17,1
  805e94:	28bfffc4 	addi	r2,r5,-1
  805e98:	1887883a 	add	r3,r3,r2
  805e9c:	b0800115 	stw	r2,4(r22)
  805ea0:	b4000015 	stw	r16,0(r22)
  805ea4:	d8c02015 	stw	r3,128(sp)
  805ea8:	dc401f15 	stw	r17,124(sp)
  805eac:	008001c4 	movi	r2,7
  805eb0:	14414316 	blt	r2,r17,8063c0 <___vfprintf_internal_r+0x15c4>
  805eb4:	b5800204 	addi	r22,r22,8
  805eb8:	d9003a17 	ldw	r4,232(sp)
  805ebc:	df0022c4 	addi	fp,sp,139
  805ec0:	8c400044 	addi	r17,r17,1
  805ec4:	20c7883a 	add	r3,r4,r3
  805ec8:	b7000015 	stw	fp,0(r22)
  805ecc:	b1000115 	stw	r4,4(r22)
  805ed0:	d8c02015 	stw	r3,128(sp)
  805ed4:	dc401f15 	stw	r17,124(sp)
  805ed8:	008001c4 	movi	r2,7
  805edc:	14400e16 	blt	r2,r17,805f18 <___vfprintf_internal_r+0x111c>
  805ee0:	b2000204 	addi	r8,r22,8
  805ee4:	003e3a06 	br	8057d0 <__alt_data_end+0xff8057d0>
  805ee8:	010020b4 	movhi	r4,130
  805eec:	21317484 	addi	r4,r4,-14894
  805ef0:	d9002b15 	stw	r4,172(sp)
  805ef4:	d9002b17 	ldw	r4,172(sp)
  805ef8:	1c07883a 	add	r3,r3,r16
  805efc:	44000115 	stw	r16,4(r8)
  805f00:	41000015 	stw	r4,0(r8)
  805f04:	10800044 	addi	r2,r2,1
  805f08:	d8c02015 	stw	r3,128(sp)
  805f0c:	d8801f15 	stw	r2,124(sp)
  805f10:	010001c4 	movi	r4,7
  805f14:	20be2d0e 	bge	r4,r2,8057cc <__alt_data_end+0xff8057cc>
  805f18:	d9002c17 	ldw	r4,176(sp)
  805f1c:	d9801e04 	addi	r6,sp,120
  805f20:	b80b883a 	mov	r5,r23
  805f24:	0810d4c0 	call	810d4c <__sprint_r>
  805f28:	103cb61e 	bne	r2,zero,805204 <__alt_data_end+0xff805204>
  805f2c:	d8c02017 	ldw	r3,128(sp)
  805f30:	da000404 	addi	r8,sp,16
  805f34:	003e2606 	br	8057d0 <__alt_data_end+0xff8057d0>
  805f38:	d9002c17 	ldw	r4,176(sp)
  805f3c:	d9801e04 	addi	r6,sp,120
  805f40:	b80b883a 	mov	r5,r23
  805f44:	0810d4c0 	call	810d4c <__sprint_r>
  805f48:	103e5d26 	beq	r2,zero,8058c0 <__alt_data_end+0xff8058c0>
  805f4c:	003cad06 	br	805204 <__alt_data_end+0xff805204>
  805f50:	d9002c17 	ldw	r4,176(sp)
  805f54:	d9801e04 	addi	r6,sp,120
  805f58:	b80b883a 	mov	r5,r23
  805f5c:	0810d4c0 	call	810d4c <__sprint_r>
  805f60:	103ca81e 	bne	r2,zero,805204 <__alt_data_end+0xff805204>
  805f64:	d8c02017 	ldw	r3,128(sp)
  805f68:	da000404 	addi	r8,sp,16
  805f6c:	003e0b06 	br	80579c <__alt_data_end+0xff80579c>
  805f70:	d9002c17 	ldw	r4,176(sp)
  805f74:	d9801e04 	addi	r6,sp,120
  805f78:	b80b883a 	mov	r5,r23
  805f7c:	0810d4c0 	call	810d4c <__sprint_r>
  805f80:	103ca01e 	bne	r2,zero,805204 <__alt_data_end+0xff805204>
  805f84:	d8c02017 	ldw	r3,128(sp)
  805f88:	da000404 	addi	r8,sp,16
  805f8c:	003dbd06 	br	805684 <__alt_data_end+0xff805684>
  805f90:	d9002c17 	ldw	r4,176(sp)
  805f94:	d9801e04 	addi	r6,sp,120
  805f98:	b80b883a 	mov	r5,r23
  805f9c:	0810d4c0 	call	810d4c <__sprint_r>
  805fa0:	103c981e 	bne	r2,zero,805204 <__alt_data_end+0xff805204>
  805fa4:	d8c02017 	ldw	r3,128(sp)
  805fa8:	da000404 	addi	r8,sp,16
  805fac:	003dc306 	br	8056bc <__alt_data_end+0xff8056bc>
  805fb0:	d8802917 	ldw	r2,164(sp)
  805fb4:	d8002785 	stb	zero,158(sp)
  805fb8:	103f0616 	blt	r2,zero,805bd4 <__alt_data_end+0xff805bd4>
  805fbc:	00ffdfc4 	movi	r3,-129
  805fc0:	9d84b03a 	or	r2,r19,r22
  805fc4:	90e4703a 	and	r18,r18,r3
  805fc8:	103c6b26 	beq	r2,zero,805178 <__alt_data_end+0xff805178>
  805fcc:	0039883a 	mov	fp,zero
  805fd0:	003e7406 	br	8059a4 <__alt_data_end+0xff8059a4>
  805fd4:	9080040c 	andi	r2,r18,16
  805fd8:	1001b326 	beq	r2,zero,8066a8 <___vfprintf_internal_r+0x18ac>
  805fdc:	d9002d17 	ldw	r4,180(sp)
  805fe0:	d9402917 	ldw	r5,164(sp)
  805fe4:	d8002785 	stb	zero,158(sp)
  805fe8:	20800104 	addi	r2,r4,4
  805fec:	24c00017 	ldw	r19,0(r4)
  805ff0:	002d883a 	mov	r22,zero
  805ff4:	2801b516 	blt	r5,zero,8066cc <___vfprintf_internal_r+0x18d0>
  805ff8:	00ffdfc4 	movi	r3,-129
  805ffc:	d8802d15 	stw	r2,180(sp)
  806000:	90e4703a 	and	r18,r18,r3
  806004:	983d2726 	beq	r19,zero,8054a4 <__alt_data_end+0xff8054a4>
  806008:	0039883a 	mov	fp,zero
  80600c:	003d2a06 	br	8054b8 <__alt_data_end+0xff8054b8>
  806010:	dc402617 	ldw	r17,152(sp)
  806014:	0441d30e 	bge	zero,r17,806764 <___vfprintf_internal_r+0x1968>
  806018:	dc403217 	ldw	r17,200(sp)
  80601c:	d8803317 	ldw	r2,204(sp)
  806020:	1440010e 	bge	r2,r17,806028 <___vfprintf_internal_r+0x122c>
  806024:	1023883a 	mov	r17,r2
  806028:	04400a0e 	bge	zero,r17,806054 <___vfprintf_internal_r+0x1258>
  80602c:	d8801f17 	ldw	r2,124(sp)
  806030:	1c47883a 	add	r3,r3,r17
  806034:	44000015 	stw	r16,0(r8)
  806038:	10800044 	addi	r2,r2,1
  80603c:	44400115 	stw	r17,4(r8)
  806040:	d8c02015 	stw	r3,128(sp)
  806044:	d8801f15 	stw	r2,124(sp)
  806048:	010001c4 	movi	r4,7
  80604c:	20826516 	blt	r4,r2,8069e4 <___vfprintf_internal_r+0x1be8>
  806050:	42000204 	addi	r8,r8,8
  806054:	88026116 	blt	r17,zero,8069dc <___vfprintf_internal_r+0x1be0>
  806058:	d9003217 	ldw	r4,200(sp)
  80605c:	2463c83a 	sub	r17,r4,r17
  806060:	04407b0e 	bge	zero,r17,806250 <___vfprintf_internal_r+0x1454>
  806064:	05800404 	movi	r22,16
  806068:	d8801f17 	ldw	r2,124(sp)
  80606c:	b4419d0e 	bge	r22,r17,8066e4 <___vfprintf_internal_r+0x18e8>
  806070:	010020b4 	movhi	r4,130
  806074:	21317484 	addi	r4,r4,-14894
  806078:	d9002b15 	stw	r4,172(sp)
  80607c:	070001c4 	movi	fp,7
  806080:	dcc02c17 	ldw	r19,176(sp)
  806084:	00000306 	br	806094 <___vfprintf_internal_r+0x1298>
  806088:	42000204 	addi	r8,r8,8
  80608c:	8c7ffc04 	addi	r17,r17,-16
  806090:	b441970e 	bge	r22,r17,8066f0 <___vfprintf_internal_r+0x18f4>
  806094:	18c00404 	addi	r3,r3,16
  806098:	10800044 	addi	r2,r2,1
  80609c:	45000015 	stw	r20,0(r8)
  8060a0:	45800115 	stw	r22,4(r8)
  8060a4:	d8c02015 	stw	r3,128(sp)
  8060a8:	d8801f15 	stw	r2,124(sp)
  8060ac:	e0bff60e 	bge	fp,r2,806088 <__alt_data_end+0xff806088>
  8060b0:	d9801e04 	addi	r6,sp,120
  8060b4:	b80b883a 	mov	r5,r23
  8060b8:	9809883a 	mov	r4,r19
  8060bc:	0810d4c0 	call	810d4c <__sprint_r>
  8060c0:	103c501e 	bne	r2,zero,805204 <__alt_data_end+0xff805204>
  8060c4:	d8c02017 	ldw	r3,128(sp)
  8060c8:	d8801f17 	ldw	r2,124(sp)
  8060cc:	da000404 	addi	r8,sp,16
  8060d0:	003fee06 	br	80608c <__alt_data_end+0xff80608c>
  8060d4:	d9002c17 	ldw	r4,176(sp)
  8060d8:	d9801e04 	addi	r6,sp,120
  8060dc:	b80b883a 	mov	r5,r23
  8060e0:	0810d4c0 	call	810d4c <__sprint_r>
  8060e4:	103c471e 	bne	r2,zero,805204 <__alt_data_end+0xff805204>
  8060e8:	d8c02017 	ldw	r3,128(sp)
  8060ec:	df002787 	ldb	fp,158(sp)
  8060f0:	da000404 	addi	r8,sp,16
  8060f4:	003d5606 	br	805650 <__alt_data_end+0xff805650>
  8060f8:	9080040c 	andi	r2,r18,16
  8060fc:	10016126 	beq	r2,zero,806684 <___vfprintf_internal_r+0x1888>
  806100:	d8802d17 	ldw	r2,180(sp)
  806104:	14c00017 	ldw	r19,0(r2)
  806108:	10800104 	addi	r2,r2,4
  80610c:	d8802d15 	stw	r2,180(sp)
  806110:	982dd7fa 	srai	r22,r19,31
  806114:	b005883a 	mov	r2,r22
  806118:	003c8206 	br	805324 <__alt_data_end+0xff805324>
  80611c:	9080040c 	andi	r2,r18,16
  806120:	10003526 	beq	r2,zero,8061f8 <___vfprintf_internal_r+0x13fc>
  806124:	d9402d17 	ldw	r5,180(sp)
  806128:	d8c02917 	ldw	r3,164(sp)
  80612c:	d8002785 	stb	zero,158(sp)
  806130:	28800104 	addi	r2,r5,4
  806134:	2cc00017 	ldw	r19,0(r5)
  806138:	002d883a 	mov	r22,zero
  80613c:	18003716 	blt	r3,zero,80621c <___vfprintf_internal_r+0x1420>
  806140:	00ffdfc4 	movi	r3,-129
  806144:	d8802d15 	stw	r2,180(sp)
  806148:	90e4703a 	and	r18,r18,r3
  80614c:	0039883a 	mov	fp,zero
  806150:	983df326 	beq	r19,zero,805920 <__alt_data_end+0xff805920>
  806154:	00800244 	movi	r2,9
  806158:	14fc7b36 	bltu	r2,r19,805348 <__alt_data_end+0xff805348>
  80615c:	d8c02817 	ldw	r3,160(sp)
  806160:	dc001dc4 	addi	r16,sp,119
  806164:	9cc00c04 	addi	r19,r19,48
  806168:	1c07c83a 	sub	r3,r3,r16
  80616c:	dcc01dc5 	stb	r19,119(sp)
  806170:	d8c02e15 	stw	r3,184(sp)
  806174:	003ce806 	br	805518 <__alt_data_end+0xff805518>
  806178:	d8803317 	ldw	r2,204(sp)
  80617c:	143fffc4 	addi	r16,r2,-1
  806180:	043f4d0e 	bge	zero,r16,805eb8 <__alt_data_end+0xff805eb8>
  806184:	07000404 	movi	fp,16
  806188:	e400810e 	bge	fp,r16,806390 <___vfprintf_internal_r+0x1594>
  80618c:	014020b4 	movhi	r5,130
  806190:	29717484 	addi	r5,r5,-14894
  806194:	d9402b15 	stw	r5,172(sp)
  806198:	01c001c4 	movi	r7,7
  80619c:	dcc02c17 	ldw	r19,176(sp)
  8061a0:	00000306 	br	8061b0 <___vfprintf_internal_r+0x13b4>
  8061a4:	b5800204 	addi	r22,r22,8
  8061a8:	843ffc04 	addi	r16,r16,-16
  8061ac:	e4007b0e 	bge	fp,r16,80639c <___vfprintf_internal_r+0x15a0>
  8061b0:	18c00404 	addi	r3,r3,16
  8061b4:	8c400044 	addi	r17,r17,1
  8061b8:	b5000015 	stw	r20,0(r22)
  8061bc:	b7000115 	stw	fp,4(r22)
  8061c0:	d8c02015 	stw	r3,128(sp)
  8061c4:	dc401f15 	stw	r17,124(sp)
  8061c8:	3c7ff60e 	bge	r7,r17,8061a4 <__alt_data_end+0xff8061a4>
  8061cc:	d9801e04 	addi	r6,sp,120
  8061d0:	b80b883a 	mov	r5,r23
  8061d4:	9809883a 	mov	r4,r19
  8061d8:	d9c03c15 	stw	r7,240(sp)
  8061dc:	0810d4c0 	call	810d4c <__sprint_r>
  8061e0:	d9c03c17 	ldw	r7,240(sp)
  8061e4:	103c071e 	bne	r2,zero,805204 <__alt_data_end+0xff805204>
  8061e8:	d8c02017 	ldw	r3,128(sp)
  8061ec:	dc401f17 	ldw	r17,124(sp)
  8061f0:	dd800404 	addi	r22,sp,16
  8061f4:	003fec06 	br	8061a8 <__alt_data_end+0xff8061a8>
  8061f8:	9080100c 	andi	r2,r18,64
  8061fc:	d8002785 	stb	zero,158(sp)
  806200:	10010e26 	beq	r2,zero,80663c <___vfprintf_internal_r+0x1840>
  806204:	d9002d17 	ldw	r4,180(sp)
  806208:	d9402917 	ldw	r5,164(sp)
  80620c:	002d883a 	mov	r22,zero
  806210:	20800104 	addi	r2,r4,4
  806214:	24c0000b 	ldhu	r19,0(r4)
  806218:	283fc90e 	bge	r5,zero,806140 <__alt_data_end+0xff806140>
  80621c:	d8802d15 	stw	r2,180(sp)
  806220:	0039883a 	mov	fp,zero
  806224:	9d84b03a 	or	r2,r19,r22
  806228:	103c461e 	bne	r2,zero,805344 <__alt_data_end+0xff805344>
  80622c:	00800044 	movi	r2,1
  806230:	003e6c06 	br	805be4 <__alt_data_end+0xff805be4>
  806234:	d9002c17 	ldw	r4,176(sp)
  806238:	d9801e04 	addi	r6,sp,120
  80623c:	b80b883a 	mov	r5,r23
  806240:	0810d4c0 	call	810d4c <__sprint_r>
  806244:	103bef1e 	bne	r2,zero,805204 <__alt_data_end+0xff805204>
  806248:	d8c02017 	ldw	r3,128(sp)
  80624c:	da000404 	addi	r8,sp,16
  806250:	d9003217 	ldw	r4,200(sp)
  806254:	d8802617 	ldw	r2,152(sp)
  806258:	d9403317 	ldw	r5,204(sp)
  80625c:	8123883a 	add	r17,r16,r4
  806260:	11400216 	blt	r2,r5,80626c <___vfprintf_internal_r+0x1470>
  806264:	9100004c 	andi	r4,r18,1
  806268:	20000d26 	beq	r4,zero,8062a0 <___vfprintf_internal_r+0x14a4>
  80626c:	d9003717 	ldw	r4,220(sp)
  806270:	d9403417 	ldw	r5,208(sp)
  806274:	1907883a 	add	r3,r3,r4
  806278:	d9001f17 	ldw	r4,124(sp)
  80627c:	41400015 	stw	r5,0(r8)
  806280:	d9403717 	ldw	r5,220(sp)
  806284:	21000044 	addi	r4,r4,1
  806288:	d8c02015 	stw	r3,128(sp)
  80628c:	41400115 	stw	r5,4(r8)
  806290:	d9001f15 	stw	r4,124(sp)
  806294:	014001c4 	movi	r5,7
  806298:	2901e816 	blt	r5,r4,806a3c <___vfprintf_internal_r+0x1c40>
  80629c:	42000204 	addi	r8,r8,8
  8062a0:	d9003317 	ldw	r4,204(sp)
  8062a4:	8121883a 	add	r16,r16,r4
  8062a8:	2085c83a 	sub	r2,r4,r2
  8062ac:	8461c83a 	sub	r16,r16,r17
  8062b0:	1400010e 	bge	r2,r16,8062b8 <___vfprintf_internal_r+0x14bc>
  8062b4:	1021883a 	mov	r16,r2
  8062b8:	04000a0e 	bge	zero,r16,8062e4 <___vfprintf_internal_r+0x14e8>
  8062bc:	d9001f17 	ldw	r4,124(sp)
  8062c0:	1c07883a 	add	r3,r3,r16
  8062c4:	44400015 	stw	r17,0(r8)
  8062c8:	21000044 	addi	r4,r4,1
  8062cc:	44000115 	stw	r16,4(r8)
  8062d0:	d8c02015 	stw	r3,128(sp)
  8062d4:	d9001f15 	stw	r4,124(sp)
  8062d8:	014001c4 	movi	r5,7
  8062dc:	2901fb16 	blt	r5,r4,806acc <___vfprintf_internal_r+0x1cd0>
  8062e0:	42000204 	addi	r8,r8,8
  8062e4:	8001f716 	blt	r16,zero,806ac4 <___vfprintf_internal_r+0x1cc8>
  8062e8:	1421c83a 	sub	r16,r2,r16
  8062ec:	043d380e 	bge	zero,r16,8057d0 <__alt_data_end+0xff8057d0>
  8062f0:	04400404 	movi	r17,16
  8062f4:	d8801f17 	ldw	r2,124(sp)
  8062f8:	8c3efb0e 	bge	r17,r16,805ee8 <__alt_data_end+0xff805ee8>
  8062fc:	014020b4 	movhi	r5,130
  806300:	29717484 	addi	r5,r5,-14894
  806304:	d9402b15 	stw	r5,172(sp)
  806308:	058001c4 	movi	r22,7
  80630c:	dcc02c17 	ldw	r19,176(sp)
  806310:	00000306 	br	806320 <___vfprintf_internal_r+0x1524>
  806314:	42000204 	addi	r8,r8,8
  806318:	843ffc04 	addi	r16,r16,-16
  80631c:	8c3ef50e 	bge	r17,r16,805ef4 <__alt_data_end+0xff805ef4>
  806320:	18c00404 	addi	r3,r3,16
  806324:	10800044 	addi	r2,r2,1
  806328:	45000015 	stw	r20,0(r8)
  80632c:	44400115 	stw	r17,4(r8)
  806330:	d8c02015 	stw	r3,128(sp)
  806334:	d8801f15 	stw	r2,124(sp)
  806338:	b0bff60e 	bge	r22,r2,806314 <__alt_data_end+0xff806314>
  80633c:	d9801e04 	addi	r6,sp,120
  806340:	b80b883a 	mov	r5,r23
  806344:	9809883a 	mov	r4,r19
  806348:	0810d4c0 	call	810d4c <__sprint_r>
  80634c:	103bad1e 	bne	r2,zero,805204 <__alt_data_end+0xff805204>
  806350:	d8c02017 	ldw	r3,128(sp)
  806354:	d8801f17 	ldw	r2,124(sp)
  806358:	da000404 	addi	r8,sp,16
  80635c:	003fee06 	br	806318 <__alt_data_end+0xff806318>
  806360:	9088703a 	and	r4,r18,r2
  806364:	203eab1e 	bne	r4,zero,805e14 <__alt_data_end+0xff805e14>
  806368:	dc401f17 	ldw	r17,124(sp)
  80636c:	40800115 	stw	r2,4(r8)
  806370:	44000015 	stw	r16,0(r8)
  806374:	8c400044 	addi	r17,r17,1
  806378:	d8c02015 	stw	r3,128(sp)
  80637c:	dc401f15 	stw	r17,124(sp)
  806380:	008001c4 	movi	r2,7
  806384:	14400e16 	blt	r2,r17,8063c0 <___vfprintf_internal_r+0x15c4>
  806388:	45800204 	addi	r22,r8,8
  80638c:	003eca06 	br	805eb8 <__alt_data_end+0xff805eb8>
  806390:	010020b4 	movhi	r4,130
  806394:	21317484 	addi	r4,r4,-14894
  806398:	d9002b15 	stw	r4,172(sp)
  80639c:	d8802b17 	ldw	r2,172(sp)
  8063a0:	1c07883a 	add	r3,r3,r16
  8063a4:	8c400044 	addi	r17,r17,1
  8063a8:	b0800015 	stw	r2,0(r22)
  8063ac:	b4000115 	stw	r16,4(r22)
  8063b0:	d8c02015 	stw	r3,128(sp)
  8063b4:	dc401f15 	stw	r17,124(sp)
  8063b8:	008001c4 	movi	r2,7
  8063bc:	147ebd0e 	bge	r2,r17,805eb4 <__alt_data_end+0xff805eb4>
  8063c0:	d9002c17 	ldw	r4,176(sp)
  8063c4:	d9801e04 	addi	r6,sp,120
  8063c8:	b80b883a 	mov	r5,r23
  8063cc:	0810d4c0 	call	810d4c <__sprint_r>
  8063d0:	103b8c1e 	bne	r2,zero,805204 <__alt_data_end+0xff805204>
  8063d4:	d8c02017 	ldw	r3,128(sp)
  8063d8:	dc401f17 	ldw	r17,124(sp)
  8063dc:	dd800404 	addi	r22,sp,16
  8063e0:	003eb506 	br	805eb8 <__alt_data_end+0xff805eb8>
  8063e4:	d9002c17 	ldw	r4,176(sp)
  8063e8:	d9801e04 	addi	r6,sp,120
  8063ec:	b80b883a 	mov	r5,r23
  8063f0:	0810d4c0 	call	810d4c <__sprint_r>
  8063f4:	103b831e 	bne	r2,zero,805204 <__alt_data_end+0xff805204>
  8063f8:	d8c02017 	ldw	r3,128(sp)
  8063fc:	dc401f17 	ldw	r17,124(sp)
  806400:	da000404 	addi	r8,sp,16
  806404:	003e8d06 	br	805e3c <__alt_data_end+0xff805e3c>
  806408:	d9002c17 	ldw	r4,176(sp)
  80640c:	d9801e04 	addi	r6,sp,120
  806410:	b80b883a 	mov	r5,r23
  806414:	0810d4c0 	call	810d4c <__sprint_r>
  806418:	103b7a1e 	bne	r2,zero,805204 <__alt_data_end+0xff805204>
  80641c:	d8c02017 	ldw	r3,128(sp)
  806420:	dc401f17 	ldw	r17,124(sp)
  806424:	dd800404 	addi	r22,sp,16
  806428:	003e8f06 	br	805e68 <__alt_data_end+0xff805e68>
  80642c:	0027883a 	mov	r19,zero
  806430:	003f4a06 	br	80615c <__alt_data_end+0xff80615c>
  806434:	d9002c17 	ldw	r4,176(sp)
  806438:	d9801e04 	addi	r6,sp,120
  80643c:	b80b883a 	mov	r5,r23
  806440:	0810d4c0 	call	810d4c <__sprint_r>
  806444:	103b6f1e 	bne	r2,zero,805204 <__alt_data_end+0xff805204>
  806448:	d8c02017 	ldw	r3,128(sp)
  80644c:	da000404 	addi	r8,sp,16
  806450:	003c9d06 	br	8056c8 <__alt_data_end+0xff8056c8>
  806454:	04e7c83a 	sub	r19,zero,r19
  806458:	9804c03a 	cmpne	r2,r19,zero
  80645c:	05adc83a 	sub	r22,zero,r22
  806460:	b0adc83a 	sub	r22,r22,r2
  806464:	d8802917 	ldw	r2,164(sp)
  806468:	07000b44 	movi	fp,45
  80646c:	df002785 	stb	fp,158(sp)
  806470:	10017b16 	blt	r2,zero,806a60 <___vfprintf_internal_r+0x1c64>
  806474:	00bfdfc4 	movi	r2,-129
  806478:	90a4703a 	and	r18,r18,r2
  80647c:	003bb106 	br	805344 <__alt_data_end+0xff805344>
  806480:	d9003617 	ldw	r4,216(sp)
  806484:	d9403817 	ldw	r5,224(sp)
  806488:	da003d15 	stw	r8,244(sp)
  80648c:	080af580 	call	80af58 <__fpclassifyd>
  806490:	da003d17 	ldw	r8,244(sp)
  806494:	1000f026 	beq	r2,zero,806858 <___vfprintf_internal_r+0x1a5c>
  806498:	d9002917 	ldw	r4,164(sp)
  80649c:	05bff7c4 	movi	r22,-33
  8064a0:	00bfffc4 	movi	r2,-1
  8064a4:	8dac703a 	and	r22,r17,r22
  8064a8:	20820026 	beq	r4,r2,806cac <___vfprintf_internal_r+0x1eb0>
  8064ac:	008011c4 	movi	r2,71
  8064b0:	b081f726 	beq	r22,r2,806c90 <___vfprintf_internal_r+0x1e94>
  8064b4:	d9003817 	ldw	r4,224(sp)
  8064b8:	90c04014 	ori	r3,r18,256
  8064bc:	d8c02b15 	stw	r3,172(sp)
  8064c0:	20021516 	blt	r4,zero,806d18 <___vfprintf_internal_r+0x1f1c>
  8064c4:	dcc03817 	ldw	r19,224(sp)
  8064c8:	d8002a05 	stb	zero,168(sp)
  8064cc:	00801984 	movi	r2,102
  8064d0:	8881f926 	beq	r17,r2,806cb8 <___vfprintf_internal_r+0x1ebc>
  8064d4:	00801184 	movi	r2,70
  8064d8:	88821c26 	beq	r17,r2,806d4c <___vfprintf_internal_r+0x1f50>
  8064dc:	00801144 	movi	r2,69
  8064e0:	b081ef26 	beq	r22,r2,806ca0 <___vfprintf_internal_r+0x1ea4>
  8064e4:	d8c02917 	ldw	r3,164(sp)
  8064e8:	d8802104 	addi	r2,sp,132
  8064ec:	d8800315 	stw	r2,12(sp)
  8064f0:	d9403617 	ldw	r5,216(sp)
  8064f4:	d8802504 	addi	r2,sp,148
  8064f8:	d9002c17 	ldw	r4,176(sp)
  8064fc:	d8800215 	stw	r2,8(sp)
  806500:	d8802604 	addi	r2,sp,152
  806504:	d8c00015 	stw	r3,0(sp)
  806508:	d8800115 	stw	r2,4(sp)
  80650c:	01c00084 	movi	r7,2
  806510:	980d883a 	mov	r6,r19
  806514:	d8c03c15 	stw	r3,240(sp)
  806518:	da003d15 	stw	r8,244(sp)
  80651c:	08074d40 	call	8074d4 <_dtoa_r>
  806520:	1021883a 	mov	r16,r2
  806524:	008019c4 	movi	r2,103
  806528:	d8c03c17 	ldw	r3,240(sp)
  80652c:	da003d17 	ldw	r8,244(sp)
  806530:	88817126 	beq	r17,r2,806af8 <___vfprintf_internal_r+0x1cfc>
  806534:	008011c4 	movi	r2,71
  806538:	88829226 	beq	r17,r2,806f84 <___vfprintf_internal_r+0x2188>
  80653c:	80f9883a 	add	fp,r16,r3
  806540:	d9003617 	ldw	r4,216(sp)
  806544:	000d883a 	mov	r6,zero
  806548:	000f883a 	mov	r7,zero
  80654c:	980b883a 	mov	r5,r19
  806550:	da003d15 	stw	r8,244(sp)
  806554:	08169d40 	call	8169d4 <__eqdf2>
  806558:	da003d17 	ldw	r8,244(sp)
  80655c:	10018d26 	beq	r2,zero,806b94 <___vfprintf_internal_r+0x1d98>
  806560:	d8802117 	ldw	r2,132(sp)
  806564:	1700062e 	bgeu	r2,fp,806580 <___vfprintf_internal_r+0x1784>
  806568:	01000c04 	movi	r4,48
  80656c:	10c00044 	addi	r3,r2,1
  806570:	d8c02115 	stw	r3,132(sp)
  806574:	11000005 	stb	r4,0(r2)
  806578:	d8802117 	ldw	r2,132(sp)
  80657c:	173ffb36 	bltu	r2,fp,80656c <__alt_data_end+0xff80656c>
  806580:	1405c83a 	sub	r2,r2,r16
  806584:	d8803315 	stw	r2,204(sp)
  806588:	008011c4 	movi	r2,71
  80658c:	b0817626 	beq	r22,r2,806b68 <___vfprintf_internal_r+0x1d6c>
  806590:	00801944 	movi	r2,101
  806594:	1442810e 	bge	r2,r17,806f9c <___vfprintf_internal_r+0x21a0>
  806598:	d8c02617 	ldw	r3,152(sp)
  80659c:	00801984 	movi	r2,102
  8065a0:	d8c03215 	stw	r3,200(sp)
  8065a4:	8881fe26 	beq	r17,r2,806da0 <___vfprintf_internal_r+0x1fa4>
  8065a8:	d8c03217 	ldw	r3,200(sp)
  8065ac:	d9003317 	ldw	r4,204(sp)
  8065b0:	1901dd16 	blt	r3,r4,806d28 <___vfprintf_internal_r+0x1f2c>
  8065b4:	9480004c 	andi	r18,r18,1
  8065b8:	90022b1e 	bne	r18,zero,806e68 <___vfprintf_internal_r+0x206c>
  8065bc:	1805883a 	mov	r2,r3
  8065c0:	18028016 	blt	r3,zero,806fc4 <___vfprintf_internal_r+0x21c8>
  8065c4:	d8c03217 	ldw	r3,200(sp)
  8065c8:	044019c4 	movi	r17,103
  8065cc:	d8c02e15 	stw	r3,184(sp)
  8065d0:	df002a07 	ldb	fp,168(sp)
  8065d4:	e001531e 	bne	fp,zero,806b24 <___vfprintf_internal_r+0x1d28>
  8065d8:	df002783 	ldbu	fp,158(sp)
  8065dc:	d8802a15 	stw	r2,168(sp)
  8065e0:	dc802b17 	ldw	r18,172(sp)
  8065e4:	d8002915 	stw	zero,164(sp)
  8065e8:	003bd106 	br	805530 <__alt_data_end+0xff805530>
  8065ec:	d8802d17 	ldw	r2,180(sp)
  8065f0:	d8c02d17 	ldw	r3,180(sp)
  8065f4:	d9002d17 	ldw	r4,180(sp)
  8065f8:	10800017 	ldw	r2,0(r2)
  8065fc:	18c00117 	ldw	r3,4(r3)
  806600:	21000204 	addi	r4,r4,8
  806604:	d8803615 	stw	r2,216(sp)
  806608:	d8c03815 	stw	r3,224(sp)
  80660c:	d9002d15 	stw	r4,180(sp)
  806610:	003b7506 	br	8053e8 <__alt_data_end+0xff8053e8>
  806614:	ac400007 	ldb	r17,0(r21)
  806618:	003a5906 	br	804f80 <__alt_data_end+0xff804f80>
  80661c:	9080100c 	andi	r2,r18,64
  806620:	1000a826 	beq	r2,zero,8068c4 <___vfprintf_internal_r+0x1ac8>
  806624:	d9002d17 	ldw	r4,180(sp)
  806628:	002d883a 	mov	r22,zero
  80662c:	24c0000b 	ldhu	r19,0(r4)
  806630:	21000104 	addi	r4,r4,4
  806634:	d9002d15 	stw	r4,180(sp)
  806638:	003ccb06 	br	805968 <__alt_data_end+0xff805968>
  80663c:	d8c02d17 	ldw	r3,180(sp)
  806640:	d9002917 	ldw	r4,164(sp)
  806644:	002d883a 	mov	r22,zero
  806648:	18800104 	addi	r2,r3,4
  80664c:	1cc00017 	ldw	r19,0(r3)
  806650:	203ebb0e 	bge	r4,zero,806140 <__alt_data_end+0xff806140>
  806654:	003ef106 	br	80621c <__alt_data_end+0xff80621c>
  806658:	9080040c 	andi	r2,r18,16
  80665c:	1000921e 	bne	r2,zero,8068a8 <___vfprintf_internal_r+0x1aac>
  806660:	9480100c 	andi	r18,r18,64
  806664:	90013926 	beq	r18,zero,806b4c <___vfprintf_internal_r+0x1d50>
  806668:	d9002d17 	ldw	r4,180(sp)
  80666c:	d9402f17 	ldw	r5,188(sp)
  806670:	20800017 	ldw	r2,0(r4)
  806674:	21000104 	addi	r4,r4,4
  806678:	d9002d15 	stw	r4,180(sp)
  80667c:	1140000d 	sth	r5,0(r2)
  806680:	003a1606 	br	804edc <__alt_data_end+0xff804edc>
  806684:	9080100c 	andi	r2,r18,64
  806688:	10008026 	beq	r2,zero,80688c <___vfprintf_internal_r+0x1a90>
  80668c:	d8c02d17 	ldw	r3,180(sp)
  806690:	1cc0000f 	ldh	r19,0(r3)
  806694:	18c00104 	addi	r3,r3,4
  806698:	d8c02d15 	stw	r3,180(sp)
  80669c:	982dd7fa 	srai	r22,r19,31
  8066a0:	b005883a 	mov	r2,r22
  8066a4:	003b1f06 	br	805324 <__alt_data_end+0xff805324>
  8066a8:	9080100c 	andi	r2,r18,64
  8066ac:	d8002785 	stb	zero,158(sp)
  8066b0:	10008a1e 	bne	r2,zero,8068dc <___vfprintf_internal_r+0x1ae0>
  8066b4:	d9402d17 	ldw	r5,180(sp)
  8066b8:	d8c02917 	ldw	r3,164(sp)
  8066bc:	002d883a 	mov	r22,zero
  8066c0:	28800104 	addi	r2,r5,4
  8066c4:	2cc00017 	ldw	r19,0(r5)
  8066c8:	183e4b0e 	bge	r3,zero,805ff8 <__alt_data_end+0xff805ff8>
  8066cc:	9d86b03a 	or	r3,r19,r22
  8066d0:	d8802d15 	stw	r2,180(sp)
  8066d4:	183e4c1e 	bne	r3,zero,806008 <__alt_data_end+0xff806008>
  8066d8:	0039883a 	mov	fp,zero
  8066dc:	0005883a 	mov	r2,zero
  8066e0:	003d4006 	br	805be4 <__alt_data_end+0xff805be4>
  8066e4:	014020b4 	movhi	r5,130
  8066e8:	29717484 	addi	r5,r5,-14894
  8066ec:	d9402b15 	stw	r5,172(sp)
  8066f0:	d9402b17 	ldw	r5,172(sp)
  8066f4:	1c47883a 	add	r3,r3,r17
  8066f8:	10800044 	addi	r2,r2,1
  8066fc:	41400015 	stw	r5,0(r8)
  806700:	44400115 	stw	r17,4(r8)
  806704:	d8c02015 	stw	r3,128(sp)
  806708:	d8801f15 	stw	r2,124(sp)
  80670c:	010001c4 	movi	r4,7
  806710:	20bec816 	blt	r4,r2,806234 <__alt_data_end+0xff806234>
  806714:	42000204 	addi	r8,r8,8
  806718:	003ecd06 	br	806250 <__alt_data_end+0xff806250>
  80671c:	d9002917 	ldw	r4,164(sp)
  806720:	d8002785 	stb	zero,158(sp)
  806724:	203d2d16 	blt	r4,zero,805bdc <__alt_data_end+0xff805bdc>
  806728:	00bfdfc4 	movi	r2,-129
  80672c:	90a4703a 	and	r18,r18,r2
  806730:	003a9106 	br	805178 <__alt_data_end+0xff805178>
  806734:	010020b4 	movhi	r4,130
  806738:	21317484 	addi	r4,r4,-14894
  80673c:	d9002b15 	stw	r4,172(sp)
  806740:	003c0c06 	br	805774 <__alt_data_end+0xff805774>
  806744:	d9002c17 	ldw	r4,176(sp)
  806748:	d9801e04 	addi	r6,sp,120
  80674c:	b80b883a 	mov	r5,r23
  806750:	0810d4c0 	call	810d4c <__sprint_r>
  806754:	103aab1e 	bne	r2,zero,805204 <__alt_data_end+0xff805204>
  806758:	d8c02017 	ldw	r3,128(sp)
  80675c:	da000404 	addi	r8,sp,16
  806760:	003d4106 	br	805c68 <__alt_data_end+0xff805c68>
  806764:	d8801f17 	ldw	r2,124(sp)
  806768:	014020b4 	movhi	r5,130
  80676c:	01000044 	movi	r4,1
  806770:	18c00044 	addi	r3,r3,1
  806774:	10800044 	addi	r2,r2,1
  806778:	29717404 	addi	r5,r5,-14896
  80677c:	41000115 	stw	r4,4(r8)
  806780:	41400015 	stw	r5,0(r8)
  806784:	d8c02015 	stw	r3,128(sp)
  806788:	d8801f15 	stw	r2,124(sp)
  80678c:	010001c4 	movi	r4,7
  806790:	20805c16 	blt	r4,r2,806904 <___vfprintf_internal_r+0x1b08>
  806794:	42000204 	addi	r8,r8,8
  806798:	8800041e 	bne	r17,zero,8067ac <___vfprintf_internal_r+0x19b0>
  80679c:	d8803317 	ldw	r2,204(sp)
  8067a0:	1000021e 	bne	r2,zero,8067ac <___vfprintf_internal_r+0x19b0>
  8067a4:	9080004c 	andi	r2,r18,1
  8067a8:	103c0926 	beq	r2,zero,8057d0 <__alt_data_end+0xff8057d0>
  8067ac:	d9003717 	ldw	r4,220(sp)
  8067b0:	d8801f17 	ldw	r2,124(sp)
  8067b4:	d9403417 	ldw	r5,208(sp)
  8067b8:	20c7883a 	add	r3,r4,r3
  8067bc:	10800044 	addi	r2,r2,1
  8067c0:	41000115 	stw	r4,4(r8)
  8067c4:	41400015 	stw	r5,0(r8)
  8067c8:	d8c02015 	stw	r3,128(sp)
  8067cc:	d8801f15 	stw	r2,124(sp)
  8067d0:	010001c4 	movi	r4,7
  8067d4:	20812116 	blt	r4,r2,806c5c <___vfprintf_internal_r+0x1e60>
  8067d8:	42000204 	addi	r8,r8,8
  8067dc:	0463c83a 	sub	r17,zero,r17
  8067e0:	0440730e 	bge	zero,r17,8069b0 <___vfprintf_internal_r+0x1bb4>
  8067e4:	05800404 	movi	r22,16
  8067e8:	b440860e 	bge	r22,r17,806a04 <___vfprintf_internal_r+0x1c08>
  8067ec:	014020b4 	movhi	r5,130
  8067f0:	29717484 	addi	r5,r5,-14894
  8067f4:	d9402b15 	stw	r5,172(sp)
  8067f8:	070001c4 	movi	fp,7
  8067fc:	dcc02c17 	ldw	r19,176(sp)
  806800:	00000306 	br	806810 <___vfprintf_internal_r+0x1a14>
  806804:	42000204 	addi	r8,r8,8
  806808:	8c7ffc04 	addi	r17,r17,-16
  80680c:	b440800e 	bge	r22,r17,806a10 <___vfprintf_internal_r+0x1c14>
  806810:	18c00404 	addi	r3,r3,16
  806814:	10800044 	addi	r2,r2,1
  806818:	45000015 	stw	r20,0(r8)
  80681c:	45800115 	stw	r22,4(r8)
  806820:	d8c02015 	stw	r3,128(sp)
  806824:	d8801f15 	stw	r2,124(sp)
  806828:	e0bff60e 	bge	fp,r2,806804 <__alt_data_end+0xff806804>
  80682c:	d9801e04 	addi	r6,sp,120
  806830:	b80b883a 	mov	r5,r23
  806834:	9809883a 	mov	r4,r19
  806838:	0810d4c0 	call	810d4c <__sprint_r>
  80683c:	103a711e 	bne	r2,zero,805204 <__alt_data_end+0xff805204>
  806840:	d8c02017 	ldw	r3,128(sp)
  806844:	d8801f17 	ldw	r2,124(sp)
  806848:	da000404 	addi	r8,sp,16
  80684c:	003fee06 	br	806808 <__alt_data_end+0xff806808>
  806850:	00bfffc4 	movi	r2,-1
  806854:	003a6f06 	br	805214 <__alt_data_end+0xff805214>
  806858:	008011c4 	movi	r2,71
  80685c:	1440b816 	blt	r2,r17,806b40 <___vfprintf_internal_r+0x1d44>
  806860:	040020b4 	movhi	r16,130
  806864:	84316604 	addi	r16,r16,-14952
  806868:	00c000c4 	movi	r3,3
  80686c:	00bfdfc4 	movi	r2,-129
  806870:	d8c02a15 	stw	r3,168(sp)
  806874:	90a4703a 	and	r18,r18,r2
  806878:	df002783 	ldbu	fp,158(sp)
  80687c:	d8c02e15 	stw	r3,184(sp)
  806880:	d8002915 	stw	zero,164(sp)
  806884:	d8003215 	stw	zero,200(sp)
  806888:	003b2906 	br	805530 <__alt_data_end+0xff805530>
  80688c:	d9002d17 	ldw	r4,180(sp)
  806890:	24c00017 	ldw	r19,0(r4)
  806894:	21000104 	addi	r4,r4,4
  806898:	d9002d15 	stw	r4,180(sp)
  80689c:	982dd7fa 	srai	r22,r19,31
  8068a0:	b005883a 	mov	r2,r22
  8068a4:	003a9f06 	br	805324 <__alt_data_end+0xff805324>
  8068a8:	d9402d17 	ldw	r5,180(sp)
  8068ac:	d8c02f17 	ldw	r3,188(sp)
  8068b0:	28800017 	ldw	r2,0(r5)
  8068b4:	29400104 	addi	r5,r5,4
  8068b8:	d9402d15 	stw	r5,180(sp)
  8068bc:	10c00015 	stw	r3,0(r2)
  8068c0:	00398606 	br	804edc <__alt_data_end+0xff804edc>
  8068c4:	d9402d17 	ldw	r5,180(sp)
  8068c8:	002d883a 	mov	r22,zero
  8068cc:	2cc00017 	ldw	r19,0(r5)
  8068d0:	29400104 	addi	r5,r5,4
  8068d4:	d9402d15 	stw	r5,180(sp)
  8068d8:	003c2306 	br	805968 <__alt_data_end+0xff805968>
  8068dc:	d8c02d17 	ldw	r3,180(sp)
  8068e0:	d9002917 	ldw	r4,164(sp)
  8068e4:	002d883a 	mov	r22,zero
  8068e8:	18800104 	addi	r2,r3,4
  8068ec:	1cc0000b 	ldhu	r19,0(r3)
  8068f0:	203dc10e 	bge	r4,zero,805ff8 <__alt_data_end+0xff805ff8>
  8068f4:	003f7506 	br	8066cc <__alt_data_end+0xff8066cc>
  8068f8:	040020b4 	movhi	r16,130
  8068fc:	84316404 	addi	r16,r16,-14960
  806900:	003acc06 	br	805434 <__alt_data_end+0xff805434>
  806904:	d9002c17 	ldw	r4,176(sp)
  806908:	d9801e04 	addi	r6,sp,120
  80690c:	b80b883a 	mov	r5,r23
  806910:	0810d4c0 	call	810d4c <__sprint_r>
  806914:	103a3b1e 	bne	r2,zero,805204 <__alt_data_end+0xff805204>
  806918:	dc402617 	ldw	r17,152(sp)
  80691c:	d8c02017 	ldw	r3,128(sp)
  806920:	da000404 	addi	r8,sp,16
  806924:	003f9c06 	br	806798 <__alt_data_end+0xff806798>
  806928:	ac400043 	ldbu	r17,1(r21)
  80692c:	94800814 	ori	r18,r18,32
  806930:	ad400044 	addi	r21,r21,1
  806934:	8c403fcc 	andi	r17,r17,255
  806938:	8c40201c 	xori	r17,r17,128
  80693c:	8c7fe004 	addi	r17,r17,-128
  806940:	00398f06 	br	804f80 <__alt_data_end+0xff804f80>
  806944:	d8c02d15 	stw	r3,180(sp)
  806948:	0039883a 	mov	fp,zero
  80694c:	003e3506 	br	806224 <__alt_data_end+0xff806224>
  806950:	d9002c17 	ldw	r4,176(sp)
  806954:	d9801e04 	addi	r6,sp,120
  806958:	b80b883a 	mov	r5,r23
  80695c:	0810d4c0 	call	810d4c <__sprint_r>
  806960:	103a281e 	bne	r2,zero,805204 <__alt_data_end+0xff805204>
  806964:	d8c02017 	ldw	r3,128(sp)
  806968:	da000404 	addi	r8,sp,16
  80696c:	003cd006 	br	805cb0 <__alt_data_end+0xff805cb0>
  806970:	8009883a 	mov	r4,r16
  806974:	da003d15 	stw	r8,244(sp)
  806978:	08035a80 	call	8035a8 <strlen>
  80697c:	d8802e15 	stw	r2,184(sp)
  806980:	da003d17 	ldw	r8,244(sp)
  806984:	103c340e 	bge	r2,zero,805a58 <__alt_data_end+0xff805a58>
  806988:	0005883a 	mov	r2,zero
  80698c:	003c3206 	br	805a58 <__alt_data_end+0xff805a58>
  806990:	d9002c17 	ldw	r4,176(sp)
  806994:	d9801e04 	addi	r6,sp,120
  806998:	b80b883a 	mov	r5,r23
  80699c:	0810d4c0 	call	810d4c <__sprint_r>
  8069a0:	103a181e 	bne	r2,zero,805204 <__alt_data_end+0xff805204>
  8069a4:	d8c02017 	ldw	r3,128(sp)
  8069a8:	d8801f17 	ldw	r2,124(sp)
  8069ac:	da000404 	addi	r8,sp,16
  8069b0:	d9403317 	ldw	r5,204(sp)
  8069b4:	10800044 	addi	r2,r2,1
  8069b8:	44000015 	stw	r16,0(r8)
  8069bc:	28c7883a 	add	r3,r5,r3
  8069c0:	003b7d06 	br	8057b8 <__alt_data_end+0xff8057b8>
  8069c4:	010020b4 	movhi	r4,130
  8069c8:	21317884 	addi	r4,r4,-14878
  8069cc:	d9003515 	stw	r4,212(sp)
  8069d0:	003b1406 	br	805624 <__alt_data_end+0xff805624>
  8069d4:	013fffc4 	movi	r4,-1
  8069d8:	003a3506 	br	8052b0 <__alt_data_end+0xff8052b0>
  8069dc:	0023883a 	mov	r17,zero
  8069e0:	003d9d06 	br	806058 <__alt_data_end+0xff806058>
  8069e4:	d9002c17 	ldw	r4,176(sp)
  8069e8:	d9801e04 	addi	r6,sp,120
  8069ec:	b80b883a 	mov	r5,r23
  8069f0:	0810d4c0 	call	810d4c <__sprint_r>
  8069f4:	103a031e 	bne	r2,zero,805204 <__alt_data_end+0xff805204>
  8069f8:	d8c02017 	ldw	r3,128(sp)
  8069fc:	da000404 	addi	r8,sp,16
  806a00:	003d9406 	br	806054 <__alt_data_end+0xff806054>
  806a04:	010020b4 	movhi	r4,130
  806a08:	21317484 	addi	r4,r4,-14894
  806a0c:	d9002b15 	stw	r4,172(sp)
  806a10:	d9002b17 	ldw	r4,172(sp)
  806a14:	1c47883a 	add	r3,r3,r17
  806a18:	10800044 	addi	r2,r2,1
  806a1c:	41000015 	stw	r4,0(r8)
  806a20:	44400115 	stw	r17,4(r8)
  806a24:	d8c02015 	stw	r3,128(sp)
  806a28:	d8801f15 	stw	r2,124(sp)
  806a2c:	010001c4 	movi	r4,7
  806a30:	20bfd716 	blt	r4,r2,806990 <__alt_data_end+0xff806990>
  806a34:	42000204 	addi	r8,r8,8
  806a38:	003fdd06 	br	8069b0 <__alt_data_end+0xff8069b0>
  806a3c:	d9002c17 	ldw	r4,176(sp)
  806a40:	d9801e04 	addi	r6,sp,120
  806a44:	b80b883a 	mov	r5,r23
  806a48:	0810d4c0 	call	810d4c <__sprint_r>
  806a4c:	1039ed1e 	bne	r2,zero,805204 <__alt_data_end+0xff805204>
  806a50:	d8802617 	ldw	r2,152(sp)
  806a54:	d8c02017 	ldw	r3,128(sp)
  806a58:	da000404 	addi	r8,sp,16
  806a5c:	003e1006 	br	8062a0 <__alt_data_end+0xff8062a0>
  806a60:	00800044 	movi	r2,1
  806a64:	10803fcc 	andi	r2,r2,255
  806a68:	00c00044 	movi	r3,1
  806a6c:	10fa3526 	beq	r2,r3,805344 <__alt_data_end+0xff805344>
  806a70:	00c00084 	movi	r3,2
  806a74:	10fbcb26 	beq	r2,r3,8059a4 <__alt_data_end+0xff8059a4>
  806a78:	003a8f06 	br	8054b8 <__alt_data_end+0xff8054b8>
  806a7c:	010020b4 	movhi	r4,130
  806a80:	21317884 	addi	r4,r4,-14878
  806a84:	d9003515 	stw	r4,212(sp)
  806a88:	003b7606 	br	805864 <__alt_data_end+0xff805864>
  806a8c:	d8802917 	ldw	r2,164(sp)
  806a90:	00c00184 	movi	r3,6
  806a94:	1880012e 	bgeu	r3,r2,806a9c <___vfprintf_internal_r+0x1ca0>
  806a98:	1805883a 	mov	r2,r3
  806a9c:	d8802e15 	stw	r2,184(sp)
  806aa0:	1000ef16 	blt	r2,zero,806e60 <___vfprintf_internal_r+0x2064>
  806aa4:	040020b4 	movhi	r16,130
  806aa8:	d8802a15 	stw	r2,168(sp)
  806aac:	dcc02d15 	stw	r19,180(sp)
  806ab0:	d8002915 	stw	zero,164(sp)
  806ab4:	d8003215 	stw	zero,200(sp)
  806ab8:	84317204 	addi	r16,r16,-14904
  806abc:	0039883a 	mov	fp,zero
  806ac0:	003aa206 	br	80554c <__alt_data_end+0xff80554c>
  806ac4:	0021883a 	mov	r16,zero
  806ac8:	003e0706 	br	8062e8 <__alt_data_end+0xff8062e8>
  806acc:	d9002c17 	ldw	r4,176(sp)
  806ad0:	d9801e04 	addi	r6,sp,120
  806ad4:	b80b883a 	mov	r5,r23
  806ad8:	0810d4c0 	call	810d4c <__sprint_r>
  806adc:	1039c91e 	bne	r2,zero,805204 <__alt_data_end+0xff805204>
  806ae0:	d8802617 	ldw	r2,152(sp)
  806ae4:	d9403317 	ldw	r5,204(sp)
  806ae8:	d8c02017 	ldw	r3,128(sp)
  806aec:	da000404 	addi	r8,sp,16
  806af0:	2885c83a 	sub	r2,r5,r2
  806af4:	003dfb06 	br	8062e4 <__alt_data_end+0xff8062e4>
  806af8:	9080004c 	andi	r2,r18,1
  806afc:	103e8f1e 	bne	r2,zero,80653c <__alt_data_end+0xff80653c>
  806b00:	d8802117 	ldw	r2,132(sp)
  806b04:	003e9e06 	br	806580 <__alt_data_end+0xff806580>
  806b08:	1025883a 	mov	r18,r2
  806b0c:	0039883a 	mov	fp,zero
  806b10:	00800084 	movi	r2,2
  806b14:	003fd306 	br	806a64 <__alt_data_end+0xff806a64>
  806b18:	07000b44 	movi	fp,45
  806b1c:	df002785 	stb	fp,158(sp)
  806b20:	003a4006 	br	805424 <__alt_data_end+0xff805424>
  806b24:	00c00b44 	movi	r3,45
  806b28:	d8c02785 	stb	r3,158(sp)
  806b2c:	d8802a15 	stw	r2,168(sp)
  806b30:	dc802b17 	ldw	r18,172(sp)
  806b34:	d8002915 	stw	zero,164(sp)
  806b38:	07000b44 	movi	fp,45
  806b3c:	003a8006 	br	805540 <__alt_data_end+0xff805540>
  806b40:	040020b4 	movhi	r16,130
  806b44:	84316704 	addi	r16,r16,-14948
  806b48:	003f4706 	br	806868 <__alt_data_end+0xff806868>
  806b4c:	d8c02d17 	ldw	r3,180(sp)
  806b50:	d9002f17 	ldw	r4,188(sp)
  806b54:	18800017 	ldw	r2,0(r3)
  806b58:	18c00104 	addi	r3,r3,4
  806b5c:	d8c02d15 	stw	r3,180(sp)
  806b60:	11000015 	stw	r4,0(r2)
  806b64:	0038dd06 	br	804edc <__alt_data_end+0xff804edc>
  806b68:	dd802617 	ldw	r22,152(sp)
  806b6c:	00bfff44 	movi	r2,-3
  806b70:	b0801c16 	blt	r22,r2,806be4 <___vfprintf_internal_r+0x1de8>
  806b74:	d9402917 	ldw	r5,164(sp)
  806b78:	2d801a16 	blt	r5,r22,806be4 <___vfprintf_internal_r+0x1de8>
  806b7c:	dd803215 	stw	r22,200(sp)
  806b80:	003e8906 	br	8065a8 <__alt_data_end+0xff8065a8>
  806b84:	010020b4 	movhi	r4,130
  806b88:	21317484 	addi	r4,r4,-14894
  806b8c:	d9002b15 	stw	r4,172(sp)
  806b90:	003c9106 	br	805dd8 <__alt_data_end+0xff805dd8>
  806b94:	e005883a 	mov	r2,fp
  806b98:	003e7906 	br	806580 <__alt_data_end+0xff806580>
  806b9c:	d9402917 	ldw	r5,164(sp)
  806ba0:	df002783 	ldbu	fp,158(sp)
  806ba4:	dcc02d15 	stw	r19,180(sp)
  806ba8:	d9402a15 	stw	r5,168(sp)
  806bac:	d9402e15 	stw	r5,184(sp)
  806bb0:	d8002915 	stw	zero,164(sp)
  806bb4:	d8003215 	stw	zero,200(sp)
  806bb8:	003a5d06 	br	805530 <__alt_data_end+0xff805530>
  806bbc:	9080004c 	andi	r2,r18,1
  806bc0:	0039883a 	mov	fp,zero
  806bc4:	10000426 	beq	r2,zero,806bd8 <___vfprintf_internal_r+0x1ddc>
  806bc8:	00800c04 	movi	r2,48
  806bcc:	dc001dc4 	addi	r16,sp,119
  806bd0:	d8801dc5 	stb	r2,119(sp)
  806bd4:	003b8006 	br	8059d8 <__alt_data_end+0xff8059d8>
  806bd8:	d8002e15 	stw	zero,184(sp)
  806bdc:	dc001e04 	addi	r16,sp,120
  806be0:	003a4d06 	br	805518 <__alt_data_end+0xff805518>
  806be4:	8c7fff84 	addi	r17,r17,-2
  806be8:	b5bfffc4 	addi	r22,r22,-1
  806bec:	dd802615 	stw	r22,152(sp)
  806bf0:	dc4022c5 	stb	r17,139(sp)
  806bf4:	b000bf16 	blt	r22,zero,806ef4 <___vfprintf_internal_r+0x20f8>
  806bf8:	00800ac4 	movi	r2,43
  806bfc:	d8802305 	stb	r2,140(sp)
  806c00:	00800244 	movi	r2,9
  806c04:	15807016 	blt	r2,r22,806dc8 <___vfprintf_internal_r+0x1fcc>
  806c08:	00800c04 	movi	r2,48
  806c0c:	b5800c04 	addi	r22,r22,48
  806c10:	d8802345 	stb	r2,141(sp)
  806c14:	dd802385 	stb	r22,142(sp)
  806c18:	d88023c4 	addi	r2,sp,143
  806c1c:	df0022c4 	addi	fp,sp,139
  806c20:	d8c03317 	ldw	r3,204(sp)
  806c24:	1739c83a 	sub	fp,r2,fp
  806c28:	d9003317 	ldw	r4,204(sp)
  806c2c:	e0c7883a 	add	r3,fp,r3
  806c30:	df003a15 	stw	fp,232(sp)
  806c34:	d8c02e15 	stw	r3,184(sp)
  806c38:	00800044 	movi	r2,1
  806c3c:	1100b30e 	bge	r2,r4,806f0c <___vfprintf_internal_r+0x2110>
  806c40:	d8c02e17 	ldw	r3,184(sp)
  806c44:	18c00044 	addi	r3,r3,1
  806c48:	d8c02e15 	stw	r3,184(sp)
  806c4c:	1805883a 	mov	r2,r3
  806c50:	1800ac16 	blt	r3,zero,806f04 <___vfprintf_internal_r+0x2108>
  806c54:	d8003215 	stw	zero,200(sp)
  806c58:	003e5d06 	br	8065d0 <__alt_data_end+0xff8065d0>
  806c5c:	d9002c17 	ldw	r4,176(sp)
  806c60:	d9801e04 	addi	r6,sp,120
  806c64:	b80b883a 	mov	r5,r23
  806c68:	0810d4c0 	call	810d4c <__sprint_r>
  806c6c:	1039651e 	bne	r2,zero,805204 <__alt_data_end+0xff805204>
  806c70:	dc402617 	ldw	r17,152(sp)
  806c74:	d8c02017 	ldw	r3,128(sp)
  806c78:	d8801f17 	ldw	r2,124(sp)
  806c7c:	da000404 	addi	r8,sp,16
  806c80:	003ed606 	br	8067dc <__alt_data_end+0xff8067dc>
  806c84:	582b883a 	mov	r21,r11
  806c88:	d8002915 	stw	zero,164(sp)
  806c8c:	0038bd06 	br	804f84 <__alt_data_end+0xff804f84>
  806c90:	d8802917 	ldw	r2,164(sp)
  806c94:	103e071e 	bne	r2,zero,8064b4 <__alt_data_end+0xff8064b4>
  806c98:	dc002915 	stw	r16,164(sp)
  806c9c:	003e0506 	br	8064b4 <__alt_data_end+0xff8064b4>
  806ca0:	d9002917 	ldw	r4,164(sp)
  806ca4:	20c00044 	addi	r3,r4,1
  806ca8:	003e0f06 	br	8064e8 <__alt_data_end+0xff8064e8>
  806cac:	01400184 	movi	r5,6
  806cb0:	d9402915 	stw	r5,164(sp)
  806cb4:	003dff06 	br	8064b4 <__alt_data_end+0xff8064b4>
  806cb8:	d8802104 	addi	r2,sp,132
  806cbc:	d8800315 	stw	r2,12(sp)
  806cc0:	d8802504 	addi	r2,sp,148
  806cc4:	d8800215 	stw	r2,8(sp)
  806cc8:	d8802604 	addi	r2,sp,152
  806ccc:	d8800115 	stw	r2,4(sp)
  806cd0:	d8802917 	ldw	r2,164(sp)
  806cd4:	d9403617 	ldw	r5,216(sp)
  806cd8:	d9002c17 	ldw	r4,176(sp)
  806cdc:	d8800015 	stw	r2,0(sp)
  806ce0:	01c000c4 	movi	r7,3
  806ce4:	980d883a 	mov	r6,r19
  806ce8:	da003d15 	stw	r8,244(sp)
  806cec:	08074d40 	call	8074d4 <_dtoa_r>
  806cf0:	d8c02917 	ldw	r3,164(sp)
  806cf4:	da003d17 	ldw	r8,244(sp)
  806cf8:	1021883a 	mov	r16,r2
  806cfc:	10f9883a 	add	fp,r2,r3
  806d00:	81000007 	ldb	r4,0(r16)
  806d04:	00800c04 	movi	r2,48
  806d08:	20805e26 	beq	r4,r2,806e84 <___vfprintf_internal_r+0x2088>
  806d0c:	d8c02617 	ldw	r3,152(sp)
  806d10:	e0f9883a 	add	fp,fp,r3
  806d14:	003e0a06 	br	806540 <__alt_data_end+0xff806540>
  806d18:	00c00b44 	movi	r3,45
  806d1c:	24e0003c 	xorhi	r19,r4,32768
  806d20:	d8c02a05 	stb	r3,168(sp)
  806d24:	003de906 	br	8064cc <__alt_data_end+0xff8064cc>
  806d28:	d8c03217 	ldw	r3,200(sp)
  806d2c:	00c07a0e 	bge	zero,r3,806f18 <___vfprintf_internal_r+0x211c>
  806d30:	00800044 	movi	r2,1
  806d34:	d9003317 	ldw	r4,204(sp)
  806d38:	1105883a 	add	r2,r2,r4
  806d3c:	d8802e15 	stw	r2,184(sp)
  806d40:	10004e16 	blt	r2,zero,806e7c <___vfprintf_internal_r+0x2080>
  806d44:	044019c4 	movi	r17,103
  806d48:	003e2106 	br	8065d0 <__alt_data_end+0xff8065d0>
  806d4c:	d9002917 	ldw	r4,164(sp)
  806d50:	d8802104 	addi	r2,sp,132
  806d54:	d8800315 	stw	r2,12(sp)
  806d58:	d9000015 	stw	r4,0(sp)
  806d5c:	d8802504 	addi	r2,sp,148
  806d60:	d9403617 	ldw	r5,216(sp)
  806d64:	d9002c17 	ldw	r4,176(sp)
  806d68:	d8800215 	stw	r2,8(sp)
  806d6c:	d8802604 	addi	r2,sp,152
  806d70:	d8800115 	stw	r2,4(sp)
  806d74:	01c000c4 	movi	r7,3
  806d78:	980d883a 	mov	r6,r19
  806d7c:	da003d15 	stw	r8,244(sp)
  806d80:	08074d40 	call	8074d4 <_dtoa_r>
  806d84:	d8c02917 	ldw	r3,164(sp)
  806d88:	da003d17 	ldw	r8,244(sp)
  806d8c:	1021883a 	mov	r16,r2
  806d90:	00801184 	movi	r2,70
  806d94:	80f9883a 	add	fp,r16,r3
  806d98:	88bfd926 	beq	r17,r2,806d00 <__alt_data_end+0xff806d00>
  806d9c:	003de806 	br	806540 <__alt_data_end+0xff806540>
  806da0:	d9002917 	ldw	r4,164(sp)
  806da4:	00c04d0e 	bge	zero,r3,806edc <___vfprintf_internal_r+0x20e0>
  806da8:	2000441e 	bne	r4,zero,806ebc <___vfprintf_internal_r+0x20c0>
  806dac:	9480004c 	andi	r18,r18,1
  806db0:	9000421e 	bne	r18,zero,806ebc <___vfprintf_internal_r+0x20c0>
  806db4:	1805883a 	mov	r2,r3
  806db8:	18007016 	blt	r3,zero,806f7c <___vfprintf_internal_r+0x2180>
  806dbc:	d8c03217 	ldw	r3,200(sp)
  806dc0:	d8c02e15 	stw	r3,184(sp)
  806dc4:	003e0206 	br	8065d0 <__alt_data_end+0xff8065d0>
  806dc8:	df0022c4 	addi	fp,sp,139
  806dcc:	dc002915 	stw	r16,164(sp)
  806dd0:	4027883a 	mov	r19,r8
  806dd4:	e021883a 	mov	r16,fp
  806dd8:	b009883a 	mov	r4,r22
  806ddc:	01400284 	movi	r5,10
  806de0:	08155140 	call	815514 <__modsi3>
  806de4:	10800c04 	addi	r2,r2,48
  806de8:	843fffc4 	addi	r16,r16,-1
  806dec:	b009883a 	mov	r4,r22
  806df0:	01400284 	movi	r5,10
  806df4:	80800005 	stb	r2,0(r16)
  806df8:	08154900 	call	815490 <__divsi3>
  806dfc:	102d883a 	mov	r22,r2
  806e00:	00800244 	movi	r2,9
  806e04:	15bff416 	blt	r2,r22,806dd8 <__alt_data_end+0xff806dd8>
  806e08:	9811883a 	mov	r8,r19
  806e0c:	b0800c04 	addi	r2,r22,48
  806e10:	8027883a 	mov	r19,r16
  806e14:	997fffc4 	addi	r5,r19,-1
  806e18:	98bfffc5 	stb	r2,-1(r19)
  806e1c:	dc002917 	ldw	r16,164(sp)
  806e20:	2f006a2e 	bgeu	r5,fp,806fcc <___vfprintf_internal_r+0x21d0>
  806e24:	d9c02384 	addi	r7,sp,142
  806e28:	3ccfc83a 	sub	r7,r7,r19
  806e2c:	d9002344 	addi	r4,sp,141
  806e30:	e1cf883a 	add	r7,fp,r7
  806e34:	00000106 	br	806e3c <___vfprintf_internal_r+0x2040>
  806e38:	28800003 	ldbu	r2,0(r5)
  806e3c:	20800005 	stb	r2,0(r4)
  806e40:	21000044 	addi	r4,r4,1
  806e44:	29400044 	addi	r5,r5,1
  806e48:	393ffb1e 	bne	r7,r4,806e38 <__alt_data_end+0xff806e38>
  806e4c:	d8802304 	addi	r2,sp,140
  806e50:	14c5c83a 	sub	r2,r2,r19
  806e54:	d8c02344 	addi	r3,sp,141
  806e58:	1885883a 	add	r2,r3,r2
  806e5c:	003f7006 	br	806c20 <__alt_data_end+0xff806c20>
  806e60:	0005883a 	mov	r2,zero
  806e64:	003f0f06 	br	806aa4 <__alt_data_end+0xff806aa4>
  806e68:	d8c03217 	ldw	r3,200(sp)
  806e6c:	18c00044 	addi	r3,r3,1
  806e70:	d8c02e15 	stw	r3,184(sp)
  806e74:	1805883a 	mov	r2,r3
  806e78:	183fb20e 	bge	r3,zero,806d44 <__alt_data_end+0xff806d44>
  806e7c:	0005883a 	mov	r2,zero
  806e80:	003fb006 	br	806d44 <__alt_data_end+0xff806d44>
  806e84:	d9003617 	ldw	r4,216(sp)
  806e88:	000d883a 	mov	r6,zero
  806e8c:	000f883a 	mov	r7,zero
  806e90:	980b883a 	mov	r5,r19
  806e94:	d8c03c15 	stw	r3,240(sp)
  806e98:	da003d15 	stw	r8,244(sp)
  806e9c:	08169d40 	call	8169d4 <__eqdf2>
  806ea0:	d8c03c17 	ldw	r3,240(sp)
  806ea4:	da003d17 	ldw	r8,244(sp)
  806ea8:	103f9826 	beq	r2,zero,806d0c <__alt_data_end+0xff806d0c>
  806eac:	00800044 	movi	r2,1
  806eb0:	10c7c83a 	sub	r3,r2,r3
  806eb4:	d8c02615 	stw	r3,152(sp)
  806eb8:	003f9506 	br	806d10 <__alt_data_end+0xff806d10>
  806ebc:	d9002917 	ldw	r4,164(sp)
  806ec0:	d8c03217 	ldw	r3,200(sp)
  806ec4:	20800044 	addi	r2,r4,1
  806ec8:	1885883a 	add	r2,r3,r2
  806ecc:	d8802e15 	stw	r2,184(sp)
  806ed0:	103dbf0e 	bge	r2,zero,8065d0 <__alt_data_end+0xff8065d0>
  806ed4:	0005883a 	mov	r2,zero
  806ed8:	003dbd06 	br	8065d0 <__alt_data_end+0xff8065d0>
  806edc:	2000211e 	bne	r4,zero,806f64 <___vfprintf_internal_r+0x2168>
  806ee0:	9480004c 	andi	r18,r18,1
  806ee4:	90001f1e 	bne	r18,zero,806f64 <___vfprintf_internal_r+0x2168>
  806ee8:	00800044 	movi	r2,1
  806eec:	d8802e15 	stw	r2,184(sp)
  806ef0:	003db706 	br	8065d0 <__alt_data_end+0xff8065d0>
  806ef4:	00800b44 	movi	r2,45
  806ef8:	05adc83a 	sub	r22,zero,r22
  806efc:	d8802305 	stb	r2,140(sp)
  806f00:	003f3f06 	br	806c00 <__alt_data_end+0xff806c00>
  806f04:	0005883a 	mov	r2,zero
  806f08:	003f5206 	br	806c54 <__alt_data_end+0xff806c54>
  806f0c:	90a4703a 	and	r18,r18,r2
  806f10:	903f4e26 	beq	r18,zero,806c4c <__alt_data_end+0xff806c4c>
  806f14:	003f4a06 	br	806c40 <__alt_data_end+0xff806c40>
  806f18:	00800084 	movi	r2,2
  806f1c:	10c5c83a 	sub	r2,r2,r3
  806f20:	003f8406 	br	806d34 <__alt_data_end+0xff806d34>
  806f24:	d8802d17 	ldw	r2,180(sp)
  806f28:	d9002d17 	ldw	r4,180(sp)
  806f2c:	ac400043 	ldbu	r17,1(r21)
  806f30:	10800017 	ldw	r2,0(r2)
  806f34:	582b883a 	mov	r21,r11
  806f38:	d8802915 	stw	r2,164(sp)
  806f3c:	20800104 	addi	r2,r4,4
  806f40:	d9002917 	ldw	r4,164(sp)
  806f44:	d8802d15 	stw	r2,180(sp)
  806f48:	203e7a0e 	bge	r4,zero,806934 <__alt_data_end+0xff806934>
  806f4c:	8c403fcc 	andi	r17,r17,255
  806f50:	00bfffc4 	movi	r2,-1
  806f54:	8c40201c 	xori	r17,r17,128
  806f58:	d8802915 	stw	r2,164(sp)
  806f5c:	8c7fe004 	addi	r17,r17,-128
  806f60:	00380706 	br	804f80 <__alt_data_end+0xff804f80>
  806f64:	d8c02917 	ldw	r3,164(sp)
  806f68:	18c00084 	addi	r3,r3,2
  806f6c:	d8c02e15 	stw	r3,184(sp)
  806f70:	1805883a 	mov	r2,r3
  806f74:	183d960e 	bge	r3,zero,8065d0 <__alt_data_end+0xff8065d0>
  806f78:	003fd606 	br	806ed4 <__alt_data_end+0xff806ed4>
  806f7c:	0005883a 	mov	r2,zero
  806f80:	003f8e06 	br	806dbc <__alt_data_end+0xff806dbc>
  806f84:	9080004c 	andi	r2,r18,1
  806f88:	103f811e 	bne	r2,zero,806d90 <__alt_data_end+0xff806d90>
  806f8c:	d8802117 	ldw	r2,132(sp)
  806f90:	1405c83a 	sub	r2,r2,r16
  806f94:	d8803315 	stw	r2,204(sp)
  806f98:	b47ef326 	beq	r22,r17,806b68 <__alt_data_end+0xff806b68>
  806f9c:	dd802617 	ldw	r22,152(sp)
  806fa0:	003f1106 	br	806be8 <__alt_data_end+0xff806be8>
  806fa4:	d9c02785 	stb	r7,158(sp)
  806fa8:	00390406 	br	8053bc <__alt_data_end+0xff8053bc>
  806fac:	d9c02785 	stb	r7,158(sp)
  806fb0:	0038d306 	br	805300 <__alt_data_end+0xff805300>
  806fb4:	d9c02785 	stb	r7,158(sp)
  806fb8:	003a6106 	br	805940 <__alt_data_end+0xff805940>
  806fbc:	d9c02785 	stb	r7,158(sp)
  806fc0:	003af806 	br	805ba4 <__alt_data_end+0xff805ba4>
  806fc4:	0005883a 	mov	r2,zero
  806fc8:	003d7e06 	br	8065c4 <__alt_data_end+0xff8065c4>
  806fcc:	d8802344 	addi	r2,sp,141
  806fd0:	003f1306 	br	806c20 <__alt_data_end+0xff806c20>
  806fd4:	d9c02785 	stb	r7,158(sp)
  806fd8:	00392306 	br	805468 <__alt_data_end+0xff805468>
  806fdc:	d9c02785 	stb	r7,158(sp)
  806fe0:	003aa906 	br	805a88 <__alt_data_end+0xff805a88>
  806fe4:	d9c02785 	stb	r7,158(sp)
  806fe8:	003a3d06 	br	8058e0 <__alt_data_end+0xff8058e0>
  806fec:	d9c02785 	stb	r7,158(sp)
  806ff0:	003aca06 	br	805b1c <__alt_data_end+0xff805b1c>

00806ff4 <__vfprintf_internal>:
  806ff4:	008020b4 	movhi	r2,130
  806ff8:	10ba8504 	addi	r2,r2,-5612
  806ffc:	300f883a 	mov	r7,r6
  807000:	280d883a 	mov	r6,r5
  807004:	200b883a 	mov	r5,r4
  807008:	11000017 	ldw	r4,0(r2)
  80700c:	0804dfc1 	jmpi	804dfc <___vfprintf_internal_r>

00807010 <__sbprintf>:
  807010:	2880030b 	ldhu	r2,12(r5)
  807014:	2ac01917 	ldw	r11,100(r5)
  807018:	2a80038b 	ldhu	r10,14(r5)
  80701c:	2a400717 	ldw	r9,28(r5)
  807020:	2a000917 	ldw	r8,36(r5)
  807024:	defee204 	addi	sp,sp,-1144
  807028:	00c10004 	movi	r3,1024
  80702c:	dc011a15 	stw	r16,1128(sp)
  807030:	10bfff4c 	andi	r2,r2,65533
  807034:	2821883a 	mov	r16,r5
  807038:	d8cb883a 	add	r5,sp,r3
  80703c:	dc811c15 	stw	r18,1136(sp)
  807040:	dc411b15 	stw	r17,1132(sp)
  807044:	dfc11d15 	stw	ra,1140(sp)
  807048:	2025883a 	mov	r18,r4
  80704c:	d881030d 	sth	r2,1036(sp)
  807050:	dac11915 	stw	r11,1124(sp)
  807054:	da81038d 	sth	r10,1038(sp)
  807058:	da410715 	stw	r9,1052(sp)
  80705c:	da010915 	stw	r8,1060(sp)
  807060:	dec10015 	stw	sp,1024(sp)
  807064:	dec10415 	stw	sp,1040(sp)
  807068:	d8c10215 	stw	r3,1032(sp)
  80706c:	d8c10515 	stw	r3,1044(sp)
  807070:	d8010615 	stw	zero,1048(sp)
  807074:	0804dfc0 	call	804dfc <___vfprintf_internal_r>
  807078:	1023883a 	mov	r17,r2
  80707c:	10000416 	blt	r2,zero,807090 <__sbprintf+0x80>
  807080:	d9410004 	addi	r5,sp,1024
  807084:	9009883a 	mov	r4,r18
  807088:	08011e80 	call	8011e8 <_fflush_r>
  80708c:	10000d1e 	bne	r2,zero,8070c4 <__sbprintf+0xb4>
  807090:	d881030b 	ldhu	r2,1036(sp)
  807094:	1080100c 	andi	r2,r2,64
  807098:	10000326 	beq	r2,zero,8070a8 <__sbprintf+0x98>
  80709c:	8080030b 	ldhu	r2,12(r16)
  8070a0:	10801014 	ori	r2,r2,64
  8070a4:	8080030d 	sth	r2,12(r16)
  8070a8:	8805883a 	mov	r2,r17
  8070ac:	dfc11d17 	ldw	ra,1140(sp)
  8070b0:	dc811c17 	ldw	r18,1136(sp)
  8070b4:	dc411b17 	ldw	r17,1132(sp)
  8070b8:	dc011a17 	ldw	r16,1128(sp)
  8070bc:	dec11e04 	addi	sp,sp,1144
  8070c0:	f800283a 	ret
  8070c4:	047fffc4 	movi	r17,-1
  8070c8:	003ff106 	br	807090 <__alt_data_end+0xff807090>

008070cc <_write_r>:
  8070cc:	defffd04 	addi	sp,sp,-12
  8070d0:	2805883a 	mov	r2,r5
  8070d4:	dc000015 	stw	r16,0(sp)
  8070d8:	040020b4 	movhi	r16,130
  8070dc:	dc400115 	stw	r17,4(sp)
  8070e0:	300b883a 	mov	r5,r6
  8070e4:	8401f004 	addi	r16,r16,1984
  8070e8:	2023883a 	mov	r17,r4
  8070ec:	380d883a 	mov	r6,r7
  8070f0:	1009883a 	mov	r4,r2
  8070f4:	dfc00215 	stw	ra,8(sp)
  8070f8:	80000015 	stw	zero,0(r16)
  8070fc:	0818ca00 	call	818ca0 <write>
  807100:	00ffffc4 	movi	r3,-1
  807104:	10c00526 	beq	r2,r3,80711c <_write_r+0x50>
  807108:	dfc00217 	ldw	ra,8(sp)
  80710c:	dc400117 	ldw	r17,4(sp)
  807110:	dc000017 	ldw	r16,0(sp)
  807114:	dec00304 	addi	sp,sp,12
  807118:	f800283a 	ret
  80711c:	80c00017 	ldw	r3,0(r16)
  807120:	183ff926 	beq	r3,zero,807108 <__alt_data_end+0xff807108>
  807124:	88c00015 	stw	r3,0(r17)
  807128:	003ff706 	br	807108 <__alt_data_end+0xff807108>

0080712c <__swsetup_r>:
  80712c:	008020b4 	movhi	r2,130
  807130:	defffd04 	addi	sp,sp,-12
  807134:	10ba8504 	addi	r2,r2,-5612
  807138:	dc400115 	stw	r17,4(sp)
  80713c:	2023883a 	mov	r17,r4
  807140:	11000017 	ldw	r4,0(r2)
  807144:	dc000015 	stw	r16,0(sp)
  807148:	dfc00215 	stw	ra,8(sp)
  80714c:	2821883a 	mov	r16,r5
  807150:	20000226 	beq	r4,zero,80715c <__swsetup_r+0x30>
  807154:	20800e17 	ldw	r2,56(r4)
  807158:	10003126 	beq	r2,zero,807220 <__swsetup_r+0xf4>
  80715c:	8080030b 	ldhu	r2,12(r16)
  807160:	10c0020c 	andi	r3,r2,8
  807164:	1009883a 	mov	r4,r2
  807168:	18000f26 	beq	r3,zero,8071a8 <__swsetup_r+0x7c>
  80716c:	80c00417 	ldw	r3,16(r16)
  807170:	18001526 	beq	r3,zero,8071c8 <__swsetup_r+0x9c>
  807174:	1100004c 	andi	r4,r2,1
  807178:	20001c1e 	bne	r4,zero,8071ec <__swsetup_r+0xc0>
  80717c:	1080008c 	andi	r2,r2,2
  807180:	1000291e 	bne	r2,zero,807228 <__swsetup_r+0xfc>
  807184:	80800517 	ldw	r2,20(r16)
  807188:	80800215 	stw	r2,8(r16)
  80718c:	18001c26 	beq	r3,zero,807200 <__swsetup_r+0xd4>
  807190:	0005883a 	mov	r2,zero
  807194:	dfc00217 	ldw	ra,8(sp)
  807198:	dc400117 	ldw	r17,4(sp)
  80719c:	dc000017 	ldw	r16,0(sp)
  8071a0:	dec00304 	addi	sp,sp,12
  8071a4:	f800283a 	ret
  8071a8:	2080040c 	andi	r2,r4,16
  8071ac:	10002e26 	beq	r2,zero,807268 <__swsetup_r+0x13c>
  8071b0:	2080010c 	andi	r2,r4,4
  8071b4:	10001e1e 	bne	r2,zero,807230 <__swsetup_r+0x104>
  8071b8:	80c00417 	ldw	r3,16(r16)
  8071bc:	20800214 	ori	r2,r4,8
  8071c0:	8080030d 	sth	r2,12(r16)
  8071c4:	183feb1e 	bne	r3,zero,807174 <__alt_data_end+0xff807174>
  8071c8:	1100a00c 	andi	r4,r2,640
  8071cc:	01408004 	movi	r5,512
  8071d0:	217fe826 	beq	r4,r5,807174 <__alt_data_end+0xff807174>
  8071d4:	800b883a 	mov	r5,r16
  8071d8:	8809883a 	mov	r4,r17
  8071dc:	08023fc0 	call	8023fc <__smakebuf_r>
  8071e0:	8080030b 	ldhu	r2,12(r16)
  8071e4:	80c00417 	ldw	r3,16(r16)
  8071e8:	003fe206 	br	807174 <__alt_data_end+0xff807174>
  8071ec:	80800517 	ldw	r2,20(r16)
  8071f0:	80000215 	stw	zero,8(r16)
  8071f4:	0085c83a 	sub	r2,zero,r2
  8071f8:	80800615 	stw	r2,24(r16)
  8071fc:	183fe41e 	bne	r3,zero,807190 <__alt_data_end+0xff807190>
  807200:	80c0030b 	ldhu	r3,12(r16)
  807204:	0005883a 	mov	r2,zero
  807208:	1900200c 	andi	r4,r3,128
  80720c:	203fe126 	beq	r4,zero,807194 <__alt_data_end+0xff807194>
  807210:	18c01014 	ori	r3,r3,64
  807214:	80c0030d 	sth	r3,12(r16)
  807218:	00bfffc4 	movi	r2,-1
  80721c:	003fdd06 	br	807194 <__alt_data_end+0xff807194>
  807220:	08015c40 	call	8015c4 <__sinit>
  807224:	003fcd06 	br	80715c <__alt_data_end+0xff80715c>
  807228:	0005883a 	mov	r2,zero
  80722c:	003fd606 	br	807188 <__alt_data_end+0xff807188>
  807230:	81400c17 	ldw	r5,48(r16)
  807234:	28000626 	beq	r5,zero,807250 <__swsetup_r+0x124>
  807238:	80801004 	addi	r2,r16,64
  80723c:	28800326 	beq	r5,r2,80724c <__swsetup_r+0x120>
  807240:	8809883a 	mov	r4,r17
  807244:	08018900 	call	801890 <_free_r>
  807248:	8100030b 	ldhu	r4,12(r16)
  80724c:	80000c15 	stw	zero,48(r16)
  807250:	80c00417 	ldw	r3,16(r16)
  807254:	00bff6c4 	movi	r2,-37
  807258:	1108703a 	and	r4,r2,r4
  80725c:	80000115 	stw	zero,4(r16)
  807260:	80c00015 	stw	r3,0(r16)
  807264:	003fd506 	br	8071bc <__alt_data_end+0xff8071bc>
  807268:	00800244 	movi	r2,9
  80726c:	88800015 	stw	r2,0(r17)
  807270:	20801014 	ori	r2,r4,64
  807274:	8080030d 	sth	r2,12(r16)
  807278:	00bfffc4 	movi	r2,-1
  80727c:	003fc506 	br	807194 <__alt_data_end+0xff807194>

00807280 <_close_r>:
  807280:	defffd04 	addi	sp,sp,-12
  807284:	dc000015 	stw	r16,0(sp)
  807288:	040020b4 	movhi	r16,130
  80728c:	dc400115 	stw	r17,4(sp)
  807290:	8401f004 	addi	r16,r16,1984
  807294:	2023883a 	mov	r17,r4
  807298:	2809883a 	mov	r4,r5
  80729c:	dfc00215 	stw	ra,8(sp)
  8072a0:	80000015 	stw	zero,0(r16)
  8072a4:	081808c0 	call	81808c <close>
  8072a8:	00ffffc4 	movi	r3,-1
  8072ac:	10c00526 	beq	r2,r3,8072c4 <_close_r+0x44>
  8072b0:	dfc00217 	ldw	ra,8(sp)
  8072b4:	dc400117 	ldw	r17,4(sp)
  8072b8:	dc000017 	ldw	r16,0(sp)
  8072bc:	dec00304 	addi	sp,sp,12
  8072c0:	f800283a 	ret
  8072c4:	80c00017 	ldw	r3,0(r16)
  8072c8:	183ff926 	beq	r3,zero,8072b0 <__alt_data_end+0xff8072b0>
  8072cc:	88c00015 	stw	r3,0(r17)
  8072d0:	003ff706 	br	8072b0 <__alt_data_end+0xff8072b0>

008072d4 <quorem>:
  8072d4:	defff704 	addi	sp,sp,-36
  8072d8:	dc800215 	stw	r18,8(sp)
  8072dc:	20800417 	ldw	r2,16(r4)
  8072e0:	2c800417 	ldw	r18,16(r5)
  8072e4:	dfc00815 	stw	ra,32(sp)
  8072e8:	ddc00715 	stw	r23,28(sp)
  8072ec:	dd800615 	stw	r22,24(sp)
  8072f0:	dd400515 	stw	r21,20(sp)
  8072f4:	dd000415 	stw	r20,16(sp)
  8072f8:	dcc00315 	stw	r19,12(sp)
  8072fc:	dc400115 	stw	r17,4(sp)
  807300:	dc000015 	stw	r16,0(sp)
  807304:	14807116 	blt	r2,r18,8074cc <quorem+0x1f8>
  807308:	94bfffc4 	addi	r18,r18,-1
  80730c:	94ad883a 	add	r22,r18,r18
  807310:	b5ad883a 	add	r22,r22,r22
  807314:	2c400504 	addi	r17,r5,20
  807318:	8da9883a 	add	r20,r17,r22
  80731c:	25400504 	addi	r21,r4,20
  807320:	282f883a 	mov	r23,r5
  807324:	adad883a 	add	r22,r21,r22
  807328:	a1400017 	ldw	r5,0(r20)
  80732c:	2021883a 	mov	r16,r4
  807330:	b1000017 	ldw	r4,0(r22)
  807334:	29400044 	addi	r5,r5,1
  807338:	08155880 	call	815588 <__udivsi3>
  80733c:	1027883a 	mov	r19,r2
  807340:	10002c26 	beq	r2,zero,8073f4 <quorem+0x120>
  807344:	a813883a 	mov	r9,r21
  807348:	880b883a 	mov	r5,r17
  80734c:	0009883a 	mov	r4,zero
  807350:	000d883a 	mov	r6,zero
  807354:	2a000017 	ldw	r8,0(r5)
  807358:	49c00017 	ldw	r7,0(r9)
  80735c:	29400104 	addi	r5,r5,4
  807360:	40bfffcc 	andi	r2,r8,65535
  807364:	14c5383a 	mul	r2,r2,r19
  807368:	4010d43a 	srli	r8,r8,16
  80736c:	38ffffcc 	andi	r3,r7,65535
  807370:	1105883a 	add	r2,r2,r4
  807374:	1008d43a 	srli	r4,r2,16
  807378:	44d1383a 	mul	r8,r8,r19
  80737c:	198d883a 	add	r6,r3,r6
  807380:	10ffffcc 	andi	r3,r2,65535
  807384:	30c7c83a 	sub	r3,r6,r3
  807388:	380ed43a 	srli	r7,r7,16
  80738c:	4105883a 	add	r2,r8,r4
  807390:	180dd43a 	srai	r6,r3,16
  807394:	113fffcc 	andi	r4,r2,65535
  807398:	390fc83a 	sub	r7,r7,r4
  80739c:	398d883a 	add	r6,r7,r6
  8073a0:	300e943a 	slli	r7,r6,16
  8073a4:	18ffffcc 	andi	r3,r3,65535
  8073a8:	1008d43a 	srli	r4,r2,16
  8073ac:	38ceb03a 	or	r7,r7,r3
  8073b0:	49c00015 	stw	r7,0(r9)
  8073b4:	300dd43a 	srai	r6,r6,16
  8073b8:	4a400104 	addi	r9,r9,4
  8073bc:	a17fe52e 	bgeu	r20,r5,807354 <__alt_data_end+0xff807354>
  8073c0:	b0800017 	ldw	r2,0(r22)
  8073c4:	10000b1e 	bne	r2,zero,8073f4 <quorem+0x120>
  8073c8:	b0bfff04 	addi	r2,r22,-4
  8073cc:	a880082e 	bgeu	r21,r2,8073f0 <quorem+0x11c>
  8073d0:	b0ffff17 	ldw	r3,-4(r22)
  8073d4:	18000326 	beq	r3,zero,8073e4 <quorem+0x110>
  8073d8:	00000506 	br	8073f0 <quorem+0x11c>
  8073dc:	10c00017 	ldw	r3,0(r2)
  8073e0:	1800031e 	bne	r3,zero,8073f0 <quorem+0x11c>
  8073e4:	10bfff04 	addi	r2,r2,-4
  8073e8:	94bfffc4 	addi	r18,r18,-1
  8073ec:	a8bffb36 	bltu	r21,r2,8073dc <__alt_data_end+0xff8073dc>
  8073f0:	84800415 	stw	r18,16(r16)
  8073f4:	b80b883a 	mov	r5,r23
  8073f8:	8009883a 	mov	r4,r16
  8073fc:	080a0f80 	call	80a0f8 <__mcmp>
  807400:	10002616 	blt	r2,zero,80749c <quorem+0x1c8>
  807404:	9cc00044 	addi	r19,r19,1
  807408:	a805883a 	mov	r2,r21
  80740c:	000b883a 	mov	r5,zero
  807410:	11000017 	ldw	r4,0(r2)
  807414:	89800017 	ldw	r6,0(r17)
  807418:	10800104 	addi	r2,r2,4
  80741c:	20ffffcc 	andi	r3,r4,65535
  807420:	194b883a 	add	r5,r3,r5
  807424:	30ffffcc 	andi	r3,r6,65535
  807428:	28c7c83a 	sub	r3,r5,r3
  80742c:	300cd43a 	srli	r6,r6,16
  807430:	2008d43a 	srli	r4,r4,16
  807434:	180bd43a 	srai	r5,r3,16
  807438:	18ffffcc 	andi	r3,r3,65535
  80743c:	2189c83a 	sub	r4,r4,r6
  807440:	2149883a 	add	r4,r4,r5
  807444:	200c943a 	slli	r6,r4,16
  807448:	8c400104 	addi	r17,r17,4
  80744c:	200bd43a 	srai	r5,r4,16
  807450:	30c6b03a 	or	r3,r6,r3
  807454:	10ffff15 	stw	r3,-4(r2)
  807458:	a47fed2e 	bgeu	r20,r17,807410 <__alt_data_end+0xff807410>
  80745c:	9485883a 	add	r2,r18,r18
  807460:	1085883a 	add	r2,r2,r2
  807464:	a887883a 	add	r3,r21,r2
  807468:	18800017 	ldw	r2,0(r3)
  80746c:	10000b1e 	bne	r2,zero,80749c <quorem+0x1c8>
  807470:	18bfff04 	addi	r2,r3,-4
  807474:	a880082e 	bgeu	r21,r2,807498 <quorem+0x1c4>
  807478:	18ffff17 	ldw	r3,-4(r3)
  80747c:	18000326 	beq	r3,zero,80748c <quorem+0x1b8>
  807480:	00000506 	br	807498 <quorem+0x1c4>
  807484:	10c00017 	ldw	r3,0(r2)
  807488:	1800031e 	bne	r3,zero,807498 <quorem+0x1c4>
  80748c:	10bfff04 	addi	r2,r2,-4
  807490:	94bfffc4 	addi	r18,r18,-1
  807494:	a8bffb36 	bltu	r21,r2,807484 <__alt_data_end+0xff807484>
  807498:	84800415 	stw	r18,16(r16)
  80749c:	9805883a 	mov	r2,r19
  8074a0:	dfc00817 	ldw	ra,32(sp)
  8074a4:	ddc00717 	ldw	r23,28(sp)
  8074a8:	dd800617 	ldw	r22,24(sp)
  8074ac:	dd400517 	ldw	r21,20(sp)
  8074b0:	dd000417 	ldw	r20,16(sp)
  8074b4:	dcc00317 	ldw	r19,12(sp)
  8074b8:	dc800217 	ldw	r18,8(sp)
  8074bc:	dc400117 	ldw	r17,4(sp)
  8074c0:	dc000017 	ldw	r16,0(sp)
  8074c4:	dec00904 	addi	sp,sp,36
  8074c8:	f800283a 	ret
  8074cc:	0005883a 	mov	r2,zero
  8074d0:	003ff306 	br	8074a0 <__alt_data_end+0xff8074a0>

008074d4 <_dtoa_r>:
  8074d4:	20801017 	ldw	r2,64(r4)
  8074d8:	deffde04 	addi	sp,sp,-136
  8074dc:	df002015 	stw	fp,128(sp)
  8074e0:	dcc01b15 	stw	r19,108(sp)
  8074e4:	dc801a15 	stw	r18,104(sp)
  8074e8:	dc401915 	stw	r17,100(sp)
  8074ec:	dc001815 	stw	r16,96(sp)
  8074f0:	dfc02115 	stw	ra,132(sp)
  8074f4:	ddc01f15 	stw	r23,124(sp)
  8074f8:	dd801e15 	stw	r22,120(sp)
  8074fc:	dd401d15 	stw	r21,116(sp)
  807500:	dd001c15 	stw	r20,112(sp)
  807504:	d9c00315 	stw	r7,12(sp)
  807508:	2039883a 	mov	fp,r4
  80750c:	3023883a 	mov	r17,r6
  807510:	2825883a 	mov	r18,r5
  807514:	dc002417 	ldw	r16,144(sp)
  807518:	3027883a 	mov	r19,r6
  80751c:	10000826 	beq	r2,zero,807540 <_dtoa_r+0x6c>
  807520:	21801117 	ldw	r6,68(r4)
  807524:	00c00044 	movi	r3,1
  807528:	100b883a 	mov	r5,r2
  80752c:	1986983a 	sll	r3,r3,r6
  807530:	11800115 	stw	r6,4(r2)
  807534:	10c00215 	stw	r3,8(r2)
  807538:	08098d80 	call	8098d8 <_Bfree>
  80753c:	e0001015 	stw	zero,64(fp)
  807540:	88002e16 	blt	r17,zero,8075fc <_dtoa_r+0x128>
  807544:	80000015 	stw	zero,0(r16)
  807548:	889ffc2c 	andhi	r2,r17,32752
  80754c:	00dffc34 	movhi	r3,32752
  807550:	10c01c26 	beq	r2,r3,8075c4 <_dtoa_r+0xf0>
  807554:	000d883a 	mov	r6,zero
  807558:	000f883a 	mov	r7,zero
  80755c:	9009883a 	mov	r4,r18
  807560:	980b883a 	mov	r5,r19
  807564:	08169d40 	call	8169d4 <__eqdf2>
  807568:	10002b1e 	bne	r2,zero,807618 <_dtoa_r+0x144>
  80756c:	d9c02317 	ldw	r7,140(sp)
  807570:	00800044 	movi	r2,1
  807574:	38800015 	stw	r2,0(r7)
  807578:	d8802517 	ldw	r2,148(sp)
  80757c:	10019e26 	beq	r2,zero,807bf8 <_dtoa_r+0x724>
  807580:	d8c02517 	ldw	r3,148(sp)
  807584:	008020b4 	movhi	r2,130
  807588:	10b17444 	addi	r2,r2,-14895
  80758c:	18800015 	stw	r2,0(r3)
  807590:	10bfffc4 	addi	r2,r2,-1
  807594:	dfc02117 	ldw	ra,132(sp)
  807598:	df002017 	ldw	fp,128(sp)
  80759c:	ddc01f17 	ldw	r23,124(sp)
  8075a0:	dd801e17 	ldw	r22,120(sp)
  8075a4:	dd401d17 	ldw	r21,116(sp)
  8075a8:	dd001c17 	ldw	r20,112(sp)
  8075ac:	dcc01b17 	ldw	r19,108(sp)
  8075b0:	dc801a17 	ldw	r18,104(sp)
  8075b4:	dc401917 	ldw	r17,100(sp)
  8075b8:	dc001817 	ldw	r16,96(sp)
  8075bc:	dec02204 	addi	sp,sp,136
  8075c0:	f800283a 	ret
  8075c4:	d8c02317 	ldw	r3,140(sp)
  8075c8:	0089c3c4 	movi	r2,9999
  8075cc:	18800015 	stw	r2,0(r3)
  8075d0:	90017726 	beq	r18,zero,807bb0 <_dtoa_r+0x6dc>
  8075d4:	008020b4 	movhi	r2,130
  8075d8:	10b22004 	addi	r2,r2,-14208
  8075dc:	d9002517 	ldw	r4,148(sp)
  8075e0:	203fec26 	beq	r4,zero,807594 <__alt_data_end+0xff807594>
  8075e4:	10c000c7 	ldb	r3,3(r2)
  8075e8:	1801781e 	bne	r3,zero,807bcc <_dtoa_r+0x6f8>
  8075ec:	10c000c4 	addi	r3,r2,3
  8075f0:	d9802517 	ldw	r6,148(sp)
  8075f4:	30c00015 	stw	r3,0(r6)
  8075f8:	003fe606 	br	807594 <__alt_data_end+0xff807594>
  8075fc:	04e00034 	movhi	r19,32768
  807600:	9cffffc4 	addi	r19,r19,-1
  807604:	00800044 	movi	r2,1
  807608:	8ce6703a 	and	r19,r17,r19
  80760c:	80800015 	stw	r2,0(r16)
  807610:	9823883a 	mov	r17,r19
  807614:	003fcc06 	br	807548 <__alt_data_end+0xff807548>
  807618:	d8800204 	addi	r2,sp,8
  80761c:	d8800015 	stw	r2,0(sp)
  807620:	d9c00104 	addi	r7,sp,4
  807624:	900b883a 	mov	r5,r18
  807628:	980d883a 	mov	r6,r19
  80762c:	e009883a 	mov	r4,fp
  807630:	8820d53a 	srli	r16,r17,20
  807634:	080a4c40 	call	80a4c4 <__d2b>
  807638:	d8800915 	stw	r2,36(sp)
  80763c:	8001651e 	bne	r16,zero,807bd4 <_dtoa_r+0x700>
  807640:	dd800217 	ldw	r22,8(sp)
  807644:	dc000117 	ldw	r16,4(sp)
  807648:	00800804 	movi	r2,32
  80764c:	b421883a 	add	r16,r22,r16
  807650:	80c10c84 	addi	r3,r16,1074
  807654:	10c2d10e 	bge	r2,r3,80819c <_dtoa_r+0xcc8>
  807658:	00801004 	movi	r2,64
  80765c:	81010484 	addi	r4,r16,1042
  807660:	10c7c83a 	sub	r3,r2,r3
  807664:	9108d83a 	srl	r4,r18,r4
  807668:	88e2983a 	sll	r17,r17,r3
  80766c:	2448b03a 	or	r4,r4,r17
  807670:	0817d9c0 	call	817d9c <__floatunsidf>
  807674:	017f8434 	movhi	r5,65040
  807678:	01800044 	movi	r6,1
  80767c:	1009883a 	mov	r4,r2
  807680:	194b883a 	add	r5,r3,r5
  807684:	843fffc4 	addi	r16,r16,-1
  807688:	d9801115 	stw	r6,68(sp)
  80768c:	000d883a 	mov	r6,zero
  807690:	01cffe34 	movhi	r7,16376
  807694:	08173440 	call	817344 <__subdf3>
  807698:	0198dbf4 	movhi	r6,25455
  80769c:	01cff4f4 	movhi	r7,16339
  8076a0:	3190d844 	addi	r6,r6,17249
  8076a4:	39e1e9c4 	addi	r7,r7,-30809
  8076a8:	1009883a 	mov	r4,r2
  8076ac:	180b883a 	mov	r5,r3
  8076b0:	0816c2c0 	call	816c2c <__muldf3>
  8076b4:	01a2d874 	movhi	r6,35681
  8076b8:	01cff1f4 	movhi	r7,16327
  8076bc:	31b22cc4 	addi	r6,r6,-14157
  8076c0:	39e28a04 	addi	r7,r7,-30168
  8076c4:	180b883a 	mov	r5,r3
  8076c8:	1009883a 	mov	r4,r2
  8076cc:	08158400 	call	815840 <__adddf3>
  8076d0:	8009883a 	mov	r4,r16
  8076d4:	1029883a 	mov	r20,r2
  8076d8:	1823883a 	mov	r17,r3
  8076dc:	0817cc00 	call	817cc0 <__floatsidf>
  8076e0:	019427f4 	movhi	r6,20639
  8076e4:	01cff4f4 	movhi	r7,16339
  8076e8:	319e7ec4 	addi	r6,r6,31227
  8076ec:	39d104c4 	addi	r7,r7,17427
  8076f0:	1009883a 	mov	r4,r2
  8076f4:	180b883a 	mov	r5,r3
  8076f8:	0816c2c0 	call	816c2c <__muldf3>
  8076fc:	100d883a 	mov	r6,r2
  807700:	180f883a 	mov	r7,r3
  807704:	a009883a 	mov	r4,r20
  807708:	880b883a 	mov	r5,r17
  80770c:	08158400 	call	815840 <__adddf3>
  807710:	1009883a 	mov	r4,r2
  807714:	180b883a 	mov	r5,r3
  807718:	1029883a 	mov	r20,r2
  80771c:	1823883a 	mov	r17,r3
  807720:	0817c400 	call	817c40 <__fixdfsi>
  807724:	000d883a 	mov	r6,zero
  807728:	000f883a 	mov	r7,zero
  80772c:	a009883a 	mov	r4,r20
  807730:	880b883a 	mov	r5,r17
  807734:	d8800515 	stw	r2,20(sp)
  807738:	0816b380 	call	816b38 <__ledf2>
  80773c:	10028716 	blt	r2,zero,80815c <_dtoa_r+0xc88>
  807740:	d8c00517 	ldw	r3,20(sp)
  807744:	00800584 	movi	r2,22
  807748:	10c27536 	bltu	r2,r3,808120 <_dtoa_r+0xc4c>
  80774c:	180490fa 	slli	r2,r3,3
  807750:	00c020b4 	movhi	r3,130
  807754:	18f23b04 	addi	r3,r3,-14100
  807758:	1885883a 	add	r2,r3,r2
  80775c:	11000017 	ldw	r4,0(r2)
  807760:	11400117 	ldw	r5,4(r2)
  807764:	900d883a 	mov	r6,r18
  807768:	980f883a 	mov	r7,r19
  80776c:	0816a5c0 	call	816a5c <__gedf2>
  807770:	00828d0e 	bge	zero,r2,8081a8 <_dtoa_r+0xcd4>
  807774:	d9000517 	ldw	r4,20(sp)
  807778:	d8000e15 	stw	zero,56(sp)
  80777c:	213fffc4 	addi	r4,r4,-1
  807780:	d9000515 	stw	r4,20(sp)
  807784:	b42dc83a 	sub	r22,r22,r16
  807788:	b5bfffc4 	addi	r22,r22,-1
  80778c:	b0026f16 	blt	r22,zero,80814c <_dtoa_r+0xc78>
  807790:	d8000815 	stw	zero,32(sp)
  807794:	d9c00517 	ldw	r7,20(sp)
  807798:	38026416 	blt	r7,zero,80812c <_dtoa_r+0xc58>
  80779c:	b1ed883a 	add	r22,r22,r7
  8077a0:	d9c00d15 	stw	r7,52(sp)
  8077a4:	d8000a15 	stw	zero,40(sp)
  8077a8:	d9800317 	ldw	r6,12(sp)
  8077ac:	00800244 	movi	r2,9
  8077b0:	11811436 	bltu	r2,r6,807c04 <_dtoa_r+0x730>
  8077b4:	00800144 	movi	r2,5
  8077b8:	1184e10e 	bge	r2,r6,808b40 <_dtoa_r+0x166c>
  8077bc:	31bfff04 	addi	r6,r6,-4
  8077c0:	d9800315 	stw	r6,12(sp)
  8077c4:	0023883a 	mov	r17,zero
  8077c8:	d9800317 	ldw	r6,12(sp)
  8077cc:	008000c4 	movi	r2,3
  8077d0:	30836726 	beq	r6,r2,808570 <_dtoa_r+0x109c>
  8077d4:	1183410e 	bge	r2,r6,8084dc <_dtoa_r+0x1008>
  8077d8:	d9c00317 	ldw	r7,12(sp)
  8077dc:	00800104 	movi	r2,4
  8077e0:	38827c26 	beq	r7,r2,8081d4 <_dtoa_r+0xd00>
  8077e4:	00800144 	movi	r2,5
  8077e8:	3884c41e 	bne	r7,r2,808afc <_dtoa_r+0x1628>
  8077ec:	00800044 	movi	r2,1
  8077f0:	d8800b15 	stw	r2,44(sp)
  8077f4:	d8c00517 	ldw	r3,20(sp)
  8077f8:	d9002217 	ldw	r4,136(sp)
  8077fc:	1907883a 	add	r3,r3,r4
  807800:	19800044 	addi	r6,r3,1
  807804:	d8c00c15 	stw	r3,48(sp)
  807808:	d9800615 	stw	r6,24(sp)
  80780c:	0183a40e 	bge	zero,r6,8086a0 <_dtoa_r+0x11cc>
  807810:	d9800617 	ldw	r6,24(sp)
  807814:	3021883a 	mov	r16,r6
  807818:	e0001115 	stw	zero,68(fp)
  80781c:	008005c4 	movi	r2,23
  807820:	1184c92e 	bgeu	r2,r6,808b48 <_dtoa_r+0x1674>
  807824:	00c00044 	movi	r3,1
  807828:	00800104 	movi	r2,4
  80782c:	1085883a 	add	r2,r2,r2
  807830:	11000504 	addi	r4,r2,20
  807834:	180b883a 	mov	r5,r3
  807838:	18c00044 	addi	r3,r3,1
  80783c:	313ffb2e 	bgeu	r6,r4,80782c <__alt_data_end+0xff80782c>
  807840:	e1401115 	stw	r5,68(fp)
  807844:	e009883a 	mov	r4,fp
  807848:	08098300 	call	809830 <_Balloc>
  80784c:	d8800715 	stw	r2,28(sp)
  807850:	e0801015 	stw	r2,64(fp)
  807854:	00800384 	movi	r2,14
  807858:	1400f736 	bltu	r2,r16,807c38 <_dtoa_r+0x764>
  80785c:	8800f626 	beq	r17,zero,807c38 <_dtoa_r+0x764>
  807860:	d9c00517 	ldw	r7,20(sp)
  807864:	01c39a0e 	bge	zero,r7,8086d0 <_dtoa_r+0x11fc>
  807868:	388003cc 	andi	r2,r7,15
  80786c:	100490fa 	slli	r2,r2,3
  807870:	382bd13a 	srai	r21,r7,4
  807874:	00c020b4 	movhi	r3,130
  807878:	18f23b04 	addi	r3,r3,-14100
  80787c:	1885883a 	add	r2,r3,r2
  807880:	a8c0040c 	andi	r3,r21,16
  807884:	12400017 	ldw	r9,0(r2)
  807888:	12000117 	ldw	r8,4(r2)
  80788c:	18037926 	beq	r3,zero,808674 <_dtoa_r+0x11a0>
  807890:	008020b4 	movhi	r2,130
  807894:	10b23104 	addi	r2,r2,-14140
  807898:	11800817 	ldw	r6,32(r2)
  80789c:	11c00917 	ldw	r7,36(r2)
  8078a0:	9009883a 	mov	r4,r18
  8078a4:	980b883a 	mov	r5,r19
  8078a8:	da001715 	stw	r8,92(sp)
  8078ac:	da401615 	stw	r9,88(sp)
  8078b0:	08160ec0 	call	8160ec <__divdf3>
  8078b4:	da001717 	ldw	r8,92(sp)
  8078b8:	da401617 	ldw	r9,88(sp)
  8078bc:	ad4003cc 	andi	r21,r21,15
  8078c0:	040000c4 	movi	r16,3
  8078c4:	1023883a 	mov	r17,r2
  8078c8:	1829883a 	mov	r20,r3
  8078cc:	a8001126 	beq	r21,zero,807914 <_dtoa_r+0x440>
  8078d0:	05c020b4 	movhi	r23,130
  8078d4:	bdf23104 	addi	r23,r23,-14140
  8078d8:	4805883a 	mov	r2,r9
  8078dc:	4007883a 	mov	r3,r8
  8078e0:	a980004c 	andi	r6,r21,1
  8078e4:	1009883a 	mov	r4,r2
  8078e8:	a82bd07a 	srai	r21,r21,1
  8078ec:	180b883a 	mov	r5,r3
  8078f0:	30000426 	beq	r6,zero,807904 <_dtoa_r+0x430>
  8078f4:	b9800017 	ldw	r6,0(r23)
  8078f8:	b9c00117 	ldw	r7,4(r23)
  8078fc:	84000044 	addi	r16,r16,1
  807900:	0816c2c0 	call	816c2c <__muldf3>
  807904:	bdc00204 	addi	r23,r23,8
  807908:	a83ff51e 	bne	r21,zero,8078e0 <__alt_data_end+0xff8078e0>
  80790c:	1013883a 	mov	r9,r2
  807910:	1811883a 	mov	r8,r3
  807914:	480d883a 	mov	r6,r9
  807918:	400f883a 	mov	r7,r8
  80791c:	8809883a 	mov	r4,r17
  807920:	a00b883a 	mov	r5,r20
  807924:	08160ec0 	call	8160ec <__divdf3>
  807928:	d8800f15 	stw	r2,60(sp)
  80792c:	d8c01015 	stw	r3,64(sp)
  807930:	d8c00e17 	ldw	r3,56(sp)
  807934:	18000626 	beq	r3,zero,807950 <_dtoa_r+0x47c>
  807938:	d9000f17 	ldw	r4,60(sp)
  80793c:	d9401017 	ldw	r5,64(sp)
  807940:	000d883a 	mov	r6,zero
  807944:	01cffc34 	movhi	r7,16368
  807948:	0816b380 	call	816b38 <__ledf2>
  80794c:	10040b16 	blt	r2,zero,80897c <_dtoa_r+0x14a8>
  807950:	8009883a 	mov	r4,r16
  807954:	0817cc00 	call	817cc0 <__floatsidf>
  807958:	d9800f17 	ldw	r6,60(sp)
  80795c:	d9c01017 	ldw	r7,64(sp)
  807960:	1009883a 	mov	r4,r2
  807964:	180b883a 	mov	r5,r3
  807968:	0816c2c0 	call	816c2c <__muldf3>
  80796c:	000d883a 	mov	r6,zero
  807970:	01d00734 	movhi	r7,16412
  807974:	1009883a 	mov	r4,r2
  807978:	180b883a 	mov	r5,r3
  80797c:	08158400 	call	815840 <__adddf3>
  807980:	1021883a 	mov	r16,r2
  807984:	d8800617 	ldw	r2,24(sp)
  807988:	047f3034 	movhi	r17,64704
  80798c:	1c63883a 	add	r17,r3,r17
  807990:	10031826 	beq	r2,zero,8085f4 <_dtoa_r+0x1120>
  807994:	d8c00517 	ldw	r3,20(sp)
  807998:	db000617 	ldw	r12,24(sp)
  80799c:	d8c01315 	stw	r3,76(sp)
  8079a0:	d9000b17 	ldw	r4,44(sp)
  8079a4:	20038f26 	beq	r4,zero,8087e4 <_dtoa_r+0x1310>
  8079a8:	60bfffc4 	addi	r2,r12,-1
  8079ac:	100490fa 	slli	r2,r2,3
  8079b0:	00c020b4 	movhi	r3,130
  8079b4:	18f23b04 	addi	r3,r3,-14100
  8079b8:	1885883a 	add	r2,r3,r2
  8079bc:	11800017 	ldw	r6,0(r2)
  8079c0:	11c00117 	ldw	r7,4(r2)
  8079c4:	d8800717 	ldw	r2,28(sp)
  8079c8:	0009883a 	mov	r4,zero
  8079cc:	014ff834 	movhi	r5,16352
  8079d0:	db001615 	stw	r12,88(sp)
  8079d4:	15c00044 	addi	r23,r2,1
  8079d8:	08160ec0 	call	8160ec <__divdf3>
  8079dc:	800d883a 	mov	r6,r16
  8079e0:	880f883a 	mov	r7,r17
  8079e4:	1009883a 	mov	r4,r2
  8079e8:	180b883a 	mov	r5,r3
  8079ec:	08173440 	call	817344 <__subdf3>
  8079f0:	d9401017 	ldw	r5,64(sp)
  8079f4:	d9000f17 	ldw	r4,60(sp)
  8079f8:	102b883a 	mov	r21,r2
  8079fc:	d8c01215 	stw	r3,72(sp)
  807a00:	0817c400 	call	817c40 <__fixdfsi>
  807a04:	1009883a 	mov	r4,r2
  807a08:	1029883a 	mov	r20,r2
  807a0c:	0817cc00 	call	817cc0 <__floatsidf>
  807a10:	d9000f17 	ldw	r4,60(sp)
  807a14:	d9401017 	ldw	r5,64(sp)
  807a18:	100d883a 	mov	r6,r2
  807a1c:	180f883a 	mov	r7,r3
  807a20:	08173440 	call	817344 <__subdf3>
  807a24:	1823883a 	mov	r17,r3
  807a28:	d8c00717 	ldw	r3,28(sp)
  807a2c:	d9401217 	ldw	r5,72(sp)
  807a30:	a2000c04 	addi	r8,r20,48
  807a34:	1021883a 	mov	r16,r2
  807a38:	1a000005 	stb	r8,0(r3)
  807a3c:	800d883a 	mov	r6,r16
  807a40:	880f883a 	mov	r7,r17
  807a44:	a809883a 	mov	r4,r21
  807a48:	4029883a 	mov	r20,r8
  807a4c:	0816a5c0 	call	816a5c <__gedf2>
  807a50:	00841d16 	blt	zero,r2,808ac8 <_dtoa_r+0x15f4>
  807a54:	800d883a 	mov	r6,r16
  807a58:	880f883a 	mov	r7,r17
  807a5c:	0009883a 	mov	r4,zero
  807a60:	014ffc34 	movhi	r5,16368
  807a64:	08173440 	call	817344 <__subdf3>
  807a68:	d9401217 	ldw	r5,72(sp)
  807a6c:	100d883a 	mov	r6,r2
  807a70:	180f883a 	mov	r7,r3
  807a74:	a809883a 	mov	r4,r21
  807a78:	0816a5c0 	call	816a5c <__gedf2>
  807a7c:	db001617 	ldw	r12,88(sp)
  807a80:	00840e16 	blt	zero,r2,808abc <_dtoa_r+0x15e8>
  807a84:	00800044 	movi	r2,1
  807a88:	13006b0e 	bge	r2,r12,807c38 <_dtoa_r+0x764>
  807a8c:	d9000717 	ldw	r4,28(sp)
  807a90:	dd800f15 	stw	r22,60(sp)
  807a94:	dcc01015 	stw	r19,64(sp)
  807a98:	2319883a 	add	r12,r4,r12
  807a9c:	dcc01217 	ldw	r19,72(sp)
  807aa0:	602d883a 	mov	r22,r12
  807aa4:	dc801215 	stw	r18,72(sp)
  807aa8:	b825883a 	mov	r18,r23
  807aac:	00000906 	br	807ad4 <_dtoa_r+0x600>
  807ab0:	08173440 	call	817344 <__subdf3>
  807ab4:	a80d883a 	mov	r6,r21
  807ab8:	980f883a 	mov	r7,r19
  807abc:	1009883a 	mov	r4,r2
  807ac0:	180b883a 	mov	r5,r3
  807ac4:	0816b380 	call	816b38 <__ledf2>
  807ac8:	1003e816 	blt	r2,zero,808a6c <_dtoa_r+0x1598>
  807acc:	b825883a 	mov	r18,r23
  807ad0:	bd83e926 	beq	r23,r22,808a78 <_dtoa_r+0x15a4>
  807ad4:	a809883a 	mov	r4,r21
  807ad8:	980b883a 	mov	r5,r19
  807adc:	000d883a 	mov	r6,zero
  807ae0:	01d00934 	movhi	r7,16420
  807ae4:	0816c2c0 	call	816c2c <__muldf3>
  807ae8:	000d883a 	mov	r6,zero
  807aec:	01d00934 	movhi	r7,16420
  807af0:	8009883a 	mov	r4,r16
  807af4:	880b883a 	mov	r5,r17
  807af8:	102b883a 	mov	r21,r2
  807afc:	1827883a 	mov	r19,r3
  807b00:	0816c2c0 	call	816c2c <__muldf3>
  807b04:	180b883a 	mov	r5,r3
  807b08:	1009883a 	mov	r4,r2
  807b0c:	1821883a 	mov	r16,r3
  807b10:	1023883a 	mov	r17,r2
  807b14:	0817c400 	call	817c40 <__fixdfsi>
  807b18:	1009883a 	mov	r4,r2
  807b1c:	1029883a 	mov	r20,r2
  807b20:	0817cc00 	call	817cc0 <__floatsidf>
  807b24:	8809883a 	mov	r4,r17
  807b28:	800b883a 	mov	r5,r16
  807b2c:	100d883a 	mov	r6,r2
  807b30:	180f883a 	mov	r7,r3
  807b34:	08173440 	call	817344 <__subdf3>
  807b38:	a5000c04 	addi	r20,r20,48
  807b3c:	a80d883a 	mov	r6,r21
  807b40:	980f883a 	mov	r7,r19
  807b44:	1009883a 	mov	r4,r2
  807b48:	180b883a 	mov	r5,r3
  807b4c:	95000005 	stb	r20,0(r18)
  807b50:	1021883a 	mov	r16,r2
  807b54:	1823883a 	mov	r17,r3
  807b58:	0816b380 	call	816b38 <__ledf2>
  807b5c:	bdc00044 	addi	r23,r23,1
  807b60:	800d883a 	mov	r6,r16
  807b64:	880f883a 	mov	r7,r17
  807b68:	0009883a 	mov	r4,zero
  807b6c:	014ffc34 	movhi	r5,16368
  807b70:	103fcf0e 	bge	r2,zero,807ab0 <__alt_data_end+0xff807ab0>
  807b74:	d8c01317 	ldw	r3,76(sp)
  807b78:	d8c00515 	stw	r3,20(sp)
  807b7c:	d9400917 	ldw	r5,36(sp)
  807b80:	e009883a 	mov	r4,fp
  807b84:	08098d80 	call	8098d8 <_Bfree>
  807b88:	d9000517 	ldw	r4,20(sp)
  807b8c:	d9802317 	ldw	r6,140(sp)
  807b90:	d9c02517 	ldw	r7,148(sp)
  807b94:	b8000005 	stb	zero,0(r23)
  807b98:	20800044 	addi	r2,r4,1
  807b9c:	30800015 	stw	r2,0(r6)
  807ba0:	3802aa26 	beq	r7,zero,80864c <_dtoa_r+0x1178>
  807ba4:	3dc00015 	stw	r23,0(r7)
  807ba8:	d8800717 	ldw	r2,28(sp)
  807bac:	003e7906 	br	807594 <__alt_data_end+0xff807594>
  807bb0:	00800434 	movhi	r2,16
  807bb4:	10bfffc4 	addi	r2,r2,-1
  807bb8:	88a2703a 	and	r17,r17,r2
  807bbc:	883e851e 	bne	r17,zero,8075d4 <__alt_data_end+0xff8075d4>
  807bc0:	008020b4 	movhi	r2,130
  807bc4:	10b21d04 	addi	r2,r2,-14220
  807bc8:	003e8406 	br	8075dc <__alt_data_end+0xff8075dc>
  807bcc:	10c00204 	addi	r3,r2,8
  807bd0:	003e8706 	br	8075f0 <__alt_data_end+0xff8075f0>
  807bd4:	01400434 	movhi	r5,16
  807bd8:	297fffc4 	addi	r5,r5,-1
  807bdc:	994a703a 	and	r5,r19,r5
  807be0:	9009883a 	mov	r4,r18
  807be4:	843f0044 	addi	r16,r16,-1023
  807be8:	294ffc34 	orhi	r5,r5,16368
  807bec:	dd800217 	ldw	r22,8(sp)
  807bf0:	d8001115 	stw	zero,68(sp)
  807bf4:	003ea506 	br	80768c <__alt_data_end+0xff80768c>
  807bf8:	008020b4 	movhi	r2,130
  807bfc:	10b17404 	addi	r2,r2,-14896
  807c00:	003e6406 	br	807594 <__alt_data_end+0xff807594>
  807c04:	e0001115 	stw	zero,68(fp)
  807c08:	000b883a 	mov	r5,zero
  807c0c:	e009883a 	mov	r4,fp
  807c10:	08098300 	call	809830 <_Balloc>
  807c14:	01bfffc4 	movi	r6,-1
  807c18:	01c00044 	movi	r7,1
  807c1c:	d8800715 	stw	r2,28(sp)
  807c20:	d9800c15 	stw	r6,48(sp)
  807c24:	e0801015 	stw	r2,64(fp)
  807c28:	d8000315 	stw	zero,12(sp)
  807c2c:	d9c00b15 	stw	r7,44(sp)
  807c30:	d9800615 	stw	r6,24(sp)
  807c34:	d8002215 	stw	zero,136(sp)
  807c38:	d8800117 	ldw	r2,4(sp)
  807c3c:	10008916 	blt	r2,zero,807e64 <_dtoa_r+0x990>
  807c40:	d9000517 	ldw	r4,20(sp)
  807c44:	00c00384 	movi	r3,14
  807c48:	19008616 	blt	r3,r4,807e64 <_dtoa_r+0x990>
  807c4c:	200490fa 	slli	r2,r4,3
  807c50:	00c020b4 	movhi	r3,130
  807c54:	d9802217 	ldw	r6,136(sp)
  807c58:	18f23b04 	addi	r3,r3,-14100
  807c5c:	1885883a 	add	r2,r3,r2
  807c60:	14000017 	ldw	r16,0(r2)
  807c64:	14400117 	ldw	r17,4(r2)
  807c68:	30016316 	blt	r6,zero,8081f8 <_dtoa_r+0xd24>
  807c6c:	800d883a 	mov	r6,r16
  807c70:	880f883a 	mov	r7,r17
  807c74:	9009883a 	mov	r4,r18
  807c78:	980b883a 	mov	r5,r19
  807c7c:	08160ec0 	call	8160ec <__divdf3>
  807c80:	180b883a 	mov	r5,r3
  807c84:	1009883a 	mov	r4,r2
  807c88:	0817c400 	call	817c40 <__fixdfsi>
  807c8c:	1009883a 	mov	r4,r2
  807c90:	102b883a 	mov	r21,r2
  807c94:	0817cc00 	call	817cc0 <__floatsidf>
  807c98:	800d883a 	mov	r6,r16
  807c9c:	880f883a 	mov	r7,r17
  807ca0:	1009883a 	mov	r4,r2
  807ca4:	180b883a 	mov	r5,r3
  807ca8:	0816c2c0 	call	816c2c <__muldf3>
  807cac:	100d883a 	mov	r6,r2
  807cb0:	180f883a 	mov	r7,r3
  807cb4:	9009883a 	mov	r4,r18
  807cb8:	980b883a 	mov	r5,r19
  807cbc:	08173440 	call	817344 <__subdf3>
  807cc0:	d9c00717 	ldw	r7,28(sp)
  807cc4:	1009883a 	mov	r4,r2
  807cc8:	a8800c04 	addi	r2,r21,48
  807ccc:	38800005 	stb	r2,0(r7)
  807cd0:	3dc00044 	addi	r23,r7,1
  807cd4:	d9c00617 	ldw	r7,24(sp)
  807cd8:	01800044 	movi	r6,1
  807cdc:	180b883a 	mov	r5,r3
  807ce0:	2005883a 	mov	r2,r4
  807ce4:	39803826 	beq	r7,r6,807dc8 <_dtoa_r+0x8f4>
  807ce8:	000d883a 	mov	r6,zero
  807cec:	01d00934 	movhi	r7,16420
  807cf0:	0816c2c0 	call	816c2c <__muldf3>
  807cf4:	000d883a 	mov	r6,zero
  807cf8:	000f883a 	mov	r7,zero
  807cfc:	1009883a 	mov	r4,r2
  807d00:	180b883a 	mov	r5,r3
  807d04:	1025883a 	mov	r18,r2
  807d08:	1827883a 	mov	r19,r3
  807d0c:	08169d40 	call	8169d4 <__eqdf2>
  807d10:	103f9a26 	beq	r2,zero,807b7c <__alt_data_end+0xff807b7c>
  807d14:	d9c00617 	ldw	r7,24(sp)
  807d18:	d8c00717 	ldw	r3,28(sp)
  807d1c:	b829883a 	mov	r20,r23
  807d20:	38bfffc4 	addi	r2,r7,-1
  807d24:	18ad883a 	add	r22,r3,r2
  807d28:	00000a06 	br	807d54 <_dtoa_r+0x880>
  807d2c:	0816c2c0 	call	816c2c <__muldf3>
  807d30:	000d883a 	mov	r6,zero
  807d34:	000f883a 	mov	r7,zero
  807d38:	1009883a 	mov	r4,r2
  807d3c:	180b883a 	mov	r5,r3
  807d40:	1025883a 	mov	r18,r2
  807d44:	1827883a 	mov	r19,r3
  807d48:	b829883a 	mov	r20,r23
  807d4c:	08169d40 	call	8169d4 <__eqdf2>
  807d50:	103f8a26 	beq	r2,zero,807b7c <__alt_data_end+0xff807b7c>
  807d54:	800d883a 	mov	r6,r16
  807d58:	880f883a 	mov	r7,r17
  807d5c:	9009883a 	mov	r4,r18
  807d60:	980b883a 	mov	r5,r19
  807d64:	08160ec0 	call	8160ec <__divdf3>
  807d68:	180b883a 	mov	r5,r3
  807d6c:	1009883a 	mov	r4,r2
  807d70:	0817c400 	call	817c40 <__fixdfsi>
  807d74:	1009883a 	mov	r4,r2
  807d78:	102b883a 	mov	r21,r2
  807d7c:	0817cc00 	call	817cc0 <__floatsidf>
  807d80:	800d883a 	mov	r6,r16
  807d84:	880f883a 	mov	r7,r17
  807d88:	1009883a 	mov	r4,r2
  807d8c:	180b883a 	mov	r5,r3
  807d90:	0816c2c0 	call	816c2c <__muldf3>
  807d94:	100d883a 	mov	r6,r2
  807d98:	180f883a 	mov	r7,r3
  807d9c:	9009883a 	mov	r4,r18
  807da0:	980b883a 	mov	r5,r19
  807da4:	08173440 	call	817344 <__subdf3>
  807da8:	aa000c04 	addi	r8,r21,48
  807dac:	a2000005 	stb	r8,0(r20)
  807db0:	000d883a 	mov	r6,zero
  807db4:	01d00934 	movhi	r7,16420
  807db8:	1009883a 	mov	r4,r2
  807dbc:	180b883a 	mov	r5,r3
  807dc0:	a5c00044 	addi	r23,r20,1
  807dc4:	b53fd91e 	bne	r22,r20,807d2c <__alt_data_end+0xff807d2c>
  807dc8:	100d883a 	mov	r6,r2
  807dcc:	180f883a 	mov	r7,r3
  807dd0:	1009883a 	mov	r4,r2
  807dd4:	180b883a 	mov	r5,r3
  807dd8:	08158400 	call	815840 <__adddf3>
  807ddc:	100d883a 	mov	r6,r2
  807de0:	180f883a 	mov	r7,r3
  807de4:	8009883a 	mov	r4,r16
  807de8:	880b883a 	mov	r5,r17
  807dec:	1027883a 	mov	r19,r2
  807df0:	1825883a 	mov	r18,r3
  807df4:	0816b380 	call	816b38 <__ledf2>
  807df8:	10000816 	blt	r2,zero,807e1c <_dtoa_r+0x948>
  807dfc:	980d883a 	mov	r6,r19
  807e00:	900f883a 	mov	r7,r18
  807e04:	8009883a 	mov	r4,r16
  807e08:	880b883a 	mov	r5,r17
  807e0c:	08169d40 	call	8169d4 <__eqdf2>
  807e10:	103f5a1e 	bne	r2,zero,807b7c <__alt_data_end+0xff807b7c>
  807e14:	ad40004c 	andi	r21,r21,1
  807e18:	a83f5826 	beq	r21,zero,807b7c <__alt_data_end+0xff807b7c>
  807e1c:	bd3fffc3 	ldbu	r20,-1(r23)
  807e20:	b8bfffc4 	addi	r2,r23,-1
  807e24:	1007883a 	mov	r3,r2
  807e28:	01400e44 	movi	r5,57
  807e2c:	d9800717 	ldw	r6,28(sp)
  807e30:	00000506 	br	807e48 <_dtoa_r+0x974>
  807e34:	18ffffc4 	addi	r3,r3,-1
  807e38:	11824726 	beq	r2,r6,808758 <_dtoa_r+0x1284>
  807e3c:	1d000003 	ldbu	r20,0(r3)
  807e40:	102f883a 	mov	r23,r2
  807e44:	10bfffc4 	addi	r2,r2,-1
  807e48:	a1003fcc 	andi	r4,r20,255
  807e4c:	2100201c 	xori	r4,r4,128
  807e50:	213fe004 	addi	r4,r4,-128
  807e54:	217ff726 	beq	r4,r5,807e34 <__alt_data_end+0xff807e34>
  807e58:	a2000044 	addi	r8,r20,1
  807e5c:	12000005 	stb	r8,0(r2)
  807e60:	003f4606 	br	807b7c <__alt_data_end+0xff807b7c>
  807e64:	d9000b17 	ldw	r4,44(sp)
  807e68:	2000c826 	beq	r4,zero,80818c <_dtoa_r+0xcb8>
  807e6c:	d9800317 	ldw	r6,12(sp)
  807e70:	00c00044 	movi	r3,1
  807e74:	1980f90e 	bge	r3,r6,80825c <_dtoa_r+0xd88>
  807e78:	d8800617 	ldw	r2,24(sp)
  807e7c:	d8c00a17 	ldw	r3,40(sp)
  807e80:	157fffc4 	addi	r21,r2,-1
  807e84:	1d41f316 	blt	r3,r21,808654 <_dtoa_r+0x1180>
  807e88:	1d6bc83a 	sub	r21,r3,r21
  807e8c:	d9c00617 	ldw	r7,24(sp)
  807e90:	3802aa16 	blt	r7,zero,80893c <_dtoa_r+0x1468>
  807e94:	dd000817 	ldw	r20,32(sp)
  807e98:	d8800617 	ldw	r2,24(sp)
  807e9c:	d8c00817 	ldw	r3,32(sp)
  807ea0:	01400044 	movi	r5,1
  807ea4:	e009883a 	mov	r4,fp
  807ea8:	1887883a 	add	r3,r3,r2
  807eac:	d8c00815 	stw	r3,32(sp)
  807eb0:	b0ad883a 	add	r22,r22,r2
  807eb4:	0809c3c0 	call	809c3c <__i2b>
  807eb8:	1023883a 	mov	r17,r2
  807ebc:	a0000826 	beq	r20,zero,807ee0 <_dtoa_r+0xa0c>
  807ec0:	0580070e 	bge	zero,r22,807ee0 <_dtoa_r+0xa0c>
  807ec4:	a005883a 	mov	r2,r20
  807ec8:	b500b916 	blt	r22,r20,8081b0 <_dtoa_r+0xcdc>
  807ecc:	d9000817 	ldw	r4,32(sp)
  807ed0:	a0a9c83a 	sub	r20,r20,r2
  807ed4:	b0adc83a 	sub	r22,r22,r2
  807ed8:	2089c83a 	sub	r4,r4,r2
  807edc:	d9000815 	stw	r4,32(sp)
  807ee0:	d9800a17 	ldw	r6,40(sp)
  807ee4:	0181810e 	bge	zero,r6,8084ec <_dtoa_r+0x1018>
  807ee8:	d9c00b17 	ldw	r7,44(sp)
  807eec:	3800b326 	beq	r7,zero,8081bc <_dtoa_r+0xce8>
  807ef0:	a800b226 	beq	r21,zero,8081bc <_dtoa_r+0xce8>
  807ef4:	880b883a 	mov	r5,r17
  807ef8:	a80d883a 	mov	r6,r21
  807efc:	e009883a 	mov	r4,fp
  807f00:	0809e700 	call	809e70 <__pow5mult>
  807f04:	d9800917 	ldw	r6,36(sp)
  807f08:	100b883a 	mov	r5,r2
  807f0c:	e009883a 	mov	r4,fp
  807f10:	1023883a 	mov	r17,r2
  807f14:	0809c780 	call	809c78 <__multiply>
  807f18:	1021883a 	mov	r16,r2
  807f1c:	d8800a17 	ldw	r2,40(sp)
  807f20:	d9400917 	ldw	r5,36(sp)
  807f24:	e009883a 	mov	r4,fp
  807f28:	1545c83a 	sub	r2,r2,r21
  807f2c:	d8800a15 	stw	r2,40(sp)
  807f30:	08098d80 	call	8098d8 <_Bfree>
  807f34:	d8c00a17 	ldw	r3,40(sp)
  807f38:	18009f1e 	bne	r3,zero,8081b8 <_dtoa_r+0xce4>
  807f3c:	05c00044 	movi	r23,1
  807f40:	e009883a 	mov	r4,fp
  807f44:	b80b883a 	mov	r5,r23
  807f48:	0809c3c0 	call	809c3c <__i2b>
  807f4c:	d9000d17 	ldw	r4,52(sp)
  807f50:	102b883a 	mov	r21,r2
  807f54:	2000ce26 	beq	r4,zero,808290 <_dtoa_r+0xdbc>
  807f58:	200d883a 	mov	r6,r4
  807f5c:	100b883a 	mov	r5,r2
  807f60:	e009883a 	mov	r4,fp
  807f64:	0809e700 	call	809e70 <__pow5mult>
  807f68:	d9800317 	ldw	r6,12(sp)
  807f6c:	102b883a 	mov	r21,r2
  807f70:	b981810e 	bge	r23,r6,808578 <_dtoa_r+0x10a4>
  807f74:	0027883a 	mov	r19,zero
  807f78:	a8800417 	ldw	r2,16(r21)
  807f7c:	05c00804 	movi	r23,32
  807f80:	10800104 	addi	r2,r2,4
  807f84:	1085883a 	add	r2,r2,r2
  807f88:	1085883a 	add	r2,r2,r2
  807f8c:	a885883a 	add	r2,r21,r2
  807f90:	11000017 	ldw	r4,0(r2)
  807f94:	0809b240 	call	809b24 <__hi0bits>
  807f98:	b885c83a 	sub	r2,r23,r2
  807f9c:	1585883a 	add	r2,r2,r22
  807fa0:	108007cc 	andi	r2,r2,31
  807fa4:	1000b326 	beq	r2,zero,808274 <_dtoa_r+0xda0>
  807fa8:	00c00804 	movi	r3,32
  807fac:	1887c83a 	sub	r3,r3,r2
  807fb0:	01000104 	movi	r4,4
  807fb4:	20c2cd0e 	bge	r4,r3,808aec <_dtoa_r+0x1618>
  807fb8:	00c00704 	movi	r3,28
  807fbc:	1885c83a 	sub	r2,r3,r2
  807fc0:	d8c00817 	ldw	r3,32(sp)
  807fc4:	a0a9883a 	add	r20,r20,r2
  807fc8:	b0ad883a 	add	r22,r22,r2
  807fcc:	1887883a 	add	r3,r3,r2
  807fd0:	d8c00815 	stw	r3,32(sp)
  807fd4:	d9800817 	ldw	r6,32(sp)
  807fd8:	0180040e 	bge	zero,r6,807fec <_dtoa_r+0xb18>
  807fdc:	800b883a 	mov	r5,r16
  807fe0:	e009883a 	mov	r4,fp
  807fe4:	0809fb00 	call	809fb0 <__lshift>
  807fe8:	1021883a 	mov	r16,r2
  807fec:	0580050e 	bge	zero,r22,808004 <_dtoa_r+0xb30>
  807ff0:	a80b883a 	mov	r5,r21
  807ff4:	b00d883a 	mov	r6,r22
  807ff8:	e009883a 	mov	r4,fp
  807ffc:	0809fb00 	call	809fb0 <__lshift>
  808000:	102b883a 	mov	r21,r2
  808004:	d9c00e17 	ldw	r7,56(sp)
  808008:	3801211e 	bne	r7,zero,808490 <_dtoa_r+0xfbc>
  80800c:	d9800617 	ldw	r6,24(sp)
  808010:	0181380e 	bge	zero,r6,8084f4 <_dtoa_r+0x1020>
  808014:	d8c00b17 	ldw	r3,44(sp)
  808018:	1800ab1e 	bne	r3,zero,8082c8 <_dtoa_r+0xdf4>
  80801c:	dc800717 	ldw	r18,28(sp)
  808020:	dcc00617 	ldw	r19,24(sp)
  808024:	9029883a 	mov	r20,r18
  808028:	00000206 	br	808034 <_dtoa_r+0xb60>
  80802c:	08099000 	call	809900 <__multadd>
  808030:	1021883a 	mov	r16,r2
  808034:	a80b883a 	mov	r5,r21
  808038:	8009883a 	mov	r4,r16
  80803c:	08072d40 	call	8072d4 <quorem>
  808040:	10800c04 	addi	r2,r2,48
  808044:	90800005 	stb	r2,0(r18)
  808048:	94800044 	addi	r18,r18,1
  80804c:	9507c83a 	sub	r3,r18,r20
  808050:	000f883a 	mov	r7,zero
  808054:	01800284 	movi	r6,10
  808058:	800b883a 	mov	r5,r16
  80805c:	e009883a 	mov	r4,fp
  808060:	1cfff216 	blt	r3,r19,80802c <__alt_data_end+0xff80802c>
  808064:	1011883a 	mov	r8,r2
  808068:	d8800617 	ldw	r2,24(sp)
  80806c:	0082370e 	bge	zero,r2,80894c <_dtoa_r+0x1478>
  808070:	d9000717 	ldw	r4,28(sp)
  808074:	0025883a 	mov	r18,zero
  808078:	20af883a 	add	r23,r4,r2
  80807c:	01800044 	movi	r6,1
  808080:	800b883a 	mov	r5,r16
  808084:	e009883a 	mov	r4,fp
  808088:	da001715 	stw	r8,92(sp)
  80808c:	0809fb00 	call	809fb0 <__lshift>
  808090:	a80b883a 	mov	r5,r21
  808094:	1009883a 	mov	r4,r2
  808098:	d8800915 	stw	r2,36(sp)
  80809c:	080a0f80 	call	80a0f8 <__mcmp>
  8080a0:	da001717 	ldw	r8,92(sp)
  8080a4:	0081800e 	bge	zero,r2,8086a8 <_dtoa_r+0x11d4>
  8080a8:	b93fffc3 	ldbu	r4,-1(r23)
  8080ac:	b8bfffc4 	addi	r2,r23,-1
  8080b0:	1007883a 	mov	r3,r2
  8080b4:	01800e44 	movi	r6,57
  8080b8:	d9c00717 	ldw	r7,28(sp)
  8080bc:	00000506 	br	8080d4 <_dtoa_r+0xc00>
  8080c0:	18ffffc4 	addi	r3,r3,-1
  8080c4:	11c12326 	beq	r2,r7,808554 <_dtoa_r+0x1080>
  8080c8:	19000003 	ldbu	r4,0(r3)
  8080cc:	102f883a 	mov	r23,r2
  8080d0:	10bfffc4 	addi	r2,r2,-1
  8080d4:	21403fcc 	andi	r5,r4,255
  8080d8:	2940201c 	xori	r5,r5,128
  8080dc:	297fe004 	addi	r5,r5,-128
  8080e0:	29bff726 	beq	r5,r6,8080c0 <__alt_data_end+0xff8080c0>
  8080e4:	21000044 	addi	r4,r4,1
  8080e8:	11000005 	stb	r4,0(r2)
  8080ec:	a80b883a 	mov	r5,r21
  8080f0:	e009883a 	mov	r4,fp
  8080f4:	08098d80 	call	8098d8 <_Bfree>
  8080f8:	883ea026 	beq	r17,zero,807b7c <__alt_data_end+0xff807b7c>
  8080fc:	90000426 	beq	r18,zero,808110 <_dtoa_r+0xc3c>
  808100:	94400326 	beq	r18,r17,808110 <_dtoa_r+0xc3c>
  808104:	900b883a 	mov	r5,r18
  808108:	e009883a 	mov	r4,fp
  80810c:	08098d80 	call	8098d8 <_Bfree>
  808110:	880b883a 	mov	r5,r17
  808114:	e009883a 	mov	r4,fp
  808118:	08098d80 	call	8098d8 <_Bfree>
  80811c:	003e9706 	br	807b7c <__alt_data_end+0xff807b7c>
  808120:	01800044 	movi	r6,1
  808124:	d9800e15 	stw	r6,56(sp)
  808128:	003d9606 	br	807784 <__alt_data_end+0xff807784>
  80812c:	d8800817 	ldw	r2,32(sp)
  808130:	d8c00517 	ldw	r3,20(sp)
  808134:	d8000d15 	stw	zero,52(sp)
  808138:	10c5c83a 	sub	r2,r2,r3
  80813c:	00c9c83a 	sub	r4,zero,r3
  808140:	d8800815 	stw	r2,32(sp)
  808144:	d9000a15 	stw	r4,40(sp)
  808148:	003d9706 	br	8077a8 <__alt_data_end+0xff8077a8>
  80814c:	05adc83a 	sub	r22,zero,r22
  808150:	dd800815 	stw	r22,32(sp)
  808154:	002d883a 	mov	r22,zero
  808158:	003d8e06 	br	807794 <__alt_data_end+0xff807794>
  80815c:	d9000517 	ldw	r4,20(sp)
  808160:	0817cc00 	call	817cc0 <__floatsidf>
  808164:	100d883a 	mov	r6,r2
  808168:	180f883a 	mov	r7,r3
  80816c:	a009883a 	mov	r4,r20
  808170:	880b883a 	mov	r5,r17
  808174:	08169d40 	call	8169d4 <__eqdf2>
  808178:	103d7126 	beq	r2,zero,807740 <__alt_data_end+0xff807740>
  80817c:	d9c00517 	ldw	r7,20(sp)
  808180:	39ffffc4 	addi	r7,r7,-1
  808184:	d9c00515 	stw	r7,20(sp)
  808188:	003d6d06 	br	807740 <__alt_data_end+0xff807740>
  80818c:	dd400a17 	ldw	r21,40(sp)
  808190:	dd000817 	ldw	r20,32(sp)
  808194:	0023883a 	mov	r17,zero
  808198:	003f4806 	br	807ebc <__alt_data_end+0xff807ebc>
  80819c:	10e3c83a 	sub	r17,r2,r3
  8081a0:	9448983a 	sll	r4,r18,r17
  8081a4:	003d3206 	br	807670 <__alt_data_end+0xff807670>
  8081a8:	d8000e15 	stw	zero,56(sp)
  8081ac:	003d7506 	br	807784 <__alt_data_end+0xff807784>
  8081b0:	b005883a 	mov	r2,r22
  8081b4:	003f4506 	br	807ecc <__alt_data_end+0xff807ecc>
  8081b8:	dc000915 	stw	r16,36(sp)
  8081bc:	d9800a17 	ldw	r6,40(sp)
  8081c0:	d9400917 	ldw	r5,36(sp)
  8081c4:	e009883a 	mov	r4,fp
  8081c8:	0809e700 	call	809e70 <__pow5mult>
  8081cc:	1021883a 	mov	r16,r2
  8081d0:	003f5a06 	br	807f3c <__alt_data_end+0xff807f3c>
  8081d4:	01c00044 	movi	r7,1
  8081d8:	d9c00b15 	stw	r7,44(sp)
  8081dc:	d8802217 	ldw	r2,136(sp)
  8081e0:	0081280e 	bge	zero,r2,808684 <_dtoa_r+0x11b0>
  8081e4:	100d883a 	mov	r6,r2
  8081e8:	1021883a 	mov	r16,r2
  8081ec:	d8800c15 	stw	r2,48(sp)
  8081f0:	d8800615 	stw	r2,24(sp)
  8081f4:	003d8806 	br	807818 <__alt_data_end+0xff807818>
  8081f8:	d8800617 	ldw	r2,24(sp)
  8081fc:	00be9b16 	blt	zero,r2,807c6c <__alt_data_end+0xff807c6c>
  808200:	10010f1e 	bne	r2,zero,808640 <_dtoa_r+0x116c>
  808204:	880b883a 	mov	r5,r17
  808208:	000d883a 	mov	r6,zero
  80820c:	01d00534 	movhi	r7,16404
  808210:	8009883a 	mov	r4,r16
  808214:	0816c2c0 	call	816c2c <__muldf3>
  808218:	900d883a 	mov	r6,r18
  80821c:	980f883a 	mov	r7,r19
  808220:	1009883a 	mov	r4,r2
  808224:	180b883a 	mov	r5,r3
  808228:	0816a5c0 	call	816a5c <__gedf2>
  80822c:	002b883a 	mov	r21,zero
  808230:	0023883a 	mov	r17,zero
  808234:	1000bf16 	blt	r2,zero,808534 <_dtoa_r+0x1060>
  808238:	d9802217 	ldw	r6,136(sp)
  80823c:	ddc00717 	ldw	r23,28(sp)
  808240:	018c303a 	nor	r6,zero,r6
  808244:	d9800515 	stw	r6,20(sp)
  808248:	a80b883a 	mov	r5,r21
  80824c:	e009883a 	mov	r4,fp
  808250:	08098d80 	call	8098d8 <_Bfree>
  808254:	883e4926 	beq	r17,zero,807b7c <__alt_data_end+0xff807b7c>
  808258:	003fad06 	br	808110 <__alt_data_end+0xff808110>
  80825c:	d9c01117 	ldw	r7,68(sp)
  808260:	3801bc26 	beq	r7,zero,808954 <_dtoa_r+0x1480>
  808264:	10810cc4 	addi	r2,r2,1075
  808268:	dd400a17 	ldw	r21,40(sp)
  80826c:	dd000817 	ldw	r20,32(sp)
  808270:	003f0a06 	br	807e9c <__alt_data_end+0xff807e9c>
  808274:	00800704 	movi	r2,28
  808278:	d9000817 	ldw	r4,32(sp)
  80827c:	a0a9883a 	add	r20,r20,r2
  808280:	b0ad883a 	add	r22,r22,r2
  808284:	2089883a 	add	r4,r4,r2
  808288:	d9000815 	stw	r4,32(sp)
  80828c:	003f5106 	br	807fd4 <__alt_data_end+0xff807fd4>
  808290:	d8c00317 	ldw	r3,12(sp)
  808294:	b8c1fc0e 	bge	r23,r3,808a88 <_dtoa_r+0x15b4>
  808298:	0027883a 	mov	r19,zero
  80829c:	b805883a 	mov	r2,r23
  8082a0:	003f3e06 	br	807f9c <__alt_data_end+0xff807f9c>
  8082a4:	880b883a 	mov	r5,r17
  8082a8:	e009883a 	mov	r4,fp
  8082ac:	000f883a 	mov	r7,zero
  8082b0:	01800284 	movi	r6,10
  8082b4:	08099000 	call	809900 <__multadd>
  8082b8:	d9000c17 	ldw	r4,48(sp)
  8082bc:	1023883a 	mov	r17,r2
  8082c0:	0102040e 	bge	zero,r4,808ad4 <_dtoa_r+0x1600>
  8082c4:	d9000615 	stw	r4,24(sp)
  8082c8:	0500050e 	bge	zero,r20,8082e0 <_dtoa_r+0xe0c>
  8082cc:	880b883a 	mov	r5,r17
  8082d0:	a00d883a 	mov	r6,r20
  8082d4:	e009883a 	mov	r4,fp
  8082d8:	0809fb00 	call	809fb0 <__lshift>
  8082dc:	1023883a 	mov	r17,r2
  8082e0:	9801241e 	bne	r19,zero,808774 <_dtoa_r+0x12a0>
  8082e4:	8829883a 	mov	r20,r17
  8082e8:	d9000617 	ldw	r4,24(sp)
  8082ec:	dcc00717 	ldw	r19,28(sp)
  8082f0:	9480004c 	andi	r18,r18,1
  8082f4:	20bfffc4 	addi	r2,r4,-1
  8082f8:	9885883a 	add	r2,r19,r2
  8082fc:	d8800415 	stw	r2,16(sp)
  808300:	dc800615 	stw	r18,24(sp)
  808304:	a80b883a 	mov	r5,r21
  808308:	8009883a 	mov	r4,r16
  80830c:	08072d40 	call	8072d4 <quorem>
  808310:	880b883a 	mov	r5,r17
  808314:	8009883a 	mov	r4,r16
  808318:	102f883a 	mov	r23,r2
  80831c:	080a0f80 	call	80a0f8 <__mcmp>
  808320:	a80b883a 	mov	r5,r21
  808324:	a00d883a 	mov	r6,r20
  808328:	e009883a 	mov	r4,fp
  80832c:	102d883a 	mov	r22,r2
  808330:	080a1580 	call	80a158 <__mdiff>
  808334:	1007883a 	mov	r3,r2
  808338:	10800317 	ldw	r2,12(r2)
  80833c:	bc800c04 	addi	r18,r23,48
  808340:	180b883a 	mov	r5,r3
  808344:	10004e1e 	bne	r2,zero,808480 <_dtoa_r+0xfac>
  808348:	8009883a 	mov	r4,r16
  80834c:	d8c01615 	stw	r3,88(sp)
  808350:	080a0f80 	call	80a0f8 <__mcmp>
  808354:	d8c01617 	ldw	r3,88(sp)
  808358:	e009883a 	mov	r4,fp
  80835c:	d8801615 	stw	r2,88(sp)
  808360:	180b883a 	mov	r5,r3
  808364:	08098d80 	call	8098d8 <_Bfree>
  808368:	d8801617 	ldw	r2,88(sp)
  80836c:	1000041e 	bne	r2,zero,808380 <_dtoa_r+0xeac>
  808370:	d9800317 	ldw	r6,12(sp)
  808374:	3000021e 	bne	r6,zero,808380 <_dtoa_r+0xeac>
  808378:	d8c00617 	ldw	r3,24(sp)
  80837c:	18003726 	beq	r3,zero,80845c <_dtoa_r+0xf88>
  808380:	b0002016 	blt	r22,zero,808404 <_dtoa_r+0xf30>
  808384:	b000041e 	bne	r22,zero,808398 <_dtoa_r+0xec4>
  808388:	d9000317 	ldw	r4,12(sp)
  80838c:	2000021e 	bne	r4,zero,808398 <_dtoa_r+0xec4>
  808390:	d8c00617 	ldw	r3,24(sp)
  808394:	18001b26 	beq	r3,zero,808404 <_dtoa_r+0xf30>
  808398:	00810716 	blt	zero,r2,8087b8 <_dtoa_r+0x12e4>
  80839c:	d8c00417 	ldw	r3,16(sp)
  8083a0:	9d800044 	addi	r22,r19,1
  8083a4:	9c800005 	stb	r18,0(r19)
  8083a8:	b02f883a 	mov	r23,r22
  8083ac:	98c10626 	beq	r19,r3,8087c8 <_dtoa_r+0x12f4>
  8083b0:	800b883a 	mov	r5,r16
  8083b4:	000f883a 	mov	r7,zero
  8083b8:	01800284 	movi	r6,10
  8083bc:	e009883a 	mov	r4,fp
  8083c0:	08099000 	call	809900 <__multadd>
  8083c4:	1021883a 	mov	r16,r2
  8083c8:	000f883a 	mov	r7,zero
  8083cc:	01800284 	movi	r6,10
  8083d0:	880b883a 	mov	r5,r17
  8083d4:	e009883a 	mov	r4,fp
  8083d8:	8d002526 	beq	r17,r20,808470 <_dtoa_r+0xf9c>
  8083dc:	08099000 	call	809900 <__multadd>
  8083e0:	a00b883a 	mov	r5,r20
  8083e4:	000f883a 	mov	r7,zero
  8083e8:	01800284 	movi	r6,10
  8083ec:	e009883a 	mov	r4,fp
  8083f0:	1023883a 	mov	r17,r2
  8083f4:	08099000 	call	809900 <__multadd>
  8083f8:	1029883a 	mov	r20,r2
  8083fc:	b027883a 	mov	r19,r22
  808400:	003fc006 	br	808304 <__alt_data_end+0xff808304>
  808404:	9011883a 	mov	r8,r18
  808408:	00800e0e 	bge	zero,r2,808444 <_dtoa_r+0xf70>
  80840c:	800b883a 	mov	r5,r16
  808410:	01800044 	movi	r6,1
  808414:	e009883a 	mov	r4,fp
  808418:	da001715 	stw	r8,92(sp)
  80841c:	0809fb00 	call	809fb0 <__lshift>
  808420:	a80b883a 	mov	r5,r21
  808424:	1009883a 	mov	r4,r2
  808428:	1021883a 	mov	r16,r2
  80842c:	080a0f80 	call	80a0f8 <__mcmp>
  808430:	da001717 	ldw	r8,92(sp)
  808434:	0081960e 	bge	zero,r2,808a90 <_dtoa_r+0x15bc>
  808438:	00800e44 	movi	r2,57
  80843c:	40817026 	beq	r8,r2,808a00 <_dtoa_r+0x152c>
  808440:	ba000c44 	addi	r8,r23,49
  808444:	8825883a 	mov	r18,r17
  808448:	9dc00044 	addi	r23,r19,1
  80844c:	9a000005 	stb	r8,0(r19)
  808450:	a023883a 	mov	r17,r20
  808454:	dc000915 	stw	r16,36(sp)
  808458:	003f2406 	br	8080ec <__alt_data_end+0xff8080ec>
  80845c:	00800e44 	movi	r2,57
  808460:	9011883a 	mov	r8,r18
  808464:	90816626 	beq	r18,r2,808a00 <_dtoa_r+0x152c>
  808468:	05bff516 	blt	zero,r22,808440 <__alt_data_end+0xff808440>
  80846c:	003ff506 	br	808444 <__alt_data_end+0xff808444>
  808470:	08099000 	call	809900 <__multadd>
  808474:	1023883a 	mov	r17,r2
  808478:	1029883a 	mov	r20,r2
  80847c:	003fdf06 	br	8083fc <__alt_data_end+0xff8083fc>
  808480:	e009883a 	mov	r4,fp
  808484:	08098d80 	call	8098d8 <_Bfree>
  808488:	00800044 	movi	r2,1
  80848c:	003fbc06 	br	808380 <__alt_data_end+0xff808380>
  808490:	a80b883a 	mov	r5,r21
  808494:	8009883a 	mov	r4,r16
  808498:	080a0f80 	call	80a0f8 <__mcmp>
  80849c:	103edb0e 	bge	r2,zero,80800c <__alt_data_end+0xff80800c>
  8084a0:	800b883a 	mov	r5,r16
  8084a4:	000f883a 	mov	r7,zero
  8084a8:	01800284 	movi	r6,10
  8084ac:	e009883a 	mov	r4,fp
  8084b0:	08099000 	call	809900 <__multadd>
  8084b4:	1021883a 	mov	r16,r2
  8084b8:	d8800517 	ldw	r2,20(sp)
  8084bc:	d8c00b17 	ldw	r3,44(sp)
  8084c0:	10bfffc4 	addi	r2,r2,-1
  8084c4:	d8800515 	stw	r2,20(sp)
  8084c8:	183f761e 	bne	r3,zero,8082a4 <__alt_data_end+0xff8082a4>
  8084cc:	d9000c17 	ldw	r4,48(sp)
  8084d0:	0101730e 	bge	zero,r4,808aa0 <_dtoa_r+0x15cc>
  8084d4:	d9000615 	stw	r4,24(sp)
  8084d8:	003ed006 	br	80801c <__alt_data_end+0xff80801c>
  8084dc:	00800084 	movi	r2,2
  8084e0:	3081861e 	bne	r6,r2,808afc <_dtoa_r+0x1628>
  8084e4:	d8000b15 	stw	zero,44(sp)
  8084e8:	003f3c06 	br	8081dc <__alt_data_end+0xff8081dc>
  8084ec:	dc000917 	ldw	r16,36(sp)
  8084f0:	003e9206 	br	807f3c <__alt_data_end+0xff807f3c>
  8084f4:	d9c00317 	ldw	r7,12(sp)
  8084f8:	00800084 	movi	r2,2
  8084fc:	11fec50e 	bge	r2,r7,808014 <__alt_data_end+0xff808014>
  808500:	d9000617 	ldw	r4,24(sp)
  808504:	20013c1e 	bne	r4,zero,8089f8 <_dtoa_r+0x1524>
  808508:	a80b883a 	mov	r5,r21
  80850c:	000f883a 	mov	r7,zero
  808510:	01800144 	movi	r6,5
  808514:	e009883a 	mov	r4,fp
  808518:	08099000 	call	809900 <__multadd>
  80851c:	100b883a 	mov	r5,r2
  808520:	8009883a 	mov	r4,r16
  808524:	102b883a 	mov	r21,r2
  808528:	080a0f80 	call	80a0f8 <__mcmp>
  80852c:	dc000915 	stw	r16,36(sp)
  808530:	00bf410e 	bge	zero,r2,808238 <__alt_data_end+0xff808238>
  808534:	d9c00717 	ldw	r7,28(sp)
  808538:	00800c44 	movi	r2,49
  80853c:	38800005 	stb	r2,0(r7)
  808540:	d8800517 	ldw	r2,20(sp)
  808544:	3dc00044 	addi	r23,r7,1
  808548:	10800044 	addi	r2,r2,1
  80854c:	d8800515 	stw	r2,20(sp)
  808550:	003f3d06 	br	808248 <__alt_data_end+0xff808248>
  808554:	d9800517 	ldw	r6,20(sp)
  808558:	d9c00717 	ldw	r7,28(sp)
  80855c:	00800c44 	movi	r2,49
  808560:	31800044 	addi	r6,r6,1
  808564:	d9800515 	stw	r6,20(sp)
  808568:	38800005 	stb	r2,0(r7)
  80856c:	003edf06 	br	8080ec <__alt_data_end+0xff8080ec>
  808570:	d8000b15 	stw	zero,44(sp)
  808574:	003c9f06 	br	8077f4 <__alt_data_end+0xff8077f4>
  808578:	903e7e1e 	bne	r18,zero,807f74 <__alt_data_end+0xff807f74>
  80857c:	00800434 	movhi	r2,16
  808580:	10bfffc4 	addi	r2,r2,-1
  808584:	9884703a 	and	r2,r19,r2
  808588:	1000ea1e 	bne	r2,zero,808934 <_dtoa_r+0x1460>
  80858c:	9cdffc2c 	andhi	r19,r19,32752
  808590:	9800e826 	beq	r19,zero,808934 <_dtoa_r+0x1460>
  808594:	d9c00817 	ldw	r7,32(sp)
  808598:	b5800044 	addi	r22,r22,1
  80859c:	04c00044 	movi	r19,1
  8085a0:	39c00044 	addi	r7,r7,1
  8085a4:	d9c00815 	stw	r7,32(sp)
  8085a8:	d8800d17 	ldw	r2,52(sp)
  8085ac:	103e721e 	bne	r2,zero,807f78 <__alt_data_end+0xff807f78>
  8085b0:	00800044 	movi	r2,1
  8085b4:	003e7906 	br	807f9c <__alt_data_end+0xff807f9c>
  8085b8:	8009883a 	mov	r4,r16
  8085bc:	0817cc00 	call	817cc0 <__floatsidf>
  8085c0:	d9800f17 	ldw	r6,60(sp)
  8085c4:	d9c01017 	ldw	r7,64(sp)
  8085c8:	1009883a 	mov	r4,r2
  8085cc:	180b883a 	mov	r5,r3
  8085d0:	0816c2c0 	call	816c2c <__muldf3>
  8085d4:	000d883a 	mov	r6,zero
  8085d8:	01d00734 	movhi	r7,16412
  8085dc:	1009883a 	mov	r4,r2
  8085e0:	180b883a 	mov	r5,r3
  8085e4:	08158400 	call	815840 <__adddf3>
  8085e8:	047f3034 	movhi	r17,64704
  8085ec:	1021883a 	mov	r16,r2
  8085f0:	1c63883a 	add	r17,r3,r17
  8085f4:	d9000f17 	ldw	r4,60(sp)
  8085f8:	d9401017 	ldw	r5,64(sp)
  8085fc:	000d883a 	mov	r6,zero
  808600:	01d00534 	movhi	r7,16404
  808604:	08173440 	call	817344 <__subdf3>
  808608:	800d883a 	mov	r6,r16
  80860c:	880f883a 	mov	r7,r17
  808610:	1009883a 	mov	r4,r2
  808614:	180b883a 	mov	r5,r3
  808618:	102b883a 	mov	r21,r2
  80861c:	1829883a 	mov	r20,r3
  808620:	0816a5c0 	call	816a5c <__gedf2>
  808624:	00806c16 	blt	zero,r2,8087d8 <_dtoa_r+0x1304>
  808628:	89e0003c 	xorhi	r7,r17,32768
  80862c:	800d883a 	mov	r6,r16
  808630:	a809883a 	mov	r4,r21
  808634:	a00b883a 	mov	r5,r20
  808638:	0816b380 	call	816b38 <__ledf2>
  80863c:	103d7e0e 	bge	r2,zero,807c38 <__alt_data_end+0xff807c38>
  808640:	002b883a 	mov	r21,zero
  808644:	0023883a 	mov	r17,zero
  808648:	003efb06 	br	808238 <__alt_data_end+0xff808238>
  80864c:	d8800717 	ldw	r2,28(sp)
  808650:	003bd006 	br	807594 <__alt_data_end+0xff807594>
  808654:	d9000a17 	ldw	r4,40(sp)
  808658:	d9800d17 	ldw	r6,52(sp)
  80865c:	dd400a15 	stw	r21,40(sp)
  808660:	a905c83a 	sub	r2,r21,r4
  808664:	308d883a 	add	r6,r6,r2
  808668:	d9800d15 	stw	r6,52(sp)
  80866c:	002b883a 	mov	r21,zero
  808670:	003e0606 	br	807e8c <__alt_data_end+0xff807e8c>
  808674:	9023883a 	mov	r17,r18
  808678:	9829883a 	mov	r20,r19
  80867c:	04000084 	movi	r16,2
  808680:	003c9206 	br	8078cc <__alt_data_end+0xff8078cc>
  808684:	04000044 	movi	r16,1
  808688:	dc000c15 	stw	r16,48(sp)
  80868c:	dc000615 	stw	r16,24(sp)
  808690:	dc002215 	stw	r16,136(sp)
  808694:	e0001115 	stw	zero,68(fp)
  808698:	000b883a 	mov	r5,zero
  80869c:	003c6906 	br	807844 <__alt_data_end+0xff807844>
  8086a0:	3021883a 	mov	r16,r6
  8086a4:	003ffb06 	br	808694 <__alt_data_end+0xff808694>
  8086a8:	1000021e 	bne	r2,zero,8086b4 <_dtoa_r+0x11e0>
  8086ac:	4200004c 	andi	r8,r8,1
  8086b0:	403e7d1e 	bne	r8,zero,8080a8 <__alt_data_end+0xff8080a8>
  8086b4:	01000c04 	movi	r4,48
  8086b8:	00000106 	br	8086c0 <_dtoa_r+0x11ec>
  8086bc:	102f883a 	mov	r23,r2
  8086c0:	b8bfffc4 	addi	r2,r23,-1
  8086c4:	10c00007 	ldb	r3,0(r2)
  8086c8:	193ffc26 	beq	r3,r4,8086bc <__alt_data_end+0xff8086bc>
  8086cc:	003e8706 	br	8080ec <__alt_data_end+0xff8080ec>
  8086d0:	d8800517 	ldw	r2,20(sp)
  8086d4:	00a3c83a 	sub	r17,zero,r2
  8086d8:	8800a426 	beq	r17,zero,80896c <_dtoa_r+0x1498>
  8086dc:	888003cc 	andi	r2,r17,15
  8086e0:	100490fa 	slli	r2,r2,3
  8086e4:	00c020b4 	movhi	r3,130
  8086e8:	18f23b04 	addi	r3,r3,-14100
  8086ec:	1885883a 	add	r2,r3,r2
  8086f0:	11800017 	ldw	r6,0(r2)
  8086f4:	11c00117 	ldw	r7,4(r2)
  8086f8:	9009883a 	mov	r4,r18
  8086fc:	980b883a 	mov	r5,r19
  808700:	8823d13a 	srai	r17,r17,4
  808704:	0816c2c0 	call	816c2c <__muldf3>
  808708:	d8800f15 	stw	r2,60(sp)
  80870c:	d8c01015 	stw	r3,64(sp)
  808710:	8800e826 	beq	r17,zero,808ab4 <_dtoa_r+0x15e0>
  808714:	050020b4 	movhi	r20,130
  808718:	a5323104 	addi	r20,r20,-14140
  80871c:	04000084 	movi	r16,2
  808720:	8980004c 	andi	r6,r17,1
  808724:	1009883a 	mov	r4,r2
  808728:	8823d07a 	srai	r17,r17,1
  80872c:	180b883a 	mov	r5,r3
  808730:	30000426 	beq	r6,zero,808744 <_dtoa_r+0x1270>
  808734:	a1800017 	ldw	r6,0(r20)
  808738:	a1c00117 	ldw	r7,4(r20)
  80873c:	84000044 	addi	r16,r16,1
  808740:	0816c2c0 	call	816c2c <__muldf3>
  808744:	a5000204 	addi	r20,r20,8
  808748:	883ff51e 	bne	r17,zero,808720 <__alt_data_end+0xff808720>
  80874c:	d8800f15 	stw	r2,60(sp)
  808750:	d8c01015 	stw	r3,64(sp)
  808754:	003c7606 	br	807930 <__alt_data_end+0xff807930>
  808758:	00c00c04 	movi	r3,48
  80875c:	10c00005 	stb	r3,0(r2)
  808760:	d8c00517 	ldw	r3,20(sp)
  808764:	bd3fffc3 	ldbu	r20,-1(r23)
  808768:	18c00044 	addi	r3,r3,1
  80876c:	d8c00515 	stw	r3,20(sp)
  808770:	003db906 	br	807e58 <__alt_data_end+0xff807e58>
  808774:	89400117 	ldw	r5,4(r17)
  808778:	e009883a 	mov	r4,fp
  80877c:	08098300 	call	809830 <_Balloc>
  808780:	89800417 	ldw	r6,16(r17)
  808784:	89400304 	addi	r5,r17,12
  808788:	11000304 	addi	r4,r2,12
  80878c:	31800084 	addi	r6,r6,2
  808790:	318d883a 	add	r6,r6,r6
  808794:	318d883a 	add	r6,r6,r6
  808798:	1027883a 	mov	r19,r2
  80879c:	080958c0 	call	80958c <memcpy>
  8087a0:	01800044 	movi	r6,1
  8087a4:	980b883a 	mov	r5,r19
  8087a8:	e009883a 	mov	r4,fp
  8087ac:	0809fb00 	call	809fb0 <__lshift>
  8087b0:	1029883a 	mov	r20,r2
  8087b4:	003ecc06 	br	8082e8 <__alt_data_end+0xff8082e8>
  8087b8:	00800e44 	movi	r2,57
  8087bc:	90809026 	beq	r18,r2,808a00 <_dtoa_r+0x152c>
  8087c0:	92000044 	addi	r8,r18,1
  8087c4:	003f1f06 	br	808444 <__alt_data_end+0xff808444>
  8087c8:	9011883a 	mov	r8,r18
  8087cc:	8825883a 	mov	r18,r17
  8087d0:	a023883a 	mov	r17,r20
  8087d4:	003e2906 	br	80807c <__alt_data_end+0xff80807c>
  8087d8:	002b883a 	mov	r21,zero
  8087dc:	0023883a 	mov	r17,zero
  8087e0:	003f5406 	br	808534 <__alt_data_end+0xff808534>
  8087e4:	61bfffc4 	addi	r6,r12,-1
  8087e8:	300490fa 	slli	r2,r6,3
  8087ec:	00c020b4 	movhi	r3,130
  8087f0:	18f23b04 	addi	r3,r3,-14100
  8087f4:	1885883a 	add	r2,r3,r2
  8087f8:	11000017 	ldw	r4,0(r2)
  8087fc:	11400117 	ldw	r5,4(r2)
  808800:	d8800717 	ldw	r2,28(sp)
  808804:	880f883a 	mov	r7,r17
  808808:	d9801215 	stw	r6,72(sp)
  80880c:	800d883a 	mov	r6,r16
  808810:	db001615 	stw	r12,88(sp)
  808814:	15c00044 	addi	r23,r2,1
  808818:	0816c2c0 	call	816c2c <__muldf3>
  80881c:	d9401017 	ldw	r5,64(sp)
  808820:	d9000f17 	ldw	r4,60(sp)
  808824:	d8c01515 	stw	r3,84(sp)
  808828:	d8801415 	stw	r2,80(sp)
  80882c:	0817c400 	call	817c40 <__fixdfsi>
  808830:	1009883a 	mov	r4,r2
  808834:	1021883a 	mov	r16,r2
  808838:	0817cc00 	call	817cc0 <__floatsidf>
  80883c:	d9000f17 	ldw	r4,60(sp)
  808840:	d9401017 	ldw	r5,64(sp)
  808844:	100d883a 	mov	r6,r2
  808848:	180f883a 	mov	r7,r3
  80884c:	08173440 	call	817344 <__subdf3>
  808850:	1829883a 	mov	r20,r3
  808854:	d8c00717 	ldw	r3,28(sp)
  808858:	84000c04 	addi	r16,r16,48
  80885c:	1023883a 	mov	r17,r2
  808860:	1c000005 	stb	r16,0(r3)
  808864:	db001617 	ldw	r12,88(sp)
  808868:	00800044 	movi	r2,1
  80886c:	60802226 	beq	r12,r2,8088f8 <_dtoa_r+0x1424>
  808870:	d9c00717 	ldw	r7,28(sp)
  808874:	8805883a 	mov	r2,r17
  808878:	b82b883a 	mov	r21,r23
  80887c:	3b19883a 	add	r12,r7,r12
  808880:	6023883a 	mov	r17,r12
  808884:	a007883a 	mov	r3,r20
  808888:	dc800f15 	stw	r18,60(sp)
  80888c:	000d883a 	mov	r6,zero
  808890:	01d00934 	movhi	r7,16420
  808894:	1009883a 	mov	r4,r2
  808898:	180b883a 	mov	r5,r3
  80889c:	0816c2c0 	call	816c2c <__muldf3>
  8088a0:	180b883a 	mov	r5,r3
  8088a4:	1009883a 	mov	r4,r2
  8088a8:	1829883a 	mov	r20,r3
  8088ac:	1025883a 	mov	r18,r2
  8088b0:	0817c400 	call	817c40 <__fixdfsi>
  8088b4:	1009883a 	mov	r4,r2
  8088b8:	1021883a 	mov	r16,r2
  8088bc:	0817cc00 	call	817cc0 <__floatsidf>
  8088c0:	100d883a 	mov	r6,r2
  8088c4:	180f883a 	mov	r7,r3
  8088c8:	9009883a 	mov	r4,r18
  8088cc:	a00b883a 	mov	r5,r20
  8088d0:	84000c04 	addi	r16,r16,48
  8088d4:	08173440 	call	817344 <__subdf3>
  8088d8:	ad400044 	addi	r21,r21,1
  8088dc:	ac3fffc5 	stb	r16,-1(r21)
  8088e0:	ac7fea1e 	bne	r21,r17,80888c <__alt_data_end+0xff80888c>
  8088e4:	1023883a 	mov	r17,r2
  8088e8:	d8801217 	ldw	r2,72(sp)
  8088ec:	dc800f17 	ldw	r18,60(sp)
  8088f0:	1829883a 	mov	r20,r3
  8088f4:	b8af883a 	add	r23,r23,r2
  8088f8:	d9001417 	ldw	r4,80(sp)
  8088fc:	d9401517 	ldw	r5,84(sp)
  808900:	000d883a 	mov	r6,zero
  808904:	01cff834 	movhi	r7,16352
  808908:	08158400 	call	815840 <__adddf3>
  80890c:	880d883a 	mov	r6,r17
  808910:	a00f883a 	mov	r7,r20
  808914:	1009883a 	mov	r4,r2
  808918:	180b883a 	mov	r5,r3
  80891c:	0816b380 	call	816b38 <__ledf2>
  808920:	10003e0e 	bge	r2,zero,808a1c <_dtoa_r+0x1548>
  808924:	d9001317 	ldw	r4,76(sp)
  808928:	bd3fffc3 	ldbu	r20,-1(r23)
  80892c:	d9000515 	stw	r4,20(sp)
  808930:	003d3b06 	br	807e20 <__alt_data_end+0xff807e20>
  808934:	0027883a 	mov	r19,zero
  808938:	003f1b06 	br	8085a8 <__alt_data_end+0xff8085a8>
  80893c:	d8800817 	ldw	r2,32(sp)
  808940:	11e9c83a 	sub	r20,r2,r7
  808944:	0005883a 	mov	r2,zero
  808948:	003d5406 	br	807e9c <__alt_data_end+0xff807e9c>
  80894c:	00800044 	movi	r2,1
  808950:	003dc706 	br	808070 <__alt_data_end+0xff808070>
  808954:	d8c00217 	ldw	r3,8(sp)
  808958:	00800d84 	movi	r2,54
  80895c:	dd400a17 	ldw	r21,40(sp)
  808960:	10c5c83a 	sub	r2,r2,r3
  808964:	dd000817 	ldw	r20,32(sp)
  808968:	003d4c06 	br	807e9c <__alt_data_end+0xff807e9c>
  80896c:	dc800f15 	stw	r18,60(sp)
  808970:	dcc01015 	stw	r19,64(sp)
  808974:	04000084 	movi	r16,2
  808978:	003bed06 	br	807930 <__alt_data_end+0xff807930>
  80897c:	d9000617 	ldw	r4,24(sp)
  808980:	203f0d26 	beq	r4,zero,8085b8 <__alt_data_end+0xff8085b8>
  808984:	d9800c17 	ldw	r6,48(sp)
  808988:	01bcab0e 	bge	zero,r6,807c38 <__alt_data_end+0xff807c38>
  80898c:	d9401017 	ldw	r5,64(sp)
  808990:	d9000f17 	ldw	r4,60(sp)
  808994:	000d883a 	mov	r6,zero
  808998:	01d00934 	movhi	r7,16420
  80899c:	0816c2c0 	call	816c2c <__muldf3>
  8089a0:	81000044 	addi	r4,r16,1
  8089a4:	d8800f15 	stw	r2,60(sp)
  8089a8:	d8c01015 	stw	r3,64(sp)
  8089ac:	0817cc00 	call	817cc0 <__floatsidf>
  8089b0:	d9800f17 	ldw	r6,60(sp)
  8089b4:	d9c01017 	ldw	r7,64(sp)
  8089b8:	1009883a 	mov	r4,r2
  8089bc:	180b883a 	mov	r5,r3
  8089c0:	0816c2c0 	call	816c2c <__muldf3>
  8089c4:	01d00734 	movhi	r7,16412
  8089c8:	000d883a 	mov	r6,zero
  8089cc:	1009883a 	mov	r4,r2
  8089d0:	180b883a 	mov	r5,r3
  8089d4:	08158400 	call	815840 <__adddf3>
  8089d8:	d9c00517 	ldw	r7,20(sp)
  8089dc:	047f3034 	movhi	r17,64704
  8089e0:	1021883a 	mov	r16,r2
  8089e4:	39ffffc4 	addi	r7,r7,-1
  8089e8:	d9c01315 	stw	r7,76(sp)
  8089ec:	1c63883a 	add	r17,r3,r17
  8089f0:	db000c17 	ldw	r12,48(sp)
  8089f4:	003bea06 	br	8079a0 <__alt_data_end+0xff8079a0>
  8089f8:	dc000915 	stw	r16,36(sp)
  8089fc:	003e0e06 	br	808238 <__alt_data_end+0xff808238>
  808a00:	01000e44 	movi	r4,57
  808a04:	8825883a 	mov	r18,r17
  808a08:	9dc00044 	addi	r23,r19,1
  808a0c:	99000005 	stb	r4,0(r19)
  808a10:	a023883a 	mov	r17,r20
  808a14:	dc000915 	stw	r16,36(sp)
  808a18:	003da406 	br	8080ac <__alt_data_end+0xff8080ac>
  808a1c:	d9801417 	ldw	r6,80(sp)
  808a20:	d9c01517 	ldw	r7,84(sp)
  808a24:	0009883a 	mov	r4,zero
  808a28:	014ff834 	movhi	r5,16352
  808a2c:	08173440 	call	817344 <__subdf3>
  808a30:	880d883a 	mov	r6,r17
  808a34:	a00f883a 	mov	r7,r20
  808a38:	1009883a 	mov	r4,r2
  808a3c:	180b883a 	mov	r5,r3
  808a40:	0816a5c0 	call	816a5c <__gedf2>
  808a44:	00bc7c0e 	bge	zero,r2,807c38 <__alt_data_end+0xff807c38>
  808a48:	01000c04 	movi	r4,48
  808a4c:	00000106 	br	808a54 <_dtoa_r+0x1580>
  808a50:	102f883a 	mov	r23,r2
  808a54:	b8bfffc4 	addi	r2,r23,-1
  808a58:	10c00007 	ldb	r3,0(r2)
  808a5c:	193ffc26 	beq	r3,r4,808a50 <__alt_data_end+0xff808a50>
  808a60:	d9801317 	ldw	r6,76(sp)
  808a64:	d9800515 	stw	r6,20(sp)
  808a68:	003c4406 	br	807b7c <__alt_data_end+0xff807b7c>
  808a6c:	d9801317 	ldw	r6,76(sp)
  808a70:	d9800515 	stw	r6,20(sp)
  808a74:	003cea06 	br	807e20 <__alt_data_end+0xff807e20>
  808a78:	dd800f17 	ldw	r22,60(sp)
  808a7c:	dcc01017 	ldw	r19,64(sp)
  808a80:	dc801217 	ldw	r18,72(sp)
  808a84:	003c6c06 	br	807c38 <__alt_data_end+0xff807c38>
  808a88:	903e031e 	bne	r18,zero,808298 <__alt_data_end+0xff808298>
  808a8c:	003ebb06 	br	80857c <__alt_data_end+0xff80857c>
  808a90:	103e6c1e 	bne	r2,zero,808444 <__alt_data_end+0xff808444>
  808a94:	4080004c 	andi	r2,r8,1
  808a98:	103e6a26 	beq	r2,zero,808444 <__alt_data_end+0xff808444>
  808a9c:	003e6606 	br	808438 <__alt_data_end+0xff808438>
  808aa0:	d8c00317 	ldw	r3,12(sp)
  808aa4:	00800084 	movi	r2,2
  808aa8:	10c02916 	blt	r2,r3,808b50 <_dtoa_r+0x167c>
  808aac:	d9000c17 	ldw	r4,48(sp)
  808ab0:	003e8806 	br	8084d4 <__alt_data_end+0xff8084d4>
  808ab4:	04000084 	movi	r16,2
  808ab8:	003b9d06 	br	807930 <__alt_data_end+0xff807930>
  808abc:	d9001317 	ldw	r4,76(sp)
  808ac0:	d9000515 	stw	r4,20(sp)
  808ac4:	003cd606 	br	807e20 <__alt_data_end+0xff807e20>
  808ac8:	d8801317 	ldw	r2,76(sp)
  808acc:	d8800515 	stw	r2,20(sp)
  808ad0:	003c2a06 	br	807b7c <__alt_data_end+0xff807b7c>
  808ad4:	d9800317 	ldw	r6,12(sp)
  808ad8:	00800084 	movi	r2,2
  808adc:	11801516 	blt	r2,r6,808b34 <_dtoa_r+0x1660>
  808ae0:	d9c00c17 	ldw	r7,48(sp)
  808ae4:	d9c00615 	stw	r7,24(sp)
  808ae8:	003df706 	br	8082c8 <__alt_data_end+0xff8082c8>
  808aec:	193d3926 	beq	r3,r4,807fd4 <__alt_data_end+0xff807fd4>
  808af0:	00c00f04 	movi	r3,60
  808af4:	1885c83a 	sub	r2,r3,r2
  808af8:	003ddf06 	br	808278 <__alt_data_end+0xff808278>
  808afc:	e009883a 	mov	r4,fp
  808b00:	e0001115 	stw	zero,68(fp)
  808b04:	000b883a 	mov	r5,zero
  808b08:	08098300 	call	809830 <_Balloc>
  808b0c:	d8800715 	stw	r2,28(sp)
  808b10:	d8c00717 	ldw	r3,28(sp)
  808b14:	00bfffc4 	movi	r2,-1
  808b18:	01000044 	movi	r4,1
  808b1c:	d8800c15 	stw	r2,48(sp)
  808b20:	e0c01015 	stw	r3,64(fp)
  808b24:	d9000b15 	stw	r4,44(sp)
  808b28:	d8800615 	stw	r2,24(sp)
  808b2c:	d8002215 	stw	zero,136(sp)
  808b30:	003c4106 	br	807c38 <__alt_data_end+0xff807c38>
  808b34:	d8c00c17 	ldw	r3,48(sp)
  808b38:	d8c00615 	stw	r3,24(sp)
  808b3c:	003e7006 	br	808500 <__alt_data_end+0xff808500>
  808b40:	04400044 	movi	r17,1
  808b44:	003b2006 	br	8077c8 <__alt_data_end+0xff8077c8>
  808b48:	000b883a 	mov	r5,zero
  808b4c:	003b3d06 	br	807844 <__alt_data_end+0xff807844>
  808b50:	d8800c17 	ldw	r2,48(sp)
  808b54:	d8800615 	stw	r2,24(sp)
  808b58:	003e6906 	br	808500 <__alt_data_end+0xff808500>

00808b5c <__sflags>:
  808b5c:	28800007 	ldb	r2,0(r5)
  808b60:	00c01c84 	movi	r3,114
  808b64:	10c02426 	beq	r2,r3,808bf8 <__sflags+0x9c>
  808b68:	00c01dc4 	movi	r3,119
  808b6c:	10c01e26 	beq	r2,r3,808be8 <__sflags+0x8c>
  808b70:	00c01844 	movi	r3,97
  808b74:	10c00426 	beq	r2,r3,808b88 <__sflags+0x2c>
  808b78:	00800584 	movi	r2,22
  808b7c:	20800015 	stw	r2,0(r4)
  808b80:	0005883a 	mov	r2,zero
  808b84:	f800283a 	ret
  808b88:	02c08204 	movi	r11,520
  808b8c:	01000044 	movi	r4,1
  808b90:	00804204 	movi	r2,264
  808b94:	01c00ac4 	movi	r7,43
  808b98:	02bff8c4 	movi	r10,-29
  808b9c:	027fff04 	movi	r9,-4
  808ba0:	02001e04 	movi	r8,120
  808ba4:	29400044 	addi	r5,r5,1
  808ba8:	28c00007 	ldb	r3,0(r5)
  808bac:	18000626 	beq	r3,zero,808bc8 <__sflags+0x6c>
  808bb0:	19c00826 	beq	r3,r7,808bd4 <__sflags+0x78>
  808bb4:	1a3ffb1e 	bne	r3,r8,808ba4 <__alt_data_end+0xff808ba4>
  808bb8:	29400044 	addi	r5,r5,1
  808bbc:	28c00007 	ldb	r3,0(r5)
  808bc0:	21020014 	ori	r4,r4,2048
  808bc4:	183ffa1e 	bne	r3,zero,808bb0 <__alt_data_end+0xff808bb0>
  808bc8:	22c8b03a 	or	r4,r4,r11
  808bcc:	31000015 	stw	r4,0(r6)
  808bd0:	f800283a 	ret
  808bd4:	1284703a 	and	r2,r2,r10
  808bd8:	2248703a 	and	r4,r4,r9
  808bdc:	10800414 	ori	r2,r2,16
  808be0:	21000094 	ori	r4,r4,2
  808be4:	003fef06 	br	808ba4 <__alt_data_end+0xff808ba4>
  808be8:	02c18004 	movi	r11,1536
  808bec:	01000044 	movi	r4,1
  808bf0:	00800204 	movi	r2,8
  808bf4:	003fe706 	br	808b94 <__alt_data_end+0xff808b94>
  808bf8:	0017883a 	mov	r11,zero
  808bfc:	0009883a 	mov	r4,zero
  808c00:	00800104 	movi	r2,4
  808c04:	003fe306 	br	808b94 <__alt_data_end+0xff808b94>

00808c08 <__sfvwrite_r>:
  808c08:	30800217 	ldw	r2,8(r6)
  808c0c:	10006726 	beq	r2,zero,808dac <__sfvwrite_r+0x1a4>
  808c10:	28c0030b 	ldhu	r3,12(r5)
  808c14:	defff404 	addi	sp,sp,-48
  808c18:	dd400715 	stw	r21,28(sp)
  808c1c:	dd000615 	stw	r20,24(sp)
  808c20:	dc000215 	stw	r16,8(sp)
  808c24:	dfc00b15 	stw	ra,44(sp)
  808c28:	df000a15 	stw	fp,40(sp)
  808c2c:	ddc00915 	stw	r23,36(sp)
  808c30:	dd800815 	stw	r22,32(sp)
  808c34:	dcc00515 	stw	r19,20(sp)
  808c38:	dc800415 	stw	r18,16(sp)
  808c3c:	dc400315 	stw	r17,12(sp)
  808c40:	1880020c 	andi	r2,r3,8
  808c44:	2821883a 	mov	r16,r5
  808c48:	202b883a 	mov	r21,r4
  808c4c:	3029883a 	mov	r20,r6
  808c50:	10002726 	beq	r2,zero,808cf0 <__sfvwrite_r+0xe8>
  808c54:	28800417 	ldw	r2,16(r5)
  808c58:	10002526 	beq	r2,zero,808cf0 <__sfvwrite_r+0xe8>
  808c5c:	1880008c 	andi	r2,r3,2
  808c60:	a4400017 	ldw	r17,0(r20)
  808c64:	10002a26 	beq	r2,zero,808d10 <__sfvwrite_r+0x108>
  808c68:	05a00034 	movhi	r22,32768
  808c6c:	0027883a 	mov	r19,zero
  808c70:	0025883a 	mov	r18,zero
  808c74:	b5bf0004 	addi	r22,r22,-1024
  808c78:	980d883a 	mov	r6,r19
  808c7c:	a809883a 	mov	r4,r21
  808c80:	90004626 	beq	r18,zero,808d9c <__sfvwrite_r+0x194>
  808c84:	900f883a 	mov	r7,r18
  808c88:	b480022e 	bgeu	r22,r18,808c94 <__sfvwrite_r+0x8c>
  808c8c:	01e00034 	movhi	r7,32768
  808c90:	39ff0004 	addi	r7,r7,-1024
  808c94:	80800917 	ldw	r2,36(r16)
  808c98:	81400717 	ldw	r5,28(r16)
  808c9c:	103ee83a 	callr	r2
  808ca0:	0080570e 	bge	zero,r2,808e00 <__sfvwrite_r+0x1f8>
  808ca4:	a0c00217 	ldw	r3,8(r20)
  808ca8:	98a7883a 	add	r19,r19,r2
  808cac:	90a5c83a 	sub	r18,r18,r2
  808cb0:	1885c83a 	sub	r2,r3,r2
  808cb4:	a0800215 	stw	r2,8(r20)
  808cb8:	103fef1e 	bne	r2,zero,808c78 <__alt_data_end+0xff808c78>
  808cbc:	0005883a 	mov	r2,zero
  808cc0:	dfc00b17 	ldw	ra,44(sp)
  808cc4:	df000a17 	ldw	fp,40(sp)
  808cc8:	ddc00917 	ldw	r23,36(sp)
  808ccc:	dd800817 	ldw	r22,32(sp)
  808cd0:	dd400717 	ldw	r21,28(sp)
  808cd4:	dd000617 	ldw	r20,24(sp)
  808cd8:	dcc00517 	ldw	r19,20(sp)
  808cdc:	dc800417 	ldw	r18,16(sp)
  808ce0:	dc400317 	ldw	r17,12(sp)
  808ce4:	dc000217 	ldw	r16,8(sp)
  808ce8:	dec00c04 	addi	sp,sp,48
  808cec:	f800283a 	ret
  808cf0:	800b883a 	mov	r5,r16
  808cf4:	a809883a 	mov	r4,r21
  808cf8:	080712c0 	call	80712c <__swsetup_r>
  808cfc:	1000eb1e 	bne	r2,zero,8090ac <__sfvwrite_r+0x4a4>
  808d00:	80c0030b 	ldhu	r3,12(r16)
  808d04:	a4400017 	ldw	r17,0(r20)
  808d08:	1880008c 	andi	r2,r3,2
  808d0c:	103fd61e 	bne	r2,zero,808c68 <__alt_data_end+0xff808c68>
  808d10:	1880004c 	andi	r2,r3,1
  808d14:	10003f1e 	bne	r2,zero,808e14 <__sfvwrite_r+0x20c>
  808d18:	0039883a 	mov	fp,zero
  808d1c:	0025883a 	mov	r18,zero
  808d20:	90001a26 	beq	r18,zero,808d8c <__sfvwrite_r+0x184>
  808d24:	1880800c 	andi	r2,r3,512
  808d28:	84c00217 	ldw	r19,8(r16)
  808d2c:	10002126 	beq	r2,zero,808db4 <__sfvwrite_r+0x1ac>
  808d30:	982f883a 	mov	r23,r19
  808d34:	94c09336 	bltu	r18,r19,808f84 <__sfvwrite_r+0x37c>
  808d38:	1881200c 	andi	r2,r3,1152
  808d3c:	10009e1e 	bne	r2,zero,808fb8 <__sfvwrite_r+0x3b0>
  808d40:	81000017 	ldw	r4,0(r16)
  808d44:	b80d883a 	mov	r6,r23
  808d48:	e00b883a 	mov	r5,fp
  808d4c:	08096d40 	call	8096d4 <memmove>
  808d50:	80c00217 	ldw	r3,8(r16)
  808d54:	81000017 	ldw	r4,0(r16)
  808d58:	9005883a 	mov	r2,r18
  808d5c:	1ce7c83a 	sub	r19,r3,r19
  808d60:	25cf883a 	add	r7,r4,r23
  808d64:	84c00215 	stw	r19,8(r16)
  808d68:	81c00015 	stw	r7,0(r16)
  808d6c:	a0c00217 	ldw	r3,8(r20)
  808d70:	e0b9883a 	add	fp,fp,r2
  808d74:	90a5c83a 	sub	r18,r18,r2
  808d78:	18a7c83a 	sub	r19,r3,r2
  808d7c:	a4c00215 	stw	r19,8(r20)
  808d80:	983fce26 	beq	r19,zero,808cbc <__alt_data_end+0xff808cbc>
  808d84:	80c0030b 	ldhu	r3,12(r16)
  808d88:	903fe61e 	bne	r18,zero,808d24 <__alt_data_end+0xff808d24>
  808d8c:	8f000017 	ldw	fp,0(r17)
  808d90:	8c800117 	ldw	r18,4(r17)
  808d94:	8c400204 	addi	r17,r17,8
  808d98:	003fe106 	br	808d20 <__alt_data_end+0xff808d20>
  808d9c:	8cc00017 	ldw	r19,0(r17)
  808da0:	8c800117 	ldw	r18,4(r17)
  808da4:	8c400204 	addi	r17,r17,8
  808da8:	003fb306 	br	808c78 <__alt_data_end+0xff808c78>
  808dac:	0005883a 	mov	r2,zero
  808db0:	f800283a 	ret
  808db4:	81000017 	ldw	r4,0(r16)
  808db8:	80800417 	ldw	r2,16(r16)
  808dbc:	11005736 	bltu	r2,r4,808f1c <__sfvwrite_r+0x314>
  808dc0:	85c00517 	ldw	r23,20(r16)
  808dc4:	95c05536 	bltu	r18,r23,808f1c <__sfvwrite_r+0x314>
  808dc8:	00a00034 	movhi	r2,32768
  808dcc:	10bfffc4 	addi	r2,r2,-1
  808dd0:	9009883a 	mov	r4,r18
  808dd4:	1480012e 	bgeu	r2,r18,808ddc <__sfvwrite_r+0x1d4>
  808dd8:	1009883a 	mov	r4,r2
  808ddc:	b80b883a 	mov	r5,r23
  808de0:	08154900 	call	815490 <__divsi3>
  808de4:	15cf383a 	mul	r7,r2,r23
  808de8:	81400717 	ldw	r5,28(r16)
  808dec:	80800917 	ldw	r2,36(r16)
  808df0:	e00d883a 	mov	r6,fp
  808df4:	a809883a 	mov	r4,r21
  808df8:	103ee83a 	callr	r2
  808dfc:	00bfdb16 	blt	zero,r2,808d6c <__alt_data_end+0xff808d6c>
  808e00:	8080030b 	ldhu	r2,12(r16)
  808e04:	10801014 	ori	r2,r2,64
  808e08:	8080030d 	sth	r2,12(r16)
  808e0c:	00bfffc4 	movi	r2,-1
  808e10:	003fab06 	br	808cc0 <__alt_data_end+0xff808cc0>
  808e14:	0027883a 	mov	r19,zero
  808e18:	0011883a 	mov	r8,zero
  808e1c:	0039883a 	mov	fp,zero
  808e20:	0025883a 	mov	r18,zero
  808e24:	90001f26 	beq	r18,zero,808ea4 <__sfvwrite_r+0x29c>
  808e28:	40005a26 	beq	r8,zero,808f94 <__sfvwrite_r+0x38c>
  808e2c:	982d883a 	mov	r22,r19
  808e30:	94c0012e 	bgeu	r18,r19,808e38 <__sfvwrite_r+0x230>
  808e34:	902d883a 	mov	r22,r18
  808e38:	81000017 	ldw	r4,0(r16)
  808e3c:	80800417 	ldw	r2,16(r16)
  808e40:	b02f883a 	mov	r23,r22
  808e44:	81c00517 	ldw	r7,20(r16)
  808e48:	1100032e 	bgeu	r2,r4,808e58 <__sfvwrite_r+0x250>
  808e4c:	80c00217 	ldw	r3,8(r16)
  808e50:	38c7883a 	add	r3,r7,r3
  808e54:	1d801816 	blt	r3,r22,808eb8 <__sfvwrite_r+0x2b0>
  808e58:	b1c03e16 	blt	r22,r7,808f54 <__sfvwrite_r+0x34c>
  808e5c:	80800917 	ldw	r2,36(r16)
  808e60:	81400717 	ldw	r5,28(r16)
  808e64:	e00d883a 	mov	r6,fp
  808e68:	da000115 	stw	r8,4(sp)
  808e6c:	a809883a 	mov	r4,r21
  808e70:	103ee83a 	callr	r2
  808e74:	102f883a 	mov	r23,r2
  808e78:	da000117 	ldw	r8,4(sp)
  808e7c:	00bfe00e 	bge	zero,r2,808e00 <__alt_data_end+0xff808e00>
  808e80:	9de7c83a 	sub	r19,r19,r23
  808e84:	98001f26 	beq	r19,zero,808f04 <__sfvwrite_r+0x2fc>
  808e88:	a0800217 	ldw	r2,8(r20)
  808e8c:	e5f9883a 	add	fp,fp,r23
  808e90:	95e5c83a 	sub	r18,r18,r23
  808e94:	15efc83a 	sub	r23,r2,r23
  808e98:	a5c00215 	stw	r23,8(r20)
  808e9c:	b83f8726 	beq	r23,zero,808cbc <__alt_data_end+0xff808cbc>
  808ea0:	903fe11e 	bne	r18,zero,808e28 <__alt_data_end+0xff808e28>
  808ea4:	8f000017 	ldw	fp,0(r17)
  808ea8:	8c800117 	ldw	r18,4(r17)
  808eac:	0011883a 	mov	r8,zero
  808eb0:	8c400204 	addi	r17,r17,8
  808eb4:	003fdb06 	br	808e24 <__alt_data_end+0xff808e24>
  808eb8:	180d883a 	mov	r6,r3
  808ebc:	e00b883a 	mov	r5,fp
  808ec0:	da000115 	stw	r8,4(sp)
  808ec4:	d8c00015 	stw	r3,0(sp)
  808ec8:	08096d40 	call	8096d4 <memmove>
  808ecc:	d8c00017 	ldw	r3,0(sp)
  808ed0:	80800017 	ldw	r2,0(r16)
  808ed4:	800b883a 	mov	r5,r16
  808ed8:	a809883a 	mov	r4,r21
  808edc:	10c5883a 	add	r2,r2,r3
  808ee0:	80800015 	stw	r2,0(r16)
  808ee4:	d8c00015 	stw	r3,0(sp)
  808ee8:	08011e80 	call	8011e8 <_fflush_r>
  808eec:	d8c00017 	ldw	r3,0(sp)
  808ef0:	da000117 	ldw	r8,4(sp)
  808ef4:	103fc21e 	bne	r2,zero,808e00 <__alt_data_end+0xff808e00>
  808ef8:	182f883a 	mov	r23,r3
  808efc:	9de7c83a 	sub	r19,r19,r23
  808f00:	983fe11e 	bne	r19,zero,808e88 <__alt_data_end+0xff808e88>
  808f04:	800b883a 	mov	r5,r16
  808f08:	a809883a 	mov	r4,r21
  808f0c:	08011e80 	call	8011e8 <_fflush_r>
  808f10:	103fbb1e 	bne	r2,zero,808e00 <__alt_data_end+0xff808e00>
  808f14:	0011883a 	mov	r8,zero
  808f18:	003fdb06 	br	808e88 <__alt_data_end+0xff808e88>
  808f1c:	94c0012e 	bgeu	r18,r19,808f24 <__sfvwrite_r+0x31c>
  808f20:	9027883a 	mov	r19,r18
  808f24:	980d883a 	mov	r6,r19
  808f28:	e00b883a 	mov	r5,fp
  808f2c:	08096d40 	call	8096d4 <memmove>
  808f30:	80800217 	ldw	r2,8(r16)
  808f34:	80c00017 	ldw	r3,0(r16)
  808f38:	14c5c83a 	sub	r2,r2,r19
  808f3c:	1cc7883a 	add	r3,r3,r19
  808f40:	80800215 	stw	r2,8(r16)
  808f44:	80c00015 	stw	r3,0(r16)
  808f48:	10004326 	beq	r2,zero,809058 <__sfvwrite_r+0x450>
  808f4c:	9805883a 	mov	r2,r19
  808f50:	003f8606 	br	808d6c <__alt_data_end+0xff808d6c>
  808f54:	b00d883a 	mov	r6,r22
  808f58:	e00b883a 	mov	r5,fp
  808f5c:	da000115 	stw	r8,4(sp)
  808f60:	08096d40 	call	8096d4 <memmove>
  808f64:	80800217 	ldw	r2,8(r16)
  808f68:	80c00017 	ldw	r3,0(r16)
  808f6c:	da000117 	ldw	r8,4(sp)
  808f70:	1585c83a 	sub	r2,r2,r22
  808f74:	1dad883a 	add	r22,r3,r22
  808f78:	80800215 	stw	r2,8(r16)
  808f7c:	85800015 	stw	r22,0(r16)
  808f80:	003fbf06 	br	808e80 <__alt_data_end+0xff808e80>
  808f84:	81000017 	ldw	r4,0(r16)
  808f88:	9027883a 	mov	r19,r18
  808f8c:	902f883a 	mov	r23,r18
  808f90:	003f6c06 	br	808d44 <__alt_data_end+0xff808d44>
  808f94:	900d883a 	mov	r6,r18
  808f98:	01400284 	movi	r5,10
  808f9c:	e009883a 	mov	r4,fp
  808fa0:	08094a80 	call	8094a8 <memchr>
  808fa4:	10003e26 	beq	r2,zero,8090a0 <__sfvwrite_r+0x498>
  808fa8:	10800044 	addi	r2,r2,1
  808fac:	1727c83a 	sub	r19,r2,fp
  808fb0:	02000044 	movi	r8,1
  808fb4:	003f9d06 	br	808e2c <__alt_data_end+0xff808e2c>
  808fb8:	80800517 	ldw	r2,20(r16)
  808fbc:	81400417 	ldw	r5,16(r16)
  808fc0:	81c00017 	ldw	r7,0(r16)
  808fc4:	10a7883a 	add	r19,r2,r2
  808fc8:	9885883a 	add	r2,r19,r2
  808fcc:	1026d7fa 	srli	r19,r2,31
  808fd0:	396dc83a 	sub	r22,r7,r5
  808fd4:	b1000044 	addi	r4,r22,1
  808fd8:	9885883a 	add	r2,r19,r2
  808fdc:	1027d07a 	srai	r19,r2,1
  808fe0:	2485883a 	add	r2,r4,r18
  808fe4:	980d883a 	mov	r6,r19
  808fe8:	9880022e 	bgeu	r19,r2,808ff4 <__sfvwrite_r+0x3ec>
  808fec:	1027883a 	mov	r19,r2
  808ff0:	100d883a 	mov	r6,r2
  808ff4:	18c1000c 	andi	r3,r3,1024
  808ff8:	18001c26 	beq	r3,zero,80906c <__sfvwrite_r+0x464>
  808ffc:	300b883a 	mov	r5,r6
  809000:	a809883a 	mov	r4,r21
  809004:	08025b80 	call	8025b8 <_malloc_r>
  809008:	102f883a 	mov	r23,r2
  80900c:	10002926 	beq	r2,zero,8090b4 <__sfvwrite_r+0x4ac>
  809010:	81400417 	ldw	r5,16(r16)
  809014:	b00d883a 	mov	r6,r22
  809018:	1009883a 	mov	r4,r2
  80901c:	080958c0 	call	80958c <memcpy>
  809020:	8080030b 	ldhu	r2,12(r16)
  809024:	00fedfc4 	movi	r3,-1153
  809028:	10c4703a 	and	r2,r2,r3
  80902c:	10802014 	ori	r2,r2,128
  809030:	8080030d 	sth	r2,12(r16)
  809034:	bd89883a 	add	r4,r23,r22
  809038:	9d8fc83a 	sub	r7,r19,r22
  80903c:	85c00415 	stw	r23,16(r16)
  809040:	84c00515 	stw	r19,20(r16)
  809044:	81000015 	stw	r4,0(r16)
  809048:	9027883a 	mov	r19,r18
  80904c:	81c00215 	stw	r7,8(r16)
  809050:	902f883a 	mov	r23,r18
  809054:	003f3b06 	br	808d44 <__alt_data_end+0xff808d44>
  809058:	800b883a 	mov	r5,r16
  80905c:	a809883a 	mov	r4,r21
  809060:	08011e80 	call	8011e8 <_fflush_r>
  809064:	103fb926 	beq	r2,zero,808f4c <__alt_data_end+0xff808f4c>
  809068:	003f6506 	br	808e00 <__alt_data_end+0xff808e00>
  80906c:	a809883a 	mov	r4,r21
  809070:	080a9f40 	call	80a9f4 <_realloc_r>
  809074:	102f883a 	mov	r23,r2
  809078:	103fee1e 	bne	r2,zero,809034 <__alt_data_end+0xff809034>
  80907c:	81400417 	ldw	r5,16(r16)
  809080:	a809883a 	mov	r4,r21
  809084:	08018900 	call	801890 <_free_r>
  809088:	8080030b 	ldhu	r2,12(r16)
  80908c:	00ffdfc4 	movi	r3,-129
  809090:	1884703a 	and	r2,r3,r2
  809094:	00c00304 	movi	r3,12
  809098:	a8c00015 	stw	r3,0(r21)
  80909c:	003f5906 	br	808e04 <__alt_data_end+0xff808e04>
  8090a0:	94c00044 	addi	r19,r18,1
  8090a4:	02000044 	movi	r8,1
  8090a8:	003f6006 	br	808e2c <__alt_data_end+0xff808e2c>
  8090ac:	00bfffc4 	movi	r2,-1
  8090b0:	003f0306 	br	808cc0 <__alt_data_end+0xff808cc0>
  8090b4:	00800304 	movi	r2,12
  8090b8:	a8800015 	stw	r2,0(r21)
  8090bc:	8080030b 	ldhu	r2,12(r16)
  8090c0:	003f5006 	br	808e04 <__alt_data_end+0xff808e04>

008090c4 <_isatty_r>:
  8090c4:	defffd04 	addi	sp,sp,-12
  8090c8:	dc000015 	stw	r16,0(sp)
  8090cc:	040020b4 	movhi	r16,130
  8090d0:	dc400115 	stw	r17,4(sp)
  8090d4:	8401f004 	addi	r16,r16,1984
  8090d8:	2023883a 	mov	r17,r4
  8090dc:	2809883a 	mov	r4,r5
  8090e0:	dfc00215 	stw	ra,8(sp)
  8090e4:	80000015 	stw	zero,0(r16)
  8090e8:	08184300 	call	818430 <isatty>
  8090ec:	00ffffc4 	movi	r3,-1
  8090f0:	10c00526 	beq	r2,r3,809108 <_isatty_r+0x44>
  8090f4:	dfc00217 	ldw	ra,8(sp)
  8090f8:	dc400117 	ldw	r17,4(sp)
  8090fc:	dc000017 	ldw	r16,0(sp)
  809100:	dec00304 	addi	sp,sp,12
  809104:	f800283a 	ret
  809108:	80c00017 	ldw	r3,0(r16)
  80910c:	183ff926 	beq	r3,zero,8090f4 <__alt_data_end+0xff8090f4>
  809110:	88c00015 	stw	r3,0(r17)
  809114:	003ff706 	br	8090f4 <__alt_data_end+0xff8090f4>

00809118 <iswspace>:
  809118:	00803fc4 	movi	r2,255
  80911c:	11000836 	bltu	r2,r4,809140 <iswspace+0x28>
  809120:	008020b4 	movhi	r2,130
  809124:	10ba8804 	addi	r2,r2,-5600
  809128:	10800017 	ldw	r2,0(r2)
  80912c:	1109883a 	add	r4,r2,r4
  809130:	20800043 	ldbu	r2,1(r4)
  809134:	1080020c 	andi	r2,r2,8
  809138:	10803fcc 	andi	r2,r2,255
  80913c:	f800283a 	ret
  809140:	0005883a 	mov	r2,zero
  809144:	f800283a 	ret

00809148 <_setlocale_r>:
  809148:	30001b26 	beq	r6,zero,8091b8 <_setlocale_r+0x70>
  80914c:	014020b4 	movhi	r5,130
  809150:	defffe04 	addi	sp,sp,-8
  809154:	29722104 	addi	r5,r5,-14204
  809158:	3009883a 	mov	r4,r6
  80915c:	dc000015 	stw	r16,0(sp)
  809160:	dfc00115 	stw	ra,4(sp)
  809164:	3021883a 	mov	r16,r6
  809168:	080b1680 	call	80b168 <strcmp>
  80916c:	1000061e 	bne	r2,zero,809188 <_setlocale_r+0x40>
  809170:	008020b4 	movhi	r2,130
  809174:	10b15804 	addi	r2,r2,-15008
  809178:	dfc00117 	ldw	ra,4(sp)
  80917c:	dc000017 	ldw	r16,0(sp)
  809180:	dec00204 	addi	sp,sp,8
  809184:	f800283a 	ret
  809188:	014020b4 	movhi	r5,130
  80918c:	29715804 	addi	r5,r5,-15008
  809190:	8009883a 	mov	r4,r16
  809194:	080b1680 	call	80b168 <strcmp>
  809198:	103ff526 	beq	r2,zero,809170 <__alt_data_end+0xff809170>
  80919c:	014020b4 	movhi	r5,130
  8091a0:	29716c04 	addi	r5,r5,-14928
  8091a4:	8009883a 	mov	r4,r16
  8091a8:	080b1680 	call	80b168 <strcmp>
  8091ac:	103ff026 	beq	r2,zero,809170 <__alt_data_end+0xff809170>
  8091b0:	0005883a 	mov	r2,zero
  8091b4:	003ff006 	br	809178 <__alt_data_end+0xff809178>
  8091b8:	008020b4 	movhi	r2,130
  8091bc:	10b15804 	addi	r2,r2,-15008
  8091c0:	f800283a 	ret

008091c4 <__locale_charset>:
  8091c4:	008020b4 	movhi	r2,130
  8091c8:	10b55b04 	addi	r2,r2,-10900
  8091cc:	f800283a 	ret

008091d0 <__locale_mb_cur_max>:
  8091d0:	008020b4 	movhi	r2,130
  8091d4:	10ba8904 	addi	r2,r2,-5596
  8091d8:	10800017 	ldw	r2,0(r2)
  8091dc:	f800283a 	ret

008091e0 <__locale_msgcharset>:
  8091e0:	008020b4 	movhi	r2,130
  8091e4:	10b55304 	addi	r2,r2,-10932
  8091e8:	f800283a 	ret

008091ec <__locale_cjk_lang>:
  8091ec:	0005883a 	mov	r2,zero
  8091f0:	f800283a 	ret

008091f4 <_localeconv_r>:
  8091f4:	008020b4 	movhi	r2,130
  8091f8:	10b56304 	addi	r2,r2,-10868
  8091fc:	f800283a 	ret

00809200 <setlocale>:
  809200:	008020b4 	movhi	r2,130
  809204:	10ba8504 	addi	r2,r2,-5612
  809208:	280d883a 	mov	r6,r5
  80920c:	200b883a 	mov	r5,r4
  809210:	11000017 	ldw	r4,0(r2)
  809214:	08091481 	jmpi	809148 <_setlocale_r>

00809218 <localeconv>:
  809218:	008020b4 	movhi	r2,130
  80921c:	10b56304 	addi	r2,r2,-10868
  809220:	f800283a 	ret

00809224 <_lseek_r>:
  809224:	defffd04 	addi	sp,sp,-12
  809228:	2805883a 	mov	r2,r5
  80922c:	dc000015 	stw	r16,0(sp)
  809230:	040020b4 	movhi	r16,130
  809234:	dc400115 	stw	r17,4(sp)
  809238:	300b883a 	mov	r5,r6
  80923c:	8401f004 	addi	r16,r16,1984
  809240:	2023883a 	mov	r17,r4
  809244:	380d883a 	mov	r6,r7
  809248:	1009883a 	mov	r4,r2
  80924c:	dfc00215 	stw	ra,8(sp)
  809250:	80000015 	stw	zero,0(r16)
  809254:	08185fc0 	call	8185fc <lseek>
  809258:	00ffffc4 	movi	r3,-1
  80925c:	10c00526 	beq	r2,r3,809274 <_lseek_r+0x50>
  809260:	dfc00217 	ldw	ra,8(sp)
  809264:	dc400117 	ldw	r17,4(sp)
  809268:	dc000017 	ldw	r16,0(sp)
  80926c:	dec00304 	addi	sp,sp,12
  809270:	f800283a 	ret
  809274:	80c00017 	ldw	r3,0(r16)
  809278:	183ff926 	beq	r3,zero,809260 <__alt_data_end+0xff809260>
  80927c:	88c00015 	stw	r3,0(r17)
  809280:	003ff706 	br	809260 <__alt_data_end+0xff809260>

00809284 <_mbrtowc_r>:
  809284:	defff704 	addi	sp,sp,-36
  809288:	008020b4 	movhi	r2,130
  80928c:	dc800715 	stw	r18,28(sp)
  809290:	dc400615 	stw	r17,24(sp)
  809294:	dc000515 	stw	r16,20(sp)
  809298:	10ba8a04 	addi	r2,r2,-5592
  80929c:	dfc00815 	stw	ra,32(sp)
  8092a0:	2021883a 	mov	r16,r4
  8092a4:	dc400917 	ldw	r17,36(sp)
  8092a8:	14800017 	ldw	r18,0(r2)
  8092ac:	30001626 	beq	r6,zero,809308 <_mbrtowc_r+0x84>
  8092b0:	d9400215 	stw	r5,8(sp)
  8092b4:	d9800315 	stw	r6,12(sp)
  8092b8:	d9c00415 	stw	r7,16(sp)
  8092bc:	08091c40 	call	8091c4 <__locale_charset>
  8092c0:	d9c00417 	ldw	r7,16(sp)
  8092c4:	d9800317 	ldw	r6,12(sp)
  8092c8:	d9400217 	ldw	r5,8(sp)
  8092cc:	d8800015 	stw	r2,0(sp)
  8092d0:	dc400115 	stw	r17,4(sp)
  8092d4:	8009883a 	mov	r4,r16
  8092d8:	903ee83a 	callr	r18
  8092dc:	00ffffc4 	movi	r3,-1
  8092e0:	10c0031e 	bne	r2,r3,8092f0 <_mbrtowc_r+0x6c>
  8092e4:	88000015 	stw	zero,0(r17)
  8092e8:	00c02284 	movi	r3,138
  8092ec:	80c00015 	stw	r3,0(r16)
  8092f0:	dfc00817 	ldw	ra,32(sp)
  8092f4:	dc800717 	ldw	r18,28(sp)
  8092f8:	dc400617 	ldw	r17,24(sp)
  8092fc:	dc000517 	ldw	r16,20(sp)
  809300:	dec00904 	addi	sp,sp,36
  809304:	f800283a 	ret
  809308:	08091c40 	call	8091c4 <__locale_charset>
  80930c:	018020b4 	movhi	r6,130
  809310:	31b16c04 	addi	r6,r6,-14928
  809314:	dc400115 	stw	r17,4(sp)
  809318:	d8800015 	stw	r2,0(sp)
  80931c:	01c00044 	movi	r7,1
  809320:	000b883a 	mov	r5,zero
  809324:	8009883a 	mov	r4,r16
  809328:	903ee83a 	callr	r18
  80932c:	003feb06 	br	8092dc <__alt_data_end+0xff8092dc>

00809330 <mbrtowc>:
  809330:	defff704 	addi	sp,sp,-36
  809334:	008020b4 	movhi	r2,130
  809338:	dc800415 	stw	r18,16(sp)
  80933c:	dc400315 	stw	r17,12(sp)
  809340:	10ba8504 	addi	r2,r2,-5612
  809344:	dfc00815 	stw	ra,32(sp)
  809348:	dd400715 	stw	r21,28(sp)
  80934c:	dd000615 	stw	r20,24(sp)
  809350:	dcc00515 	stw	r19,20(sp)
  809354:	dc000215 	stw	r16,8(sp)
  809358:	3825883a 	mov	r18,r7
  80935c:	14400017 	ldw	r17,0(r2)
  809360:	28001c26 	beq	r5,zero,8093d4 <mbrtowc+0xa4>
  809364:	008020b4 	movhi	r2,130
  809368:	10ba8a04 	addi	r2,r2,-5592
  80936c:	15400017 	ldw	r21,0(r2)
  809370:	2821883a 	mov	r16,r5
  809374:	2027883a 	mov	r19,r4
  809378:	3029883a 	mov	r20,r6
  80937c:	08091c40 	call	8091c4 <__locale_charset>
  809380:	d8800015 	stw	r2,0(sp)
  809384:	dc800115 	stw	r18,4(sp)
  809388:	a00f883a 	mov	r7,r20
  80938c:	800d883a 	mov	r6,r16
  809390:	980b883a 	mov	r5,r19
  809394:	8809883a 	mov	r4,r17
  809398:	a83ee83a 	callr	r21
  80939c:	00ffffc4 	movi	r3,-1
  8093a0:	10c0031e 	bne	r2,r3,8093b0 <mbrtowc+0x80>
  8093a4:	90000015 	stw	zero,0(r18)
  8093a8:	00c02284 	movi	r3,138
  8093ac:	88c00015 	stw	r3,0(r17)
  8093b0:	dfc00817 	ldw	ra,32(sp)
  8093b4:	dd400717 	ldw	r21,28(sp)
  8093b8:	dd000617 	ldw	r20,24(sp)
  8093bc:	dcc00517 	ldw	r19,20(sp)
  8093c0:	dc800417 	ldw	r18,16(sp)
  8093c4:	dc400317 	ldw	r17,12(sp)
  8093c8:	dc000217 	ldw	r16,8(sp)
  8093cc:	dec00904 	addi	sp,sp,36
  8093d0:	f800283a 	ret
  8093d4:	008020b4 	movhi	r2,130
  8093d8:	10ba8a04 	addi	r2,r2,-5592
  8093dc:	14000017 	ldw	r16,0(r2)
  8093e0:	08091c40 	call	8091c4 <__locale_charset>
  8093e4:	018020b4 	movhi	r6,130
  8093e8:	31b16c04 	addi	r6,r6,-14928
  8093ec:	dc800115 	stw	r18,4(sp)
  8093f0:	d8800015 	stw	r2,0(sp)
  8093f4:	01c00044 	movi	r7,1
  8093f8:	000b883a 	mov	r5,zero
  8093fc:	8809883a 	mov	r4,r17
  809400:	803ee83a 	callr	r16
  809404:	003fe506 	br	80939c <__alt_data_end+0xff80939c>

00809408 <__ascii_mbtowc>:
  809408:	deffff04 	addi	sp,sp,-4
  80940c:	28000826 	beq	r5,zero,809430 <__ascii_mbtowc+0x28>
  809410:	30000926 	beq	r6,zero,809438 <__ascii_mbtowc+0x30>
  809414:	38000b26 	beq	r7,zero,809444 <__ascii_mbtowc+0x3c>
  809418:	30800003 	ldbu	r2,0(r6)
  80941c:	28800015 	stw	r2,0(r5)
  809420:	30800003 	ldbu	r2,0(r6)
  809424:	1004c03a 	cmpne	r2,r2,zero
  809428:	dec00104 	addi	sp,sp,4
  80942c:	f800283a 	ret
  809430:	d80b883a 	mov	r5,sp
  809434:	303ff71e 	bne	r6,zero,809414 <__alt_data_end+0xff809414>
  809438:	0005883a 	mov	r2,zero
  80943c:	dec00104 	addi	sp,sp,4
  809440:	f800283a 	ret
  809444:	00bfff84 	movi	r2,-2
  809448:	003ff706 	br	809428 <__alt_data_end+0xff809428>

0080944c <_mbtowc_r>:
  80944c:	008020b4 	movhi	r2,130
  809450:	defff804 	addi	sp,sp,-32
  809454:	10ba8a04 	addi	r2,r2,-5592
  809458:	dfc00715 	stw	ra,28(sp)
  80945c:	dc000615 	stw	r16,24(sp)
  809460:	14000017 	ldw	r16,0(r2)
  809464:	d9000215 	stw	r4,8(sp)
  809468:	d9400315 	stw	r5,12(sp)
  80946c:	d9800415 	stw	r6,16(sp)
  809470:	d9c00515 	stw	r7,20(sp)
  809474:	08091c40 	call	8091c4 <__locale_charset>
  809478:	d8800015 	stw	r2,0(sp)
  80947c:	d8800817 	ldw	r2,32(sp)
  809480:	d9c00517 	ldw	r7,20(sp)
  809484:	d9800417 	ldw	r6,16(sp)
  809488:	d9400317 	ldw	r5,12(sp)
  80948c:	d9000217 	ldw	r4,8(sp)
  809490:	d8800115 	stw	r2,4(sp)
  809494:	803ee83a 	callr	r16
  809498:	dfc00717 	ldw	ra,28(sp)
  80949c:	dc000617 	ldw	r16,24(sp)
  8094a0:	dec00804 	addi	sp,sp,32
  8094a4:	f800283a 	ret

008094a8 <memchr>:
  8094a8:	208000cc 	andi	r2,r4,3
  8094ac:	280f883a 	mov	r7,r5
  8094b0:	10003426 	beq	r2,zero,809584 <memchr+0xdc>
  8094b4:	30bfffc4 	addi	r2,r6,-1
  8094b8:	30001a26 	beq	r6,zero,809524 <memchr+0x7c>
  8094bc:	20c00003 	ldbu	r3,0(r4)
  8094c0:	29803fcc 	andi	r6,r5,255
  8094c4:	30c0051e 	bne	r6,r3,8094dc <memchr+0x34>
  8094c8:	00001806 	br	80952c <memchr+0x84>
  8094cc:	10001526 	beq	r2,zero,809524 <memchr+0x7c>
  8094d0:	20c00003 	ldbu	r3,0(r4)
  8094d4:	10bfffc4 	addi	r2,r2,-1
  8094d8:	30c01426 	beq	r6,r3,80952c <memchr+0x84>
  8094dc:	21000044 	addi	r4,r4,1
  8094e0:	20c000cc 	andi	r3,r4,3
  8094e4:	183ff91e 	bne	r3,zero,8094cc <__alt_data_end+0xff8094cc>
  8094e8:	020000c4 	movi	r8,3
  8094ec:	40801136 	bltu	r8,r2,809534 <memchr+0x8c>
  8094f0:	10000c26 	beq	r2,zero,809524 <memchr+0x7c>
  8094f4:	20c00003 	ldbu	r3,0(r4)
  8094f8:	29403fcc 	andi	r5,r5,255
  8094fc:	28c00b26 	beq	r5,r3,80952c <memchr+0x84>
  809500:	20c00044 	addi	r3,r4,1
  809504:	39803fcc 	andi	r6,r7,255
  809508:	2089883a 	add	r4,r4,r2
  80950c:	00000306 	br	80951c <memchr+0x74>
  809510:	18c00044 	addi	r3,r3,1
  809514:	197fffc3 	ldbu	r5,-1(r3)
  809518:	31400526 	beq	r6,r5,809530 <memchr+0x88>
  80951c:	1805883a 	mov	r2,r3
  809520:	20fffb1e 	bne	r4,r3,809510 <__alt_data_end+0xff809510>
  809524:	0005883a 	mov	r2,zero
  809528:	f800283a 	ret
  80952c:	2005883a 	mov	r2,r4
  809530:	f800283a 	ret
  809534:	28c03fcc 	andi	r3,r5,255
  809538:	1812923a 	slli	r9,r3,8
  80953c:	02ffbff4 	movhi	r11,65279
  809540:	02a02074 	movhi	r10,32897
  809544:	48d2b03a 	or	r9,r9,r3
  809548:	4806943a 	slli	r3,r9,16
  80954c:	5affbfc4 	addi	r11,r11,-257
  809550:	52a02004 	addi	r10,r10,-32640
  809554:	48d2b03a 	or	r9,r9,r3
  809558:	20c00017 	ldw	r3,0(r4)
  80955c:	48c6f03a 	xor	r3,r9,r3
  809560:	1acd883a 	add	r6,r3,r11
  809564:	00c6303a 	nor	r3,zero,r3
  809568:	30c6703a 	and	r3,r6,r3
  80956c:	1a86703a 	and	r3,r3,r10
  809570:	183fe01e 	bne	r3,zero,8094f4 <__alt_data_end+0xff8094f4>
  809574:	10bfff04 	addi	r2,r2,-4
  809578:	21000104 	addi	r4,r4,4
  80957c:	40bff636 	bltu	r8,r2,809558 <__alt_data_end+0xff809558>
  809580:	003fdb06 	br	8094f0 <__alt_data_end+0xff8094f0>
  809584:	3005883a 	mov	r2,r6
  809588:	003fd706 	br	8094e8 <__alt_data_end+0xff8094e8>

0080958c <memcpy>:
  80958c:	defffd04 	addi	sp,sp,-12
  809590:	dfc00215 	stw	ra,8(sp)
  809594:	dc400115 	stw	r17,4(sp)
  809598:	dc000015 	stw	r16,0(sp)
  80959c:	00c003c4 	movi	r3,15
  8095a0:	2005883a 	mov	r2,r4
  8095a4:	1980452e 	bgeu	r3,r6,8096bc <memcpy+0x130>
  8095a8:	2906b03a 	or	r3,r5,r4
  8095ac:	18c000cc 	andi	r3,r3,3
  8095b0:	1800441e 	bne	r3,zero,8096c4 <memcpy+0x138>
  8095b4:	347ffc04 	addi	r17,r6,-16
  8095b8:	8822d13a 	srli	r17,r17,4
  8095bc:	28c00104 	addi	r3,r5,4
  8095c0:	23400104 	addi	r13,r4,4
  8095c4:	8820913a 	slli	r16,r17,4
  8095c8:	2b000204 	addi	r12,r5,8
  8095cc:	22c00204 	addi	r11,r4,8
  8095d0:	84000504 	addi	r16,r16,20
  8095d4:	2a800304 	addi	r10,r5,12
  8095d8:	22400304 	addi	r9,r4,12
  8095dc:	2c21883a 	add	r16,r5,r16
  8095e0:	2811883a 	mov	r8,r5
  8095e4:	200f883a 	mov	r7,r4
  8095e8:	41000017 	ldw	r4,0(r8)
  8095ec:	1fc00017 	ldw	ra,0(r3)
  8095f0:	63c00017 	ldw	r15,0(r12)
  8095f4:	39000015 	stw	r4,0(r7)
  8095f8:	53800017 	ldw	r14,0(r10)
  8095fc:	6fc00015 	stw	ra,0(r13)
  809600:	5bc00015 	stw	r15,0(r11)
  809604:	4b800015 	stw	r14,0(r9)
  809608:	18c00404 	addi	r3,r3,16
  80960c:	39c00404 	addi	r7,r7,16
  809610:	42000404 	addi	r8,r8,16
  809614:	6b400404 	addi	r13,r13,16
  809618:	63000404 	addi	r12,r12,16
  80961c:	5ac00404 	addi	r11,r11,16
  809620:	52800404 	addi	r10,r10,16
  809624:	4a400404 	addi	r9,r9,16
  809628:	1c3fef1e 	bne	r3,r16,8095e8 <__alt_data_end+0xff8095e8>
  80962c:	89c00044 	addi	r7,r17,1
  809630:	380e913a 	slli	r7,r7,4
  809634:	310003cc 	andi	r4,r6,15
  809638:	02c000c4 	movi	r11,3
  80963c:	11c7883a 	add	r3,r2,r7
  809640:	29cb883a 	add	r5,r5,r7
  809644:	5900212e 	bgeu	r11,r4,8096cc <memcpy+0x140>
  809648:	1813883a 	mov	r9,r3
  80964c:	2811883a 	mov	r8,r5
  809650:	200f883a 	mov	r7,r4
  809654:	42800017 	ldw	r10,0(r8)
  809658:	4a400104 	addi	r9,r9,4
  80965c:	39ffff04 	addi	r7,r7,-4
  809660:	4abfff15 	stw	r10,-4(r9)
  809664:	42000104 	addi	r8,r8,4
  809668:	59fffa36 	bltu	r11,r7,809654 <__alt_data_end+0xff809654>
  80966c:	213fff04 	addi	r4,r4,-4
  809670:	2008d0ba 	srli	r4,r4,2
  809674:	318000cc 	andi	r6,r6,3
  809678:	21000044 	addi	r4,r4,1
  80967c:	2109883a 	add	r4,r4,r4
  809680:	2109883a 	add	r4,r4,r4
  809684:	1907883a 	add	r3,r3,r4
  809688:	290b883a 	add	r5,r5,r4
  80968c:	30000626 	beq	r6,zero,8096a8 <memcpy+0x11c>
  809690:	198d883a 	add	r6,r3,r6
  809694:	29c00003 	ldbu	r7,0(r5)
  809698:	18c00044 	addi	r3,r3,1
  80969c:	29400044 	addi	r5,r5,1
  8096a0:	19ffffc5 	stb	r7,-1(r3)
  8096a4:	19bffb1e 	bne	r3,r6,809694 <__alt_data_end+0xff809694>
  8096a8:	dfc00217 	ldw	ra,8(sp)
  8096ac:	dc400117 	ldw	r17,4(sp)
  8096b0:	dc000017 	ldw	r16,0(sp)
  8096b4:	dec00304 	addi	sp,sp,12
  8096b8:	f800283a 	ret
  8096bc:	2007883a 	mov	r3,r4
  8096c0:	003ff206 	br	80968c <__alt_data_end+0xff80968c>
  8096c4:	2007883a 	mov	r3,r4
  8096c8:	003ff106 	br	809690 <__alt_data_end+0xff809690>
  8096cc:	200d883a 	mov	r6,r4
  8096d0:	003fee06 	br	80968c <__alt_data_end+0xff80968c>

008096d4 <memmove>:
  8096d4:	2005883a 	mov	r2,r4
  8096d8:	29000b2e 	bgeu	r5,r4,809708 <memmove+0x34>
  8096dc:	298f883a 	add	r7,r5,r6
  8096e0:	21c0092e 	bgeu	r4,r7,809708 <memmove+0x34>
  8096e4:	2187883a 	add	r3,r4,r6
  8096e8:	198bc83a 	sub	r5,r3,r6
  8096ec:	30004826 	beq	r6,zero,809810 <memmove+0x13c>
  8096f0:	39ffffc4 	addi	r7,r7,-1
  8096f4:	39000003 	ldbu	r4,0(r7)
  8096f8:	18ffffc4 	addi	r3,r3,-1
  8096fc:	19000005 	stb	r4,0(r3)
  809700:	28fffb1e 	bne	r5,r3,8096f0 <__alt_data_end+0xff8096f0>
  809704:	f800283a 	ret
  809708:	00c003c4 	movi	r3,15
  80970c:	1980412e 	bgeu	r3,r6,809814 <memmove+0x140>
  809710:	2886b03a 	or	r3,r5,r2
  809714:	18c000cc 	andi	r3,r3,3
  809718:	1800401e 	bne	r3,zero,80981c <memmove+0x148>
  80971c:	33fffc04 	addi	r15,r6,-16
  809720:	781ed13a 	srli	r15,r15,4
  809724:	28c00104 	addi	r3,r5,4
  809728:	13400104 	addi	r13,r2,4
  80972c:	781c913a 	slli	r14,r15,4
  809730:	2b000204 	addi	r12,r5,8
  809734:	12c00204 	addi	r11,r2,8
  809738:	73800504 	addi	r14,r14,20
  80973c:	2a800304 	addi	r10,r5,12
  809740:	12400304 	addi	r9,r2,12
  809744:	2b9d883a 	add	r14,r5,r14
  809748:	2811883a 	mov	r8,r5
  80974c:	100f883a 	mov	r7,r2
  809750:	41000017 	ldw	r4,0(r8)
  809754:	39c00404 	addi	r7,r7,16
  809758:	18c00404 	addi	r3,r3,16
  80975c:	393ffc15 	stw	r4,-16(r7)
  809760:	193ffc17 	ldw	r4,-16(r3)
  809764:	6b400404 	addi	r13,r13,16
  809768:	5ac00404 	addi	r11,r11,16
  80976c:	693ffc15 	stw	r4,-16(r13)
  809770:	61000017 	ldw	r4,0(r12)
  809774:	4a400404 	addi	r9,r9,16
  809778:	42000404 	addi	r8,r8,16
  80977c:	593ffc15 	stw	r4,-16(r11)
  809780:	51000017 	ldw	r4,0(r10)
  809784:	63000404 	addi	r12,r12,16
  809788:	52800404 	addi	r10,r10,16
  80978c:	493ffc15 	stw	r4,-16(r9)
  809790:	1bbfef1e 	bne	r3,r14,809750 <__alt_data_end+0xff809750>
  809794:	79000044 	addi	r4,r15,1
  809798:	2008913a 	slli	r4,r4,4
  80979c:	328003cc 	andi	r10,r6,15
  8097a0:	02c000c4 	movi	r11,3
  8097a4:	1107883a 	add	r3,r2,r4
  8097a8:	290b883a 	add	r5,r5,r4
  8097ac:	5a801e2e 	bgeu	r11,r10,809828 <memmove+0x154>
  8097b0:	1813883a 	mov	r9,r3
  8097b4:	2811883a 	mov	r8,r5
  8097b8:	500f883a 	mov	r7,r10
  8097bc:	41000017 	ldw	r4,0(r8)
  8097c0:	4a400104 	addi	r9,r9,4
  8097c4:	39ffff04 	addi	r7,r7,-4
  8097c8:	493fff15 	stw	r4,-4(r9)
  8097cc:	42000104 	addi	r8,r8,4
  8097d0:	59fffa36 	bltu	r11,r7,8097bc <__alt_data_end+0xff8097bc>
  8097d4:	513fff04 	addi	r4,r10,-4
  8097d8:	2008d0ba 	srli	r4,r4,2
  8097dc:	318000cc 	andi	r6,r6,3
  8097e0:	21000044 	addi	r4,r4,1
  8097e4:	2109883a 	add	r4,r4,r4
  8097e8:	2109883a 	add	r4,r4,r4
  8097ec:	1907883a 	add	r3,r3,r4
  8097f0:	290b883a 	add	r5,r5,r4
  8097f4:	30000b26 	beq	r6,zero,809824 <memmove+0x150>
  8097f8:	198d883a 	add	r6,r3,r6
  8097fc:	29c00003 	ldbu	r7,0(r5)
  809800:	18c00044 	addi	r3,r3,1
  809804:	29400044 	addi	r5,r5,1
  809808:	19ffffc5 	stb	r7,-1(r3)
  80980c:	19bffb1e 	bne	r3,r6,8097fc <__alt_data_end+0xff8097fc>
  809810:	f800283a 	ret
  809814:	1007883a 	mov	r3,r2
  809818:	003ff606 	br	8097f4 <__alt_data_end+0xff8097f4>
  80981c:	1007883a 	mov	r3,r2
  809820:	003ff506 	br	8097f8 <__alt_data_end+0xff8097f8>
  809824:	f800283a 	ret
  809828:	500d883a 	mov	r6,r10
  80982c:	003ff106 	br	8097f4 <__alt_data_end+0xff8097f4>

00809830 <_Balloc>:
  809830:	20801317 	ldw	r2,76(r4)
  809834:	defffc04 	addi	sp,sp,-16
  809838:	dc400115 	stw	r17,4(sp)
  80983c:	dc000015 	stw	r16,0(sp)
  809840:	dfc00315 	stw	ra,12(sp)
  809844:	dc800215 	stw	r18,8(sp)
  809848:	2023883a 	mov	r17,r4
  80984c:	2821883a 	mov	r16,r5
  809850:	10000f26 	beq	r2,zero,809890 <_Balloc+0x60>
  809854:	8407883a 	add	r3,r16,r16
  809858:	18c7883a 	add	r3,r3,r3
  80985c:	10c7883a 	add	r3,r2,r3
  809860:	18800017 	ldw	r2,0(r3)
  809864:	10001126 	beq	r2,zero,8098ac <_Balloc+0x7c>
  809868:	11000017 	ldw	r4,0(r2)
  80986c:	19000015 	stw	r4,0(r3)
  809870:	10000415 	stw	zero,16(r2)
  809874:	10000315 	stw	zero,12(r2)
  809878:	dfc00317 	ldw	ra,12(sp)
  80987c:	dc800217 	ldw	r18,8(sp)
  809880:	dc400117 	ldw	r17,4(sp)
  809884:	dc000017 	ldw	r16,0(sp)
  809888:	dec00404 	addi	sp,sp,16
  80988c:	f800283a 	ret
  809890:	01800844 	movi	r6,33
  809894:	01400104 	movi	r5,4
  809898:	08123f00 	call	8123f0 <_calloc_r>
  80989c:	88801315 	stw	r2,76(r17)
  8098a0:	103fec1e 	bne	r2,zero,809854 <__alt_data_end+0xff809854>
  8098a4:	0005883a 	mov	r2,zero
  8098a8:	003ff306 	br	809878 <__alt_data_end+0xff809878>
  8098ac:	01400044 	movi	r5,1
  8098b0:	2c24983a 	sll	r18,r5,r16
  8098b4:	8809883a 	mov	r4,r17
  8098b8:	91800144 	addi	r6,r18,5
  8098bc:	318d883a 	add	r6,r6,r6
  8098c0:	318d883a 	add	r6,r6,r6
  8098c4:	08123f00 	call	8123f0 <_calloc_r>
  8098c8:	103ff626 	beq	r2,zero,8098a4 <__alt_data_end+0xff8098a4>
  8098cc:	14000115 	stw	r16,4(r2)
  8098d0:	14800215 	stw	r18,8(r2)
  8098d4:	003fe606 	br	809870 <__alt_data_end+0xff809870>

008098d8 <_Bfree>:
  8098d8:	28000826 	beq	r5,zero,8098fc <_Bfree+0x24>
  8098dc:	28c00117 	ldw	r3,4(r5)
  8098e0:	20801317 	ldw	r2,76(r4)
  8098e4:	18c7883a 	add	r3,r3,r3
  8098e8:	18c7883a 	add	r3,r3,r3
  8098ec:	10c5883a 	add	r2,r2,r3
  8098f0:	10c00017 	ldw	r3,0(r2)
  8098f4:	28c00015 	stw	r3,0(r5)
  8098f8:	11400015 	stw	r5,0(r2)
  8098fc:	f800283a 	ret

00809900 <__multadd>:
  809900:	defffa04 	addi	sp,sp,-24
  809904:	dc800315 	stw	r18,12(sp)
  809908:	dc400215 	stw	r17,8(sp)
  80990c:	dc000115 	stw	r16,4(sp)
  809910:	2823883a 	mov	r17,r5
  809914:	2c000417 	ldw	r16,16(r5)
  809918:	dfc00515 	stw	ra,20(sp)
  80991c:	dcc00415 	stw	r19,16(sp)
  809920:	2025883a 	mov	r18,r4
  809924:	29400504 	addi	r5,r5,20
  809928:	0011883a 	mov	r8,zero
  80992c:	28c00017 	ldw	r3,0(r5)
  809930:	29400104 	addi	r5,r5,4
  809934:	42000044 	addi	r8,r8,1
  809938:	18bfffcc 	andi	r2,r3,65535
  80993c:	1185383a 	mul	r2,r2,r6
  809940:	1806d43a 	srli	r3,r3,16
  809944:	11cf883a 	add	r7,r2,r7
  809948:	3808d43a 	srli	r4,r7,16
  80994c:	1987383a 	mul	r3,r3,r6
  809950:	38bfffcc 	andi	r2,r7,65535
  809954:	1907883a 	add	r3,r3,r4
  809958:	1808943a 	slli	r4,r3,16
  80995c:	180ed43a 	srli	r7,r3,16
  809960:	2085883a 	add	r2,r4,r2
  809964:	28bfff15 	stw	r2,-4(r5)
  809968:	443ff016 	blt	r8,r16,80992c <__alt_data_end+0xff80992c>
  80996c:	38000926 	beq	r7,zero,809994 <__multadd+0x94>
  809970:	88800217 	ldw	r2,8(r17)
  809974:	80800f0e 	bge	r16,r2,8099b4 <__multadd+0xb4>
  809978:	80800144 	addi	r2,r16,5
  80997c:	1085883a 	add	r2,r2,r2
  809980:	1085883a 	add	r2,r2,r2
  809984:	8885883a 	add	r2,r17,r2
  809988:	11c00015 	stw	r7,0(r2)
  80998c:	84000044 	addi	r16,r16,1
  809990:	8c000415 	stw	r16,16(r17)
  809994:	8805883a 	mov	r2,r17
  809998:	dfc00517 	ldw	ra,20(sp)
  80999c:	dcc00417 	ldw	r19,16(sp)
  8099a0:	dc800317 	ldw	r18,12(sp)
  8099a4:	dc400217 	ldw	r17,8(sp)
  8099a8:	dc000117 	ldw	r16,4(sp)
  8099ac:	dec00604 	addi	sp,sp,24
  8099b0:	f800283a 	ret
  8099b4:	89400117 	ldw	r5,4(r17)
  8099b8:	9009883a 	mov	r4,r18
  8099bc:	d9c00015 	stw	r7,0(sp)
  8099c0:	29400044 	addi	r5,r5,1
  8099c4:	08098300 	call	809830 <_Balloc>
  8099c8:	89800417 	ldw	r6,16(r17)
  8099cc:	89400304 	addi	r5,r17,12
  8099d0:	11000304 	addi	r4,r2,12
  8099d4:	31800084 	addi	r6,r6,2
  8099d8:	318d883a 	add	r6,r6,r6
  8099dc:	318d883a 	add	r6,r6,r6
  8099e0:	1027883a 	mov	r19,r2
  8099e4:	080958c0 	call	80958c <memcpy>
  8099e8:	d9c00017 	ldw	r7,0(sp)
  8099ec:	88000a26 	beq	r17,zero,809a18 <__multadd+0x118>
  8099f0:	88c00117 	ldw	r3,4(r17)
  8099f4:	90801317 	ldw	r2,76(r18)
  8099f8:	18c7883a 	add	r3,r3,r3
  8099fc:	18c7883a 	add	r3,r3,r3
  809a00:	10c5883a 	add	r2,r2,r3
  809a04:	10c00017 	ldw	r3,0(r2)
  809a08:	88c00015 	stw	r3,0(r17)
  809a0c:	14400015 	stw	r17,0(r2)
  809a10:	9823883a 	mov	r17,r19
  809a14:	003fd806 	br	809978 <__alt_data_end+0xff809978>
  809a18:	9823883a 	mov	r17,r19
  809a1c:	003fd606 	br	809978 <__alt_data_end+0xff809978>

00809a20 <__s2b>:
  809a20:	defff904 	addi	sp,sp,-28
  809a24:	dc400115 	stw	r17,4(sp)
  809a28:	dc000015 	stw	r16,0(sp)
  809a2c:	2023883a 	mov	r17,r4
  809a30:	2821883a 	mov	r16,r5
  809a34:	39000204 	addi	r4,r7,8
  809a38:	01400244 	movi	r5,9
  809a3c:	dcc00315 	stw	r19,12(sp)
  809a40:	dc800215 	stw	r18,8(sp)
  809a44:	dfc00615 	stw	ra,24(sp)
  809a48:	dd400515 	stw	r21,20(sp)
  809a4c:	dd000415 	stw	r20,16(sp)
  809a50:	3825883a 	mov	r18,r7
  809a54:	3027883a 	mov	r19,r6
  809a58:	08154900 	call	815490 <__divsi3>
  809a5c:	00c00044 	movi	r3,1
  809a60:	000b883a 	mov	r5,zero
  809a64:	1880030e 	bge	r3,r2,809a74 <__s2b+0x54>
  809a68:	18c7883a 	add	r3,r3,r3
  809a6c:	29400044 	addi	r5,r5,1
  809a70:	18bffd16 	blt	r3,r2,809a68 <__alt_data_end+0xff809a68>
  809a74:	8809883a 	mov	r4,r17
  809a78:	08098300 	call	809830 <_Balloc>
  809a7c:	d8c00717 	ldw	r3,28(sp)
  809a80:	10c00515 	stw	r3,20(r2)
  809a84:	00c00044 	movi	r3,1
  809a88:	10c00415 	stw	r3,16(r2)
  809a8c:	00c00244 	movi	r3,9
  809a90:	1cc0210e 	bge	r3,r19,809b18 <__s2b+0xf8>
  809a94:	80eb883a 	add	r21,r16,r3
  809a98:	a829883a 	mov	r20,r21
  809a9c:	84e1883a 	add	r16,r16,r19
  809aa0:	a1c00007 	ldb	r7,0(r20)
  809aa4:	01800284 	movi	r6,10
  809aa8:	a5000044 	addi	r20,r20,1
  809aac:	100b883a 	mov	r5,r2
  809ab0:	39fff404 	addi	r7,r7,-48
  809ab4:	8809883a 	mov	r4,r17
  809ab8:	08099000 	call	809900 <__multadd>
  809abc:	a43ff81e 	bne	r20,r16,809aa0 <__alt_data_end+0xff809aa0>
  809ac0:	ace1883a 	add	r16,r21,r19
  809ac4:	843ffe04 	addi	r16,r16,-8
  809ac8:	9c800a0e 	bge	r19,r18,809af4 <__s2b+0xd4>
  809acc:	94e5c83a 	sub	r18,r18,r19
  809ad0:	84a5883a 	add	r18,r16,r18
  809ad4:	81c00007 	ldb	r7,0(r16)
  809ad8:	01800284 	movi	r6,10
  809adc:	84000044 	addi	r16,r16,1
  809ae0:	100b883a 	mov	r5,r2
  809ae4:	39fff404 	addi	r7,r7,-48
  809ae8:	8809883a 	mov	r4,r17
  809aec:	08099000 	call	809900 <__multadd>
  809af0:	84bff81e 	bne	r16,r18,809ad4 <__alt_data_end+0xff809ad4>
  809af4:	dfc00617 	ldw	ra,24(sp)
  809af8:	dd400517 	ldw	r21,20(sp)
  809afc:	dd000417 	ldw	r20,16(sp)
  809b00:	dcc00317 	ldw	r19,12(sp)
  809b04:	dc800217 	ldw	r18,8(sp)
  809b08:	dc400117 	ldw	r17,4(sp)
  809b0c:	dc000017 	ldw	r16,0(sp)
  809b10:	dec00704 	addi	sp,sp,28
  809b14:	f800283a 	ret
  809b18:	84000284 	addi	r16,r16,10
  809b1c:	1827883a 	mov	r19,r3
  809b20:	003fe906 	br	809ac8 <__alt_data_end+0xff809ac8>

00809b24 <__hi0bits>:
  809b24:	20bfffec 	andhi	r2,r4,65535
  809b28:	1000141e 	bne	r2,zero,809b7c <__hi0bits+0x58>
  809b2c:	2008943a 	slli	r4,r4,16
  809b30:	00800404 	movi	r2,16
  809b34:	20ffc02c 	andhi	r3,r4,65280
  809b38:	1800021e 	bne	r3,zero,809b44 <__hi0bits+0x20>
  809b3c:	2008923a 	slli	r4,r4,8
  809b40:	10800204 	addi	r2,r2,8
  809b44:	20fc002c 	andhi	r3,r4,61440
  809b48:	1800021e 	bne	r3,zero,809b54 <__hi0bits+0x30>
  809b4c:	2008913a 	slli	r4,r4,4
  809b50:	10800104 	addi	r2,r2,4
  809b54:	20f0002c 	andhi	r3,r4,49152
  809b58:	1800031e 	bne	r3,zero,809b68 <__hi0bits+0x44>
  809b5c:	2109883a 	add	r4,r4,r4
  809b60:	10800084 	addi	r2,r2,2
  809b64:	2109883a 	add	r4,r4,r4
  809b68:	20000316 	blt	r4,zero,809b78 <__hi0bits+0x54>
  809b6c:	2110002c 	andhi	r4,r4,16384
  809b70:	2000041e 	bne	r4,zero,809b84 <__hi0bits+0x60>
  809b74:	00800804 	movi	r2,32
  809b78:	f800283a 	ret
  809b7c:	0005883a 	mov	r2,zero
  809b80:	003fec06 	br	809b34 <__alt_data_end+0xff809b34>
  809b84:	10800044 	addi	r2,r2,1
  809b88:	f800283a 	ret

00809b8c <__lo0bits>:
  809b8c:	20c00017 	ldw	r3,0(r4)
  809b90:	188001cc 	andi	r2,r3,7
  809b94:	10000826 	beq	r2,zero,809bb8 <__lo0bits+0x2c>
  809b98:	1880004c 	andi	r2,r3,1
  809b9c:	1000211e 	bne	r2,zero,809c24 <__lo0bits+0x98>
  809ba0:	1880008c 	andi	r2,r3,2
  809ba4:	1000211e 	bne	r2,zero,809c2c <__lo0bits+0xa0>
  809ba8:	1806d0ba 	srli	r3,r3,2
  809bac:	00800084 	movi	r2,2
  809bb0:	20c00015 	stw	r3,0(r4)
  809bb4:	f800283a 	ret
  809bb8:	18bfffcc 	andi	r2,r3,65535
  809bbc:	10001326 	beq	r2,zero,809c0c <__lo0bits+0x80>
  809bc0:	0005883a 	mov	r2,zero
  809bc4:	19403fcc 	andi	r5,r3,255
  809bc8:	2800021e 	bne	r5,zero,809bd4 <__lo0bits+0x48>
  809bcc:	1806d23a 	srli	r3,r3,8
  809bd0:	10800204 	addi	r2,r2,8
  809bd4:	194003cc 	andi	r5,r3,15
  809bd8:	2800021e 	bne	r5,zero,809be4 <__lo0bits+0x58>
  809bdc:	1806d13a 	srli	r3,r3,4
  809be0:	10800104 	addi	r2,r2,4
  809be4:	194000cc 	andi	r5,r3,3
  809be8:	2800021e 	bne	r5,zero,809bf4 <__lo0bits+0x68>
  809bec:	1806d0ba 	srli	r3,r3,2
  809bf0:	10800084 	addi	r2,r2,2
  809bf4:	1940004c 	andi	r5,r3,1
  809bf8:	2800081e 	bne	r5,zero,809c1c <__lo0bits+0x90>
  809bfc:	1806d07a 	srli	r3,r3,1
  809c00:	1800051e 	bne	r3,zero,809c18 <__lo0bits+0x8c>
  809c04:	00800804 	movi	r2,32
  809c08:	f800283a 	ret
  809c0c:	1806d43a 	srli	r3,r3,16
  809c10:	00800404 	movi	r2,16
  809c14:	003feb06 	br	809bc4 <__alt_data_end+0xff809bc4>
  809c18:	10800044 	addi	r2,r2,1
  809c1c:	20c00015 	stw	r3,0(r4)
  809c20:	f800283a 	ret
  809c24:	0005883a 	mov	r2,zero
  809c28:	f800283a 	ret
  809c2c:	1806d07a 	srli	r3,r3,1
  809c30:	00800044 	movi	r2,1
  809c34:	20c00015 	stw	r3,0(r4)
  809c38:	f800283a 	ret

00809c3c <__i2b>:
  809c3c:	defffd04 	addi	sp,sp,-12
  809c40:	dc000015 	stw	r16,0(sp)
  809c44:	04000044 	movi	r16,1
  809c48:	dc400115 	stw	r17,4(sp)
  809c4c:	2823883a 	mov	r17,r5
  809c50:	800b883a 	mov	r5,r16
  809c54:	dfc00215 	stw	ra,8(sp)
  809c58:	08098300 	call	809830 <_Balloc>
  809c5c:	14400515 	stw	r17,20(r2)
  809c60:	14000415 	stw	r16,16(r2)
  809c64:	dfc00217 	ldw	ra,8(sp)
  809c68:	dc400117 	ldw	r17,4(sp)
  809c6c:	dc000017 	ldw	r16,0(sp)
  809c70:	dec00304 	addi	sp,sp,12
  809c74:	f800283a 	ret

00809c78 <__multiply>:
  809c78:	defffa04 	addi	sp,sp,-24
  809c7c:	dcc00315 	stw	r19,12(sp)
  809c80:	dc800215 	stw	r18,8(sp)
  809c84:	34c00417 	ldw	r19,16(r6)
  809c88:	2c800417 	ldw	r18,16(r5)
  809c8c:	dd000415 	stw	r20,16(sp)
  809c90:	dc400115 	stw	r17,4(sp)
  809c94:	dfc00515 	stw	ra,20(sp)
  809c98:	dc000015 	stw	r16,0(sp)
  809c9c:	2829883a 	mov	r20,r5
  809ca0:	3023883a 	mov	r17,r6
  809ca4:	94c0050e 	bge	r18,r19,809cbc <__multiply+0x44>
  809ca8:	9007883a 	mov	r3,r18
  809cac:	3029883a 	mov	r20,r6
  809cb0:	9825883a 	mov	r18,r19
  809cb4:	2823883a 	mov	r17,r5
  809cb8:	1827883a 	mov	r19,r3
  809cbc:	a0800217 	ldw	r2,8(r20)
  809cc0:	94e1883a 	add	r16,r18,r19
  809cc4:	a1400117 	ldw	r5,4(r20)
  809cc8:	1400010e 	bge	r2,r16,809cd0 <__multiply+0x58>
  809ccc:	29400044 	addi	r5,r5,1
  809cd0:	08098300 	call	809830 <_Balloc>
  809cd4:	8415883a 	add	r10,r16,r16
  809cd8:	12c00504 	addi	r11,r2,20
  809cdc:	5295883a 	add	r10,r10,r10
  809ce0:	5a95883a 	add	r10,r11,r10
  809ce4:	5807883a 	mov	r3,r11
  809ce8:	5a80032e 	bgeu	r11,r10,809cf8 <__multiply+0x80>
  809cec:	18000015 	stw	zero,0(r3)
  809cf0:	18c00104 	addi	r3,r3,4
  809cf4:	1abffd36 	bltu	r3,r10,809cec <__alt_data_end+0xff809cec>
  809cf8:	9ce7883a 	add	r19,r19,r19
  809cfc:	94a5883a 	add	r18,r18,r18
  809d00:	89800504 	addi	r6,r17,20
  809d04:	9ce7883a 	add	r19,r19,r19
  809d08:	a3400504 	addi	r13,r20,20
  809d0c:	94a5883a 	add	r18,r18,r18
  809d10:	34d9883a 	add	r12,r6,r19
  809d14:	6c93883a 	add	r9,r13,r18
  809d18:	3300422e 	bgeu	r6,r12,809e24 <__multiply+0x1ac>
  809d1c:	37c00017 	ldw	ra,0(r6)
  809d20:	fbffffcc 	andi	r15,ra,65535
  809d24:	78001b26 	beq	r15,zero,809d94 <__multiply+0x11c>
  809d28:	5811883a 	mov	r8,r11
  809d2c:	681d883a 	mov	r14,r13
  809d30:	000f883a 	mov	r7,zero
  809d34:	71000017 	ldw	r4,0(r14)
  809d38:	40c00017 	ldw	r3,0(r8)
  809d3c:	73800104 	addi	r14,r14,4
  809d40:	217fffcc 	andi	r5,r4,65535
  809d44:	2bcb383a 	mul	r5,r5,r15
  809d48:	2008d43a 	srli	r4,r4,16
  809d4c:	1c7fffcc 	andi	r17,r3,65535
  809d50:	2c4b883a 	add	r5,r5,r17
  809d54:	29cb883a 	add	r5,r5,r7
  809d58:	23c9383a 	mul	r4,r4,r15
  809d5c:	1806d43a 	srli	r3,r3,16
  809d60:	280ed43a 	srli	r7,r5,16
  809d64:	297fffcc 	andi	r5,r5,65535
  809d68:	20c7883a 	add	r3,r4,r3
  809d6c:	19c7883a 	add	r3,r3,r7
  809d70:	1808943a 	slli	r4,r3,16
  809d74:	4023883a 	mov	r17,r8
  809d78:	180ed43a 	srli	r7,r3,16
  809d7c:	214ab03a 	or	r5,r4,r5
  809d80:	41400015 	stw	r5,0(r8)
  809d84:	42000104 	addi	r8,r8,4
  809d88:	727fea36 	bltu	r14,r9,809d34 <__alt_data_end+0xff809d34>
  809d8c:	89c00115 	stw	r7,4(r17)
  809d90:	37c00017 	ldw	ra,0(r6)
  809d94:	f83ed43a 	srli	ra,ra,16
  809d98:	f8001f26 	beq	ra,zero,809e18 <__multiply+0x1a0>
  809d9c:	58c00017 	ldw	r3,0(r11)
  809da0:	681d883a 	mov	r14,r13
  809da4:	581f883a 	mov	r15,r11
  809da8:	1811883a 	mov	r8,r3
  809dac:	5825883a 	mov	r18,r11
  809db0:	000f883a 	mov	r7,zero
  809db4:	00000106 	br	809dbc <__multiply+0x144>
  809db8:	8825883a 	mov	r18,r17
  809dbc:	7140000b 	ldhu	r5,0(r14)
  809dc0:	4010d43a 	srli	r8,r8,16
  809dc4:	193fffcc 	andi	r4,r3,65535
  809dc8:	2fcb383a 	mul	r5,r5,ra
  809dcc:	7bc00104 	addi	r15,r15,4
  809dd0:	73800104 	addi	r14,r14,4
  809dd4:	2a0b883a 	add	r5,r5,r8
  809dd8:	29cb883a 	add	r5,r5,r7
  809ddc:	2806943a 	slli	r3,r5,16
  809de0:	94400104 	addi	r17,r18,4
  809de4:	280ad43a 	srli	r5,r5,16
  809de8:	1908b03a 	or	r4,r3,r4
  809dec:	793fff15 	stw	r4,-4(r15)
  809df0:	70ffff17 	ldw	r3,-4(r14)
  809df4:	8a000017 	ldw	r8,0(r17)
  809df8:	1806d43a 	srli	r3,r3,16
  809dfc:	413fffcc 	andi	r4,r8,65535
  809e00:	1fc7383a 	mul	r3,r3,ra
  809e04:	1907883a 	add	r3,r3,r4
  809e08:	1947883a 	add	r3,r3,r5
  809e0c:	180ed43a 	srli	r7,r3,16
  809e10:	727fe936 	bltu	r14,r9,809db8 <__alt_data_end+0xff809db8>
  809e14:	90c00115 	stw	r3,4(r18)
  809e18:	31800104 	addi	r6,r6,4
  809e1c:	5ac00104 	addi	r11,r11,4
  809e20:	333fbe36 	bltu	r6,r12,809d1c <__alt_data_end+0xff809d1c>
  809e24:	0400090e 	bge	zero,r16,809e4c <__multiply+0x1d4>
  809e28:	50ffff17 	ldw	r3,-4(r10)
  809e2c:	52bfff04 	addi	r10,r10,-4
  809e30:	18000326 	beq	r3,zero,809e40 <__multiply+0x1c8>
  809e34:	00000506 	br	809e4c <__multiply+0x1d4>
  809e38:	50c00017 	ldw	r3,0(r10)
  809e3c:	1800031e 	bne	r3,zero,809e4c <__multiply+0x1d4>
  809e40:	843fffc4 	addi	r16,r16,-1
  809e44:	52bfff04 	addi	r10,r10,-4
  809e48:	803ffb1e 	bne	r16,zero,809e38 <__alt_data_end+0xff809e38>
  809e4c:	14000415 	stw	r16,16(r2)
  809e50:	dfc00517 	ldw	ra,20(sp)
  809e54:	dd000417 	ldw	r20,16(sp)
  809e58:	dcc00317 	ldw	r19,12(sp)
  809e5c:	dc800217 	ldw	r18,8(sp)
  809e60:	dc400117 	ldw	r17,4(sp)
  809e64:	dc000017 	ldw	r16,0(sp)
  809e68:	dec00604 	addi	sp,sp,24
  809e6c:	f800283a 	ret

00809e70 <__pow5mult>:
  809e70:	defffa04 	addi	sp,sp,-24
  809e74:	dcc00315 	stw	r19,12(sp)
  809e78:	dc000015 	stw	r16,0(sp)
  809e7c:	dfc00515 	stw	ra,20(sp)
  809e80:	dd000415 	stw	r20,16(sp)
  809e84:	dc800215 	stw	r18,8(sp)
  809e88:	dc400115 	stw	r17,4(sp)
  809e8c:	308000cc 	andi	r2,r6,3
  809e90:	3021883a 	mov	r16,r6
  809e94:	2027883a 	mov	r19,r4
  809e98:	10002f1e 	bne	r2,zero,809f58 <__pow5mult+0xe8>
  809e9c:	2825883a 	mov	r18,r5
  809ea0:	8021d0ba 	srai	r16,r16,2
  809ea4:	80001a26 	beq	r16,zero,809f10 <__pow5mult+0xa0>
  809ea8:	9c401217 	ldw	r17,72(r19)
  809eac:	8800061e 	bne	r17,zero,809ec8 <__pow5mult+0x58>
  809eb0:	00003406 	br	809f84 <__pow5mult+0x114>
  809eb4:	8021d07a 	srai	r16,r16,1
  809eb8:	80001526 	beq	r16,zero,809f10 <__pow5mult+0xa0>
  809ebc:	88800017 	ldw	r2,0(r17)
  809ec0:	10001c26 	beq	r2,zero,809f34 <__pow5mult+0xc4>
  809ec4:	1023883a 	mov	r17,r2
  809ec8:	8080004c 	andi	r2,r16,1
  809ecc:	103ff926 	beq	r2,zero,809eb4 <__alt_data_end+0xff809eb4>
  809ed0:	880d883a 	mov	r6,r17
  809ed4:	900b883a 	mov	r5,r18
  809ed8:	9809883a 	mov	r4,r19
  809edc:	0809c780 	call	809c78 <__multiply>
  809ee0:	90001b26 	beq	r18,zero,809f50 <__pow5mult+0xe0>
  809ee4:	91000117 	ldw	r4,4(r18)
  809ee8:	98c01317 	ldw	r3,76(r19)
  809eec:	8021d07a 	srai	r16,r16,1
  809ef0:	2109883a 	add	r4,r4,r4
  809ef4:	2109883a 	add	r4,r4,r4
  809ef8:	1907883a 	add	r3,r3,r4
  809efc:	19000017 	ldw	r4,0(r3)
  809f00:	91000015 	stw	r4,0(r18)
  809f04:	1c800015 	stw	r18,0(r3)
  809f08:	1025883a 	mov	r18,r2
  809f0c:	803feb1e 	bne	r16,zero,809ebc <__alt_data_end+0xff809ebc>
  809f10:	9005883a 	mov	r2,r18
  809f14:	dfc00517 	ldw	ra,20(sp)
  809f18:	dd000417 	ldw	r20,16(sp)
  809f1c:	dcc00317 	ldw	r19,12(sp)
  809f20:	dc800217 	ldw	r18,8(sp)
  809f24:	dc400117 	ldw	r17,4(sp)
  809f28:	dc000017 	ldw	r16,0(sp)
  809f2c:	dec00604 	addi	sp,sp,24
  809f30:	f800283a 	ret
  809f34:	880d883a 	mov	r6,r17
  809f38:	880b883a 	mov	r5,r17
  809f3c:	9809883a 	mov	r4,r19
  809f40:	0809c780 	call	809c78 <__multiply>
  809f44:	88800015 	stw	r2,0(r17)
  809f48:	10000015 	stw	zero,0(r2)
  809f4c:	003fdd06 	br	809ec4 <__alt_data_end+0xff809ec4>
  809f50:	1025883a 	mov	r18,r2
  809f54:	003fd706 	br	809eb4 <__alt_data_end+0xff809eb4>
  809f58:	10bfffc4 	addi	r2,r2,-1
  809f5c:	1085883a 	add	r2,r2,r2
  809f60:	00c020b4 	movhi	r3,130
  809f64:	18f22404 	addi	r3,r3,-14192
  809f68:	1085883a 	add	r2,r2,r2
  809f6c:	1885883a 	add	r2,r3,r2
  809f70:	11800017 	ldw	r6,0(r2)
  809f74:	000f883a 	mov	r7,zero
  809f78:	08099000 	call	809900 <__multadd>
  809f7c:	1025883a 	mov	r18,r2
  809f80:	003fc706 	br	809ea0 <__alt_data_end+0xff809ea0>
  809f84:	05000044 	movi	r20,1
  809f88:	a00b883a 	mov	r5,r20
  809f8c:	9809883a 	mov	r4,r19
  809f90:	08098300 	call	809830 <_Balloc>
  809f94:	1023883a 	mov	r17,r2
  809f98:	00809c44 	movi	r2,625
  809f9c:	88800515 	stw	r2,20(r17)
  809fa0:	8d000415 	stw	r20,16(r17)
  809fa4:	9c401215 	stw	r17,72(r19)
  809fa8:	88000015 	stw	zero,0(r17)
  809fac:	003fc606 	br	809ec8 <__alt_data_end+0xff809ec8>

00809fb0 <__lshift>:
  809fb0:	defff904 	addi	sp,sp,-28
  809fb4:	dd400515 	stw	r21,20(sp)
  809fb8:	dcc00315 	stw	r19,12(sp)
  809fbc:	302bd17a 	srai	r21,r6,5
  809fc0:	2cc00417 	ldw	r19,16(r5)
  809fc4:	28800217 	ldw	r2,8(r5)
  809fc8:	dd000415 	stw	r20,16(sp)
  809fcc:	ace7883a 	add	r19,r21,r19
  809fd0:	dc800215 	stw	r18,8(sp)
  809fd4:	dc400115 	stw	r17,4(sp)
  809fd8:	dc000015 	stw	r16,0(sp)
  809fdc:	dfc00615 	stw	ra,24(sp)
  809fe0:	9c000044 	addi	r16,r19,1
  809fe4:	2823883a 	mov	r17,r5
  809fe8:	3029883a 	mov	r20,r6
  809fec:	2025883a 	mov	r18,r4
  809ff0:	29400117 	ldw	r5,4(r5)
  809ff4:	1400030e 	bge	r2,r16,80a004 <__lshift+0x54>
  809ff8:	1085883a 	add	r2,r2,r2
  809ffc:	29400044 	addi	r5,r5,1
  80a000:	143ffd16 	blt	r2,r16,809ff8 <__alt_data_end+0xff809ff8>
  80a004:	9009883a 	mov	r4,r18
  80a008:	08098300 	call	809830 <_Balloc>
  80a00c:	10c00504 	addi	r3,r2,20
  80a010:	0540070e 	bge	zero,r21,80a030 <__lshift+0x80>
  80a014:	ad6b883a 	add	r21,r21,r21
  80a018:	ad6b883a 	add	r21,r21,r21
  80a01c:	1809883a 	mov	r4,r3
  80a020:	1d47883a 	add	r3,r3,r21
  80a024:	20000015 	stw	zero,0(r4)
  80a028:	21000104 	addi	r4,r4,4
  80a02c:	193ffd1e 	bne	r3,r4,80a024 <__alt_data_end+0xff80a024>
  80a030:	8a000417 	ldw	r8,16(r17)
  80a034:	89000504 	addi	r4,r17,20
  80a038:	a18007cc 	andi	r6,r20,31
  80a03c:	4211883a 	add	r8,r8,r8
  80a040:	4211883a 	add	r8,r8,r8
  80a044:	2211883a 	add	r8,r4,r8
  80a048:	30002326 	beq	r6,zero,80a0d8 <__lshift+0x128>
  80a04c:	02400804 	movi	r9,32
  80a050:	4993c83a 	sub	r9,r9,r6
  80a054:	000b883a 	mov	r5,zero
  80a058:	21c00017 	ldw	r7,0(r4)
  80a05c:	1815883a 	mov	r10,r3
  80a060:	18c00104 	addi	r3,r3,4
  80a064:	398e983a 	sll	r7,r7,r6
  80a068:	21000104 	addi	r4,r4,4
  80a06c:	394ab03a 	or	r5,r7,r5
  80a070:	197fff15 	stw	r5,-4(r3)
  80a074:	217fff17 	ldw	r5,-4(r4)
  80a078:	2a4ad83a 	srl	r5,r5,r9
  80a07c:	223ff636 	bltu	r4,r8,80a058 <__alt_data_end+0xff80a058>
  80a080:	51400115 	stw	r5,4(r10)
  80a084:	28001a1e 	bne	r5,zero,80a0f0 <__lshift+0x140>
  80a088:	843fffc4 	addi	r16,r16,-1
  80a08c:	14000415 	stw	r16,16(r2)
  80a090:	88000826 	beq	r17,zero,80a0b4 <__lshift+0x104>
  80a094:	89000117 	ldw	r4,4(r17)
  80a098:	90c01317 	ldw	r3,76(r18)
  80a09c:	2109883a 	add	r4,r4,r4
  80a0a0:	2109883a 	add	r4,r4,r4
  80a0a4:	1907883a 	add	r3,r3,r4
  80a0a8:	19000017 	ldw	r4,0(r3)
  80a0ac:	89000015 	stw	r4,0(r17)
  80a0b0:	1c400015 	stw	r17,0(r3)
  80a0b4:	dfc00617 	ldw	ra,24(sp)
  80a0b8:	dd400517 	ldw	r21,20(sp)
  80a0bc:	dd000417 	ldw	r20,16(sp)
  80a0c0:	dcc00317 	ldw	r19,12(sp)
  80a0c4:	dc800217 	ldw	r18,8(sp)
  80a0c8:	dc400117 	ldw	r17,4(sp)
  80a0cc:	dc000017 	ldw	r16,0(sp)
  80a0d0:	dec00704 	addi	sp,sp,28
  80a0d4:	f800283a 	ret
  80a0d8:	21400017 	ldw	r5,0(r4)
  80a0dc:	18c00104 	addi	r3,r3,4
  80a0e0:	21000104 	addi	r4,r4,4
  80a0e4:	197fff15 	stw	r5,-4(r3)
  80a0e8:	223ffb36 	bltu	r4,r8,80a0d8 <__alt_data_end+0xff80a0d8>
  80a0ec:	003fe606 	br	80a088 <__alt_data_end+0xff80a088>
  80a0f0:	9c000084 	addi	r16,r19,2
  80a0f4:	003fe406 	br	80a088 <__alt_data_end+0xff80a088>

0080a0f8 <__mcmp>:
  80a0f8:	20800417 	ldw	r2,16(r4)
  80a0fc:	28c00417 	ldw	r3,16(r5)
  80a100:	10c5c83a 	sub	r2,r2,r3
  80a104:	1000111e 	bne	r2,zero,80a14c <__mcmp+0x54>
  80a108:	18c7883a 	add	r3,r3,r3
  80a10c:	18c7883a 	add	r3,r3,r3
  80a110:	21000504 	addi	r4,r4,20
  80a114:	29400504 	addi	r5,r5,20
  80a118:	20c5883a 	add	r2,r4,r3
  80a11c:	28cb883a 	add	r5,r5,r3
  80a120:	00000106 	br	80a128 <__mcmp+0x30>
  80a124:	20800a2e 	bgeu	r4,r2,80a150 <__mcmp+0x58>
  80a128:	10bfff04 	addi	r2,r2,-4
  80a12c:	297fff04 	addi	r5,r5,-4
  80a130:	11800017 	ldw	r6,0(r2)
  80a134:	28c00017 	ldw	r3,0(r5)
  80a138:	30fffa26 	beq	r6,r3,80a124 <__alt_data_end+0xff80a124>
  80a13c:	30c00236 	bltu	r6,r3,80a148 <__mcmp+0x50>
  80a140:	00800044 	movi	r2,1
  80a144:	f800283a 	ret
  80a148:	00bfffc4 	movi	r2,-1
  80a14c:	f800283a 	ret
  80a150:	0005883a 	mov	r2,zero
  80a154:	f800283a 	ret

0080a158 <__mdiff>:
  80a158:	28c00417 	ldw	r3,16(r5)
  80a15c:	30800417 	ldw	r2,16(r6)
  80a160:	defffa04 	addi	sp,sp,-24
  80a164:	dcc00315 	stw	r19,12(sp)
  80a168:	dc800215 	stw	r18,8(sp)
  80a16c:	dfc00515 	stw	ra,20(sp)
  80a170:	dd000415 	stw	r20,16(sp)
  80a174:	dc400115 	stw	r17,4(sp)
  80a178:	dc000015 	stw	r16,0(sp)
  80a17c:	1887c83a 	sub	r3,r3,r2
  80a180:	2825883a 	mov	r18,r5
  80a184:	3027883a 	mov	r19,r6
  80a188:	1800141e 	bne	r3,zero,80a1dc <__mdiff+0x84>
  80a18c:	1085883a 	add	r2,r2,r2
  80a190:	1085883a 	add	r2,r2,r2
  80a194:	2a000504 	addi	r8,r5,20
  80a198:	34000504 	addi	r16,r6,20
  80a19c:	4087883a 	add	r3,r8,r2
  80a1a0:	8085883a 	add	r2,r16,r2
  80a1a4:	00000106 	br	80a1ac <__mdiff+0x54>
  80a1a8:	40c0592e 	bgeu	r8,r3,80a310 <__mdiff+0x1b8>
  80a1ac:	18ffff04 	addi	r3,r3,-4
  80a1b0:	10bfff04 	addi	r2,r2,-4
  80a1b4:	19c00017 	ldw	r7,0(r3)
  80a1b8:	11400017 	ldw	r5,0(r2)
  80a1bc:	397ffa26 	beq	r7,r5,80a1a8 <__alt_data_end+0xff80a1a8>
  80a1c0:	3940592e 	bgeu	r7,r5,80a328 <__mdiff+0x1d0>
  80a1c4:	9005883a 	mov	r2,r18
  80a1c8:	4023883a 	mov	r17,r8
  80a1cc:	9825883a 	mov	r18,r19
  80a1d0:	05000044 	movi	r20,1
  80a1d4:	1027883a 	mov	r19,r2
  80a1d8:	00000406 	br	80a1ec <__mdiff+0x94>
  80a1dc:	18005616 	blt	r3,zero,80a338 <__mdiff+0x1e0>
  80a1e0:	34400504 	addi	r17,r6,20
  80a1e4:	2c000504 	addi	r16,r5,20
  80a1e8:	0029883a 	mov	r20,zero
  80a1ec:	91400117 	ldw	r5,4(r18)
  80a1f0:	08098300 	call	809830 <_Balloc>
  80a1f4:	92400417 	ldw	r9,16(r18)
  80a1f8:	9b000417 	ldw	r12,16(r19)
  80a1fc:	12c00504 	addi	r11,r2,20
  80a200:	4a51883a 	add	r8,r9,r9
  80a204:	6319883a 	add	r12,r12,r12
  80a208:	4211883a 	add	r8,r8,r8
  80a20c:	6319883a 	add	r12,r12,r12
  80a210:	15000315 	stw	r20,12(r2)
  80a214:	8211883a 	add	r8,r16,r8
  80a218:	8b19883a 	add	r12,r17,r12
  80a21c:	0007883a 	mov	r3,zero
  80a220:	81400017 	ldw	r5,0(r16)
  80a224:	89c00017 	ldw	r7,0(r17)
  80a228:	59800104 	addi	r6,r11,4
  80a22c:	293fffcc 	andi	r4,r5,65535
  80a230:	20c7883a 	add	r3,r4,r3
  80a234:	393fffcc 	andi	r4,r7,65535
  80a238:	1909c83a 	sub	r4,r3,r4
  80a23c:	280ad43a 	srli	r5,r5,16
  80a240:	380ed43a 	srli	r7,r7,16
  80a244:	2007d43a 	srai	r3,r4,16
  80a248:	213fffcc 	andi	r4,r4,65535
  80a24c:	29cbc83a 	sub	r5,r5,r7
  80a250:	28c7883a 	add	r3,r5,r3
  80a254:	180a943a 	slli	r5,r3,16
  80a258:	8c400104 	addi	r17,r17,4
  80a25c:	84000104 	addi	r16,r16,4
  80a260:	2908b03a 	or	r4,r5,r4
  80a264:	59000015 	stw	r4,0(r11)
  80a268:	1807d43a 	srai	r3,r3,16
  80a26c:	3015883a 	mov	r10,r6
  80a270:	3017883a 	mov	r11,r6
  80a274:	8b3fea36 	bltu	r17,r12,80a220 <__alt_data_end+0xff80a220>
  80a278:	8200162e 	bgeu	r16,r8,80a2d4 <__mdiff+0x17c>
  80a27c:	8017883a 	mov	r11,r16
  80a280:	59400017 	ldw	r5,0(r11)
  80a284:	31800104 	addi	r6,r6,4
  80a288:	5ac00104 	addi	r11,r11,4
  80a28c:	293fffcc 	andi	r4,r5,65535
  80a290:	20c7883a 	add	r3,r4,r3
  80a294:	280ed43a 	srli	r7,r5,16
  80a298:	180bd43a 	srai	r5,r3,16
  80a29c:	193fffcc 	andi	r4,r3,65535
  80a2a0:	3947883a 	add	r3,r7,r5
  80a2a4:	180a943a 	slli	r5,r3,16
  80a2a8:	1807d43a 	srai	r3,r3,16
  80a2ac:	2908b03a 	or	r4,r5,r4
  80a2b0:	313fff15 	stw	r4,-4(r6)
  80a2b4:	5a3ff236 	bltu	r11,r8,80a280 <__alt_data_end+0xff80a280>
  80a2b8:	0406303a 	nor	r3,zero,r16
  80a2bc:	1a07883a 	add	r3,r3,r8
  80a2c0:	1806d0ba 	srli	r3,r3,2
  80a2c4:	18c00044 	addi	r3,r3,1
  80a2c8:	18c7883a 	add	r3,r3,r3
  80a2cc:	18c7883a 	add	r3,r3,r3
  80a2d0:	50d5883a 	add	r10,r10,r3
  80a2d4:	50ffff04 	addi	r3,r10,-4
  80a2d8:	2000041e 	bne	r4,zero,80a2ec <__mdiff+0x194>
  80a2dc:	18ffff04 	addi	r3,r3,-4
  80a2e0:	19000017 	ldw	r4,0(r3)
  80a2e4:	4a7fffc4 	addi	r9,r9,-1
  80a2e8:	203ffc26 	beq	r4,zero,80a2dc <__alt_data_end+0xff80a2dc>
  80a2ec:	12400415 	stw	r9,16(r2)
  80a2f0:	dfc00517 	ldw	ra,20(sp)
  80a2f4:	dd000417 	ldw	r20,16(sp)
  80a2f8:	dcc00317 	ldw	r19,12(sp)
  80a2fc:	dc800217 	ldw	r18,8(sp)
  80a300:	dc400117 	ldw	r17,4(sp)
  80a304:	dc000017 	ldw	r16,0(sp)
  80a308:	dec00604 	addi	sp,sp,24
  80a30c:	f800283a 	ret
  80a310:	000b883a 	mov	r5,zero
  80a314:	08098300 	call	809830 <_Balloc>
  80a318:	00c00044 	movi	r3,1
  80a31c:	10c00415 	stw	r3,16(r2)
  80a320:	10000515 	stw	zero,20(r2)
  80a324:	003ff206 	br	80a2f0 <__alt_data_end+0xff80a2f0>
  80a328:	8023883a 	mov	r17,r16
  80a32c:	0029883a 	mov	r20,zero
  80a330:	4021883a 	mov	r16,r8
  80a334:	003fad06 	br	80a1ec <__alt_data_end+0xff80a1ec>
  80a338:	9005883a 	mov	r2,r18
  80a33c:	94400504 	addi	r17,r18,20
  80a340:	9c000504 	addi	r16,r19,20
  80a344:	9825883a 	mov	r18,r19
  80a348:	05000044 	movi	r20,1
  80a34c:	1027883a 	mov	r19,r2
  80a350:	003fa606 	br	80a1ec <__alt_data_end+0xff80a1ec>

0080a354 <__ulp>:
  80a354:	295ffc2c 	andhi	r5,r5,32752
  80a358:	00bf3034 	movhi	r2,64704
  80a35c:	2887883a 	add	r3,r5,r2
  80a360:	00c0020e 	bge	zero,r3,80a36c <__ulp+0x18>
  80a364:	0005883a 	mov	r2,zero
  80a368:	f800283a 	ret
  80a36c:	00c7c83a 	sub	r3,zero,r3
  80a370:	1807d53a 	srai	r3,r3,20
  80a374:	008004c4 	movi	r2,19
  80a378:	10c00b0e 	bge	r2,r3,80a3a8 <__ulp+0x54>
  80a37c:	18bffb04 	addi	r2,r3,-20
  80a380:	01000784 	movi	r4,30
  80a384:	0007883a 	mov	r3,zero
  80a388:	20800516 	blt	r4,r2,80a3a0 <__ulp+0x4c>
  80a38c:	010007c4 	movi	r4,31
  80a390:	2089c83a 	sub	r4,r4,r2
  80a394:	00800044 	movi	r2,1
  80a398:	1104983a 	sll	r2,r2,r4
  80a39c:	f800283a 	ret
  80a3a0:	00800044 	movi	r2,1
  80a3a4:	f800283a 	ret
  80a3a8:	01400234 	movhi	r5,8
  80a3ac:	28c7d83a 	sra	r3,r5,r3
  80a3b0:	0005883a 	mov	r2,zero
  80a3b4:	f800283a 	ret

0080a3b8 <__b2d>:
  80a3b8:	defffa04 	addi	sp,sp,-24
  80a3bc:	dc000015 	stw	r16,0(sp)
  80a3c0:	24000417 	ldw	r16,16(r4)
  80a3c4:	dc400115 	stw	r17,4(sp)
  80a3c8:	24400504 	addi	r17,r4,20
  80a3cc:	8421883a 	add	r16,r16,r16
  80a3d0:	8421883a 	add	r16,r16,r16
  80a3d4:	8c21883a 	add	r16,r17,r16
  80a3d8:	dc800215 	stw	r18,8(sp)
  80a3dc:	84bfff17 	ldw	r18,-4(r16)
  80a3e0:	dd000415 	stw	r20,16(sp)
  80a3e4:	dcc00315 	stw	r19,12(sp)
  80a3e8:	9009883a 	mov	r4,r18
  80a3ec:	2829883a 	mov	r20,r5
  80a3f0:	dfc00515 	stw	ra,20(sp)
  80a3f4:	0809b240 	call	809b24 <__hi0bits>
  80a3f8:	00c00804 	movi	r3,32
  80a3fc:	1889c83a 	sub	r4,r3,r2
  80a400:	a1000015 	stw	r4,0(r20)
  80a404:	01000284 	movi	r4,10
  80a408:	84ffff04 	addi	r19,r16,-4
  80a40c:	20801216 	blt	r4,r2,80a458 <__b2d+0xa0>
  80a410:	018002c4 	movi	r6,11
  80a414:	308dc83a 	sub	r6,r6,r2
  80a418:	9186d83a 	srl	r3,r18,r6
  80a41c:	18cffc34 	orhi	r3,r3,16368
  80a420:	8cc0212e 	bgeu	r17,r19,80a4a8 <__b2d+0xf0>
  80a424:	813ffe17 	ldw	r4,-8(r16)
  80a428:	218cd83a 	srl	r6,r4,r6
  80a42c:	10800544 	addi	r2,r2,21
  80a430:	9084983a 	sll	r2,r18,r2
  80a434:	1184b03a 	or	r2,r2,r6
  80a438:	dfc00517 	ldw	ra,20(sp)
  80a43c:	dd000417 	ldw	r20,16(sp)
  80a440:	dcc00317 	ldw	r19,12(sp)
  80a444:	dc800217 	ldw	r18,8(sp)
  80a448:	dc400117 	ldw	r17,4(sp)
  80a44c:	dc000017 	ldw	r16,0(sp)
  80a450:	dec00604 	addi	sp,sp,24
  80a454:	f800283a 	ret
  80a458:	8cc00f2e 	bgeu	r17,r19,80a498 <__b2d+0xe0>
  80a45c:	117ffd44 	addi	r5,r2,-11
  80a460:	80bffe17 	ldw	r2,-8(r16)
  80a464:	28000e26 	beq	r5,zero,80a4a0 <__b2d+0xe8>
  80a468:	1949c83a 	sub	r4,r3,r5
  80a46c:	9164983a 	sll	r18,r18,r5
  80a470:	1106d83a 	srl	r3,r2,r4
  80a474:	81bffe04 	addi	r6,r16,-8
  80a478:	948ffc34 	orhi	r18,r18,16368
  80a47c:	90c6b03a 	or	r3,r18,r3
  80a480:	89800e2e 	bgeu	r17,r6,80a4bc <__b2d+0x104>
  80a484:	81bffd17 	ldw	r6,-12(r16)
  80a488:	1144983a 	sll	r2,r2,r5
  80a48c:	310ad83a 	srl	r5,r6,r4
  80a490:	2884b03a 	or	r2,r5,r2
  80a494:	003fe806 	br	80a438 <__alt_data_end+0xff80a438>
  80a498:	10bffd44 	addi	r2,r2,-11
  80a49c:	1000041e 	bne	r2,zero,80a4b0 <__b2d+0xf8>
  80a4a0:	90cffc34 	orhi	r3,r18,16368
  80a4a4:	003fe406 	br	80a438 <__alt_data_end+0xff80a438>
  80a4a8:	000d883a 	mov	r6,zero
  80a4ac:	003fdf06 	br	80a42c <__alt_data_end+0xff80a42c>
  80a4b0:	90a4983a 	sll	r18,r18,r2
  80a4b4:	0005883a 	mov	r2,zero
  80a4b8:	003ff906 	br	80a4a0 <__alt_data_end+0xff80a4a0>
  80a4bc:	1144983a 	sll	r2,r2,r5
  80a4c0:	003fdd06 	br	80a438 <__alt_data_end+0xff80a438>

0080a4c4 <__d2b>:
  80a4c4:	defff804 	addi	sp,sp,-32
  80a4c8:	dc000215 	stw	r16,8(sp)
  80a4cc:	3021883a 	mov	r16,r6
  80a4d0:	dc400315 	stw	r17,12(sp)
  80a4d4:	8022907a 	slli	r17,r16,1
  80a4d8:	dd000615 	stw	r20,24(sp)
  80a4dc:	2829883a 	mov	r20,r5
  80a4e0:	01400044 	movi	r5,1
  80a4e4:	dcc00515 	stw	r19,20(sp)
  80a4e8:	dc800415 	stw	r18,16(sp)
  80a4ec:	dfc00715 	stw	ra,28(sp)
  80a4f0:	3825883a 	mov	r18,r7
  80a4f4:	8822d57a 	srli	r17,r17,21
  80a4f8:	08098300 	call	809830 <_Balloc>
  80a4fc:	1027883a 	mov	r19,r2
  80a500:	00800434 	movhi	r2,16
  80a504:	10bfffc4 	addi	r2,r2,-1
  80a508:	808c703a 	and	r6,r16,r2
  80a50c:	88000126 	beq	r17,zero,80a514 <__d2b+0x50>
  80a510:	31800434 	orhi	r6,r6,16
  80a514:	d9800015 	stw	r6,0(sp)
  80a518:	a0002426 	beq	r20,zero,80a5ac <__d2b+0xe8>
  80a51c:	d9000104 	addi	r4,sp,4
  80a520:	dd000115 	stw	r20,4(sp)
  80a524:	0809b8c0 	call	809b8c <__lo0bits>
  80a528:	d8c00017 	ldw	r3,0(sp)
  80a52c:	10002f1e 	bne	r2,zero,80a5ec <__d2b+0x128>
  80a530:	d9000117 	ldw	r4,4(sp)
  80a534:	99000515 	stw	r4,20(r19)
  80a538:	1821003a 	cmpeq	r16,r3,zero
  80a53c:	01000084 	movi	r4,2
  80a540:	2421c83a 	sub	r16,r4,r16
  80a544:	98c00615 	stw	r3,24(r19)
  80a548:	9c000415 	stw	r16,16(r19)
  80a54c:	88001f1e 	bne	r17,zero,80a5cc <__d2b+0x108>
  80a550:	10bef384 	addi	r2,r2,-1074
  80a554:	90800015 	stw	r2,0(r18)
  80a558:	00900034 	movhi	r2,16384
  80a55c:	10bfffc4 	addi	r2,r2,-1
  80a560:	8085883a 	add	r2,r16,r2
  80a564:	1085883a 	add	r2,r2,r2
  80a568:	1085883a 	add	r2,r2,r2
  80a56c:	9885883a 	add	r2,r19,r2
  80a570:	11000517 	ldw	r4,20(r2)
  80a574:	8020917a 	slli	r16,r16,5
  80a578:	0809b240 	call	809b24 <__hi0bits>
  80a57c:	d8c00817 	ldw	r3,32(sp)
  80a580:	8085c83a 	sub	r2,r16,r2
  80a584:	18800015 	stw	r2,0(r3)
  80a588:	9805883a 	mov	r2,r19
  80a58c:	dfc00717 	ldw	ra,28(sp)
  80a590:	dd000617 	ldw	r20,24(sp)
  80a594:	dcc00517 	ldw	r19,20(sp)
  80a598:	dc800417 	ldw	r18,16(sp)
  80a59c:	dc400317 	ldw	r17,12(sp)
  80a5a0:	dc000217 	ldw	r16,8(sp)
  80a5a4:	dec00804 	addi	sp,sp,32
  80a5a8:	f800283a 	ret
  80a5ac:	d809883a 	mov	r4,sp
  80a5b0:	0809b8c0 	call	809b8c <__lo0bits>
  80a5b4:	d8c00017 	ldw	r3,0(sp)
  80a5b8:	04000044 	movi	r16,1
  80a5bc:	9c000415 	stw	r16,16(r19)
  80a5c0:	98c00515 	stw	r3,20(r19)
  80a5c4:	10800804 	addi	r2,r2,32
  80a5c8:	883fe126 	beq	r17,zero,80a550 <__alt_data_end+0xff80a550>
  80a5cc:	00c00d44 	movi	r3,53
  80a5d0:	8c7ef344 	addi	r17,r17,-1075
  80a5d4:	88a3883a 	add	r17,r17,r2
  80a5d8:	1885c83a 	sub	r2,r3,r2
  80a5dc:	d8c00817 	ldw	r3,32(sp)
  80a5e0:	94400015 	stw	r17,0(r18)
  80a5e4:	18800015 	stw	r2,0(r3)
  80a5e8:	003fe706 	br	80a588 <__alt_data_end+0xff80a588>
  80a5ec:	01000804 	movi	r4,32
  80a5f0:	2089c83a 	sub	r4,r4,r2
  80a5f4:	1908983a 	sll	r4,r3,r4
  80a5f8:	d9400117 	ldw	r5,4(sp)
  80a5fc:	1886d83a 	srl	r3,r3,r2
  80a600:	2148b03a 	or	r4,r4,r5
  80a604:	99000515 	stw	r4,20(r19)
  80a608:	d8c00015 	stw	r3,0(sp)
  80a60c:	003fca06 	br	80a538 <__alt_data_end+0xff80a538>

0080a610 <__ratio>:
  80a610:	defff904 	addi	sp,sp,-28
  80a614:	dc400315 	stw	r17,12(sp)
  80a618:	2823883a 	mov	r17,r5
  80a61c:	d9400104 	addi	r5,sp,4
  80a620:	dfc00615 	stw	ra,24(sp)
  80a624:	dcc00515 	stw	r19,20(sp)
  80a628:	dc800415 	stw	r18,16(sp)
  80a62c:	2027883a 	mov	r19,r4
  80a630:	dc000215 	stw	r16,8(sp)
  80a634:	080a3b80 	call	80a3b8 <__b2d>
  80a638:	d80b883a 	mov	r5,sp
  80a63c:	8809883a 	mov	r4,r17
  80a640:	1025883a 	mov	r18,r2
  80a644:	1821883a 	mov	r16,r3
  80a648:	080a3b80 	call	80a3b8 <__b2d>
  80a64c:	8a000417 	ldw	r8,16(r17)
  80a650:	99000417 	ldw	r4,16(r19)
  80a654:	d9400117 	ldw	r5,4(sp)
  80a658:	2209c83a 	sub	r4,r4,r8
  80a65c:	2010917a 	slli	r8,r4,5
  80a660:	d9000017 	ldw	r4,0(sp)
  80a664:	2909c83a 	sub	r4,r5,r4
  80a668:	4109883a 	add	r4,r8,r4
  80a66c:	01000e0e 	bge	zero,r4,80a6a8 <__ratio+0x98>
  80a670:	2008953a 	slli	r4,r4,20
  80a674:	2421883a 	add	r16,r4,r16
  80a678:	100d883a 	mov	r6,r2
  80a67c:	180f883a 	mov	r7,r3
  80a680:	9009883a 	mov	r4,r18
  80a684:	800b883a 	mov	r5,r16
  80a688:	08160ec0 	call	8160ec <__divdf3>
  80a68c:	dfc00617 	ldw	ra,24(sp)
  80a690:	dcc00517 	ldw	r19,20(sp)
  80a694:	dc800417 	ldw	r18,16(sp)
  80a698:	dc400317 	ldw	r17,12(sp)
  80a69c:	dc000217 	ldw	r16,8(sp)
  80a6a0:	dec00704 	addi	sp,sp,28
  80a6a4:	f800283a 	ret
  80a6a8:	2008953a 	slli	r4,r4,20
  80a6ac:	1907c83a 	sub	r3,r3,r4
  80a6b0:	003ff106 	br	80a678 <__alt_data_end+0xff80a678>

0080a6b4 <_mprec_log10>:
  80a6b4:	defffe04 	addi	sp,sp,-8
  80a6b8:	dc000015 	stw	r16,0(sp)
  80a6bc:	dfc00115 	stw	ra,4(sp)
  80a6c0:	008005c4 	movi	r2,23
  80a6c4:	2021883a 	mov	r16,r4
  80a6c8:	11000d0e 	bge	r2,r4,80a700 <_mprec_log10+0x4c>
  80a6cc:	0005883a 	mov	r2,zero
  80a6d0:	00cffc34 	movhi	r3,16368
  80a6d4:	843fffc4 	addi	r16,r16,-1
  80a6d8:	000d883a 	mov	r6,zero
  80a6dc:	01d00934 	movhi	r7,16420
  80a6e0:	1009883a 	mov	r4,r2
  80a6e4:	180b883a 	mov	r5,r3
  80a6e8:	0816c2c0 	call	816c2c <__muldf3>
  80a6ec:	803ff91e 	bne	r16,zero,80a6d4 <__alt_data_end+0xff80a6d4>
  80a6f0:	dfc00117 	ldw	ra,4(sp)
  80a6f4:	dc000017 	ldw	r16,0(sp)
  80a6f8:	dec00204 	addi	sp,sp,8
  80a6fc:	f800283a 	ret
  80a700:	202090fa 	slli	r16,r4,3
  80a704:	008020b4 	movhi	r2,130
  80a708:	10b23b04 	addi	r2,r2,-14100
  80a70c:	1421883a 	add	r16,r2,r16
  80a710:	80800017 	ldw	r2,0(r16)
  80a714:	80c00117 	ldw	r3,4(r16)
  80a718:	dfc00117 	ldw	ra,4(sp)
  80a71c:	dc000017 	ldw	r16,0(sp)
  80a720:	dec00204 	addi	sp,sp,8
  80a724:	f800283a 	ret

0080a728 <__copybits>:
  80a728:	297fffc4 	addi	r5,r5,-1
  80a72c:	280fd17a 	srai	r7,r5,5
  80a730:	30c00417 	ldw	r3,16(r6)
  80a734:	30800504 	addi	r2,r6,20
  80a738:	39c00044 	addi	r7,r7,1
  80a73c:	18c7883a 	add	r3,r3,r3
  80a740:	39cf883a 	add	r7,r7,r7
  80a744:	18c7883a 	add	r3,r3,r3
  80a748:	39cf883a 	add	r7,r7,r7
  80a74c:	10c7883a 	add	r3,r2,r3
  80a750:	21cf883a 	add	r7,r4,r7
  80a754:	10c00d2e 	bgeu	r2,r3,80a78c <__copybits+0x64>
  80a758:	200b883a 	mov	r5,r4
  80a75c:	12000017 	ldw	r8,0(r2)
  80a760:	29400104 	addi	r5,r5,4
  80a764:	10800104 	addi	r2,r2,4
  80a768:	2a3fff15 	stw	r8,-4(r5)
  80a76c:	10fffb36 	bltu	r2,r3,80a75c <__alt_data_end+0xff80a75c>
  80a770:	1985c83a 	sub	r2,r3,r6
  80a774:	10bffac4 	addi	r2,r2,-21
  80a778:	1004d0ba 	srli	r2,r2,2
  80a77c:	10800044 	addi	r2,r2,1
  80a780:	1085883a 	add	r2,r2,r2
  80a784:	1085883a 	add	r2,r2,r2
  80a788:	2089883a 	add	r4,r4,r2
  80a78c:	21c0032e 	bgeu	r4,r7,80a79c <__copybits+0x74>
  80a790:	20000015 	stw	zero,0(r4)
  80a794:	21000104 	addi	r4,r4,4
  80a798:	21fffd36 	bltu	r4,r7,80a790 <__alt_data_end+0xff80a790>
  80a79c:	f800283a 	ret

0080a7a0 <__any_on>:
  80a7a0:	20c00417 	ldw	r3,16(r4)
  80a7a4:	2805d17a 	srai	r2,r5,5
  80a7a8:	21000504 	addi	r4,r4,20
  80a7ac:	18800d0e 	bge	r3,r2,80a7e4 <__any_on+0x44>
  80a7b0:	18c7883a 	add	r3,r3,r3
  80a7b4:	18c7883a 	add	r3,r3,r3
  80a7b8:	20c7883a 	add	r3,r4,r3
  80a7bc:	20c0192e 	bgeu	r4,r3,80a824 <__any_on+0x84>
  80a7c0:	18bfff17 	ldw	r2,-4(r3)
  80a7c4:	18ffff04 	addi	r3,r3,-4
  80a7c8:	1000041e 	bne	r2,zero,80a7dc <__any_on+0x3c>
  80a7cc:	20c0142e 	bgeu	r4,r3,80a820 <__any_on+0x80>
  80a7d0:	18ffff04 	addi	r3,r3,-4
  80a7d4:	19400017 	ldw	r5,0(r3)
  80a7d8:	283ffc26 	beq	r5,zero,80a7cc <__alt_data_end+0xff80a7cc>
  80a7dc:	00800044 	movi	r2,1
  80a7e0:	f800283a 	ret
  80a7e4:	10c00a0e 	bge	r2,r3,80a810 <__any_on+0x70>
  80a7e8:	1085883a 	add	r2,r2,r2
  80a7ec:	1085883a 	add	r2,r2,r2
  80a7f0:	294007cc 	andi	r5,r5,31
  80a7f4:	2087883a 	add	r3,r4,r2
  80a7f8:	283ff026 	beq	r5,zero,80a7bc <__alt_data_end+0xff80a7bc>
  80a7fc:	19800017 	ldw	r6,0(r3)
  80a800:	3144d83a 	srl	r2,r6,r5
  80a804:	114a983a 	sll	r5,r2,r5
  80a808:	317ff41e 	bne	r6,r5,80a7dc <__alt_data_end+0xff80a7dc>
  80a80c:	003feb06 	br	80a7bc <__alt_data_end+0xff80a7bc>
  80a810:	1085883a 	add	r2,r2,r2
  80a814:	1085883a 	add	r2,r2,r2
  80a818:	2087883a 	add	r3,r4,r2
  80a81c:	003fe706 	br	80a7bc <__alt_data_end+0xff80a7bc>
  80a820:	f800283a 	ret
  80a824:	0005883a 	mov	r2,zero
  80a828:	f800283a 	ret

0080a82c <_putc_r>:
  80a82c:	defffc04 	addi	sp,sp,-16
  80a830:	dc000215 	stw	r16,8(sp)
  80a834:	dfc00315 	stw	ra,12(sp)
  80a838:	2021883a 	mov	r16,r4
  80a83c:	20000226 	beq	r4,zero,80a848 <_putc_r+0x1c>
  80a840:	20800e17 	ldw	r2,56(r4)
  80a844:	10001b26 	beq	r2,zero,80a8b4 <_putc_r+0x88>
  80a848:	30800217 	ldw	r2,8(r6)
  80a84c:	10bfffc4 	addi	r2,r2,-1
  80a850:	30800215 	stw	r2,8(r6)
  80a854:	10000a16 	blt	r2,zero,80a880 <_putc_r+0x54>
  80a858:	30800017 	ldw	r2,0(r6)
  80a85c:	11400005 	stb	r5,0(r2)
  80a860:	30800017 	ldw	r2,0(r6)
  80a864:	10c00044 	addi	r3,r2,1
  80a868:	30c00015 	stw	r3,0(r6)
  80a86c:	10800003 	ldbu	r2,0(r2)
  80a870:	dfc00317 	ldw	ra,12(sp)
  80a874:	dc000217 	ldw	r16,8(sp)
  80a878:	dec00404 	addi	sp,sp,16
  80a87c:	f800283a 	ret
  80a880:	30c00617 	ldw	r3,24(r6)
  80a884:	10c00616 	blt	r2,r3,80a8a0 <_putc_r+0x74>
  80a888:	30800017 	ldw	r2,0(r6)
  80a88c:	00c00284 	movi	r3,10
  80a890:	11400005 	stb	r5,0(r2)
  80a894:	30800017 	ldw	r2,0(r6)
  80a898:	11400003 	ldbu	r5,0(r2)
  80a89c:	28fff11e 	bne	r5,r3,80a864 <__alt_data_end+0xff80a864>
  80a8a0:	8009883a 	mov	r4,r16
  80a8a4:	dfc00317 	ldw	ra,12(sp)
  80a8a8:	dc000217 	ldw	r16,8(sp)
  80a8ac:	dec00404 	addi	sp,sp,16
  80a8b0:	08122981 	jmpi	812298 <__swbuf_r>
  80a8b4:	d9400015 	stw	r5,0(sp)
  80a8b8:	d9800115 	stw	r6,4(sp)
  80a8bc:	08015c40 	call	8015c4 <__sinit>
  80a8c0:	d9800117 	ldw	r6,4(sp)
  80a8c4:	d9400017 	ldw	r5,0(sp)
  80a8c8:	003fdf06 	br	80a848 <__alt_data_end+0xff80a848>

0080a8cc <putc>:
  80a8cc:	008020b4 	movhi	r2,130
  80a8d0:	defffc04 	addi	sp,sp,-16
  80a8d4:	10ba8504 	addi	r2,r2,-5612
  80a8d8:	dc000115 	stw	r16,4(sp)
  80a8dc:	14000017 	ldw	r16,0(r2)
  80a8e0:	dc400215 	stw	r17,8(sp)
  80a8e4:	dfc00315 	stw	ra,12(sp)
  80a8e8:	2023883a 	mov	r17,r4
  80a8ec:	80000226 	beq	r16,zero,80a8f8 <putc+0x2c>
  80a8f0:	80800e17 	ldw	r2,56(r16)
  80a8f4:	10001a26 	beq	r2,zero,80a960 <putc+0x94>
  80a8f8:	28800217 	ldw	r2,8(r5)
  80a8fc:	10bfffc4 	addi	r2,r2,-1
  80a900:	28800215 	stw	r2,8(r5)
  80a904:	10000b16 	blt	r2,zero,80a934 <putc+0x68>
  80a908:	28800017 	ldw	r2,0(r5)
  80a90c:	14400005 	stb	r17,0(r2)
  80a910:	28800017 	ldw	r2,0(r5)
  80a914:	10c00044 	addi	r3,r2,1
  80a918:	28c00015 	stw	r3,0(r5)
  80a91c:	10800003 	ldbu	r2,0(r2)
  80a920:	dfc00317 	ldw	ra,12(sp)
  80a924:	dc400217 	ldw	r17,8(sp)
  80a928:	dc000117 	ldw	r16,4(sp)
  80a92c:	dec00404 	addi	sp,sp,16
  80a930:	f800283a 	ret
  80a934:	28c00617 	ldw	r3,24(r5)
  80a938:	10c00e16 	blt	r2,r3,80a974 <putc+0xa8>
  80a93c:	28800017 	ldw	r2,0(r5)
  80a940:	01000284 	movi	r4,10
  80a944:	14400005 	stb	r17,0(r2)
  80a948:	28800017 	ldw	r2,0(r5)
  80a94c:	10c00003 	ldbu	r3,0(r2)
  80a950:	193ff01e 	bne	r3,r4,80a914 <__alt_data_end+0xff80a914>
  80a954:	280d883a 	mov	r6,r5
  80a958:	180b883a 	mov	r5,r3
  80a95c:	00000706 	br	80a97c <putc+0xb0>
  80a960:	8009883a 	mov	r4,r16
  80a964:	d9400015 	stw	r5,0(sp)
  80a968:	08015c40 	call	8015c4 <__sinit>
  80a96c:	d9400017 	ldw	r5,0(sp)
  80a970:	003fe106 	br	80a8f8 <__alt_data_end+0xff80a8f8>
  80a974:	280d883a 	mov	r6,r5
  80a978:	880b883a 	mov	r5,r17
  80a97c:	8009883a 	mov	r4,r16
  80a980:	dfc00317 	ldw	ra,12(sp)
  80a984:	dc400217 	ldw	r17,8(sp)
  80a988:	dc000117 	ldw	r16,4(sp)
  80a98c:	dec00404 	addi	sp,sp,16
  80a990:	08122981 	jmpi	812298 <__swbuf_r>

0080a994 <_read_r>:
  80a994:	defffd04 	addi	sp,sp,-12
  80a998:	2805883a 	mov	r2,r5
  80a99c:	dc000015 	stw	r16,0(sp)
  80a9a0:	040020b4 	movhi	r16,130
  80a9a4:	dc400115 	stw	r17,4(sp)
  80a9a8:	300b883a 	mov	r5,r6
  80a9ac:	8401f004 	addi	r16,r16,1984
  80a9b0:	2023883a 	mov	r17,r4
  80a9b4:	380d883a 	mov	r6,r7
  80a9b8:	1009883a 	mov	r4,r2
  80a9bc:	dfc00215 	stw	ra,8(sp)
  80a9c0:	80000015 	stw	zero,0(r16)
  80a9c4:	0818a240 	call	818a24 <read>
  80a9c8:	00ffffc4 	movi	r3,-1
  80a9cc:	10c00526 	beq	r2,r3,80a9e4 <_read_r+0x50>
  80a9d0:	dfc00217 	ldw	ra,8(sp)
  80a9d4:	dc400117 	ldw	r17,4(sp)
  80a9d8:	dc000017 	ldw	r16,0(sp)
  80a9dc:	dec00304 	addi	sp,sp,12
  80a9e0:	f800283a 	ret
  80a9e4:	80c00017 	ldw	r3,0(r16)
  80a9e8:	183ff926 	beq	r3,zero,80a9d0 <__alt_data_end+0xff80a9d0>
  80a9ec:	88c00015 	stw	r3,0(r17)
  80a9f0:	003ff706 	br	80a9d0 <__alt_data_end+0xff80a9d0>

0080a9f4 <_realloc_r>:
  80a9f4:	defff604 	addi	sp,sp,-40
  80a9f8:	dc800215 	stw	r18,8(sp)
  80a9fc:	dfc00915 	stw	ra,36(sp)
  80aa00:	df000815 	stw	fp,32(sp)
  80aa04:	ddc00715 	stw	r23,28(sp)
  80aa08:	dd800615 	stw	r22,24(sp)
  80aa0c:	dd400515 	stw	r21,20(sp)
  80aa10:	dd000415 	stw	r20,16(sp)
  80aa14:	dcc00315 	stw	r19,12(sp)
  80aa18:	dc400115 	stw	r17,4(sp)
  80aa1c:	dc000015 	stw	r16,0(sp)
  80aa20:	3025883a 	mov	r18,r6
  80aa24:	2800b726 	beq	r5,zero,80ad04 <_realloc_r+0x310>
  80aa28:	282b883a 	mov	r21,r5
  80aa2c:	2029883a 	mov	r20,r4
  80aa30:	081874c0 	call	81874c <__malloc_lock>
  80aa34:	a8bfff17 	ldw	r2,-4(r21)
  80aa38:	043fff04 	movi	r16,-4
  80aa3c:	90c002c4 	addi	r3,r18,11
  80aa40:	01000584 	movi	r4,22
  80aa44:	acfffe04 	addi	r19,r21,-8
  80aa48:	1420703a 	and	r16,r2,r16
  80aa4c:	20c0332e 	bgeu	r4,r3,80ab1c <_realloc_r+0x128>
  80aa50:	047ffe04 	movi	r17,-8
  80aa54:	1c62703a 	and	r17,r3,r17
  80aa58:	8807883a 	mov	r3,r17
  80aa5c:	88005816 	blt	r17,zero,80abc0 <_realloc_r+0x1cc>
  80aa60:	8c805736 	bltu	r17,r18,80abc0 <_realloc_r+0x1cc>
  80aa64:	80c0300e 	bge	r16,r3,80ab28 <_realloc_r+0x134>
  80aa68:	070020b4 	movhi	fp,130
  80aa6c:	e7345104 	addi	fp,fp,-11964
  80aa70:	e1c00217 	ldw	r7,8(fp)
  80aa74:	9c09883a 	add	r4,r19,r16
  80aa78:	22000117 	ldw	r8,4(r4)
  80aa7c:	21c06326 	beq	r4,r7,80ac0c <_realloc_r+0x218>
  80aa80:	017fff84 	movi	r5,-2
  80aa84:	414a703a 	and	r5,r8,r5
  80aa88:	214b883a 	add	r5,r4,r5
  80aa8c:	29800117 	ldw	r6,4(r5)
  80aa90:	3180004c 	andi	r6,r6,1
  80aa94:	30003f26 	beq	r6,zero,80ab94 <_realloc_r+0x1a0>
  80aa98:	1080004c 	andi	r2,r2,1
  80aa9c:	10008326 	beq	r2,zero,80acac <_realloc_r+0x2b8>
  80aaa0:	900b883a 	mov	r5,r18
  80aaa4:	a009883a 	mov	r4,r20
  80aaa8:	08025b80 	call	8025b8 <_malloc_r>
  80aaac:	1025883a 	mov	r18,r2
  80aab0:	10011e26 	beq	r2,zero,80af2c <_realloc_r+0x538>
  80aab4:	a93fff17 	ldw	r4,-4(r21)
  80aab8:	10fffe04 	addi	r3,r2,-8
  80aabc:	00bfff84 	movi	r2,-2
  80aac0:	2084703a 	and	r2,r4,r2
  80aac4:	9885883a 	add	r2,r19,r2
  80aac8:	1880ee26 	beq	r3,r2,80ae84 <_realloc_r+0x490>
  80aacc:	81bfff04 	addi	r6,r16,-4
  80aad0:	00800904 	movi	r2,36
  80aad4:	1180b836 	bltu	r2,r6,80adb8 <_realloc_r+0x3c4>
  80aad8:	00c004c4 	movi	r3,19
  80aadc:	19809636 	bltu	r3,r6,80ad38 <_realloc_r+0x344>
  80aae0:	9005883a 	mov	r2,r18
  80aae4:	a807883a 	mov	r3,r21
  80aae8:	19000017 	ldw	r4,0(r3)
  80aaec:	11000015 	stw	r4,0(r2)
  80aaf0:	19000117 	ldw	r4,4(r3)
  80aaf4:	11000115 	stw	r4,4(r2)
  80aaf8:	18c00217 	ldw	r3,8(r3)
  80aafc:	10c00215 	stw	r3,8(r2)
  80ab00:	a80b883a 	mov	r5,r21
  80ab04:	a009883a 	mov	r4,r20
  80ab08:	08018900 	call	801890 <_free_r>
  80ab0c:	a009883a 	mov	r4,r20
  80ab10:	08187700 	call	818770 <__malloc_unlock>
  80ab14:	9005883a 	mov	r2,r18
  80ab18:	00001206 	br	80ab64 <_realloc_r+0x170>
  80ab1c:	00c00404 	movi	r3,16
  80ab20:	1823883a 	mov	r17,r3
  80ab24:	003fce06 	br	80aa60 <__alt_data_end+0xff80aa60>
  80ab28:	a825883a 	mov	r18,r21
  80ab2c:	8445c83a 	sub	r2,r16,r17
  80ab30:	00c003c4 	movi	r3,15
  80ab34:	18802636 	bltu	r3,r2,80abd0 <_realloc_r+0x1dc>
  80ab38:	99800117 	ldw	r6,4(r19)
  80ab3c:	9c07883a 	add	r3,r19,r16
  80ab40:	3180004c 	andi	r6,r6,1
  80ab44:	3420b03a 	or	r16,r6,r16
  80ab48:	9c000115 	stw	r16,4(r19)
  80ab4c:	18800117 	ldw	r2,4(r3)
  80ab50:	10800054 	ori	r2,r2,1
  80ab54:	18800115 	stw	r2,4(r3)
  80ab58:	a009883a 	mov	r4,r20
  80ab5c:	08187700 	call	818770 <__malloc_unlock>
  80ab60:	9005883a 	mov	r2,r18
  80ab64:	dfc00917 	ldw	ra,36(sp)
  80ab68:	df000817 	ldw	fp,32(sp)
  80ab6c:	ddc00717 	ldw	r23,28(sp)
  80ab70:	dd800617 	ldw	r22,24(sp)
  80ab74:	dd400517 	ldw	r21,20(sp)
  80ab78:	dd000417 	ldw	r20,16(sp)
  80ab7c:	dcc00317 	ldw	r19,12(sp)
  80ab80:	dc800217 	ldw	r18,8(sp)
  80ab84:	dc400117 	ldw	r17,4(sp)
  80ab88:	dc000017 	ldw	r16,0(sp)
  80ab8c:	dec00a04 	addi	sp,sp,40
  80ab90:	f800283a 	ret
  80ab94:	017fff04 	movi	r5,-4
  80ab98:	414a703a 	and	r5,r8,r5
  80ab9c:	814d883a 	add	r6,r16,r5
  80aba0:	30c01f16 	blt	r6,r3,80ac20 <_realloc_r+0x22c>
  80aba4:	20800317 	ldw	r2,12(r4)
  80aba8:	20c00217 	ldw	r3,8(r4)
  80abac:	a825883a 	mov	r18,r21
  80abb0:	3021883a 	mov	r16,r6
  80abb4:	18800315 	stw	r2,12(r3)
  80abb8:	10c00215 	stw	r3,8(r2)
  80abbc:	003fdb06 	br	80ab2c <__alt_data_end+0xff80ab2c>
  80abc0:	00800304 	movi	r2,12
  80abc4:	a0800015 	stw	r2,0(r20)
  80abc8:	0005883a 	mov	r2,zero
  80abcc:	003fe506 	br	80ab64 <__alt_data_end+0xff80ab64>
  80abd0:	98c00117 	ldw	r3,4(r19)
  80abd4:	9c4b883a 	add	r5,r19,r17
  80abd8:	11000054 	ori	r4,r2,1
  80abdc:	18c0004c 	andi	r3,r3,1
  80abe0:	1c62b03a 	or	r17,r3,r17
  80abe4:	9c400115 	stw	r17,4(r19)
  80abe8:	29000115 	stw	r4,4(r5)
  80abec:	2885883a 	add	r2,r5,r2
  80abf0:	10c00117 	ldw	r3,4(r2)
  80abf4:	29400204 	addi	r5,r5,8
  80abf8:	a009883a 	mov	r4,r20
  80abfc:	18c00054 	ori	r3,r3,1
  80ac00:	10c00115 	stw	r3,4(r2)
  80ac04:	08018900 	call	801890 <_free_r>
  80ac08:	003fd306 	br	80ab58 <__alt_data_end+0xff80ab58>
  80ac0c:	017fff04 	movi	r5,-4
  80ac10:	414a703a 	and	r5,r8,r5
  80ac14:	89800404 	addi	r6,r17,16
  80ac18:	8151883a 	add	r8,r16,r5
  80ac1c:	4180590e 	bge	r8,r6,80ad84 <_realloc_r+0x390>
  80ac20:	1080004c 	andi	r2,r2,1
  80ac24:	103f9e1e 	bne	r2,zero,80aaa0 <__alt_data_end+0xff80aaa0>
  80ac28:	adbffe17 	ldw	r22,-8(r21)
  80ac2c:	00bfff04 	movi	r2,-4
  80ac30:	9dadc83a 	sub	r22,r19,r22
  80ac34:	b1800117 	ldw	r6,4(r22)
  80ac38:	3084703a 	and	r2,r6,r2
  80ac3c:	20002026 	beq	r4,zero,80acc0 <_realloc_r+0x2cc>
  80ac40:	80af883a 	add	r23,r16,r2
  80ac44:	b96f883a 	add	r23,r23,r5
  80ac48:	21c05f26 	beq	r4,r7,80adc8 <_realloc_r+0x3d4>
  80ac4c:	b8c01c16 	blt	r23,r3,80acc0 <_realloc_r+0x2cc>
  80ac50:	20800317 	ldw	r2,12(r4)
  80ac54:	20c00217 	ldw	r3,8(r4)
  80ac58:	81bfff04 	addi	r6,r16,-4
  80ac5c:	01000904 	movi	r4,36
  80ac60:	18800315 	stw	r2,12(r3)
  80ac64:	10c00215 	stw	r3,8(r2)
  80ac68:	b0c00217 	ldw	r3,8(r22)
  80ac6c:	b0800317 	ldw	r2,12(r22)
  80ac70:	b4800204 	addi	r18,r22,8
  80ac74:	18800315 	stw	r2,12(r3)
  80ac78:	10c00215 	stw	r3,8(r2)
  80ac7c:	21801b36 	bltu	r4,r6,80acec <_realloc_r+0x2f8>
  80ac80:	008004c4 	movi	r2,19
  80ac84:	1180352e 	bgeu	r2,r6,80ad5c <_realloc_r+0x368>
  80ac88:	a8800017 	ldw	r2,0(r21)
  80ac8c:	b0800215 	stw	r2,8(r22)
  80ac90:	a8800117 	ldw	r2,4(r21)
  80ac94:	b0800315 	stw	r2,12(r22)
  80ac98:	008006c4 	movi	r2,27
  80ac9c:	11807f36 	bltu	r2,r6,80ae9c <_realloc_r+0x4a8>
  80aca0:	b0800404 	addi	r2,r22,16
  80aca4:	ad400204 	addi	r21,r21,8
  80aca8:	00002d06 	br	80ad60 <_realloc_r+0x36c>
  80acac:	adbffe17 	ldw	r22,-8(r21)
  80acb0:	00bfff04 	movi	r2,-4
  80acb4:	9dadc83a 	sub	r22,r19,r22
  80acb8:	b1000117 	ldw	r4,4(r22)
  80acbc:	2084703a 	and	r2,r4,r2
  80acc0:	b03f7726 	beq	r22,zero,80aaa0 <__alt_data_end+0xff80aaa0>
  80acc4:	80af883a 	add	r23,r16,r2
  80acc8:	b8ff7516 	blt	r23,r3,80aaa0 <__alt_data_end+0xff80aaa0>
  80accc:	b0800317 	ldw	r2,12(r22)
  80acd0:	b0c00217 	ldw	r3,8(r22)
  80acd4:	81bfff04 	addi	r6,r16,-4
  80acd8:	01000904 	movi	r4,36
  80acdc:	18800315 	stw	r2,12(r3)
  80ace0:	10c00215 	stw	r3,8(r2)
  80ace4:	b4800204 	addi	r18,r22,8
  80ace8:	21bfe52e 	bgeu	r4,r6,80ac80 <__alt_data_end+0xff80ac80>
  80acec:	a80b883a 	mov	r5,r21
  80acf0:	9009883a 	mov	r4,r18
  80acf4:	08096d40 	call	8096d4 <memmove>
  80acf8:	b821883a 	mov	r16,r23
  80acfc:	b027883a 	mov	r19,r22
  80ad00:	003f8a06 	br	80ab2c <__alt_data_end+0xff80ab2c>
  80ad04:	300b883a 	mov	r5,r6
  80ad08:	dfc00917 	ldw	ra,36(sp)
  80ad0c:	df000817 	ldw	fp,32(sp)
  80ad10:	ddc00717 	ldw	r23,28(sp)
  80ad14:	dd800617 	ldw	r22,24(sp)
  80ad18:	dd400517 	ldw	r21,20(sp)
  80ad1c:	dd000417 	ldw	r20,16(sp)
  80ad20:	dcc00317 	ldw	r19,12(sp)
  80ad24:	dc800217 	ldw	r18,8(sp)
  80ad28:	dc400117 	ldw	r17,4(sp)
  80ad2c:	dc000017 	ldw	r16,0(sp)
  80ad30:	dec00a04 	addi	sp,sp,40
  80ad34:	08025b81 	jmpi	8025b8 <_malloc_r>
  80ad38:	a8c00017 	ldw	r3,0(r21)
  80ad3c:	90c00015 	stw	r3,0(r18)
  80ad40:	a8c00117 	ldw	r3,4(r21)
  80ad44:	90c00115 	stw	r3,4(r18)
  80ad48:	00c006c4 	movi	r3,27
  80ad4c:	19804536 	bltu	r3,r6,80ae64 <_realloc_r+0x470>
  80ad50:	90800204 	addi	r2,r18,8
  80ad54:	a8c00204 	addi	r3,r21,8
  80ad58:	003f6306 	br	80aae8 <__alt_data_end+0xff80aae8>
  80ad5c:	9005883a 	mov	r2,r18
  80ad60:	a8c00017 	ldw	r3,0(r21)
  80ad64:	b821883a 	mov	r16,r23
  80ad68:	b027883a 	mov	r19,r22
  80ad6c:	10c00015 	stw	r3,0(r2)
  80ad70:	a8c00117 	ldw	r3,4(r21)
  80ad74:	10c00115 	stw	r3,4(r2)
  80ad78:	a8c00217 	ldw	r3,8(r21)
  80ad7c:	10c00215 	stw	r3,8(r2)
  80ad80:	003f6a06 	br	80ab2c <__alt_data_end+0xff80ab2c>
  80ad84:	9c67883a 	add	r19,r19,r17
  80ad88:	4445c83a 	sub	r2,r8,r17
  80ad8c:	e4c00215 	stw	r19,8(fp)
  80ad90:	10800054 	ori	r2,r2,1
  80ad94:	98800115 	stw	r2,4(r19)
  80ad98:	a8bfff17 	ldw	r2,-4(r21)
  80ad9c:	a009883a 	mov	r4,r20
  80ada0:	1080004c 	andi	r2,r2,1
  80ada4:	1462b03a 	or	r17,r2,r17
  80ada8:	ac7fff15 	stw	r17,-4(r21)
  80adac:	08187700 	call	818770 <__malloc_unlock>
  80adb0:	a805883a 	mov	r2,r21
  80adb4:	003f6b06 	br	80ab64 <__alt_data_end+0xff80ab64>
  80adb8:	a80b883a 	mov	r5,r21
  80adbc:	9009883a 	mov	r4,r18
  80adc0:	08096d40 	call	8096d4 <memmove>
  80adc4:	003f4e06 	br	80ab00 <__alt_data_end+0xff80ab00>
  80adc8:	89000404 	addi	r4,r17,16
  80adcc:	b93fbc16 	blt	r23,r4,80acc0 <__alt_data_end+0xff80acc0>
  80add0:	b0800317 	ldw	r2,12(r22)
  80add4:	b0c00217 	ldw	r3,8(r22)
  80add8:	81bfff04 	addi	r6,r16,-4
  80addc:	01000904 	movi	r4,36
  80ade0:	18800315 	stw	r2,12(r3)
  80ade4:	10c00215 	stw	r3,8(r2)
  80ade8:	b4800204 	addi	r18,r22,8
  80adec:	21804336 	bltu	r4,r6,80aefc <_realloc_r+0x508>
  80adf0:	008004c4 	movi	r2,19
  80adf4:	11803f2e 	bgeu	r2,r6,80aef4 <_realloc_r+0x500>
  80adf8:	a8800017 	ldw	r2,0(r21)
  80adfc:	b0800215 	stw	r2,8(r22)
  80ae00:	a8800117 	ldw	r2,4(r21)
  80ae04:	b0800315 	stw	r2,12(r22)
  80ae08:	008006c4 	movi	r2,27
  80ae0c:	11803f36 	bltu	r2,r6,80af0c <_realloc_r+0x518>
  80ae10:	b0800404 	addi	r2,r22,16
  80ae14:	ad400204 	addi	r21,r21,8
  80ae18:	a8c00017 	ldw	r3,0(r21)
  80ae1c:	10c00015 	stw	r3,0(r2)
  80ae20:	a8c00117 	ldw	r3,4(r21)
  80ae24:	10c00115 	stw	r3,4(r2)
  80ae28:	a8c00217 	ldw	r3,8(r21)
  80ae2c:	10c00215 	stw	r3,8(r2)
  80ae30:	b447883a 	add	r3,r22,r17
  80ae34:	bc45c83a 	sub	r2,r23,r17
  80ae38:	e0c00215 	stw	r3,8(fp)
  80ae3c:	10800054 	ori	r2,r2,1
  80ae40:	18800115 	stw	r2,4(r3)
  80ae44:	b0800117 	ldw	r2,4(r22)
  80ae48:	a009883a 	mov	r4,r20
  80ae4c:	1080004c 	andi	r2,r2,1
  80ae50:	1462b03a 	or	r17,r2,r17
  80ae54:	b4400115 	stw	r17,4(r22)
  80ae58:	08187700 	call	818770 <__malloc_unlock>
  80ae5c:	9005883a 	mov	r2,r18
  80ae60:	003f4006 	br	80ab64 <__alt_data_end+0xff80ab64>
  80ae64:	a8c00217 	ldw	r3,8(r21)
  80ae68:	90c00215 	stw	r3,8(r18)
  80ae6c:	a8c00317 	ldw	r3,12(r21)
  80ae70:	90c00315 	stw	r3,12(r18)
  80ae74:	30801126 	beq	r6,r2,80aebc <_realloc_r+0x4c8>
  80ae78:	90800404 	addi	r2,r18,16
  80ae7c:	a8c00404 	addi	r3,r21,16
  80ae80:	003f1906 	br	80aae8 <__alt_data_end+0xff80aae8>
  80ae84:	90ffff17 	ldw	r3,-4(r18)
  80ae88:	00bfff04 	movi	r2,-4
  80ae8c:	a825883a 	mov	r18,r21
  80ae90:	1884703a 	and	r2,r3,r2
  80ae94:	80a1883a 	add	r16,r16,r2
  80ae98:	003f2406 	br	80ab2c <__alt_data_end+0xff80ab2c>
  80ae9c:	a8800217 	ldw	r2,8(r21)
  80aea0:	b0800415 	stw	r2,16(r22)
  80aea4:	a8800317 	ldw	r2,12(r21)
  80aea8:	b0800515 	stw	r2,20(r22)
  80aeac:	31000a26 	beq	r6,r4,80aed8 <_realloc_r+0x4e4>
  80aeb0:	b0800604 	addi	r2,r22,24
  80aeb4:	ad400404 	addi	r21,r21,16
  80aeb8:	003fa906 	br	80ad60 <__alt_data_end+0xff80ad60>
  80aebc:	a9000417 	ldw	r4,16(r21)
  80aec0:	90800604 	addi	r2,r18,24
  80aec4:	a8c00604 	addi	r3,r21,24
  80aec8:	91000415 	stw	r4,16(r18)
  80aecc:	a9000517 	ldw	r4,20(r21)
  80aed0:	91000515 	stw	r4,20(r18)
  80aed4:	003f0406 	br	80aae8 <__alt_data_end+0xff80aae8>
  80aed8:	a8c00417 	ldw	r3,16(r21)
  80aedc:	ad400604 	addi	r21,r21,24
  80aee0:	b0800804 	addi	r2,r22,32
  80aee4:	b0c00615 	stw	r3,24(r22)
  80aee8:	a8ffff17 	ldw	r3,-4(r21)
  80aeec:	b0c00715 	stw	r3,28(r22)
  80aef0:	003f9b06 	br	80ad60 <__alt_data_end+0xff80ad60>
  80aef4:	9005883a 	mov	r2,r18
  80aef8:	003fc706 	br	80ae18 <__alt_data_end+0xff80ae18>
  80aefc:	a80b883a 	mov	r5,r21
  80af00:	9009883a 	mov	r4,r18
  80af04:	08096d40 	call	8096d4 <memmove>
  80af08:	003fc906 	br	80ae30 <__alt_data_end+0xff80ae30>
  80af0c:	a8800217 	ldw	r2,8(r21)
  80af10:	b0800415 	stw	r2,16(r22)
  80af14:	a8800317 	ldw	r2,12(r21)
  80af18:	b0800515 	stw	r2,20(r22)
  80af1c:	31000726 	beq	r6,r4,80af3c <_realloc_r+0x548>
  80af20:	b0800604 	addi	r2,r22,24
  80af24:	ad400404 	addi	r21,r21,16
  80af28:	003fbb06 	br	80ae18 <__alt_data_end+0xff80ae18>
  80af2c:	a009883a 	mov	r4,r20
  80af30:	08187700 	call	818770 <__malloc_unlock>
  80af34:	0005883a 	mov	r2,zero
  80af38:	003f0a06 	br	80ab64 <__alt_data_end+0xff80ab64>
  80af3c:	a8c00417 	ldw	r3,16(r21)
  80af40:	ad400604 	addi	r21,r21,24
  80af44:	b0800804 	addi	r2,r22,32
  80af48:	b0c00615 	stw	r3,24(r22)
  80af4c:	a8ffff17 	ldw	r3,-4(r21)
  80af50:	b0c00715 	stw	r3,28(r22)
  80af54:	003fb006 	br	80ae18 <__alt_data_end+0xff80ae18>

0080af58 <__fpclassifyd>:
  80af58:	00a00034 	movhi	r2,32768
  80af5c:	10bfffc4 	addi	r2,r2,-1
  80af60:	2884703a 	and	r2,r5,r2
  80af64:	10000726 	beq	r2,zero,80af84 <__fpclassifyd+0x2c>
  80af68:	00fffc34 	movhi	r3,65520
  80af6c:	019ff834 	movhi	r6,32736
  80af70:	28c7883a 	add	r3,r5,r3
  80af74:	31bfffc4 	addi	r6,r6,-1
  80af78:	30c00536 	bltu	r6,r3,80af90 <__fpclassifyd+0x38>
  80af7c:	00800104 	movi	r2,4
  80af80:	f800283a 	ret
  80af84:	2000021e 	bne	r4,zero,80af90 <__fpclassifyd+0x38>
  80af88:	00800084 	movi	r2,2
  80af8c:	f800283a 	ret
  80af90:	00dffc34 	movhi	r3,32752
  80af94:	019ff834 	movhi	r6,32736
  80af98:	28cb883a 	add	r5,r5,r3
  80af9c:	31bfffc4 	addi	r6,r6,-1
  80afa0:	317ff62e 	bgeu	r6,r5,80af7c <__alt_data_end+0xff80af7c>
  80afa4:	01400434 	movhi	r5,16
  80afa8:	297fffc4 	addi	r5,r5,-1
  80afac:	28800236 	bltu	r5,r2,80afb8 <__fpclassifyd+0x60>
  80afb0:	008000c4 	movi	r2,3
  80afb4:	f800283a 	ret
  80afb8:	10c00226 	beq	r2,r3,80afc4 <__fpclassifyd+0x6c>
  80afbc:	0005883a 	mov	r2,zero
  80afc0:	f800283a 	ret
  80afc4:	2005003a 	cmpeq	r2,r4,zero
  80afc8:	f800283a 	ret

0080afcc <__sccl>:
  80afcc:	2a000003 	ldbu	r8,0(r5)
  80afd0:	00801784 	movi	r2,94
  80afd4:	40802a26 	beq	r8,r2,80b080 <__sccl+0xb4>
  80afd8:	29400044 	addi	r5,r5,1
  80afdc:	000f883a 	mov	r7,zero
  80afe0:	0013883a 	mov	r9,zero
  80afe4:	2007883a 	mov	r3,r4
  80afe8:	21804004 	addi	r6,r4,256
  80afec:	19c00005 	stb	r7,0(r3)
  80aff0:	18c00044 	addi	r3,r3,1
  80aff4:	19bffd1e 	bne	r3,r6,80afec <__alt_data_end+0xff80afec>
  80aff8:	40001126 	beq	r8,zero,80b040 <__sccl+0x74>
  80affc:	00800044 	movi	r2,1
  80b000:	124fc83a 	sub	r7,r2,r9
  80b004:	02800b44 	movi	r10,45
  80b008:	02c01744 	movi	r11,93
  80b00c:	2205883a 	add	r2,r4,r8
  80b010:	11c00005 	stb	r7,0(r2)
  80b014:	28800044 	addi	r2,r5,1
  80b018:	28c00003 	ldbu	r3,0(r5)
  80b01c:	1a800a26 	beq	r3,r10,80b048 <__sccl+0x7c>
  80b020:	1ac00426 	beq	r3,r11,80b034 <__sccl+0x68>
  80b024:	18000426 	beq	r3,zero,80b038 <__sccl+0x6c>
  80b028:	1811883a 	mov	r8,r3
  80b02c:	100b883a 	mov	r5,r2
  80b030:	003ff606 	br	80b00c <__alt_data_end+0xff80b00c>
  80b034:	f800283a 	ret
  80b038:	2805883a 	mov	r2,r5
  80b03c:	f800283a 	ret
  80b040:	28bfffc4 	addi	r2,r5,-1
  80b044:	f800283a 	ret
  80b048:	12400003 	ldbu	r9,0(r2)
  80b04c:	4ac01126 	beq	r9,r11,80b094 <__sccl+0xc8>
  80b050:	4a001016 	blt	r9,r8,80b094 <__sccl+0xc8>
  80b054:	41800044 	addi	r6,r8,1
  80b058:	29400084 	addi	r5,r5,2
  80b05c:	2187883a 	add	r3,r4,r6
  80b060:	00000106 	br	80b068 <__sccl+0x9c>
  80b064:	31800044 	addi	r6,r6,1
  80b068:	19c00005 	stb	r7,0(r3)
  80b06c:	3011883a 	mov	r8,r6
  80b070:	18c00044 	addi	r3,r3,1
  80b074:	327ffb16 	blt	r6,r9,80b064 <__alt_data_end+0xff80b064>
  80b078:	10800084 	addi	r2,r2,2
  80b07c:	003fe606 	br	80b018 <__alt_data_end+0xff80b018>
  80b080:	2a000043 	ldbu	r8,1(r5)
  80b084:	01c00044 	movi	r7,1
  80b088:	29400084 	addi	r5,r5,2
  80b08c:	02400044 	movi	r9,1
  80b090:	003fd406 	br	80afe4 <__alt_data_end+0xff80afe4>
  80b094:	5011883a 	mov	r8,r10
  80b098:	003fe406 	br	80b02c <__alt_data_end+0xff80b02c>

0080b09c <nanf>:
  80b09c:	009ff034 	movhi	r2,32704
  80b0a0:	f800283a 	ret

0080b0a4 <_sprintf_r>:
  80b0a4:	deffe404 	addi	sp,sp,-112
  80b0a8:	2807883a 	mov	r3,r5
  80b0ac:	dfc01a15 	stw	ra,104(sp)
  80b0b0:	d9c01b15 	stw	r7,108(sp)
  80b0b4:	00a00034 	movhi	r2,32768
  80b0b8:	10bfffc4 	addi	r2,r2,-1
  80b0bc:	02008204 	movi	r8,520
  80b0c0:	d8800215 	stw	r2,8(sp)
  80b0c4:	d8800515 	stw	r2,20(sp)
  80b0c8:	d9c01b04 	addi	r7,sp,108
  80b0cc:	d80b883a 	mov	r5,sp
  80b0d0:	00bfffc4 	movi	r2,-1
  80b0d4:	d8c00015 	stw	r3,0(sp)
  80b0d8:	d8c00415 	stw	r3,16(sp)
  80b0dc:	da00030d 	sth	r8,12(sp)
  80b0e0:	d880038d 	sth	r2,14(sp)
  80b0e4:	080e7f80 	call	80e7f8 <___svfprintf_internal_r>
  80b0e8:	d8c00017 	ldw	r3,0(sp)
  80b0ec:	18000005 	stb	zero,0(r3)
  80b0f0:	dfc01a17 	ldw	ra,104(sp)
  80b0f4:	dec01c04 	addi	sp,sp,112
  80b0f8:	f800283a 	ret

0080b0fc <sprintf>:
  80b0fc:	deffe304 	addi	sp,sp,-116
  80b100:	2007883a 	mov	r3,r4
  80b104:	dfc01a15 	stw	ra,104(sp)
  80b108:	d9801b15 	stw	r6,108(sp)
  80b10c:	d9c01c15 	stw	r7,112(sp)
  80b110:	010020b4 	movhi	r4,130
  80b114:	213a8504 	addi	r4,r4,-5612
  80b118:	21000017 	ldw	r4,0(r4)
  80b11c:	00a00034 	movhi	r2,32768
  80b120:	10bfffc4 	addi	r2,r2,-1
  80b124:	280d883a 	mov	r6,r5
  80b128:	02008204 	movi	r8,520
  80b12c:	d8800215 	stw	r2,8(sp)
  80b130:	d8800515 	stw	r2,20(sp)
  80b134:	d9c01b04 	addi	r7,sp,108
  80b138:	d80b883a 	mov	r5,sp
  80b13c:	00bfffc4 	movi	r2,-1
  80b140:	d8c00015 	stw	r3,0(sp)
  80b144:	d8c00415 	stw	r3,16(sp)
  80b148:	da00030d 	sth	r8,12(sp)
  80b14c:	d880038d 	sth	r2,14(sp)
  80b150:	080e7f80 	call	80e7f8 <___svfprintf_internal_r>
  80b154:	d8c00017 	ldw	r3,0(sp)
  80b158:	18000005 	stb	zero,0(r3)
  80b15c:	dfc01a17 	ldw	ra,104(sp)
  80b160:	dec01d04 	addi	sp,sp,116
  80b164:	f800283a 	ret

0080b168 <strcmp>:
  80b168:	2144b03a 	or	r2,r4,r5
  80b16c:	108000cc 	andi	r2,r2,3
  80b170:	1000171e 	bne	r2,zero,80b1d0 <strcmp+0x68>
  80b174:	20800017 	ldw	r2,0(r4)
  80b178:	28c00017 	ldw	r3,0(r5)
  80b17c:	10c0141e 	bne	r2,r3,80b1d0 <strcmp+0x68>
  80b180:	027fbff4 	movhi	r9,65279
  80b184:	4a7fbfc4 	addi	r9,r9,-257
  80b188:	0086303a 	nor	r3,zero,r2
  80b18c:	02202074 	movhi	r8,32897
  80b190:	1245883a 	add	r2,r2,r9
  80b194:	42202004 	addi	r8,r8,-32640
  80b198:	10c4703a 	and	r2,r2,r3
  80b19c:	1204703a 	and	r2,r2,r8
  80b1a0:	10000226 	beq	r2,zero,80b1ac <strcmp+0x44>
  80b1a4:	00002306 	br	80b234 <strcmp+0xcc>
  80b1a8:	1000221e 	bne	r2,zero,80b234 <strcmp+0xcc>
  80b1ac:	21000104 	addi	r4,r4,4
  80b1b0:	20c00017 	ldw	r3,0(r4)
  80b1b4:	29400104 	addi	r5,r5,4
  80b1b8:	29800017 	ldw	r6,0(r5)
  80b1bc:	1a4f883a 	add	r7,r3,r9
  80b1c0:	00c4303a 	nor	r2,zero,r3
  80b1c4:	3884703a 	and	r2,r7,r2
  80b1c8:	1204703a 	and	r2,r2,r8
  80b1cc:	19bff626 	beq	r3,r6,80b1a8 <__alt_data_end+0xff80b1a8>
  80b1d0:	20800003 	ldbu	r2,0(r4)
  80b1d4:	10c03fcc 	andi	r3,r2,255
  80b1d8:	18c0201c 	xori	r3,r3,128
  80b1dc:	18ffe004 	addi	r3,r3,-128
  80b1e0:	18000c26 	beq	r3,zero,80b214 <strcmp+0xac>
  80b1e4:	29800007 	ldb	r6,0(r5)
  80b1e8:	19800326 	beq	r3,r6,80b1f8 <strcmp+0x90>
  80b1ec:	00001306 	br	80b23c <strcmp+0xd4>
  80b1f0:	29800007 	ldb	r6,0(r5)
  80b1f4:	11800b1e 	bne	r2,r6,80b224 <strcmp+0xbc>
  80b1f8:	21000044 	addi	r4,r4,1
  80b1fc:	20c00003 	ldbu	r3,0(r4)
  80b200:	29400044 	addi	r5,r5,1
  80b204:	18803fcc 	andi	r2,r3,255
  80b208:	1080201c 	xori	r2,r2,128
  80b20c:	10bfe004 	addi	r2,r2,-128
  80b210:	103ff71e 	bne	r2,zero,80b1f0 <__alt_data_end+0xff80b1f0>
  80b214:	0007883a 	mov	r3,zero
  80b218:	28800003 	ldbu	r2,0(r5)
  80b21c:	1885c83a 	sub	r2,r3,r2
  80b220:	f800283a 	ret
  80b224:	28800003 	ldbu	r2,0(r5)
  80b228:	18c03fcc 	andi	r3,r3,255
  80b22c:	1885c83a 	sub	r2,r3,r2
  80b230:	f800283a 	ret
  80b234:	0005883a 	mov	r2,zero
  80b238:	f800283a 	ret
  80b23c:	10c03fcc 	andi	r3,r2,255
  80b240:	003ff506 	br	80b218 <__alt_data_end+0xff80b218>

0080b244 <sulp>:
  80b244:	defffd04 	addi	sp,sp,-12
  80b248:	dc400115 	stw	r17,4(sp)
  80b24c:	3023883a 	mov	r17,r6
  80b250:	dc000015 	stw	r16,0(sp)
  80b254:	dfc00215 	stw	ra,8(sp)
  80b258:	2821883a 	mov	r16,r5
  80b25c:	080a3540 	call	80a354 <__ulp>
  80b260:	88000c26 	beq	r17,zero,80b294 <sulp+0x50>
  80b264:	841ffc2c 	andhi	r16,r16,32752
  80b268:	8020d53a 	srli	r16,r16,20
  80b26c:	01c01ac4 	movi	r7,107
  80b270:	3c21c83a 	sub	r16,r7,r16
  80b274:	0400070e 	bge	zero,r16,80b294 <sulp+0x50>
  80b278:	8020953a 	slli	r16,r16,20
  80b27c:	01cffc34 	movhi	r7,16368
  80b280:	000d883a 	mov	r6,zero
  80b284:	81cf883a 	add	r7,r16,r7
  80b288:	1009883a 	mov	r4,r2
  80b28c:	180b883a 	mov	r5,r3
  80b290:	0816c2c0 	call	816c2c <__muldf3>
  80b294:	dfc00217 	ldw	ra,8(sp)
  80b298:	dc400117 	ldw	r17,4(sp)
  80b29c:	dc000017 	ldw	r16,0(sp)
  80b2a0:	dec00304 	addi	sp,sp,12
  80b2a4:	f800283a 	ret

0080b2a8 <_strtod_r>:
  80b2a8:	deffe204 	addi	sp,sp,-120
  80b2ac:	ddc01b15 	stw	r23,108(sp)
  80b2b0:	dd001815 	stw	r20,96(sp)
  80b2b4:	dc801615 	stw	r18,88(sp)
  80b2b8:	dc401515 	stw	r17,84(sp)
  80b2bc:	dc001415 	stw	r16,80(sp)
  80b2c0:	d9400615 	stw	r5,24(sp)
  80b2c4:	dfc01d15 	stw	ra,116(sp)
  80b2c8:	df001c15 	stw	fp,112(sp)
  80b2cc:	dd801a15 	stw	r22,104(sp)
  80b2d0:	dd401915 	stw	r21,100(sp)
  80b2d4:	dcc01715 	stw	r19,92(sp)
  80b2d8:	2021883a 	mov	r16,r4
  80b2dc:	d8000515 	stw	zero,20(sp)
  80b2e0:	2809883a 	mov	r4,r5
  80b2e4:	20800003 	ldbu	r2,0(r4)
  80b2e8:	01c02074 	movhi	r7,129
  80b2ec:	282f883a 	mov	r23,r5
  80b2f0:	10c03fcc 	andi	r3,r2,255
  80b2f4:	01400b44 	movi	r5,45
  80b2f8:	39ecc704 	addi	r7,r7,-19684
  80b2fc:	3029883a 	mov	r20,r6
  80b300:	0025883a 	mov	r18,zero
  80b304:	0023883a 	mov	r17,zero
  80b308:	28c0ba36 	bltu	r5,r3,80b5f4 <_strtod_r+0x34c>
  80b30c:	180690ba 	slli	r3,r3,2
  80b310:	19c7883a 	add	r3,r3,r7
  80b314:	18c00017 	ldw	r3,0(r3)
  80b318:	1800683a 	jmp	r3
  80b31c:	0080b3dc 	xori	r2,zero,719
  80b320:	0080b5f4 	movhi	r2,727
  80b324:	0080b5f4 	movhi	r2,727
  80b328:	0080b5f4 	movhi	r2,727
  80b32c:	0080b5f4 	movhi	r2,727
  80b330:	0080b5f4 	movhi	r2,727
  80b334:	0080b5f4 	movhi	r2,727
  80b338:	0080b5f4 	movhi	r2,727
  80b33c:	0080b5f4 	movhi	r2,727
  80b340:	0080b5e0 	cmpeqi	r2,zero,727
  80b344:	0080b5e0 	cmpeqi	r2,zero,727
  80b348:	0080b5e0 	cmpeqi	r2,zero,727
  80b34c:	0080b5e0 	cmpeqi	r2,zero,727
  80b350:	0080b5e0 	cmpeqi	r2,zero,727
  80b354:	0080b5f4 	movhi	r2,727
  80b358:	0080b5f4 	movhi	r2,727
  80b35c:	0080b5f4 	movhi	r2,727
  80b360:	0080b5f4 	movhi	r2,727
  80b364:	0080b5f4 	movhi	r2,727
  80b368:	0080b5f4 	movhi	r2,727
  80b36c:	0080b5f4 	movhi	r2,727
  80b370:	0080b5f4 	movhi	r2,727
  80b374:	0080b5f4 	movhi	r2,727
  80b378:	0080b5f4 	movhi	r2,727
  80b37c:	0080b5f4 	movhi	r2,727
  80b380:	0080b5f4 	movhi	r2,727
  80b384:	0080b5f4 	movhi	r2,727
  80b388:	0080b5f4 	movhi	r2,727
  80b38c:	0080b5f4 	movhi	r2,727
  80b390:	0080b5f4 	movhi	r2,727
  80b394:	0080b5f4 	movhi	r2,727
  80b398:	0080b5f4 	movhi	r2,727
  80b39c:	0080b5e0 	cmpeqi	r2,zero,727
  80b3a0:	0080b5f4 	movhi	r2,727
  80b3a4:	0080b5f4 	movhi	r2,727
  80b3a8:	0080b5f4 	movhi	r2,727
  80b3ac:	0080b5f4 	movhi	r2,727
  80b3b0:	0080b5f4 	movhi	r2,727
  80b3b4:	0080b5f4 	movhi	r2,727
  80b3b8:	0080b5f4 	movhi	r2,727
  80b3bc:	0080b5f4 	movhi	r2,727
  80b3c0:	0080b5f4 	movhi	r2,727
  80b3c4:	0080b5f4 	movhi	r2,727
  80b3c8:	0080b434 	movhi	r2,720
  80b3cc:	0080b5f4 	movhi	r2,727
  80b3d0:	0080b5d4 	movui	r2,727
  80b3d4:	00801244 	movi	r2,73
  80b3d8:	88843526 	beq	r17,r2,80c4b0 <_strtod_r+0x1208>
  80b3dc:	002b883a 	mov	r21,zero
  80b3e0:	002d883a 	mov	r22,zero
  80b3e4:	a0000526 	beq	r20,zero,80b3fc <_strtod_r+0x154>
  80b3e8:	d8000715 	stw	zero,28(sp)
  80b3ec:	a5c00015 	stw	r23,0(r20)
  80b3f0:	d9000717 	ldw	r4,28(sp)
  80b3f4:	20000126 	beq	r4,zero,80b3fc <_strtod_r+0x154>
  80b3f8:	b5a0003c 	xorhi	r22,r22,32768
  80b3fc:	a805883a 	mov	r2,r21
  80b400:	b007883a 	mov	r3,r22
  80b404:	dfc01d17 	ldw	ra,116(sp)
  80b408:	df001c17 	ldw	fp,112(sp)
  80b40c:	ddc01b17 	ldw	r23,108(sp)
  80b410:	dd801a17 	ldw	r22,104(sp)
  80b414:	dd401917 	ldw	r21,100(sp)
  80b418:	dd001817 	ldw	r20,96(sp)
  80b41c:	dcc01717 	ldw	r19,92(sp)
  80b420:	dc801617 	ldw	r18,88(sp)
  80b424:	dc401517 	ldw	r17,84(sp)
  80b428:	dc001417 	ldw	r16,80(sp)
  80b42c:	dec01e04 	addi	sp,sp,120
  80b430:	f800283a 	ret
  80b434:	d8000715 	stw	zero,28(sp)
  80b438:	24c00044 	addi	r19,r4,1
  80b43c:	dcc00615 	stw	r19,24(sp)
  80b440:	20800043 	ldbu	r2,1(r4)
  80b444:	10c03fcc 	andi	r3,r2,255
  80b448:	18c0201c 	xori	r3,r3,128
  80b44c:	18ffe004 	addi	r3,r3,-128
  80b450:	183fe226 	beq	r3,zero,80b3dc <__alt_data_end+0xff80b3dc>
  80b454:	11403fcc 	andi	r5,r2,255
  80b458:	2940201c 	xori	r5,r5,128
  80b45c:	297fe004 	addi	r5,r5,-128
  80b460:	00c00c04 	movi	r3,48
  80b464:	28c0e526 	beq	r5,r3,80b7fc <_strtod_r+0x554>
  80b468:	dcc00815 	stw	r19,32(sp)
  80b46c:	0025883a 	mov	r18,zero
  80b470:	10fff404 	addi	r3,r2,-48
  80b474:	18c03fcc 	andi	r3,r3,255
  80b478:	01000244 	movi	r4,9
  80b47c:	20c37536 	bltu	r4,r3,80c254 <_strtod_r+0xfac>
  80b480:	dd400817 	ldw	r21,32(sp)
  80b484:	0027883a 	mov	r19,zero
  80b488:	0039883a 	mov	fp,zero
  80b48c:	002d883a 	mov	r22,zero
  80b490:	01400204 	movi	r5,8
  80b494:	2d805a16 	blt	r5,r22,80b600 <_strtod_r+0x358>
  80b498:	e70002a4 	muli	fp,fp,10
  80b49c:	10c03fcc 	andi	r3,r2,255
  80b4a0:	18c0201c 	xori	r3,r3,128
  80b4a4:	18ffe004 	addi	r3,r3,-128
  80b4a8:	e0f9883a 	add	fp,fp,r3
  80b4ac:	e73ff404 	addi	fp,fp,-48
  80b4b0:	ad400044 	addi	r21,r21,1
  80b4b4:	dd400615 	stw	r21,24(sp)
  80b4b8:	a8800003 	ldbu	r2,0(r21)
  80b4bc:	b5800044 	addi	r22,r22,1
  80b4c0:	10fff404 	addi	r3,r2,-48
  80b4c4:	18c03fcc 	andi	r3,r3,255
  80b4c8:	20fff22e 	bgeu	r4,r3,80b494 <__alt_data_end+0xff80b494>
  80b4cc:	14403fcc 	andi	r17,r2,255
  80b4d0:	8c40201c 	xori	r17,r17,128
  80b4d4:	8c7fe004 	addi	r17,r17,-128
  80b4d8:	8009883a 	mov	r4,r16
  80b4dc:	08091f40 	call	8091f4 <_localeconv_r>
  80b4e0:	11400017 	ldw	r5,0(r2)
  80b4e4:	8009883a 	mov	r4,r16
  80b4e8:	d9401315 	stw	r5,76(sp)
  80b4ec:	08091f40 	call	8091f4 <_localeconv_r>
  80b4f0:	11000017 	ldw	r4,0(r2)
  80b4f4:	08035a80 	call	8035a8 <strlen>
  80b4f8:	d9401317 	ldw	r5,76(sp)
  80b4fc:	100d883a 	mov	r6,r2
  80b500:	a809883a 	mov	r4,r21
  80b504:	08132480 	call	813248 <strncmp>
  80b508:	1000ce26 	beq	r2,zero,80b844 <_strtod_r+0x59c>
  80b50c:	b013883a 	mov	r9,r22
  80b510:	000b883a 	mov	r5,zero
  80b514:	0015883a 	mov	r10,zero
  80b518:	0017883a 	mov	r11,zero
  80b51c:	00801944 	movi	r2,101
  80b520:	88807826 	beq	r17,r2,80b704 <_strtod_r+0x45c>
  80b524:	00801144 	movi	r2,69
  80b528:	88807626 	beq	r17,r2,80b704 <_strtod_r+0x45c>
  80b52c:	002b883a 	mov	r21,zero
  80b530:	48003d1e 	bne	r9,zero,80b628 <_strtod_r+0x380>
  80b534:	2800391e 	bne	r5,zero,80b61c <_strtod_r+0x374>
  80b538:	9000381e 	bne	r18,zero,80b61c <_strtod_r+0x374>
  80b53c:	583fa71e 	bne	r11,zero,80b3dc <__alt_data_end+0xff80b3dc>
  80b540:	00801384 	movi	r2,78
  80b544:	88800526 	beq	r17,r2,80b55c <_strtod_r+0x2b4>
  80b548:	147fa20e 	bge	r2,r17,80b3d4 <__alt_data_end+0xff80b3d4>
  80b54c:	00801a44 	movi	r2,105
  80b550:	8883d726 	beq	r17,r2,80c4b0 <_strtod_r+0x1208>
  80b554:	00801b84 	movi	r2,110
  80b558:	88bfa01e 	bne	r17,r2,80b3dc <__alt_data_end+0xff80b3dc>
  80b55c:	014020b4 	movhi	r5,130
  80b560:	d9000617 	ldw	r4,24(sp)
  80b564:	29727004 	addi	r5,r5,-13888
  80b568:	01c00644 	movi	r7,25
  80b56c:	00000b06 	br	80b59c <_strtod_r+0x2f4>
  80b570:	21000044 	addi	r4,r4,1
  80b574:	20800003 	ldbu	r2,0(r4)
  80b578:	10ffefc4 	addi	r3,r2,-65
  80b57c:	10803fcc 	andi	r2,r2,255
  80b580:	1080201c 	xori	r2,r2,128
  80b584:	18c03fcc 	andi	r3,r3,255
  80b588:	10bfe004 	addi	r2,r2,-128
  80b58c:	38c00136 	bltu	r7,r3,80b594 <_strtod_r+0x2ec>
  80b590:	10800804 	addi	r2,r2,32
  80b594:	29400044 	addi	r5,r5,1
  80b598:	11bf901e 	bne	r2,r6,80b3dc <__alt_data_end+0xff80b3dc>
  80b59c:	29800007 	ldb	r6,0(r5)
  80b5a0:	303ff31e 	bne	r6,zero,80b570 <__alt_data_end+0xff80b570>
  80b5a4:	20800044 	addi	r2,r4,1
  80b5a8:	d8800615 	stw	r2,24(sp)
  80b5ac:	20c00047 	ldb	r3,1(r4)
  80b5b0:	00800a04 	movi	r2,40
  80b5b4:	18849d26 	beq	r3,r2,80c82c <_strtod_r+0x1584>
  80b5b8:	047ffe34 	movhi	r17,65528
  80b5bc:	0025883a 	mov	r18,zero
  80b5c0:	902b883a 	mov	r21,r18
  80b5c4:	882d883a 	mov	r22,r17
  80b5c8:	a03f8926 	beq	r20,zero,80b3f0 <__alt_data_end+0xff80b3f0>
  80b5cc:	ddc00617 	ldw	r23,24(sp)
  80b5d0:	003f8606 	br	80b3ec <__alt_data_end+0xff80b3ec>
  80b5d4:	00800044 	movi	r2,1
  80b5d8:	d8800715 	stw	r2,28(sp)
  80b5dc:	003f9606 	br	80b438 <__alt_data_end+0xff80b438>
  80b5e0:	21000044 	addi	r4,r4,1
  80b5e4:	d9000615 	stw	r4,24(sp)
  80b5e8:	20800003 	ldbu	r2,0(r4)
  80b5ec:	10c03fcc 	andi	r3,r2,255
  80b5f0:	28ff462e 	bgeu	r5,r3,80b30c <__alt_data_end+0xff80b30c>
  80b5f4:	2027883a 	mov	r19,r4
  80b5f8:	d8000715 	stw	zero,28(sp)
  80b5fc:	003f9506 	br	80b454 <__alt_data_end+0xff80b454>
  80b600:	9cc002a4 	muli	r19,r19,10
  80b604:	10803fcc 	andi	r2,r2,255
  80b608:	1080201c 	xori	r2,r2,128
  80b60c:	10bfe004 	addi	r2,r2,-128
  80b610:	9885883a 	add	r2,r19,r2
  80b614:	14fff404 	addi	r19,r2,-48
  80b618:	003fa506 	br	80b4b0 <__alt_data_end+0xff80b4b0>
  80b61c:	002b883a 	mov	r21,zero
  80b620:	002d883a 	mov	r22,zero
  80b624:	003fe806 	br	80b5c8 <__alt_data_end+0xff80b5c8>
  80b628:	aaabc83a 	sub	r21,r21,r10
  80b62c:	b000011e 	bne	r22,zero,80b634 <_strtod_r+0x38c>
  80b630:	482d883a 	mov	r22,r9
  80b634:	00800404 	movi	r2,16
  80b638:	482f883a 	mov	r23,r9
  80b63c:	1240010e 	bge	r2,r9,80b644 <_strtod_r+0x39c>
  80b640:	102f883a 	mov	r23,r2
  80b644:	e009883a 	mov	r4,fp
  80b648:	da401315 	stw	r9,76(sp)
  80b64c:	0817d9c0 	call	817d9c <__floatunsidf>
  80b650:	1025883a 	mov	r18,r2
  80b654:	00800244 	movi	r2,9
  80b658:	1823883a 	mov	r17,r3
  80b65c:	da401317 	ldw	r9,76(sp)
  80b660:	15c0160e 	bge	r2,r23,80b6bc <_strtod_r+0x414>
  80b664:	b8bffdc4 	addi	r2,r23,-9
  80b668:	100490fa 	slli	r2,r2,3
  80b66c:	180b883a 	mov	r5,r3
  80b670:	00c020b4 	movhi	r3,130
  80b674:	18f23b04 	addi	r3,r3,-14100
  80b678:	1885883a 	add	r2,r3,r2
  80b67c:	11800017 	ldw	r6,0(r2)
  80b680:	11c00117 	ldw	r7,4(r2)
  80b684:	9009883a 	mov	r4,r18
  80b688:	0816c2c0 	call	816c2c <__muldf3>
  80b68c:	9809883a 	mov	r4,r19
  80b690:	1025883a 	mov	r18,r2
  80b694:	1823883a 	mov	r17,r3
  80b698:	0817d9c0 	call	817d9c <__floatunsidf>
  80b69c:	9009883a 	mov	r4,r18
  80b6a0:	880b883a 	mov	r5,r17
  80b6a4:	100d883a 	mov	r6,r2
  80b6a8:	180f883a 	mov	r7,r3
  80b6ac:	08158400 	call	815840 <__adddf3>
  80b6b0:	da401317 	ldw	r9,76(sp)
  80b6b4:	1025883a 	mov	r18,r2
  80b6b8:	1823883a 	mov	r17,r3
  80b6bc:	008003c4 	movi	r2,15
  80b6c0:	12407b16 	blt	r2,r9,80b8b0 <_strtod_r+0x608>
  80b6c4:	a83fbe26 	beq	r21,zero,80b5c0 <__alt_data_end+0xff80b5c0>
  80b6c8:	0543670e 	bge	zero,r21,80c468 <_strtod_r+0x11c0>
  80b6cc:	00c00584 	movi	r3,22
  80b6d0:	1d42e816 	blt	r3,r21,80c274 <_strtod_r+0xfcc>
  80b6d4:	a82a90fa 	slli	r21,r21,3
  80b6d8:	008020b4 	movhi	r2,130
  80b6dc:	10b23b04 	addi	r2,r2,-14100
  80b6e0:	1545883a 	add	r2,r2,r21
  80b6e4:	11000017 	ldw	r4,0(r2)
  80b6e8:	11400117 	ldw	r5,4(r2)
  80b6ec:	900d883a 	mov	r6,r18
  80b6f0:	880f883a 	mov	r7,r17
  80b6f4:	0816c2c0 	call	816c2c <__muldf3>
  80b6f8:	102b883a 	mov	r21,r2
  80b6fc:	182d883a 	mov	r22,r3
  80b700:	003fb106 	br	80b5c8 <__alt_data_end+0xff80b5c8>
  80b704:	4801b526 	beq	r9,zero,80bddc <_strtod_r+0xb34>
  80b708:	ddc00617 	ldw	r23,24(sp)
  80b70c:	00c00ac4 	movi	r3,43
  80b710:	b8800044 	addi	r2,r23,1
  80b714:	d8800615 	stw	r2,24(sp)
  80b718:	b8800047 	ldb	r2,1(r23)
  80b71c:	10c1e926 	beq	r2,r3,80bec4 <_strtod_r+0xc1c>
  80b720:	00c00b44 	movi	r3,45
  80b724:	10c1ec26 	beq	r2,r3,80bed8 <_strtod_r+0xc30>
  80b728:	1023883a 	mov	r17,r2
  80b72c:	0019883a 	mov	r12,zero
  80b730:	88bff404 	addi	r2,r17,-48
  80b734:	00c00244 	movi	r3,9
  80b738:	1881b736 	bltu	r3,r2,80be18 <_strtod_r+0xb70>
  80b73c:	00800c04 	movi	r2,48
  80b740:	8880071e 	bne	r17,r2,80b760 <_strtod_r+0x4b8>
  80b744:	d8800617 	ldw	r2,24(sp)
  80b748:	8807883a 	mov	r3,r17
  80b74c:	10800044 	addi	r2,r2,1
  80b750:	d8800615 	stw	r2,24(sp)
  80b754:	14400007 	ldb	r17,0(r2)
  80b758:	10800044 	addi	r2,r2,1
  80b75c:	88fffc26 	beq	r17,r3,80b750 <__alt_data_end+0xff80b750>
  80b760:	88bff3c4 	addi	r2,r17,-49
  80b764:	00c00204 	movi	r3,8
  80b768:	18bf7036 	bltu	r3,r2,80b52c <__alt_data_end+0xff80b52c>
  80b76c:	db800617 	ldw	r14,24(sp)
  80b770:	88bff404 	addi	r2,r17,-48
  80b774:	03400244 	movi	r13,9
  80b778:	71c00044 	addi	r7,r14,1
  80b77c:	d9c00615 	stw	r7,24(sp)
  80b780:	74400043 	ldbu	r17,1(r14)
  80b784:	88fff404 	addi	r3,r17,-48
  80b788:	8c403fcc 	andi	r17,r17,255
  80b78c:	8c40201c 	xori	r17,r17,128
  80b790:	18c03fcc 	andi	r3,r3,255
  80b794:	8c7fe004 	addi	r17,r17,-128
  80b798:	68c00e36 	bltu	r13,r3,80b7d4 <_strtod_r+0x52c>
  80b79c:	71000084 	addi	r4,r14,2
  80b7a0:	d9000615 	stw	r4,24(sp)
  80b7a4:	108002a4 	muli	r2,r2,10
  80b7a8:	21800003 	ldbu	r6,0(r4)
  80b7ac:	200f883a 	mov	r7,r4
  80b7b0:	1463883a 	add	r17,r2,r17
  80b7b4:	30fff404 	addi	r3,r6,-48
  80b7b8:	88bff404 	addi	r2,r17,-48
  80b7bc:	34403fcc 	andi	r17,r6,255
  80b7c0:	8c40201c 	xori	r17,r17,128
  80b7c4:	18c03fcc 	andi	r3,r3,255
  80b7c8:	8c7fe004 	addi	r17,r17,-128
  80b7cc:	21000044 	addi	r4,r4,1
  80b7d0:	68fff32e 	bgeu	r13,r3,80b7a0 <__alt_data_end+0xff80b7a0>
  80b7d4:	3b8fc83a 	sub	r7,r7,r14
  80b7d8:	00c00204 	movi	r3,8
  80b7dc:	19c29716 	blt	r3,r7,80c23c <_strtod_r+0xf94>
  80b7e0:	102b883a 	mov	r21,r2
  80b7e4:	009387c4 	movi	r2,19999
  80b7e8:	1540010e 	bge	r2,r21,80b7f0 <_strtod_r+0x548>
  80b7ec:	102b883a 	mov	r21,r2
  80b7f0:	603f4f26 	beq	r12,zero,80b530 <__alt_data_end+0xff80b530>
  80b7f4:	056bc83a 	sub	r21,zero,r21
  80b7f8:	003f4d06 	br	80b530 <__alt_data_end+0xff80b530>
  80b7fc:	98800047 	ldb	r2,1(r19)
  80b800:	00c01604 	movi	r3,88
  80b804:	10c1de26 	beq	r2,r3,80bf80 <_strtod_r+0xcd8>
  80b808:	00c01e04 	movi	r3,120
  80b80c:	10c1dc26 	beq	r2,r3,80bf80 <_strtod_r+0xcd8>
  80b810:	98c00044 	addi	r3,r19,1
  80b814:	1827883a 	mov	r19,r3
  80b818:	d8c00615 	stw	r3,24(sp)
  80b81c:	18c00044 	addi	r3,r3,1
  80b820:	18bfffc3 	ldbu	r2,-1(r3)
  80b824:	11003fcc 	andi	r4,r2,255
  80b828:	2100201c 	xori	r4,r4,128
  80b82c:	213fe004 	addi	r4,r4,-128
  80b830:	217ff826 	beq	r4,r5,80b814 <__alt_data_end+0xff80b814>
  80b834:	203f7926 	beq	r4,zero,80b61c <__alt_data_end+0xff80b61c>
  80b838:	dcc00815 	stw	r19,32(sp)
  80b83c:	04800044 	movi	r18,1
  80b840:	003f0b06 	br	80b470 <__alt_data_end+0xff80b470>
  80b844:	8009883a 	mov	r4,r16
  80b848:	08091f40 	call	8091f4 <_localeconv_r>
  80b84c:	11000017 	ldw	r4,0(r2)
  80b850:	08035a80 	call	8035a8 <strlen>
  80b854:	d8c00617 	ldw	r3,24(sp)
  80b858:	1885883a 	add	r2,r3,r2
  80b85c:	d8800615 	stw	r2,24(sp)
  80b860:	14400007 	ldb	r17,0(r2)
  80b864:	b001881e 	bne	r22,zero,80be88 <_strtod_r+0xbe0>
  80b868:	00c00c04 	movi	r3,48
  80b86c:	88c3391e 	bne	r17,r3,80c554 <_strtod_r+0x12ac>
  80b870:	10c00044 	addi	r3,r2,1
  80b874:	8809883a 	mov	r4,r17
  80b878:	d8c00615 	stw	r3,24(sp)
  80b87c:	1c400007 	ldb	r17,0(r3)
  80b880:	188bc83a 	sub	r5,r3,r2
  80b884:	18c00044 	addi	r3,r3,1
  80b888:	893ffb26 	beq	r17,r4,80b878 <__alt_data_end+0xff80b878>
  80b88c:	88bff3c4 	addi	r2,r17,-49
  80b890:	00c00204 	movi	r3,8
  80b894:	1882e72e 	bgeu	r3,r2,80c434 <_strtod_r+0x118c>
  80b898:	00801944 	movi	r2,101
  80b89c:	88814d26 	beq	r17,r2,80bdd4 <_strtod_r+0xb2c>
  80b8a0:	0013883a 	mov	r9,zero
  80b8a4:	0015883a 	mov	r10,zero
  80b8a8:	02c00044 	movi	r11,1
  80b8ac:	003f1d06 	br	80b524 <__alt_data_end+0xff80b524>
  80b8b0:	4defc83a 	sub	r23,r9,r23
  80b8b4:	bd6f883a 	add	r23,r23,r21
  80b8b8:	05c21e0e 	bge	zero,r23,80c134 <_strtod_r+0xe8c>
  80b8bc:	b88003cc 	andi	r2,r23,15
  80b8c0:	10000d26 	beq	r2,zero,80b8f8 <_strtod_r+0x650>
  80b8c4:	100490fa 	slli	r2,r2,3
  80b8c8:	00c020b4 	movhi	r3,130
  80b8cc:	18f23b04 	addi	r3,r3,-14100
  80b8d0:	1885883a 	add	r2,r3,r2
  80b8d4:	11000017 	ldw	r4,0(r2)
  80b8d8:	11400117 	ldw	r5,4(r2)
  80b8dc:	900d883a 	mov	r6,r18
  80b8e0:	880f883a 	mov	r7,r17
  80b8e4:	da401315 	stw	r9,76(sp)
  80b8e8:	0816c2c0 	call	816c2c <__muldf3>
  80b8ec:	da401317 	ldw	r9,76(sp)
  80b8f0:	1025883a 	mov	r18,r2
  80b8f4:	1823883a 	mov	r17,r3
  80b8f8:	023ffc04 	movi	r8,-16
  80b8fc:	ba10703a 	and	r8,r23,r8
  80b900:	40003c26 	beq	r8,zero,80b9f4 <_strtod_r+0x74c>
  80b904:	00804d04 	movi	r2,308
  80b908:	1201cd16 	blt	r2,r8,80c040 <_strtod_r+0xd98>
  80b90c:	4011d13a 	srai	r8,r8,4
  80b910:	03000044 	movi	r12,1
  80b914:	62037c0e 	bge	r12,r8,80c708 <_strtod_r+0x1460>
  80b918:	010020b4 	movhi	r4,130
  80b91c:	21323104 	addi	r4,r4,-14140
  80b920:	2015883a 	mov	r10,r4
  80b924:	0027883a 	mov	r19,zero
  80b928:	d9000915 	stw	r4,36(sp)
  80b92c:	9005883a 	mov	r2,r18
  80b930:	8807883a 	mov	r3,r17
  80b934:	dc000c15 	stw	r16,48(sp)
  80b938:	dc800e15 	stw	r18,56(sp)
  80b93c:	9821883a 	mov	r16,r19
  80b940:	0009883a 	mov	r4,zero
  80b944:	8827883a 	mov	r19,r17
  80b948:	602f883a 	mov	r23,r12
  80b94c:	da400a15 	stw	r9,40(sp)
  80b950:	5025883a 	mov	r18,r10
  80b954:	4023883a 	mov	r17,r8
  80b958:	8980004c 	andi	r6,r17,1
  80b95c:	30000626 	beq	r6,zero,80b978 <_strtod_r+0x6d0>
  80b960:	91800017 	ldw	r6,0(r18)
  80b964:	91c00117 	ldw	r7,4(r18)
  80b968:	1009883a 	mov	r4,r2
  80b96c:	180b883a 	mov	r5,r3
  80b970:	0816c2c0 	call	816c2c <__muldf3>
  80b974:	01000044 	movi	r4,1
  80b978:	8823d07a 	srai	r17,r17,1
  80b97c:	84000044 	addi	r16,r16,1
  80b980:	94800204 	addi	r18,r18,8
  80b984:	8dfff41e 	bne	r17,r23,80b958 <__alt_data_end+0xff80b958>
  80b988:	21003fcc 	andi	r4,r4,255
  80b98c:	9823883a 	mov	r17,r19
  80b990:	da400a17 	ldw	r9,40(sp)
  80b994:	8027883a 	mov	r19,r16
  80b998:	dc800e17 	ldw	r18,56(sp)
  80b99c:	dc000c17 	ldw	r16,48(sp)
  80b9a0:	2003b11e 	bne	r4,zero,80c868 <_strtod_r+0x15c0>
  80b9a4:	981690fa 	slli	r11,r19,3
  80b9a8:	d8800917 	ldw	r2,36(sp)
  80b9ac:	01ff2c34 	movhi	r7,64688
  80b9b0:	900d883a 	mov	r6,r18
  80b9b4:	12ef883a 	add	r23,r2,r11
  80b9b8:	b9000017 	ldw	r4,0(r23)
  80b9bc:	b9400117 	ldw	r5,4(r23)
  80b9c0:	89cf883a 	add	r7,r17,r7
  80b9c4:	da401315 	stw	r9,76(sp)
  80b9c8:	0816c2c0 	call	816c2c <__muldf3>
  80b9cc:	1025883a 	mov	r18,r2
  80b9d0:	011f2834 	movhi	r4,31904
  80b9d4:	189ffc2c 	andhi	r2,r3,32752
  80b9d8:	da401317 	ldw	r9,76(sp)
  80b9dc:	20819836 	bltu	r4,r2,80c040 <_strtod_r+0xd98>
  80b9e0:	011f2434 	movhi	r4,31888
  80b9e4:	2083382e 	bgeu	r4,r2,80c6c8 <_strtod_r+0x1420>
  80b9e8:	045ffc34 	movhi	r17,32752
  80b9ec:	8c7fffc4 	addi	r17,r17,-1
  80b9f0:	04bfffc4 	movi	r18,-1
  80b9f4:	d8000915 	stw	zero,36(sp)
  80b9f8:	d9400817 	ldw	r5,32(sp)
  80b9fc:	df000015 	stw	fp,0(sp)
  80ba00:	480f883a 	mov	r7,r9
  80ba04:	b00d883a 	mov	r6,r22
  80ba08:	8009883a 	mov	r4,r16
  80ba0c:	0809a200 	call	809a20 <__s2b>
  80ba10:	d8800815 	stw	r2,32(sp)
  80ba14:	10018a26 	beq	r2,zero,80c040 <_strtod_r+0xd98>
  80ba18:	a807d7fa 	srai	r3,r21,31
  80ba1c:	0545c83a 	sub	r2,zero,r21
  80ba20:	dd400a15 	stw	r21,40(sp)
  80ba24:	1886703a 	and	r3,r3,r2
  80ba28:	d8c00c15 	stw	r3,48(sp)
  80ba2c:	a8013516 	blt	r21,zero,80bf04 <_strtod_r+0xc5c>
  80ba30:	d9400817 	ldw	r5,32(sp)
  80ba34:	0011883a 	mov	r8,zero
  80ba38:	0027883a 	mov	r19,zero
  80ba3c:	29400304 	addi	r5,r5,12
  80ba40:	d9400f15 	stw	r5,60(sp)
  80ba44:	402b883a 	mov	r21,r8
  80ba48:	dd001215 	stw	r20,72(sp)
  80ba4c:	d8800817 	ldw	r2,32(sp)
  80ba50:	8009883a 	mov	r4,r16
  80ba54:	11400117 	ldw	r5,4(r2)
  80ba58:	08098300 	call	809830 <_Balloc>
  80ba5c:	1029883a 	mov	r20,r2
  80ba60:	10012d26 	beq	r2,zero,80bf18 <_strtod_r+0xc70>
  80ba64:	d8c00817 	ldw	r3,32(sp)
  80ba68:	d9400f17 	ldw	r5,60(sp)
  80ba6c:	11000304 	addi	r4,r2,12
  80ba70:	19800417 	ldw	r6,16(r3)
  80ba74:	31800084 	addi	r6,r6,2
  80ba78:	318d883a 	add	r6,r6,r6
  80ba7c:	318d883a 	add	r6,r6,r6
  80ba80:	080958c0 	call	80958c <memcpy>
  80ba84:	d9000204 	addi	r4,sp,8
  80ba88:	d9000015 	stw	r4,0(sp)
  80ba8c:	d9c00404 	addi	r7,sp,16
  80ba90:	900b883a 	mov	r5,r18
  80ba94:	880d883a 	mov	r6,r17
  80ba98:	8009883a 	mov	r4,r16
  80ba9c:	080a4c40 	call	80a4c4 <__d2b>
  80baa0:	d8800515 	stw	r2,20(sp)
  80baa4:	dc801115 	stw	r18,68(sp)
  80baa8:	dc401015 	stw	r17,64(sp)
  80baac:	10027c26 	beq	r2,zero,80c4a0 <_strtod_r+0x11f8>
  80bab0:	01400044 	movi	r5,1
  80bab4:	8009883a 	mov	r4,r16
  80bab8:	0809c3c0 	call	809c3c <__i2b>
  80babc:	1027883a 	mov	r19,r2
  80bac0:	10011526 	beq	r2,zero,80bf18 <_strtod_r+0xc70>
  80bac4:	d8800417 	ldw	r2,16(sp)
  80bac8:	1000c816 	blt	r2,zero,80bdec <_strtod_r+0xb44>
  80bacc:	d9400c17 	ldw	r5,48(sp)
  80bad0:	d9000a17 	ldw	r4,40(sp)
  80bad4:	28ad883a 	add	r22,r5,r2
  80bad8:	d9400917 	ldw	r5,36(sp)
  80badc:	df000217 	ldw	fp,8(sp)
  80bae0:	05ff0084 	movi	r23,-1022
  80bae4:	1147c83a 	sub	r3,r2,r5
  80bae8:	1f07883a 	add	r3,r3,fp
  80baec:	00800d84 	movi	r2,54
  80baf0:	18ffffc4 	addi	r3,r3,-1
  80baf4:	1739c83a 	sub	fp,r2,fp
  80baf8:	1dc0a50e 	bge	r3,r23,80bd90 <_strtod_r+0xae8>
  80bafc:	b8efc83a 	sub	r23,r23,r3
  80bb00:	008007c4 	movi	r2,31
  80bb04:	e5f9c83a 	sub	fp,fp,r23
  80bb08:	15c0bc16 	blt	r2,r23,80bdfc <_strtod_r+0xb54>
  80bb0c:	00800044 	movi	r2,1
  80bb10:	15c4983a 	sll	r2,r2,r23
  80bb14:	d8000b15 	stw	zero,44(sp)
  80bb18:	d8800d15 	stw	r2,52(sp)
  80bb1c:	2707883a 	add	r3,r4,fp
  80bb20:	d9000917 	ldw	r4,36(sp)
  80bb24:	b739883a 	add	fp,r22,fp
  80bb28:	20ef883a 	add	r23,r4,r3
  80bb2c:	b009883a 	mov	r4,r22
  80bb30:	e580010e 	bge	fp,r22,80bb38 <_strtod_r+0x890>
  80bb34:	e009883a 	mov	r4,fp
  80bb38:	b805883a 	mov	r2,r23
  80bb3c:	25c0010e 	bge	r4,r23,80bb44 <_strtod_r+0x89c>
  80bb40:	2005883a 	mov	r2,r4
  80bb44:	0080030e 	bge	zero,r2,80bb54 <_strtod_r+0x8ac>
  80bb48:	e0b9c83a 	sub	fp,fp,r2
  80bb4c:	b8afc83a 	sub	r23,r23,r2
  80bb50:	b0adc83a 	sub	r22,r22,r2
  80bb54:	d9400c17 	ldw	r5,48(sp)
  80bb58:	28001126 	beq	r5,zero,80bba0 <_strtod_r+0x8f8>
  80bb5c:	280d883a 	mov	r6,r5
  80bb60:	8009883a 	mov	r4,r16
  80bb64:	980b883a 	mov	r5,r19
  80bb68:	0809e700 	call	809e70 <__pow5mult>
  80bb6c:	1027883a 	mov	r19,r2
  80bb70:	1000e926 	beq	r2,zero,80bf18 <_strtod_r+0xc70>
  80bb74:	d9800517 	ldw	r6,20(sp)
  80bb78:	100b883a 	mov	r5,r2
  80bb7c:	8009883a 	mov	r4,r16
  80bb80:	0809c780 	call	809c78 <__multiply>
  80bb84:	1000e426 	beq	r2,zero,80bf18 <_strtod_r+0xc70>
  80bb88:	d9400517 	ldw	r5,20(sp)
  80bb8c:	8009883a 	mov	r4,r16
  80bb90:	d8801315 	stw	r2,76(sp)
  80bb94:	08098d80 	call	8098d8 <_Bfree>
  80bb98:	d8801317 	ldw	r2,76(sp)
  80bb9c:	d8800515 	stw	r2,20(sp)
  80bba0:	0700060e 	bge	zero,fp,80bbbc <_strtod_r+0x914>
  80bba4:	d9400517 	ldw	r5,20(sp)
  80bba8:	e00d883a 	mov	r6,fp
  80bbac:	8009883a 	mov	r4,r16
  80bbb0:	0809fb00 	call	809fb0 <__lshift>
  80bbb4:	d8800515 	stw	r2,20(sp)
  80bbb8:	10023926 	beq	r2,zero,80c4a0 <_strtod_r+0x11f8>
  80bbbc:	d8800a17 	ldw	r2,40(sp)
  80bbc0:	10000626 	beq	r2,zero,80bbdc <_strtod_r+0x934>
  80bbc4:	d9800a17 	ldw	r6,40(sp)
  80bbc8:	a00b883a 	mov	r5,r20
  80bbcc:	8009883a 	mov	r4,r16
  80bbd0:	0809e700 	call	809e70 <__pow5mult>
  80bbd4:	1029883a 	mov	r20,r2
  80bbd8:	1000cf26 	beq	r2,zero,80bf18 <_strtod_r+0xc70>
  80bbdc:	05c0060e 	bge	zero,r23,80bbf8 <_strtod_r+0x950>
  80bbe0:	a00b883a 	mov	r5,r20
  80bbe4:	b80d883a 	mov	r6,r23
  80bbe8:	8009883a 	mov	r4,r16
  80bbec:	0809fb00 	call	809fb0 <__lshift>
  80bbf0:	1029883a 	mov	r20,r2
  80bbf4:	1000c826 	beq	r2,zero,80bf18 <_strtod_r+0xc70>
  80bbf8:	0580060e 	bge	zero,r22,80bc14 <_strtod_r+0x96c>
  80bbfc:	980b883a 	mov	r5,r19
  80bc00:	b00d883a 	mov	r6,r22
  80bc04:	8009883a 	mov	r4,r16
  80bc08:	0809fb00 	call	809fb0 <__lshift>
  80bc0c:	1027883a 	mov	r19,r2
  80bc10:	1000c126 	beq	r2,zero,80bf18 <_strtod_r+0xc70>
  80bc14:	d9400517 	ldw	r5,20(sp)
  80bc18:	a00d883a 	mov	r6,r20
  80bc1c:	8009883a 	mov	r4,r16
  80bc20:	080a1580 	call	80a158 <__mdiff>
  80bc24:	102b883a 	mov	r21,r2
  80bc28:	1000bb26 	beq	r2,zero,80bf18 <_strtod_r+0xc70>
  80bc2c:	10c00317 	ldw	r3,12(r2)
  80bc30:	980b883a 	mov	r5,r19
  80bc34:	10000315 	stw	zero,12(r2)
  80bc38:	1009883a 	mov	r4,r2
  80bc3c:	d8c00e15 	stw	r3,56(sp)
  80bc40:	080a0f80 	call	80a0f8 <__mcmp>
  80bc44:	10027616 	blt	r2,zero,80c620 <_strtod_r+0x1378>
  80bc48:	10024426 	beq	r2,zero,80c55c <_strtod_r+0x12b4>
  80bc4c:	980b883a 	mov	r5,r19
  80bc50:	a809883a 	mov	r4,r21
  80bc54:	080a6100 	call	80a610 <__ratio>
  80bc58:	000d883a 	mov	r6,zero
  80bc5c:	01d00034 	movhi	r7,16384
  80bc60:	1009883a 	mov	r4,r2
  80bc64:	180b883a 	mov	r5,r3
  80bc68:	102f883a 	mov	r23,r2
  80bc6c:	182d883a 	mov	r22,r3
  80bc70:	0816b380 	call	816b38 <__ledf2>
  80bc74:	00804a16 	blt	zero,r2,80bda0 <_strtod_r+0xaf8>
  80bc78:	d9400e17 	ldw	r5,56(sp)
  80bc7c:	28006b26 	beq	r5,zero,80be2c <_strtod_r+0xb84>
  80bc80:	058ffc34 	movhi	r22,16368
  80bc84:	d8000b15 	stw	zero,44(sp)
  80bc88:	d8000d15 	stw	zero,52(sp)
  80bc8c:	b02f883a 	mov	r23,r22
  80bc90:	8f1ffc2c 	andhi	fp,r17,32752
  80bc94:	009ff834 	movhi	r2,32736
  80bc98:	e080cd26 	beq	fp,r2,80bfd0 <_strtod_r+0xd28>
  80bc9c:	d9400917 	ldw	r5,36(sp)
  80bca0:	28001a26 	beq	r5,zero,80bd0c <_strtod_r+0xa64>
  80bca4:	0081a834 	movhi	r2,1696
  80bca8:	17001836 	bltu	r2,fp,80bd0c <_strtod_r+0xa64>
  80bcac:	d9000d17 	ldw	r4,52(sp)
  80bcb0:	01d07834 	movhi	r7,16864
  80bcb4:	39ffffc4 	addi	r7,r7,-1
  80bcb8:	01bff034 	movhi	r6,65472
  80bcbc:	b80b883a 	mov	r5,r23
  80bcc0:	0816b380 	call	816b38 <__ledf2>
  80bcc4:	00800e16 	blt	zero,r2,80bd00 <_strtod_r+0xa58>
  80bcc8:	d9000d17 	ldw	r4,52(sp)
  80bccc:	b80b883a 	mov	r5,r23
  80bcd0:	081496c0 	call	81496c <__fixunsdfsi>
  80bcd4:	10018126 	beq	r2,zero,80c2dc <_strtod_r+0x1034>
  80bcd8:	1009883a 	mov	r4,r2
  80bcdc:	0817d9c0 	call	817d9c <__floatunsidf>
  80bce0:	d8800d15 	stw	r2,52(sp)
  80bce4:	182f883a 	mov	r23,r3
  80bce8:	d8800e17 	ldw	r2,56(sp)
  80bcec:	1001791e 	bne	r2,zero,80c2d4 <_strtod_r+0x102c>
  80bcf0:	ba20003c 	xorhi	r8,r23,32768
  80bcf4:	d8c00d17 	ldw	r3,52(sp)
  80bcf8:	402d883a 	mov	r22,r8
  80bcfc:	d8c00b15 	stw	r3,44(sp)
  80bd00:	0081ac34 	movhi	r2,1712
  80bd04:	b091883a 	add	r8,r22,r2
  80bd08:	472dc83a 	sub	r22,r8,fp
  80bd0c:	9009883a 	mov	r4,r18
  80bd10:	880b883a 	mov	r5,r17
  80bd14:	080a3540 	call	80a354 <__ulp>
  80bd18:	d9000b17 	ldw	r4,44(sp)
  80bd1c:	b00b883a 	mov	r5,r22
  80bd20:	100d883a 	mov	r6,r2
  80bd24:	180f883a 	mov	r7,r3
  80bd28:	0816c2c0 	call	816c2c <__muldf3>
  80bd2c:	900d883a 	mov	r6,r18
  80bd30:	880f883a 	mov	r7,r17
  80bd34:	1009883a 	mov	r4,r2
  80bd38:	180b883a 	mov	r5,r3
  80bd3c:	08158400 	call	815840 <__adddf3>
  80bd40:	1025883a 	mov	r18,r2
  80bd44:	1823883a 	mov	r17,r3
  80bd48:	182d883a 	mov	r22,r3
  80bd4c:	d9000917 	ldw	r4,36(sp)
  80bd50:	2000021e 	bne	r4,zero,80bd5c <_strtod_r+0xab4>
  80bd54:	b09ffc2c 	andhi	r2,r22,32752
  80bd58:	e080be26 	beq	fp,r2,80c054 <_strtod_r+0xdac>
  80bd5c:	d9400517 	ldw	r5,20(sp)
  80bd60:	8009883a 	mov	r4,r16
  80bd64:	08098d80 	call	8098d8 <_Bfree>
  80bd68:	a00b883a 	mov	r5,r20
  80bd6c:	8009883a 	mov	r4,r16
  80bd70:	08098d80 	call	8098d8 <_Bfree>
  80bd74:	980b883a 	mov	r5,r19
  80bd78:	8009883a 	mov	r4,r16
  80bd7c:	08098d80 	call	8098d8 <_Bfree>
  80bd80:	a80b883a 	mov	r5,r21
  80bd84:	8009883a 	mov	r4,r16
  80bd88:	08098d80 	call	8098d8 <_Bfree>
  80bd8c:	003f2f06 	br	80ba4c <__alt_data_end+0xff80ba4c>
  80bd90:	00c00044 	movi	r3,1
  80bd94:	d8000b15 	stw	zero,44(sp)
  80bd98:	d8c00d15 	stw	r3,52(sp)
  80bd9c:	003f5f06 	br	80bb1c <__alt_data_end+0xff80bb1c>
  80bda0:	b809883a 	mov	r4,r23
  80bda4:	000d883a 	mov	r6,zero
  80bda8:	01cff834 	movhi	r7,16352
  80bdac:	b00b883a 	mov	r5,r22
  80bdb0:	0816c2c0 	call	816c2c <__muldf3>
  80bdb4:	d9000e17 	ldw	r4,56(sp)
  80bdb8:	d8800d15 	stw	r2,52(sp)
  80bdbc:	182f883a 	mov	r23,r3
  80bdc0:	2000181e 	bne	r4,zero,80be24 <_strtod_r+0xb7c>
  80bdc4:	1a20003c 	xorhi	r8,r3,32768
  80bdc8:	d8800b15 	stw	r2,44(sp)
  80bdcc:	402d883a 	mov	r22,r8
  80bdd0:	003faf06 	br	80bc90 <__alt_data_end+0xff80bc90>
  80bdd4:	0015883a 	mov	r10,zero
  80bdd8:	02c00044 	movi	r11,1
  80bddc:	2800011e 	bne	r5,zero,80bde4 <_strtod_r+0xb3c>
  80bde0:	903d7e26 	beq	r18,zero,80b3dc <__alt_data_end+0xff80b3dc>
  80bde4:	0013883a 	mov	r9,zero
  80bde8:	003e4706 	br	80b708 <__alt_data_end+0xff80b708>
  80bdec:	d8c00a17 	ldw	r3,40(sp)
  80bdf0:	dd800c17 	ldw	r22,48(sp)
  80bdf4:	1889c83a 	sub	r4,r3,r2
  80bdf8:	003f3706 	br	80bad8 <__alt_data_end+0xff80bad8>
  80bdfc:	00bef884 	movi	r2,-1054
  80be00:	05c00044 	movi	r23,1
  80be04:	10c5c83a 	sub	r2,r2,r3
  80be08:	b884983a 	sll	r2,r23,r2
  80be0c:	ddc00d15 	stw	r23,52(sp)
  80be10:	d8800b15 	stw	r2,44(sp)
  80be14:	003f4106 	br	80bb1c <__alt_data_end+0xff80bb1c>
  80be18:	ddc00615 	stw	r23,24(sp)
  80be1c:	002b883a 	mov	r21,zero
  80be20:	003dc306 	br	80b530 <__alt_data_end+0xff80b530>
  80be24:	1811883a 	mov	r8,r3
  80be28:	003fe706 	br	80bdc8 <__alt_data_end+0xff80bdc8>
  80be2c:	90002e1e 	bne	r18,zero,80bee8 <_strtod_r+0xc40>
  80be30:	00c00434 	movhi	r3,16
  80be34:	18ffffc4 	addi	r3,r3,-1
  80be38:	88c4703a 	and	r2,r17,r3
  80be3c:	10002c1e 	bne	r2,zero,80bef0 <_strtod_r+0xc48>
  80be40:	000d883a 	mov	r6,zero
  80be44:	01cffc34 	movhi	r7,16368
  80be48:	b809883a 	mov	r4,r23
  80be4c:	b00b883a 	mov	r5,r22
  80be50:	0816b380 	call	816b38 <__ledf2>
  80be54:	10021716 	blt	r2,zero,80c6b4 <_strtod_r+0x140c>
  80be58:	b809883a 	mov	r4,r23
  80be5c:	b00b883a 	mov	r5,r22
  80be60:	000d883a 	mov	r6,zero
  80be64:	01cff834 	movhi	r7,16352
  80be68:	0816c2c0 	call	816c2c <__muldf3>
  80be6c:	d8800d15 	stw	r2,52(sp)
  80be70:	182f883a 	mov	r23,r3
  80be74:	102d883a 	mov	r22,r2
  80be78:	1a20003c 	xorhi	r8,r3,32768
  80be7c:	dd800b15 	stw	r22,44(sp)
  80be80:	402d883a 	mov	r22,r8
  80be84:	003f8206 	br	80bc90 <__alt_data_end+0xff80bc90>
  80be88:	b013883a 	mov	r9,r22
  80be8c:	000b883a 	mov	r5,zero
  80be90:	0015883a 	mov	r10,zero
  80be94:	893ff404 	addi	r4,r17,-48
  80be98:	00800244 	movi	r2,9
  80be9c:	11001036 	bltu	r2,r4,80bee0 <_strtod_r+0xc38>
  80bea0:	28c00044 	addi	r3,r5,1
  80bea4:	2023883a 	mov	r17,r4
  80bea8:	20014d1e 	bne	r4,zero,80c3e0 <_strtod_r+0x1138>
  80beac:	d9800617 	ldw	r6,24(sp)
  80beb0:	180b883a 	mov	r5,r3
  80beb4:	30800044 	addi	r2,r6,1
  80beb8:	d8800615 	stw	r2,24(sp)
  80bebc:	34400047 	ldb	r17,1(r6)
  80bec0:	003ff406 	br	80be94 <__alt_data_end+0xff80be94>
  80bec4:	0019883a 	mov	r12,zero
  80bec8:	b8800084 	addi	r2,r23,2
  80becc:	d8800615 	stw	r2,24(sp)
  80bed0:	bc400087 	ldb	r17,2(r23)
  80bed4:	003e1606 	br	80b730 <__alt_data_end+0xff80b730>
  80bed8:	03000044 	movi	r12,1
  80bedc:	003ffa06 	br	80bec8 <__alt_data_end+0xff80bec8>
  80bee0:	02c00044 	movi	r11,1
  80bee4:	003d8d06 	br	80b51c <__alt_data_end+0xff80b51c>
  80bee8:	00800044 	movi	r2,1
  80beec:	9080fe26 	beq	r18,r2,80c2e8 <_strtod_r+0x1040>
  80bef0:	d8000b15 	stw	zero,44(sp)
  80bef4:	05affc34 	movhi	r22,49136
  80bef8:	d8000d15 	stw	zero,52(sp)
  80befc:	05cffc34 	movhi	r23,16368
  80bf00:	003f6306 	br	80bc90 <__alt_data_end+0xff80bc90>
  80bf04:	d8000a15 	stw	zero,40(sp)
  80bf08:	003ec906 	br	80ba30 <__alt_data_end+0xff80ba30>
  80bf0c:	d9001117 	ldw	r4,68(sp)
  80bf10:	00bfffc4 	movi	r2,-1
  80bf14:	2080461e 	bne	r4,r2,80c030 <_strtod_r+0xd88>
  80bf18:	dd000a15 	stw	r20,40(sp)
  80bf1c:	dd001217 	ldw	r20,72(sp)
  80bf20:	a811883a 	mov	r8,r21
  80bf24:	d8800517 	ldw	r2,20(sp)
  80bf28:	00c00884 	movi	r3,34
  80bf2c:	80c00015 	stw	r3,0(r16)
  80bf30:	002b883a 	mov	r21,zero
  80bf34:	059ffc34 	movhi	r22,32752
  80bf38:	100b883a 	mov	r5,r2
  80bf3c:	8009883a 	mov	r4,r16
  80bf40:	da001315 	stw	r8,76(sp)
  80bf44:	08098d80 	call	8098d8 <_Bfree>
  80bf48:	d9400a17 	ldw	r5,40(sp)
  80bf4c:	8009883a 	mov	r4,r16
  80bf50:	08098d80 	call	8098d8 <_Bfree>
  80bf54:	980b883a 	mov	r5,r19
  80bf58:	8009883a 	mov	r4,r16
  80bf5c:	08098d80 	call	8098d8 <_Bfree>
  80bf60:	d9400817 	ldw	r5,32(sp)
  80bf64:	8009883a 	mov	r4,r16
  80bf68:	08098d80 	call	8098d8 <_Bfree>
  80bf6c:	da001317 	ldw	r8,76(sp)
  80bf70:	8009883a 	mov	r4,r16
  80bf74:	400b883a 	mov	r5,r8
  80bf78:	08098d80 	call	8098d8 <_Bfree>
  80bf7c:	003d9206 	br	80b5c8 <__alt_data_end+0xff80b5c8>
  80bf80:	d8c00717 	ldw	r3,28(sp)
  80bf84:	d8800504 	addi	r2,sp,20
  80bf88:	018020b4 	movhi	r6,130
  80bf8c:	31b27604 	addi	r6,r6,-13864
  80bf90:	d8c00115 	stw	r3,4(sp)
  80bf94:	d8800015 	stw	r2,0(sp)
  80bf98:	d9c00404 	addi	r7,sp,16
  80bf9c:	d9400604 	addi	r5,sp,24
  80bfa0:	8009883a 	mov	r4,r16
  80bfa4:	08127bc0 	call	8127bc <__gethex>
  80bfa8:	154001cc 	andi	r21,r2,7
  80bfac:	a83d9b26 	beq	r21,zero,80b61c <__alt_data_end+0xff80b61c>
  80bfb0:	00c00184 	movi	r3,6
  80bfb4:	a8c0d61e 	bne	r21,r3,80c310 <_strtod_r+0x1068>
  80bfb8:	9cc00044 	addi	r19,r19,1
  80bfbc:	dcc00615 	stw	r19,24(sp)
  80bfc0:	002b883a 	mov	r21,zero
  80bfc4:	002d883a 	mov	r22,zero
  80bfc8:	d8000715 	stw	zero,28(sp)
  80bfcc:	003d7e06 	br	80b5c8 <__alt_data_end+0xff80b5c8>
  80bfd0:	00bf2c34 	movhi	r2,64688
  80bfd4:	88a3883a 	add	r17,r17,r2
  80bfd8:	9009883a 	mov	r4,r18
  80bfdc:	880b883a 	mov	r5,r17
  80bfe0:	080a3540 	call	80a354 <__ulp>
  80bfe4:	d9000b17 	ldw	r4,44(sp)
  80bfe8:	100d883a 	mov	r6,r2
  80bfec:	180f883a 	mov	r7,r3
  80bff0:	b00b883a 	mov	r5,r22
  80bff4:	0816c2c0 	call	816c2c <__muldf3>
  80bff8:	900d883a 	mov	r6,r18
  80bffc:	180b883a 	mov	r5,r3
  80c000:	880f883a 	mov	r7,r17
  80c004:	1009883a 	mov	r4,r2
  80c008:	08158400 	call	815840 <__adddf3>
  80c00c:	015f2834 	movhi	r5,31904
  80c010:	1025883a 	mov	r18,r2
  80c014:	297fffc4 	addi	r5,r5,-1
  80c018:	189ffc2c 	andhi	r2,r3,32752
  80c01c:	2880892e 	bgeu	r5,r2,80c244 <_strtod_r+0xf9c>
  80c020:	d8801017 	ldw	r2,64(sp)
  80c024:	00dffc34 	movhi	r3,32752
  80c028:	18ffffc4 	addi	r3,r3,-1
  80c02c:	10ffb726 	beq	r2,r3,80bf0c <__alt_data_end+0xff80bf0c>
  80c030:	045ffc34 	movhi	r17,32752
  80c034:	8c7fffc4 	addi	r17,r17,-1
  80c038:	04bfffc4 	movi	r18,-1
  80c03c:	003f4706 	br	80bd5c <__alt_data_end+0xff80bd5c>
  80c040:	00800884 	movi	r2,34
  80c044:	80800015 	stw	r2,0(r16)
  80c048:	002b883a 	mov	r21,zero
  80c04c:	059ffc34 	movhi	r22,32752
  80c050:	003d5d06 	br	80b5c8 <__alt_data_end+0xff80b5c8>
  80c054:	d9000d17 	ldw	r4,52(sp)
  80c058:	b80b883a 	mov	r5,r23
  80c05c:	0817c400 	call	817c40 <__fixdfsi>
  80c060:	1009883a 	mov	r4,r2
  80c064:	0817cc00 	call	817cc0 <__floatsidf>
  80c068:	d9000d17 	ldw	r4,52(sp)
  80c06c:	b80b883a 	mov	r5,r23
  80c070:	100d883a 	mov	r6,r2
  80c074:	180f883a 	mov	r7,r3
  80c078:	08173440 	call	817344 <__subdf3>
  80c07c:	d9400e17 	ldw	r5,56(sp)
  80c080:	1039883a 	mov	fp,r2
  80c084:	182f883a 	mov	r23,r3
  80c088:	2800141e 	bne	r5,zero,80c0dc <_strtod_r+0xe34>
  80c08c:	9000131e 	bne	r18,zero,80c0dc <_strtod_r+0xe34>
  80c090:	00800434 	movhi	r2,16
  80c094:	10bfffc4 	addi	r2,r2,-1
  80c098:	b0ac703a 	and	r22,r22,r2
  80c09c:	b0000f1e 	bne	r22,zero,80c0dc <_strtod_r+0xe34>
  80c0a0:	01a52834 	movhi	r6,38048
  80c0a4:	01cff434 	movhi	r7,16336
  80c0a8:	318d6544 	addi	r6,r6,13717
  80c0ac:	39ffffc4 	addi	r7,r7,-1
  80c0b0:	e009883a 	mov	r4,fp
  80c0b4:	180b883a 	mov	r5,r3
  80c0b8:	0816b380 	call	816b38 <__ledf2>
  80c0bc:	103f270e 	bge	r2,zero,80bd5c <__alt_data_end+0xff80bd5c>
  80c0c0:	dd000a15 	stw	r20,40(sp)
  80c0c4:	a811883a 	mov	r8,r21
  80c0c8:	dd001217 	ldw	r20,72(sp)
  80c0cc:	d8800517 	ldw	r2,20(sp)
  80c0d0:	002b883a 	mov	r21,zero
  80c0d4:	882d883a 	mov	r22,r17
  80c0d8:	003f9706 	br	80bf38 <__alt_data_end+0xff80bf38>
  80c0dc:	01a52834 	movhi	r6,38048
  80c0e0:	01cff834 	movhi	r7,16352
  80c0e4:	318d6544 	addi	r6,r6,13717
  80c0e8:	39ffffc4 	addi	r7,r7,-1
  80c0ec:	e009883a 	mov	r4,fp
  80c0f0:	b80b883a 	mov	r5,r23
  80c0f4:	0816b380 	call	816b38 <__ledf2>
  80c0f8:	10000716 	blt	r2,zero,80c118 <_strtod_r+0xe70>
  80c0fc:	018d6c34 	movhi	r6,13744
  80c100:	31b94d44 	addi	r6,r6,-6859
  80c104:	01cff834 	movhi	r7,16352
  80c108:	e009883a 	mov	r4,fp
  80c10c:	b80b883a 	mov	r5,r23
  80c110:	0816a5c0 	call	816a5c <__gedf2>
  80c114:	00bf110e 	bge	zero,r2,80bd5c <__alt_data_end+0xff80bd5c>
  80c118:	dd000a15 	stw	r20,40(sp)
  80c11c:	a811883a 	mov	r8,r21
  80c120:	dd001217 	ldw	r20,72(sp)
  80c124:	d8800517 	ldw	r2,20(sp)
  80c128:	902b883a 	mov	r21,r18
  80c12c:	882d883a 	mov	r22,r17
  80c130:	003f8106 	br	80bf38 <__alt_data_end+0xff80bf38>
  80c134:	b83e2f26 	beq	r23,zero,80b9f4 <__alt_data_end+0xff80b9f4>
  80c138:	05efc83a 	sub	r23,zero,r23
  80c13c:	b88003cc 	andi	r2,r23,15
  80c140:	10000d26 	beq	r2,zero,80c178 <_strtod_r+0xed0>
  80c144:	100490fa 	slli	r2,r2,3
  80c148:	00c020b4 	movhi	r3,130
  80c14c:	18f23b04 	addi	r3,r3,-14100
  80c150:	1885883a 	add	r2,r3,r2
  80c154:	11800017 	ldw	r6,0(r2)
  80c158:	11c00117 	ldw	r7,4(r2)
  80c15c:	9009883a 	mov	r4,r18
  80c160:	880b883a 	mov	r5,r17
  80c164:	da401315 	stw	r9,76(sp)
  80c168:	08160ec0 	call	8160ec <__divdf3>
  80c16c:	da401317 	ldw	r9,76(sp)
  80c170:	1025883a 	mov	r18,r2
  80c174:	1823883a 	mov	r17,r3
  80c178:	b82fd13a 	srai	r23,r23,4
  80c17c:	b83e1d26 	beq	r23,zero,80b9f4 <__alt_data_end+0xff80b9f4>
  80c180:	008007c4 	movi	r2,31
  80c184:	15c02816 	blt	r2,r23,80c228 <_strtod_r+0xf80>
  80c188:	b880040c 	andi	r2,r23,16
  80c18c:	10019726 	beq	r2,zero,80c7ec <_strtod_r+0x1544>
  80c190:	05c1880e 	bge	zero,r23,80c7b4 <_strtod_r+0x150c>
  80c194:	00c01a84 	movi	r3,106
  80c198:	d8c00915 	stw	r3,36(sp)
  80c19c:	04c020b4 	movhi	r19,130
  80c1a0:	9cf27b04 	addi	r19,r19,-13844
  80c1a4:	8807883a 	mov	r3,r17
  80c1a8:	9005883a 	mov	r2,r18
  80c1ac:	8023883a 	mov	r17,r16
  80c1b0:	0009883a 	mov	r4,zero
  80c1b4:	9821883a 	mov	r16,r19
  80c1b8:	da400a15 	stw	r9,40(sp)
  80c1bc:	1827883a 	mov	r19,r3
  80c1c0:	b980004c 	andi	r6,r23,1
  80c1c4:	30000626 	beq	r6,zero,80c1e0 <_strtod_r+0xf38>
  80c1c8:	81800017 	ldw	r6,0(r16)
  80c1cc:	81c00117 	ldw	r7,4(r16)
  80c1d0:	1009883a 	mov	r4,r2
  80c1d4:	180b883a 	mov	r5,r3
  80c1d8:	0816c2c0 	call	816c2c <__muldf3>
  80c1dc:	01000044 	movi	r4,1
  80c1e0:	b82fd07a 	srai	r23,r23,1
  80c1e4:	84000204 	addi	r16,r16,8
  80c1e8:	b83ff51e 	bne	r23,zero,80c1c0 <__alt_data_end+0xff80c1c0>
  80c1ec:	21003fcc 	andi	r4,r4,255
  80c1f0:	8821883a 	mov	r16,r17
  80c1f4:	da400a17 	ldw	r9,40(sp)
  80c1f8:	9823883a 	mov	r17,r19
  80c1fc:	2001a51e 	bne	r4,zero,80c894 <_strtod_r+0x15ec>
  80c200:	d9000917 	ldw	r4,36(sp)
  80c204:	20016d1e 	bne	r4,zero,80c7bc <_strtod_r+0x1514>
  80c208:	000d883a 	mov	r6,zero
  80c20c:	000f883a 	mov	r7,zero
  80c210:	9009883a 	mov	r4,r18
  80c214:	880b883a 	mov	r5,r17
  80c218:	da401315 	stw	r9,76(sp)
  80c21c:	08169d40 	call	8169d4 <__eqdf2>
  80c220:	da401317 	ldw	r9,76(sp)
  80c224:	103df41e 	bne	r2,zero,80b9f8 <__alt_data_end+0xff80b9f8>
  80c228:	00800884 	movi	r2,34
  80c22c:	80800015 	stw	r2,0(r16)
  80c230:	002b883a 	mov	r21,zero
  80c234:	002d883a 	mov	r22,zero
  80c238:	003ce306 	br	80b5c8 <__alt_data_end+0xff80b5c8>
  80c23c:	055387c4 	movi	r21,19999
  80c240:	003d6b06 	br	80b7f0 <__alt_data_end+0xff80b7f0>
  80c244:	0440d434 	movhi	r17,848
  80c248:	1c63883a 	add	r17,r3,r17
  80c24c:	882d883a 	mov	r22,r17
  80c250:	003ebe06 	br	80bd4c <__alt_data_end+0xff80bd4c>
  80c254:	14403fcc 	andi	r17,r2,255
  80c258:	8c40201c 	xori	r17,r17,128
  80c25c:	8c7fe004 	addi	r17,r17,-128
  80c260:	dd400817 	ldw	r21,32(sp)
  80c264:	0027883a 	mov	r19,zero
  80c268:	0039883a 	mov	fp,zero
  80c26c:	002d883a 	mov	r22,zero
  80c270:	003c9906 	br	80b4d8 <__alt_data_end+0xff80b4d8>
  80c274:	00c00944 	movi	r3,37
  80c278:	1a47c83a 	sub	r3,r3,r9
  80c27c:	1d7d8c16 	blt	r3,r21,80b8b0 <__alt_data_end+0xff80b8b0>
  80c280:	1261c83a 	sub	r16,r2,r9
  80c284:	800490fa 	slli	r2,r16,3
  80c288:	04c020b4 	movhi	r19,130
  80c28c:	9cf23b04 	addi	r19,r19,-14100
  80c290:	9885883a 	add	r2,r19,r2
  80c294:	11000017 	ldw	r4,0(r2)
  80c298:	11400117 	ldw	r5,4(r2)
  80c29c:	900d883a 	mov	r6,r18
  80c2a0:	880f883a 	mov	r7,r17
  80c2a4:	0816c2c0 	call	816c2c <__muldf3>
  80c2a8:	ac0dc83a 	sub	r6,r21,r16
  80c2ac:	300c90fa 	slli	r6,r6,3
  80c2b0:	1009883a 	mov	r4,r2
  80c2b4:	180b883a 	mov	r5,r3
  80c2b8:	9985883a 	add	r2,r19,r6
  80c2bc:	11800017 	ldw	r6,0(r2)
  80c2c0:	11c00117 	ldw	r7,4(r2)
  80c2c4:	0816c2c0 	call	816c2c <__muldf3>
  80c2c8:	102b883a 	mov	r21,r2
  80c2cc:	182d883a 	mov	r22,r3
  80c2d0:	003cbd06 	br	80b5c8 <__alt_data_end+0xff80b5c8>
  80c2d4:	b811883a 	mov	r8,r23
  80c2d8:	003e8606 	br	80bcf4 <__alt_data_end+0xff80bcf4>
  80c2dc:	d8000d15 	stw	zero,52(sp)
  80c2e0:	05cffc34 	movhi	r23,16368
  80c2e4:	003e8006 	br	80bce8 <__alt_data_end+0xff80bce8>
  80c2e8:	883f011e 	bne	r17,zero,80bef0 <__alt_data_end+0xff80bef0>
  80c2ec:	dd000a15 	stw	r20,40(sp)
  80c2f0:	dd001217 	ldw	r20,72(sp)
  80c2f4:	a811883a 	mov	r8,r21
  80c2f8:	00800884 	movi	r2,34
  80c2fc:	80800015 	stw	r2,0(r16)
  80c300:	002b883a 	mov	r21,zero
  80c304:	d8800517 	ldw	r2,20(sp)
  80c308:	002d883a 	mov	r22,zero
  80c30c:	003f0a06 	br	80bf38 <__alt_data_end+0xff80bf38>
  80c310:	d9800517 	ldw	r6,20(sp)
  80c314:	30000826 	beq	r6,zero,80c338 <_strtod_r+0x1090>
  80c318:	01400d44 	movi	r5,53
  80c31c:	d9000204 	addi	r4,sp,8
  80c320:	d8801315 	stw	r2,76(sp)
  80c324:	080a7280 	call	80a728 <__copybits>
  80c328:	d9400517 	ldw	r5,20(sp)
  80c32c:	8009883a 	mov	r4,r16
  80c330:	08098d80 	call	8098d8 <_Bfree>
  80c334:	d8801317 	ldw	r2,76(sp)
  80c338:	00c00184 	movi	r3,6
  80c33c:	1d400f36 	bltu	r3,r21,80c37c <_strtod_r+0x10d4>
  80c340:	a82a90ba 	slli	r21,r21,2
  80c344:	00c02074 	movhi	r3,129
  80c348:	18f0d604 	addi	r3,r3,-15528
  80c34c:	a8eb883a 	add	r21,r21,r3
  80c350:	a8c00017 	ldw	r3,0(r21)
  80c354:	1800683a 	jmp	r3
  80c358:	0080c3d4 	movui	r2,783
  80c35c:	0080c3ac 	andhi	r2,zero,782
  80c360:	0080c390 	cmplti	r2,zero,782
  80c364:	0080c374 	movhi	r2,781
  80c368:	0080c39c 	xori	r2,zero,782
  80c36c:	0080c3ac 	andhi	r2,zero,782
  80c370:	0080c3d4 	movui	r2,783
  80c374:	045ffc34 	movhi	r17,32752
  80c378:	0025883a 	mov	r18,zero
  80c37c:	1080020c 	andi	r2,r2,8
  80c380:	902b883a 	mov	r21,r18
  80c384:	103c8f26 	beq	r2,zero,80b5c4 <__alt_data_end+0xff80b5c4>
  80c388:	8da00034 	orhi	r22,r17,32768
  80c38c:	003c8e06 	br	80b5c8 <__alt_data_end+0xff80b5c8>
  80c390:	dc800217 	ldw	r18,8(sp)
  80c394:	dc400317 	ldw	r17,12(sp)
  80c398:	003ff806 	br	80c37c <__alt_data_end+0xff80c37c>
  80c39c:	04600034 	movhi	r17,32768
  80c3a0:	8c7fffc4 	addi	r17,r17,-1
  80c3a4:	04bfffc4 	movi	r18,-1
  80c3a8:	003ff406 	br	80c37c <__alt_data_end+0xff80c37c>
  80c3ac:	d8c00417 	ldw	r3,16(sp)
  80c3b0:	dc400317 	ldw	r17,12(sp)
  80c3b4:	013ffc34 	movhi	r4,65520
  80c3b8:	18c10cc4 	addi	r3,r3,1075
  80c3bc:	1806953a 	slli	r3,r3,20
  80c3c0:	213fffc4 	addi	r4,r4,-1
  80c3c4:	8922703a 	and	r17,r17,r4
  80c3c8:	dc800217 	ldw	r18,8(sp)
  80c3cc:	88e2b03a 	or	r17,r17,r3
  80c3d0:	003fea06 	br	80c37c <__alt_data_end+0xff80c37c>
  80c3d4:	0023883a 	mov	r17,zero
  80c3d8:	0025883a 	mov	r18,zero
  80c3dc:	003fe706 	br	80c37c <__alt_data_end+0xff80c37c>
  80c3e0:	01800044 	movi	r6,1
  80c3e4:	50d5883a 	add	r10,r10,r3
  80c3e8:	2a4b883a 	add	r5,r5,r9
  80c3ec:	19811a26 	beq	r3,r6,80c858 <_strtod_r+0x15b0>
  80c3f0:	01800204 	movi	r6,8
  80c3f4:	01c00404 	movi	r7,16
  80c3f8:	4a400044 	addi	r9,r9,1
  80c3fc:	48bfffc4 	addi	r2,r9,-1
  80c400:	30801616 	blt	r6,r2,80c45c <_strtod_r+0x11b4>
  80c404:	e70002a4 	muli	fp,fp,10
  80c408:	497ffb1e 	bne	r9,r5,80c3f8 <__alt_data_end+0xff80c3f8>
  80c40c:	d9800617 	ldw	r6,24(sp)
  80c410:	4a400044 	addi	r9,r9,1
  80c414:	00c00204 	movi	r3,8
  80c418:	19400c0e 	bge	r3,r5,80c44c <_strtod_r+0x11a4>
  80c41c:	00800404 	movi	r2,16
  80c420:	000b883a 	mov	r5,zero
  80c424:	127ea316 	blt	r2,r9,80beb4 <__alt_data_end+0xff80beb4>
  80c428:	988002a4 	muli	r2,r19,10
  80c42c:	20a7883a 	add	r19,r4,r2
  80c430:	003ea006 	br	80beb4 <__alt_data_end+0xff80beb4>
  80c434:	d8800617 	ldw	r2,24(sp)
  80c438:	8c7ff404 	addi	r17,r17,-48
  80c43c:	2a800044 	addi	r10,r5,1
  80c440:	d8800815 	stw	r2,32(sp)
  80c444:	100d883a 	mov	r6,r2
  80c448:	02400044 	movi	r9,1
  80c44c:	e08002a4 	muli	r2,fp,10
  80c450:	000b883a 	mov	r5,zero
  80c454:	88b9883a 	add	fp,r17,r2
  80c458:	003e9606 	br	80beb4 <__alt_data_end+0xff80beb4>
  80c45c:	3a7fea16 	blt	r7,r9,80c408 <__alt_data_end+0xff80c408>
  80c460:	9cc002a4 	muli	r19,r19,10
  80c464:	003fe806 	br	80c408 <__alt_data_end+0xff80c408>
  80c468:	00bffa84 	movi	r2,-22
  80c46c:	a8bd1016 	blt	r21,r2,80b8b0 <__alt_data_end+0xff80b8b0>
  80c470:	a82a90fa 	slli	r21,r21,3
  80c474:	008020b4 	movhi	r2,130
  80c478:	10b23b04 	addi	r2,r2,-14100
  80c47c:	1545c83a 	sub	r2,r2,r21
  80c480:	11800017 	ldw	r6,0(r2)
  80c484:	11c00117 	ldw	r7,4(r2)
  80c488:	9009883a 	mov	r4,r18
  80c48c:	880b883a 	mov	r5,r17
  80c490:	08160ec0 	call	8160ec <__divdf3>
  80c494:	102b883a 	mov	r21,r2
  80c498:	182d883a 	mov	r22,r3
  80c49c:	003c4a06 	br	80b5c8 <__alt_data_end+0xff80b5c8>
  80c4a0:	dd000a15 	stw	r20,40(sp)
  80c4a4:	a811883a 	mov	r8,r21
  80c4a8:	dd001217 	ldw	r20,72(sp)
  80c4ac:	003e9e06 	br	80bf28 <__alt_data_end+0xff80bf28>
  80c4b0:	014020b4 	movhi	r5,130
  80c4b4:	d9000617 	ldw	r4,24(sp)
  80c4b8:	29726d04 	addi	r5,r5,-13900
  80c4bc:	01c00644 	movi	r7,25
  80c4c0:	00000b06 	br	80c4f0 <_strtod_r+0x1248>
  80c4c4:	21000044 	addi	r4,r4,1
  80c4c8:	20800003 	ldbu	r2,0(r4)
  80c4cc:	10ffefc4 	addi	r3,r2,-65
  80c4d0:	10803fcc 	andi	r2,r2,255
  80c4d4:	1080201c 	xori	r2,r2,128
  80c4d8:	18c03fcc 	andi	r3,r3,255
  80c4dc:	10bfe004 	addi	r2,r2,-128
  80c4e0:	38c00136 	bltu	r7,r3,80c4e8 <_strtod_r+0x1240>
  80c4e4:	10800804 	addi	r2,r2,32
  80c4e8:	29400044 	addi	r5,r5,1
  80c4ec:	11bbbb1e 	bne	r2,r6,80b3dc <__alt_data_end+0xff80b3dc>
  80c4f0:	29800007 	ldb	r6,0(r5)
  80c4f4:	303ff31e 	bne	r6,zero,80c4c4 <__alt_data_end+0xff80c4c4>
  80c4f8:	018020b4 	movhi	r6,130
  80c4fc:	d9000615 	stw	r4,24(sp)
  80c500:	31b26e04 	addi	r6,r6,-13896
  80c504:	200b883a 	mov	r5,r4
  80c508:	02000644 	movi	r8,25
  80c50c:	00000a06 	br	80c538 <_strtod_r+0x1290>
  80c510:	28800003 	ldbu	r2,0(r5)
  80c514:	10ffefc4 	addi	r3,r2,-65
  80c518:	10803fcc 	andi	r2,r2,255
  80c51c:	1080201c 	xori	r2,r2,128
  80c520:	18c03fcc 	andi	r3,r3,255
  80c524:	10bfe004 	addi	r2,r2,-128
  80c528:	40c00136 	bltu	r8,r3,80c530 <_strtod_r+0x1288>
  80c52c:	10800804 	addi	r2,r2,32
  80c530:	31800044 	addi	r6,r6,1
  80c534:	11c0711e 	bne	r2,r7,80c6fc <_strtod_r+0x1454>
  80c538:	31c00007 	ldb	r7,0(r6)
  80c53c:	29400044 	addi	r5,r5,1
  80c540:	383ff31e 	bne	r7,zero,80c510 <__alt_data_end+0xff80c510>
  80c544:	d9400615 	stw	r5,24(sp)
  80c548:	045ffc34 	movhi	r17,32752
  80c54c:	0025883a 	mov	r18,zero
  80c550:	003c1b06 	br	80b5c0 <__alt_data_end+0xff80b5c0>
  80c554:	000b883a 	mov	r5,zero
  80c558:	003ccc06 	br	80b88c <__alt_data_end+0xff80b88c>
  80c55c:	d9400e17 	ldw	r5,56(sp)
  80c560:	dd000a15 	stw	r20,40(sp)
  80c564:	00800434 	movhi	r2,16
  80c568:	a811883a 	mov	r8,r21
  80c56c:	dd001217 	ldw	r20,72(sp)
  80c570:	dd401117 	ldw	r21,68(sp)
  80c574:	dd801017 	ldw	r22,64(sp)
  80c578:	10bfffc4 	addi	r2,r2,-1
  80c57c:	28005626 	beq	r5,zero,80c6d8 <_strtod_r+0x1430>
  80c580:	8886703a 	and	r3,r17,r2
  80c584:	18807826 	beq	r3,r2,80c768 <_strtod_r+0x14c0>
  80c588:	d8c00b17 	ldw	r3,44(sp)
  80c58c:	18005726 	beq	r3,zero,80c6ec <_strtod_r+0x1444>
  80c590:	1c44703a 	and	r2,r3,r17
  80c594:	10000f26 	beq	r2,zero,80c5d4 <_strtod_r+0x132c>
  80c598:	d9000e17 	ldw	r4,56(sp)
  80c59c:	d9800917 	ldw	r6,36(sp)
  80c5a0:	20005e26 	beq	r4,zero,80c71c <_strtod_r+0x1474>
  80c5a4:	9009883a 	mov	r4,r18
  80c5a8:	880b883a 	mov	r5,r17
  80c5ac:	da001315 	stw	r8,76(sp)
  80c5b0:	080b2440 	call	80b244 <sulp>
  80c5b4:	100d883a 	mov	r6,r2
  80c5b8:	180f883a 	mov	r7,r3
  80c5bc:	9009883a 	mov	r4,r18
  80c5c0:	880b883a 	mov	r5,r17
  80c5c4:	08158400 	call	815840 <__adddf3>
  80c5c8:	da001317 	ldw	r8,76(sp)
  80c5cc:	102b883a 	mov	r21,r2
  80c5d0:	182d883a 	mov	r22,r3
  80c5d4:	d8c00917 	ldw	r3,36(sp)
  80c5d8:	18000f26 	beq	r3,zero,80c618 <_strtod_r+0x1370>
  80c5dc:	a809883a 	mov	r4,r21
  80c5e0:	b00b883a 	mov	r5,r22
  80c5e4:	000d883a 	mov	r6,zero
  80c5e8:	01ce5434 	movhi	r7,14672
  80c5ec:	da001315 	stw	r8,76(sp)
  80c5f0:	0816c2c0 	call	816c2c <__muldf3>
  80c5f4:	102b883a 	mov	r21,r2
  80c5f8:	182d883a 	mov	r22,r3
  80c5fc:	da001317 	ldw	r8,76(sp)
  80c600:	1800051e 	bne	r3,zero,80c618 <_strtod_r+0x1370>
  80c604:	d8800517 	ldw	r2,20(sp)
  80c608:	a83e4b1e 	bne	r21,zero,80bf38 <__alt_data_end+0xff80bf38>
  80c60c:	00c00884 	movi	r3,34
  80c610:	80c00015 	stw	r3,0(r16)
  80c614:	003e4806 	br	80bf38 <__alt_data_end+0xff80bf38>
  80c618:	d8800517 	ldw	r2,20(sp)
  80c61c:	003e4606 	br	80bf38 <__alt_data_end+0xff80bf38>
  80c620:	d9000e17 	ldw	r4,56(sp)
  80c624:	dd000a15 	stw	r20,40(sp)
  80c628:	a811883a 	mov	r8,r21
  80c62c:	dd001217 	ldw	r20,72(sp)
  80c630:	dd401117 	ldw	r21,68(sp)
  80c634:	dd801017 	ldw	r22,64(sp)
  80c638:	203fe61e 	bne	r4,zero,80c5d4 <__alt_data_end+0xff80c5d4>
  80c63c:	903fe51e 	bne	r18,zero,80c5d4 <__alt_data_end+0xff80c5d4>
  80c640:	00800434 	movhi	r2,16
  80c644:	10bfffc4 	addi	r2,r2,-1
  80c648:	8884703a 	and	r2,r17,r2
  80c64c:	103fe11e 	bne	r2,zero,80c5d4 <__alt_data_end+0xff80c5d4>
  80c650:	8ddffc2c 	andhi	r23,r17,32752
  80c654:	0081ac34 	movhi	r2,1712
  80c658:	15ffde2e 	bgeu	r2,r23,80c5d4 <__alt_data_end+0xff80c5d4>
  80c65c:	40800517 	ldw	r2,20(r8)
  80c660:	1000031e 	bne	r2,zero,80c670 <_strtod_r+0x13c8>
  80c664:	40800417 	ldw	r2,16(r8)
  80c668:	00c00044 	movi	r3,1
  80c66c:	18bfd90e 	bge	r3,r2,80c5d4 <__alt_data_end+0xff80c5d4>
  80c670:	400b883a 	mov	r5,r8
  80c674:	01800044 	movi	r6,1
  80c678:	8009883a 	mov	r4,r16
  80c67c:	0809fb00 	call	809fb0 <__lshift>
  80c680:	980b883a 	mov	r5,r19
  80c684:	1009883a 	mov	r4,r2
  80c688:	d8801315 	stw	r2,76(sp)
  80c68c:	080a0f80 	call	80a0f8 <__mcmp>
  80c690:	da001317 	ldw	r8,76(sp)
  80c694:	00bfcf0e 	bge	zero,r2,80c5d4 <__alt_data_end+0xff80c5d4>
  80c698:	d8c00917 	ldw	r3,36(sp)
  80c69c:	18005c26 	beq	r3,zero,80c810 <_strtod_r+0x1568>
  80c6a0:	0081ac34 	movhi	r2,1712
  80c6a4:	15c05a16 	blt	r2,r23,80c810 <_strtod_r+0x1568>
  80c6a8:	0080dc34 	movhi	r2,880
  80c6ac:	15ffcb16 	blt	r2,r23,80c5dc <__alt_data_end+0xff80c5dc>
  80c6b0:	003f1106 	br	80c2f8 <__alt_data_end+0xff80c2f8>
  80c6b4:	002d883a 	mov	r22,zero
  80c6b8:	022ff834 	movhi	r8,49120
  80c6bc:	d8000d15 	stw	zero,52(sp)
  80c6c0:	05cff834 	movhi	r23,16352
  80c6c4:	003ded06 	br	80be7c <__alt_data_end+0xff80be7c>
  80c6c8:	0440d434 	movhi	r17,848
  80c6cc:	1c63883a 	add	r17,r3,r17
  80c6d0:	d8000915 	stw	zero,36(sp)
  80c6d4:	003cc806 	br	80b9f8 <__alt_data_end+0xff80b9f8>
  80c6d8:	8884703a 	and	r2,r17,r2
  80c6dc:	103faa1e 	bne	r2,zero,80c588 <__alt_data_end+0xff80c588>
  80c6e0:	903fa91e 	bne	r18,zero,80c588 <__alt_data_end+0xff80c588>
  80c6e4:	8ddffc2c 	andhi	r23,r17,32752
  80c6e8:	003feb06 	br	80c698 <__alt_data_end+0xff80c698>
  80c6ec:	d8c00d17 	ldw	r3,52(sp)
  80c6f0:	1cae703a 	and	r23,r3,r18
  80c6f4:	b83fb726 	beq	r23,zero,80c5d4 <__alt_data_end+0xff80c5d4>
  80c6f8:	003fa706 	br	80c598 <__alt_data_end+0xff80c598>
  80c6fc:	21000044 	addi	r4,r4,1
  80c700:	d9000615 	stw	r4,24(sp)
  80c704:	003f9006 	br	80c548 <__alt_data_end+0xff80c548>
  80c708:	014020b4 	movhi	r5,130
  80c70c:	29723104 	addi	r5,r5,-14140
  80c710:	d9400915 	stw	r5,36(sp)
  80c714:	0027883a 	mov	r19,zero
  80c718:	003ca206 	br	80b9a4 <__alt_data_end+0xff80b9a4>
  80c71c:	9009883a 	mov	r4,r18
  80c720:	880b883a 	mov	r5,r17
  80c724:	da001315 	stw	r8,76(sp)
  80c728:	080b2440 	call	80b244 <sulp>
  80c72c:	100d883a 	mov	r6,r2
  80c730:	180f883a 	mov	r7,r3
  80c734:	9009883a 	mov	r4,r18
  80c738:	880b883a 	mov	r5,r17
  80c73c:	08173440 	call	817344 <__subdf3>
  80c740:	000d883a 	mov	r6,zero
  80c744:	000f883a 	mov	r7,zero
  80c748:	1009883a 	mov	r4,r2
  80c74c:	180b883a 	mov	r5,r3
  80c750:	102b883a 	mov	r21,r2
  80c754:	182d883a 	mov	r22,r3
  80c758:	08169d40 	call	8169d4 <__eqdf2>
  80c75c:	da001317 	ldw	r8,76(sp)
  80c760:	103ee526 	beq	r2,zero,80c2f8 <__alt_data_end+0xff80c2f8>
  80c764:	003f9b06 	br	80c5d4 <__alt_data_end+0xff80c5d4>
  80c768:	d8800917 	ldw	r2,36(sp)
  80c76c:	10002226 	beq	r2,zero,80c7f8 <_strtod_r+0x1550>
  80c770:	889ffc2c 	andhi	r2,r17,32752
  80c774:	00c1a834 	movhi	r3,1696
  80c778:	18801f36 	bltu	r3,r2,80c7f8 <_strtod_r+0x1550>
  80c77c:	1004d53a 	srli	r2,r2,20
  80c780:	00c01ac4 	movi	r3,107
  80c784:	1887c83a 	sub	r3,r3,r2
  80c788:	00bfffc4 	movi	r2,-1
  80c78c:	10c4983a 	sll	r2,r2,r3
  80c790:	14bf7d1e 	bne	r2,r18,80c588 <__alt_data_end+0xff80c588>
  80c794:	00dffc34 	movhi	r3,32752
  80c798:	18ffffc4 	addi	r3,r3,-1
  80c79c:	88c03526 	beq	r17,r3,80c874 <_strtod_r+0x15cc>
  80c7a0:	8c5ffc2c 	andhi	r17,r17,32752
  80c7a4:	00800434 	movhi	r2,16
  80c7a8:	002b883a 	mov	r21,zero
  80c7ac:	88ad883a 	add	r22,r17,r2
  80c7b0:	003f8806 	br	80c5d4 <__alt_data_end+0xff80c5d4>
  80c7b4:	01401a84 	movi	r5,106
  80c7b8:	d9400915 	stw	r5,36(sp)
  80c7bc:	8ddffc2c 	andhi	r23,r17,32752
  80c7c0:	b82ed53a 	srli	r23,r23,20
  80c7c4:	00801ac4 	movi	r2,107
  80c7c8:	15c5c83a 	sub	r2,r2,r23
  80c7cc:	00be8e0e 	bge	zero,r2,80c208 <__alt_data_end+0xff80c208>
  80c7d0:	00c007c4 	movi	r3,31
  80c7d4:	18800a0e 	bge	r3,r2,80c800 <_strtod_r+0x1558>
  80c7d8:	00c00d04 	movi	r3,52
  80c7dc:	0025883a 	mov	r18,zero
  80c7e0:	1880270e 	bge	r3,r2,80c880 <_strtod_r+0x15d8>
  80c7e4:	0440dc34 	movhi	r17,880
  80c7e8:	003e8706 	br	80c208 <__alt_data_end+0xff80c208>
  80c7ec:	d8000915 	stw	zero,36(sp)
  80c7f0:	05fe6a16 	blt	zero,r23,80c19c <__alt_data_end+0xff80c19c>
  80c7f4:	003e8406 	br	80c208 <__alt_data_end+0xff80c208>
  80c7f8:	00bfffc4 	movi	r2,-1
  80c7fc:	003fe406 	br	80c790 <__alt_data_end+0xff80c790>
  80c800:	00ffffc4 	movi	r3,-1
  80c804:	1884983a 	sll	r2,r3,r2
  80c808:	14a4703a 	and	r18,r2,r18
  80c80c:	003e7e06 	br	80c208 <__alt_data_end+0xff80c208>
  80c810:	00bffc34 	movhi	r2,65520
  80c814:	b8af883a 	add	r23,r23,r2
  80c818:	057fffc4 	movi	r21,-1
  80c81c:	00800434 	movhi	r2,16
  80c820:	1545883a 	add	r2,r2,r21
  80c824:	b8acb03a 	or	r22,r23,r2
  80c828:	003f6a06 	br	80c5d4 <__alt_data_end+0xff80c5d4>
  80c82c:	014020b4 	movhi	r5,130
  80c830:	29727104 	addi	r5,r5,-13884
  80c834:	d9800204 	addi	r6,sp,8
  80c838:	d9000604 	addi	r4,sp,24
  80c83c:	0812fec0 	call	812fec <__hexnan>
  80c840:	00c00144 	movi	r3,5
  80c844:	10fb5c1e 	bne	r2,r3,80b5b8 <__alt_data_end+0xff80b5b8>
  80c848:	dc400317 	ldw	r17,12(sp)
  80c84c:	dc800217 	ldw	r18,8(sp)
  80c850:	8c5ffc34 	orhi	r17,r17,32752
  80c854:	003b5a06 	br	80b5c0 <__alt_data_end+0xff80b5c0>
  80c858:	480b883a 	mov	r5,r9
  80c85c:	d9800617 	ldw	r6,24(sp)
  80c860:	4a400044 	addi	r9,r9,1
  80c864:	003eeb06 	br	80c414 <__alt_data_end+0xff80c414>
  80c868:	1025883a 	mov	r18,r2
  80c86c:	1823883a 	mov	r17,r3
  80c870:	003c4c06 	br	80b9a4 <__alt_data_end+0xff80b9a4>
  80c874:	00ffffc4 	movi	r3,-1
  80c878:	10ffc91e 	bne	r2,r3,80c7a0 <__alt_data_end+0xff80c7a0>
  80c87c:	003da906 	br	80bf24 <__alt_data_end+0xff80bf24>
  80c880:	10bff804 	addi	r2,r2,-32
  80c884:	00ffffc4 	movi	r3,-1
  80c888:	1884983a 	sll	r2,r3,r2
  80c88c:	1462703a 	and	r17,r2,r17
  80c890:	003e5d06 	br	80c208 <__alt_data_end+0xff80c208>
  80c894:	1025883a 	mov	r18,r2
  80c898:	1823883a 	mov	r17,r3
  80c89c:	003e5806 	br	80c200 <__alt_data_end+0xff80c200>

0080c8a0 <strtod>:
  80c8a0:	008020b4 	movhi	r2,130
  80c8a4:	10ba8504 	addi	r2,r2,-5612
  80c8a8:	280d883a 	mov	r6,r5
  80c8ac:	200b883a 	mov	r5,r4
  80c8b0:	11000017 	ldw	r4,0(r2)
  80c8b4:	080b2a81 	jmpi	80b2a8 <_strtod_r>

0080c8b8 <strtof>:
  80c8b8:	defffb04 	addi	sp,sp,-20
  80c8bc:	dcc00315 	stw	r19,12(sp)
  80c8c0:	04c020b4 	movhi	r19,130
  80c8c4:	9cfa8504 	addi	r19,r19,-5612
  80c8c8:	280d883a 	mov	r6,r5
  80c8cc:	200b883a 	mov	r5,r4
  80c8d0:	99000017 	ldw	r4,0(r19)
  80c8d4:	dfc00415 	stw	ra,16(sp)
  80c8d8:	dc800215 	stw	r18,8(sp)
  80c8dc:	dc400115 	stw	r17,4(sp)
  80c8e0:	dc000015 	stw	r16,0(sp)
  80c8e4:	080b2a80 	call	80b2a8 <_strtod_r>
  80c8e8:	1009883a 	mov	r4,r2
  80c8ec:	180b883a 	mov	r5,r3
  80c8f0:	1025883a 	mov	r18,r2
  80c8f4:	1823883a 	mov	r17,r3
  80c8f8:	0817e440 	call	817e44 <__truncdfsf2>
  80c8fc:	000b883a 	mov	r5,zero
  80c900:	1009883a 	mov	r4,r2
  80c904:	1021883a 	mov	r16,r2
  80c908:	08156440 	call	815644 <__eqsf2>
  80c90c:	1000111e 	bne	r2,zero,80c954 <strtof+0x9c>
  80c910:	000d883a 	mov	r6,zero
  80c914:	000f883a 	mov	r7,zero
  80c918:	9009883a 	mov	r4,r18
  80c91c:	880b883a 	mov	r5,r17
  80c920:	08169d40 	call	8169d4 <__eqdf2>
  80c924:	10000b26 	beq	r2,zero,80c954 <strtof+0x9c>
  80c928:	98800017 	ldw	r2,0(r19)
  80c92c:	00c00884 	movi	r3,34
  80c930:	10c00015 	stw	r3,0(r2)
  80c934:	8005883a 	mov	r2,r16
  80c938:	dfc00417 	ldw	ra,16(sp)
  80c93c:	dcc00317 	ldw	r19,12(sp)
  80c940:	dc800217 	ldw	r18,8(sp)
  80c944:	dc400117 	ldw	r17,4(sp)
  80c948:	dc000017 	ldw	r16,0(sp)
  80c94c:	dec00504 	addi	sp,sp,20
  80c950:	f800283a 	ret
  80c954:	015fe034 	movhi	r5,32640
  80c958:	297fffc4 	addi	r5,r5,-1
  80c95c:	8009883a 	mov	r4,r16
  80c960:	08156bc0 	call	8156bc <__gesf2>
  80c964:	0080070e 	bge	zero,r2,80c984 <strtof+0xcc>
  80c968:	01dffc34 	movhi	r7,32752
  80c96c:	39ffffc4 	addi	r7,r7,-1
  80c970:	01bfffc4 	movi	r6,-1
  80c974:	9009883a 	mov	r4,r18
  80c978:	880b883a 	mov	r5,r17
  80c97c:	0816a5c0 	call	816a5c <__gedf2>
  80c980:	00bfe90e 	bge	zero,r2,80c928 <__alt_data_end+0xff80c928>
  80c984:	017fe034 	movhi	r5,65408
  80c988:	297fffc4 	addi	r5,r5,-1
  80c98c:	8009883a 	mov	r4,r16
  80c990:	08157780 	call	815778 <__lesf2>
  80c994:	103fe70e 	bge	r2,zero,80c934 <__alt_data_end+0xff80c934>
  80c998:	01fffc34 	movhi	r7,65520
  80c99c:	39ffffc4 	addi	r7,r7,-1
  80c9a0:	01bfffc4 	movi	r6,-1
  80c9a4:	9009883a 	mov	r4,r18
  80c9a8:	880b883a 	mov	r5,r17
  80c9ac:	0816b380 	call	816b38 <__ledf2>
  80c9b0:	103fdd0e 	bge	r2,zero,80c928 <__alt_data_end+0xff80c928>
  80c9b4:	003fdf06 	br	80c934 <__alt_data_end+0xff80c934>

0080c9b8 <_strtol_r>:
  80c9b8:	008020b4 	movhi	r2,130
  80c9bc:	defff404 	addi	sp,sp,-48
  80c9c0:	10ba8804 	addi	r2,r2,-5600
  80c9c4:	dd400715 	stw	r21,28(sp)
  80c9c8:	15400017 	ldw	r21,0(r2)
  80c9cc:	dd800815 	stw	r22,32(sp)
  80c9d0:	dd000615 	stw	r20,24(sp)
  80c9d4:	dcc00515 	stw	r19,20(sp)
  80c9d8:	d9000015 	stw	r4,0(sp)
  80c9dc:	dfc00b15 	stw	ra,44(sp)
  80c9e0:	df000a15 	stw	fp,40(sp)
  80c9e4:	ddc00915 	stw	r23,36(sp)
  80c9e8:	dc800415 	stw	r18,16(sp)
  80c9ec:	dc400315 	stw	r17,12(sp)
  80c9f0:	dc000215 	stw	r16,8(sp)
  80c9f4:	2829883a 	mov	r20,r5
  80c9f8:	3027883a 	mov	r19,r6
  80c9fc:	382d883a 	mov	r22,r7
  80ca00:	2809883a 	mov	r4,r5
  80ca04:	24000003 	ldbu	r16,0(r4)
  80ca08:	24400044 	addi	r17,r4,1
  80ca0c:	2007883a 	mov	r3,r4
  80ca10:	ac05883a 	add	r2,r21,r16
  80ca14:	10800043 	ldbu	r2,1(r2)
  80ca18:	8809883a 	mov	r4,r17
  80ca1c:	1080020c 	andi	r2,r2,8
  80ca20:	103ff81e 	bne	r2,zero,80ca04 <__alt_data_end+0xff80ca04>
  80ca24:	00800b44 	movi	r2,45
  80ca28:	80805826 	beq	r16,r2,80cb8c <_strtol_r+0x1d4>
  80ca2c:	00800ac4 	movi	r2,43
  80ca30:	80805a26 	beq	r16,r2,80cb9c <_strtol_r+0x1e4>
  80ca34:	0039883a 	mov	fp,zero
  80ca38:	b0004426 	beq	r22,zero,80cb4c <_strtol_r+0x194>
  80ca3c:	00800404 	movi	r2,16
  80ca40:	b0806026 	beq	r22,r2,80cbc4 <_strtol_r+0x20c>
  80ca44:	b02f883a 	mov	r23,r22
  80ca48:	00a00034 	movhi	r2,32768
  80ca4c:	e025003a 	cmpeq	r18,fp,zero
  80ca50:	14a5c83a 	sub	r18,r2,r18
  80ca54:	b80b883a 	mov	r5,r23
  80ca58:	9009883a 	mov	r4,r18
  80ca5c:	08155ec0 	call	8155ec <__umodsi3>
  80ca60:	b80b883a 	mov	r5,r23
  80ca64:	9009883a 	mov	r4,r18
  80ca68:	d8800115 	stw	r2,4(sp)
  80ca6c:	08155880 	call	815588 <__udivsi3>
  80ca70:	ac07883a 	add	r3,r21,r16
  80ca74:	18c00043 	ldbu	r3,1(r3)
  80ca78:	880b883a 	mov	r5,r17
  80ca7c:	000d883a 	mov	r6,zero
  80ca80:	1a00010c 	andi	r8,r3,4
  80ca84:	0009883a 	mov	r4,zero
  80ca88:	02800044 	movi	r10,1
  80ca8c:	027fffc4 	movi	r9,-1
  80ca90:	d9c00117 	ldw	r7,4(sp)
  80ca94:	40000e26 	beq	r8,zero,80cad0 <_strtol_r+0x118>
  80ca98:	843ff404 	addi	r16,r16,-48
  80ca9c:	8580120e 	bge	r16,r22,80cae8 <_strtol_r+0x130>
  80caa0:	32400526 	beq	r6,r9,80cab8 <_strtol_r+0x100>
  80caa4:	11002536 	bltu	r2,r4,80cb3c <_strtol_r+0x184>
  80caa8:	20802326 	beq	r4,r2,80cb38 <_strtol_r+0x180>
  80caac:	25c9383a 	mul	r4,r4,r23
  80cab0:	01800044 	movi	r6,1
  80cab4:	8109883a 	add	r4,r16,r4
  80cab8:	2c000003 	ldbu	r16,0(r5)
  80cabc:	29400044 	addi	r5,r5,1
  80cac0:	ac07883a 	add	r3,r21,r16
  80cac4:	18c00043 	ldbu	r3,1(r3)
  80cac8:	1a00010c 	andi	r8,r3,4
  80cacc:	403ff21e 	bne	r8,zero,80ca98 <__alt_data_end+0xff80ca98>
  80cad0:	18c000cc 	andi	r3,r3,3
  80cad4:	18000426 	beq	r3,zero,80cae8 <_strtol_r+0x130>
  80cad8:	1a801a26 	beq	r3,r10,80cb44 <_strtol_r+0x18c>
  80cadc:	00c015c4 	movi	r3,87
  80cae0:	80e1c83a 	sub	r16,r16,r3
  80cae4:	85bfee16 	blt	r16,r22,80caa0 <__alt_data_end+0xff80caa0>
  80cae8:	00bfffc4 	movi	r2,-1
  80caec:	30801e26 	beq	r6,r2,80cb68 <_strtol_r+0x1b0>
  80caf0:	e0001b1e 	bne	fp,zero,80cb60 <_strtol_r+0x1a8>
  80caf4:	2005883a 	mov	r2,r4
  80caf8:	98000326 	beq	r19,zero,80cb08 <_strtol_r+0x150>
  80cafc:	3000211e 	bne	r6,zero,80cb84 <_strtol_r+0x1cc>
  80cb00:	a00b883a 	mov	r5,r20
  80cb04:	99400015 	stw	r5,0(r19)
  80cb08:	dfc00b17 	ldw	ra,44(sp)
  80cb0c:	df000a17 	ldw	fp,40(sp)
  80cb10:	ddc00917 	ldw	r23,36(sp)
  80cb14:	dd800817 	ldw	r22,32(sp)
  80cb18:	dd400717 	ldw	r21,28(sp)
  80cb1c:	dd000617 	ldw	r20,24(sp)
  80cb20:	dcc00517 	ldw	r19,20(sp)
  80cb24:	dc800417 	ldw	r18,16(sp)
  80cb28:	dc400317 	ldw	r17,12(sp)
  80cb2c:	dc000217 	ldw	r16,8(sp)
  80cb30:	dec00c04 	addi	sp,sp,48
  80cb34:	f800283a 	ret
  80cb38:	3c3fdc0e 	bge	r7,r16,80caac <__alt_data_end+0xff80caac>
  80cb3c:	01bfffc4 	movi	r6,-1
  80cb40:	003fdd06 	br	80cab8 <__alt_data_end+0xff80cab8>
  80cb44:	00c00dc4 	movi	r3,55
  80cb48:	003fe506 	br	80cae0 <__alt_data_end+0xff80cae0>
  80cb4c:	00800c04 	movi	r2,48
  80cb50:	80801626 	beq	r16,r2,80cbac <_strtol_r+0x1f4>
  80cb54:	05800284 	movi	r22,10
  80cb58:	b02f883a 	mov	r23,r22
  80cb5c:	003fba06 	br	80ca48 <__alt_data_end+0xff80ca48>
  80cb60:	0109c83a 	sub	r4,zero,r4
  80cb64:	003fe306 	br	80caf4 <__alt_data_end+0xff80caf4>
  80cb68:	d9000017 	ldw	r4,0(sp)
  80cb6c:	00c00884 	movi	r3,34
  80cb70:	e005003a 	cmpeq	r2,fp,zero
  80cb74:	20c00015 	stw	r3,0(r4)
  80cb78:	00e00034 	movhi	r3,32768
  80cb7c:	1885c83a 	sub	r2,r3,r2
  80cb80:	983fe126 	beq	r19,zero,80cb08 <__alt_data_end+0xff80cb08>
  80cb84:	297fffc4 	addi	r5,r5,-1
  80cb88:	003fde06 	br	80cb04 <__alt_data_end+0xff80cb04>
  80cb8c:	1c400084 	addi	r17,r3,2
  80cb90:	1c000043 	ldbu	r16,1(r3)
  80cb94:	07000044 	movi	fp,1
  80cb98:	003fa706 	br	80ca38 <__alt_data_end+0xff80ca38>
  80cb9c:	1c400084 	addi	r17,r3,2
  80cba0:	1c000043 	ldbu	r16,1(r3)
  80cba4:	0039883a 	mov	fp,zero
  80cba8:	003fa306 	br	80ca38 <__alt_data_end+0xff80ca38>
  80cbac:	88800003 	ldbu	r2,0(r17)
  80cbb0:	00c01604 	movi	r3,88
  80cbb4:	108037cc 	andi	r2,r2,223
  80cbb8:	10c00826 	beq	r2,r3,80cbdc <_strtol_r+0x224>
  80cbbc:	05800204 	movi	r22,8
  80cbc0:	003fa006 	br	80ca44 <__alt_data_end+0xff80ca44>
  80cbc4:	00800c04 	movi	r2,48
  80cbc8:	80bf9e1e 	bne	r16,r2,80ca44 <__alt_data_end+0xff80ca44>
  80cbcc:	88800003 	ldbu	r2,0(r17)
  80cbd0:	00c01604 	movi	r3,88
  80cbd4:	108037cc 	andi	r2,r2,223
  80cbd8:	10ff9a1e 	bne	r2,r3,80ca44 <__alt_data_end+0xff80ca44>
  80cbdc:	05c00404 	movi	r23,16
  80cbe0:	8c000043 	ldbu	r16,1(r17)
  80cbe4:	b82d883a 	mov	r22,r23
  80cbe8:	8c400084 	addi	r17,r17,2
  80cbec:	003f9606 	br	80ca48 <__alt_data_end+0xff80ca48>

0080cbf0 <strtol>:
  80cbf0:	008020b4 	movhi	r2,130
  80cbf4:	10ba8504 	addi	r2,r2,-5612
  80cbf8:	300f883a 	mov	r7,r6
  80cbfc:	280d883a 	mov	r6,r5
  80cc00:	200b883a 	mov	r5,r4
  80cc04:	11000017 	ldw	r4,0(r2)
  80cc08:	080c9b81 	jmpi	80c9b8 <_strtol_r>

0080cc0c <_strtoll_r>:
  80cc0c:	008020b4 	movhi	r2,130
  80cc10:	deffef04 	addi	sp,sp,-68
  80cc14:	10ba8804 	addi	r2,r2,-5600
  80cc18:	dd800d15 	stw	r22,52(sp)
  80cc1c:	15800017 	ldw	r22,0(r2)
  80cc20:	df000f15 	stw	fp,60(sp)
  80cc24:	d9000515 	stw	r4,20(sp)
  80cc28:	dfc01015 	stw	ra,64(sp)
  80cc2c:	ddc00e15 	stw	r23,56(sp)
  80cc30:	dd400c15 	stw	r21,48(sp)
  80cc34:	dd000b15 	stw	r20,44(sp)
  80cc38:	dcc00a15 	stw	r19,40(sp)
  80cc3c:	dc800915 	stw	r18,36(sp)
  80cc40:	dc400815 	stw	r17,32(sp)
  80cc44:	dc000715 	stw	r16,28(sp)
  80cc48:	d9400415 	stw	r5,16(sp)
  80cc4c:	d9800215 	stw	r6,8(sp)
  80cc50:	3839883a 	mov	fp,r7
  80cc54:	2809883a 	mov	r4,r5
  80cc58:	22000003 	ldbu	r8,0(r4)
  80cc5c:	24400044 	addi	r17,r4,1
  80cc60:	2007883a 	mov	r3,r4
  80cc64:	b205883a 	add	r2,r22,r8
  80cc68:	10800043 	ldbu	r2,1(r2)
  80cc6c:	8809883a 	mov	r4,r17
  80cc70:	1080020c 	andi	r2,r2,8
  80cc74:	103ff81e 	bne	r2,zero,80cc58 <__alt_data_end+0xff80cc58>
  80cc78:	00800b44 	movi	r2,45
  80cc7c:	40807e26 	beq	r8,r2,80ce78 <_strtoll_r+0x26c>
  80cc80:	00800ac4 	movi	r2,43
  80cc84:	40808126 	beq	r8,r2,80ce8c <_strtoll_r+0x280>
  80cc88:	d8000115 	stw	zero,4(sp)
  80cc8c:	e0000b26 	beq	fp,zero,80ccbc <_strtoll_r+0xb0>
  80cc90:	00800404 	movi	r2,16
  80cc94:	e0808926 	beq	fp,r2,80cebc <_strtoll_r+0x2b0>
  80cc98:	e00bd7fa 	srai	r5,fp,31
  80cc9c:	d9000117 	ldw	r4,4(sp)
  80cca0:	e025883a 	mov	r18,fp
  80cca4:	d9400015 	stw	r5,0(sp)
  80cca8:	20000b1e 	bne	r4,zero,80ccd8 <_strtoll_r+0xcc>
  80ccac:	04200034 	movhi	r16,32768
  80ccb0:	843fffc4 	addi	r16,r16,-1
  80ccb4:	053fffc4 	movi	r20,-1
  80ccb8:	00000906 	br	80cce0 <_strtoll_r+0xd4>
  80ccbc:	00800c04 	movi	r2,48
  80ccc0:	40807626 	beq	r8,r2,80ce9c <_strtoll_r+0x290>
  80ccc4:	04800284 	movi	r18,10
  80ccc8:	d8000015 	stw	zero,0(sp)
  80cccc:	9039883a 	mov	fp,r18
  80ccd0:	d9000117 	ldw	r4,4(sp)
  80ccd4:	203ff526 	beq	r4,zero,80ccac <__alt_data_end+0xff80ccac>
  80ccd8:	0029883a 	mov	r20,zero
  80ccdc:	04200034 	movhi	r16,32768
  80cce0:	d9c00017 	ldw	r7,0(sp)
  80cce4:	a009883a 	mov	r4,r20
  80cce8:	800b883a 	mov	r5,r16
  80ccec:	900d883a 	mov	r6,r18
  80ccf0:	da000615 	stw	r8,24(sp)
  80ccf4:	0814f580 	call	814f58 <__umoddi3>
  80ccf8:	d9c00017 	ldw	r7,0(sp)
  80ccfc:	a009883a 	mov	r4,r20
  80cd00:	800b883a 	mov	r5,r16
  80cd04:	900d883a 	mov	r6,r18
  80cd08:	d8800315 	stw	r2,12(sp)
  80cd0c:	08149e00 	call	8149e0 <__udivdi3>
  80cd10:	da000617 	ldw	r8,24(sp)
  80cd14:	1829883a 	mov	r20,r3
  80cd18:	882f883a 	mov	r23,r17
  80cd1c:	b207883a 	add	r3,r22,r8
  80cd20:	19800043 	ldbu	r6,1(r3)
  80cd24:	1021883a 	mov	r16,r2
  80cd28:	000f883a 	mov	r7,zero
  80cd2c:	30c0010c 	andi	r3,r6,4
  80cd30:	0009883a 	mov	r4,zero
  80cd34:	000b883a 	mov	r5,zero
  80cd38:	04400044 	movi	r17,1
  80cd3c:	057fffc4 	movi	r21,-1
  80cd40:	18000d26 	beq	r3,zero,80cd78 <_strtoll_r+0x16c>
  80cd44:	44fff404 	addi	r19,r8,-48
  80cd48:	9f00110e 	bge	r19,fp,80cd90 <_strtoll_r+0x184>
  80cd4c:	3d400426 	beq	r7,r21,80cd60 <_strtoll_r+0x154>
  80cd50:	a1400236 	bltu	r20,r5,80cd5c <_strtoll_r+0x150>
  80cd54:	2d002a1e 	bne	r5,r20,80ce00 <_strtoll_r+0x1f4>
  80cd58:	8100292e 	bgeu	r16,r4,80ce00 <_strtoll_r+0x1f4>
  80cd5c:	01ffffc4 	movi	r7,-1
  80cd60:	ba000003 	ldbu	r8,0(r23)
  80cd64:	bdc00044 	addi	r23,r23,1
  80cd68:	b207883a 	add	r3,r22,r8
  80cd6c:	19800043 	ldbu	r6,1(r3)
  80cd70:	30c0010c 	andi	r3,r6,4
  80cd74:	183ff31e 	bne	r3,zero,80cd44 <__alt_data_end+0xff80cd44>
  80cd78:	318000cc 	andi	r6,r6,3
  80cd7c:	30000426 	beq	r6,zero,80cd90 <_strtoll_r+0x184>
  80cd80:	34402b26 	beq	r6,r17,80ce30 <_strtoll_r+0x224>
  80cd84:	00c015c4 	movi	r3,87
  80cd88:	40e7c83a 	sub	r19,r8,r3
  80cd8c:	9f3fef16 	blt	r19,fp,80cd4c <__alt_data_end+0xff80cd4c>
  80cd90:	00bfffc4 	movi	r2,-1
  80cd94:	38802c26 	beq	r7,r2,80ce48 <_strtoll_r+0x23c>
  80cd98:	d8800117 	ldw	r2,4(sp)
  80cd9c:	10000426 	beq	r2,zero,80cdb0 <_strtoll_r+0x1a4>
  80cda0:	0109c83a 	sub	r4,zero,r4
  80cda4:	2004c03a 	cmpne	r2,r4,zero
  80cda8:	0151c83a 	sub	r8,zero,r5
  80cdac:	408bc83a 	sub	r5,r8,r2
  80cdb0:	d8800217 	ldw	r2,8(sp)
  80cdb4:	10005026 	beq	r2,zero,80cef8 <_strtoll_r+0x2ec>
  80cdb8:	2005883a 	mov	r2,r4
  80cdbc:	2807883a 	mov	r3,r5
  80cdc0:	38002b1e 	bne	r7,zero,80ce70 <_strtoll_r+0x264>
  80cdc4:	dd800417 	ldw	r22,16(sp)
  80cdc8:	d9000217 	ldw	r4,8(sp)
  80cdcc:	25800015 	stw	r22,0(r4)
  80cdd0:	dfc01017 	ldw	ra,64(sp)
  80cdd4:	df000f17 	ldw	fp,60(sp)
  80cdd8:	ddc00e17 	ldw	r23,56(sp)
  80cddc:	dd800d17 	ldw	r22,52(sp)
  80cde0:	dd400c17 	ldw	r21,48(sp)
  80cde4:	dd000b17 	ldw	r20,44(sp)
  80cde8:	dcc00a17 	ldw	r19,40(sp)
  80cdec:	dc800917 	ldw	r18,36(sp)
  80cdf0:	dc400817 	ldw	r17,32(sp)
  80cdf4:	dc000717 	ldw	r16,28(sp)
  80cdf8:	dec01104 	addi	sp,sp,68
  80cdfc:	f800283a 	ret
  80ce00:	24000d26 	beq	r4,r16,80ce38 <_strtoll_r+0x22c>
  80ce04:	d9c00017 	ldw	r7,0(sp)
  80ce08:	900d883a 	mov	r6,r18
  80ce0c:	081490c0 	call	81490c <__muldi3>
  80ce10:	980bd7fa 	srai	r5,r19,31
  80ce14:	9885883a 	add	r2,r19,r2
  80ce18:	14d1803a 	cmpltu	r8,r2,r19
  80ce1c:	28c7883a 	add	r3,r5,r3
  80ce20:	1009883a 	mov	r4,r2
  80ce24:	40cb883a 	add	r5,r8,r3
  80ce28:	01c00044 	movi	r7,1
  80ce2c:	003fcc06 	br	80cd60 <__alt_data_end+0xff80cd60>
  80ce30:	00c00dc4 	movi	r3,55
  80ce34:	003fd406 	br	80cd88 <__alt_data_end+0xff80cd88>
  80ce38:	2d3ff21e 	bne	r5,r20,80ce04 <__alt_data_end+0xff80ce04>
  80ce3c:	d8800317 	ldw	r2,12(sp)
  80ce40:	14ffc616 	blt	r2,r19,80cd5c <__alt_data_end+0xff80cd5c>
  80ce44:	003fef06 	br	80ce04 <__alt_data_end+0xff80ce04>
  80ce48:	d9000117 	ldw	r4,4(sp)
  80ce4c:	2000271e 	bne	r4,zero,80ceec <_strtoll_r+0x2e0>
  80ce50:	00e00034 	movhi	r3,32768
  80ce54:	18ffffc4 	addi	r3,r3,-1
  80ce58:	3805883a 	mov	r2,r7
  80ce5c:	d9400517 	ldw	r5,20(sp)
  80ce60:	01000884 	movi	r4,34
  80ce64:	29000015 	stw	r4,0(r5)
  80ce68:	d9000217 	ldw	r4,8(sp)
  80ce6c:	203fd826 	beq	r4,zero,80cdd0 <__alt_data_end+0xff80cdd0>
  80ce70:	bdbfffc4 	addi	r22,r23,-1
  80ce74:	003fd406 	br	80cdc8 <__alt_data_end+0xff80cdc8>
  80ce78:	00800044 	movi	r2,1
  80ce7c:	1c400084 	addi	r17,r3,2
  80ce80:	1a000043 	ldbu	r8,1(r3)
  80ce84:	d8800115 	stw	r2,4(sp)
  80ce88:	003f8006 	br	80cc8c <__alt_data_end+0xff80cc8c>
  80ce8c:	1c400084 	addi	r17,r3,2
  80ce90:	1a000043 	ldbu	r8,1(r3)
  80ce94:	d8000115 	stw	zero,4(sp)
  80ce98:	003f7c06 	br	80cc8c <__alt_data_end+0xff80cc8c>
  80ce9c:	88800003 	ldbu	r2,0(r17)
  80cea0:	00c01604 	movi	r3,88
  80cea4:	108037cc 	andi	r2,r2,223
  80cea8:	10c00a26 	beq	r2,r3,80ced4 <_strtoll_r+0x2c8>
  80ceac:	04800204 	movi	r18,8
  80ceb0:	d8000015 	stw	zero,0(sp)
  80ceb4:	9039883a 	mov	fp,r18
  80ceb8:	003f8506 	br	80ccd0 <__alt_data_end+0xff80ccd0>
  80cebc:	00800c04 	movi	r2,48
  80cec0:	4080101e 	bne	r8,r2,80cf04 <_strtoll_r+0x2f8>
  80cec4:	88800003 	ldbu	r2,0(r17)
  80cec8:	00c01604 	movi	r3,88
  80cecc:	108037cc 	andi	r2,r2,223
  80ced0:	10c00c1e 	bne	r2,r3,80cf04 <_strtoll_r+0x2f8>
  80ced4:	04800404 	movi	r18,16
  80ced8:	8a000043 	ldbu	r8,1(r17)
  80cedc:	d8000015 	stw	zero,0(sp)
  80cee0:	8c400084 	addi	r17,r17,2
  80cee4:	9039883a 	mov	fp,r18
  80cee8:	003f7906 	br	80ccd0 <__alt_data_end+0xff80ccd0>
  80ceec:	0005883a 	mov	r2,zero
  80cef0:	00e00034 	movhi	r3,32768
  80cef4:	003fd906 	br	80ce5c <__alt_data_end+0xff80ce5c>
  80cef8:	2005883a 	mov	r2,r4
  80cefc:	2807883a 	mov	r3,r5
  80cf00:	003fb306 	br	80cdd0 <__alt_data_end+0xff80cdd0>
  80cf04:	e025883a 	mov	r18,fp
  80cf08:	d8000015 	stw	zero,0(sp)
  80cf0c:	003f7006 	br	80ccd0 <__alt_data_end+0xff80ccd0>

0080cf10 <_strtoul_r>:
  80cf10:	008020b4 	movhi	r2,130
  80cf14:	defff604 	addi	sp,sp,-40
  80cf18:	10ba8804 	addi	r2,r2,-5600
  80cf1c:	dc800315 	stw	r18,12(sp)
  80cf20:	14800017 	ldw	r18,0(r2)
  80cf24:	dd400615 	stw	r21,24(sp)
  80cf28:	dd000515 	stw	r20,20(sp)
  80cf2c:	dcc00415 	stw	r19,16(sp)
  80cf30:	2029883a 	mov	r20,r4
  80cf34:	dfc00915 	stw	ra,36(sp)
  80cf38:	ddc00815 	stw	r23,32(sp)
  80cf3c:	dd800715 	stw	r22,28(sp)
  80cf40:	dc400215 	stw	r17,8(sp)
  80cf44:	dc000115 	stw	r16,4(sp)
  80cf48:	2827883a 	mov	r19,r5
  80cf4c:	382b883a 	mov	r21,r7
  80cf50:	2809883a 	mov	r4,r5
  80cf54:	24000003 	ldbu	r16,0(r4)
  80cf58:	24400044 	addi	r17,r4,1
  80cf5c:	2007883a 	mov	r3,r4
  80cf60:	9405883a 	add	r2,r18,r16
  80cf64:	10800043 	ldbu	r2,1(r2)
  80cf68:	8809883a 	mov	r4,r17
  80cf6c:	1080020c 	andi	r2,r2,8
  80cf70:	103ff81e 	bne	r2,zero,80cf54 <__alt_data_end+0xff80cf54>
  80cf74:	00800b44 	movi	r2,45
  80cf78:	80805326 	beq	r16,r2,80d0c8 <_strtoul_r+0x1b8>
  80cf7c:	00800ac4 	movi	r2,43
  80cf80:	80805526 	beq	r16,r2,80d0d8 <_strtoul_r+0x1c8>
  80cf84:	002f883a 	mov	r23,zero
  80cf88:	a8000f26 	beq	r21,zero,80cfc8 <_strtoul_r+0xb8>
  80cf8c:	00800404 	movi	r2,16
  80cf90:	a8805f26 	beq	r21,r2,80d110 <_strtoul_r+0x200>
  80cf94:	013fffc4 	movi	r4,-1
  80cf98:	a80b883a 	mov	r5,r21
  80cf9c:	d9800015 	stw	r6,0(sp)
  80cfa0:	08155880 	call	815588 <__udivsi3>
  80cfa4:	a80b883a 	mov	r5,r21
  80cfa8:	013fffc4 	movi	r4,-1
  80cfac:	102d883a 	mov	r22,r2
  80cfb0:	08155ec0 	call	8155ec <__umodsi3>
  80cfb4:	d9800017 	ldw	r6,0(sp)
  80cfb8:	1019883a 	mov	r12,r2
  80cfbc:	a817883a 	mov	r11,r21
  80cfc0:	b00f883a 	mov	r7,r22
  80cfc4:	00000706 	br	80cfe4 <_strtoul_r+0xd4>
  80cfc8:	00800c04 	movi	r2,48
  80cfcc:	80804626 	beq	r16,r2,80d0e8 <_strtoul_r+0x1d8>
  80cfd0:	05400284 	movi	r21,10
  80cfd4:	01c666b4 	movhi	r7,6554
  80cfd8:	03000144 	movi	r12,5
  80cfdc:	39e66644 	addi	r7,r7,-26215
  80cfe0:	a817883a 	mov	r11,r21
  80cfe4:	9407883a 	add	r3,r18,r16
  80cfe8:	18c00043 	ldbu	r3,1(r3)
  80cfec:	8809883a 	mov	r4,r17
  80cff0:	0011883a 	mov	r8,zero
  80cff4:	1940010c 	andi	r5,r3,4
  80cff8:	0005883a 	mov	r2,zero
  80cffc:	02800044 	movi	r10,1
  80d000:	027fffc4 	movi	r9,-1
  80d004:	28000e26 	beq	r5,zero,80d040 <_strtoul_r+0x130>
  80d008:	843ff404 	addi	r16,r16,-48
  80d00c:	8540120e 	bge	r16,r21,80d058 <_strtoul_r+0x148>
  80d010:	42400526 	beq	r8,r9,80d028 <_strtoul_r+0x118>
  80d014:	38802236 	bltu	r7,r2,80d0a0 <_strtoul_r+0x190>
  80d018:	11c02026 	beq	r2,r7,80d09c <_strtoul_r+0x18c>
  80d01c:	12c5383a 	mul	r2,r2,r11
  80d020:	02000044 	movi	r8,1
  80d024:	8085883a 	add	r2,r16,r2
  80d028:	24000003 	ldbu	r16,0(r4)
  80d02c:	21000044 	addi	r4,r4,1
  80d030:	9407883a 	add	r3,r18,r16
  80d034:	18c00043 	ldbu	r3,1(r3)
  80d038:	1940010c 	andi	r5,r3,4
  80d03c:	283ff21e 	bne	r5,zero,80d008 <__alt_data_end+0xff80d008>
  80d040:	18c000cc 	andi	r3,r3,3
  80d044:	18000426 	beq	r3,zero,80d058 <_strtoul_r+0x148>
  80d048:	1a801726 	beq	r3,r10,80d0a8 <_strtoul_r+0x198>
  80d04c:	00c015c4 	movi	r3,87
  80d050:	80e1c83a 	sub	r16,r16,r3
  80d054:	857fee16 	blt	r16,r21,80d010 <__alt_data_end+0xff80d010>
  80d058:	40001516 	blt	r8,zero,80d0b0 <_strtoul_r+0x1a0>
  80d05c:	b8000126 	beq	r23,zero,80d064 <_strtoul_r+0x154>
  80d060:	0085c83a 	sub	r2,zero,r2
  80d064:	30000226 	beq	r6,zero,80d070 <_strtoul_r+0x160>
  80d068:	4000151e 	bne	r8,zero,80d0c0 <_strtoul_r+0x1b0>
  80d06c:	34c00015 	stw	r19,0(r6)
  80d070:	dfc00917 	ldw	ra,36(sp)
  80d074:	ddc00817 	ldw	r23,32(sp)
  80d078:	dd800717 	ldw	r22,28(sp)
  80d07c:	dd400617 	ldw	r21,24(sp)
  80d080:	dd000517 	ldw	r20,20(sp)
  80d084:	dcc00417 	ldw	r19,16(sp)
  80d088:	dc800317 	ldw	r18,12(sp)
  80d08c:	dc400217 	ldw	r17,8(sp)
  80d090:	dc000117 	ldw	r16,4(sp)
  80d094:	dec00a04 	addi	sp,sp,40
  80d098:	f800283a 	ret
  80d09c:	643fdf0e 	bge	r12,r16,80d01c <__alt_data_end+0xff80d01c>
  80d0a0:	023fffc4 	movi	r8,-1
  80d0a4:	003fe006 	br	80d028 <__alt_data_end+0xff80d028>
  80d0a8:	00c00dc4 	movi	r3,55
  80d0ac:	003fe806 	br	80d050 <__alt_data_end+0xff80d050>
  80d0b0:	00800884 	movi	r2,34
  80d0b4:	a0800015 	stw	r2,0(r20)
  80d0b8:	00bfffc4 	movi	r2,-1
  80d0bc:	303fec26 	beq	r6,zero,80d070 <__alt_data_end+0xff80d070>
  80d0c0:	24ffffc4 	addi	r19,r4,-1
  80d0c4:	003fe906 	br	80d06c <__alt_data_end+0xff80d06c>
  80d0c8:	1c400084 	addi	r17,r3,2
  80d0cc:	1c000043 	ldbu	r16,1(r3)
  80d0d0:	05c00044 	movi	r23,1
  80d0d4:	003fac06 	br	80cf88 <__alt_data_end+0xff80cf88>
  80d0d8:	1c400084 	addi	r17,r3,2
  80d0dc:	1c000043 	ldbu	r16,1(r3)
  80d0e0:	002f883a 	mov	r23,zero
  80d0e4:	003fa806 	br	80cf88 <__alt_data_end+0xff80cf88>
  80d0e8:	88800003 	ldbu	r2,0(r17)
  80d0ec:	00c01604 	movi	r3,88
  80d0f0:	108037cc 	andi	r2,r2,223
  80d0f4:	10c00c26 	beq	r2,r3,80d128 <_strtoul_r+0x218>
  80d0f8:	05400204 	movi	r21,8
  80d0fc:	01c80034 	movhi	r7,8192
  80d100:	030001c4 	movi	r12,7
  80d104:	39ffffc4 	addi	r7,r7,-1
  80d108:	a817883a 	mov	r11,r21
  80d10c:	003fb506 	br	80cfe4 <__alt_data_end+0xff80cfe4>
  80d110:	00800c04 	movi	r2,48
  80d114:	80800c1e 	bne	r16,r2,80d148 <_strtoul_r+0x238>
  80d118:	88800003 	ldbu	r2,0(r17)
  80d11c:	00c01604 	movi	r3,88
  80d120:	108037cc 	andi	r2,r2,223
  80d124:	10c0081e 	bne	r2,r3,80d148 <_strtoul_r+0x238>
  80d128:	02c00404 	movi	r11,16
  80d12c:	05840034 	movhi	r22,4096
  80d130:	8c000043 	ldbu	r16,1(r17)
  80d134:	030003c4 	movi	r12,15
  80d138:	8c400084 	addi	r17,r17,2
  80d13c:	b5bfffc4 	addi	r22,r22,-1
  80d140:	582b883a 	mov	r21,r11
  80d144:	003f9e06 	br	80cfc0 <__alt_data_end+0xff80cfc0>
  80d148:	01c40034 	movhi	r7,4096
  80d14c:	030003c4 	movi	r12,15
  80d150:	39ffffc4 	addi	r7,r7,-1
  80d154:	a817883a 	mov	r11,r21
  80d158:	003fa206 	br	80cfe4 <__alt_data_end+0xff80cfe4>

0080d15c <strtoul>:
  80d15c:	008020b4 	movhi	r2,130
  80d160:	10ba8504 	addi	r2,r2,-5612
  80d164:	300f883a 	mov	r7,r6
  80d168:	280d883a 	mov	r6,r5
  80d16c:	200b883a 	mov	r5,r4
  80d170:	11000017 	ldw	r4,0(r2)
  80d174:	080cf101 	jmpi	80cf10 <_strtoul_r>

0080d178 <_strtoull_r>:
  80d178:	008020b4 	movhi	r2,130
  80d17c:	deffef04 	addi	sp,sp,-68
  80d180:	10ba8804 	addi	r2,r2,-5600
  80d184:	dd800d15 	stw	r22,52(sp)
  80d188:	15800017 	ldw	r22,0(r2)
  80d18c:	df000f15 	stw	fp,60(sp)
  80d190:	d9000515 	stw	r4,20(sp)
  80d194:	dfc01015 	stw	ra,64(sp)
  80d198:	ddc00e15 	stw	r23,56(sp)
  80d19c:	dd400c15 	stw	r21,48(sp)
  80d1a0:	dd000b15 	stw	r20,44(sp)
  80d1a4:	dcc00a15 	stw	r19,40(sp)
  80d1a8:	dc800915 	stw	r18,36(sp)
  80d1ac:	dc400815 	stw	r17,32(sp)
  80d1b0:	dc000715 	stw	r16,28(sp)
  80d1b4:	d9400215 	stw	r5,8(sp)
  80d1b8:	d9800115 	stw	r6,4(sp)
  80d1bc:	3839883a 	mov	fp,r7
  80d1c0:	2809883a 	mov	r4,r5
  80d1c4:	22000003 	ldbu	r8,0(r4)
  80d1c8:	24400044 	addi	r17,r4,1
  80d1cc:	2007883a 	mov	r3,r4
  80d1d0:	b205883a 	add	r2,r22,r8
  80d1d4:	10800043 	ldbu	r2,1(r2)
  80d1d8:	8809883a 	mov	r4,r17
  80d1dc:	1080020c 	andi	r2,r2,8
  80d1e0:	103ff81e 	bne	r2,zero,80d1c4 <__alt_data_end+0xff80d1c4>
  80d1e4:	00800b44 	movi	r2,45
  80d1e8:	40807726 	beq	r8,r2,80d3c8 <_strtoull_r+0x250>
  80d1ec:	00800ac4 	movi	r2,43
  80d1f0:	40807a26 	beq	r8,r2,80d3dc <_strtoull_r+0x264>
  80d1f4:	d8000415 	stw	zero,16(sp)
  80d1f8:	e0001426 	beq	fp,zero,80d24c <_strtoull_r+0xd4>
  80d1fc:	00800404 	movi	r2,16
  80d200:	e0808826 	beq	fp,r2,80d424 <_strtoull_r+0x2ac>
  80d204:	e025d7fa 	srai	r18,fp,31
  80d208:	013fffc4 	movi	r4,-1
  80d20c:	200b883a 	mov	r5,r4
  80d210:	e00d883a 	mov	r6,fp
  80d214:	900f883a 	mov	r7,r18
  80d218:	da000615 	stw	r8,24(sp)
  80d21c:	08149e00 	call	8149e0 <__udivdi3>
  80d220:	013fffc4 	movi	r4,-1
  80d224:	e00d883a 	mov	r6,fp
  80d228:	900f883a 	mov	r7,r18
  80d22c:	200b883a 	mov	r5,r4
  80d230:	1021883a 	mov	r16,r2
  80d234:	182f883a 	mov	r23,r3
  80d238:	0814f580 	call	814f58 <__umoddi3>
  80d23c:	d8800315 	stw	r2,12(sp)
  80d240:	df000015 	stw	fp,0(sp)
  80d244:	da000617 	ldw	r8,24(sp)
  80d248:	00000c06 	br	80d27c <_strtoull_r+0x104>
  80d24c:	00800c04 	movi	r2,48
  80d250:	40806626 	beq	r8,r2,80d3ec <_strtoull_r+0x274>
  80d254:	00800284 	movi	r2,10
  80d258:	00c00144 	movi	r3,5
  80d25c:	042666b4 	movhi	r16,39322
  80d260:	05c666b4 	movhi	r23,6554
  80d264:	d8800015 	stw	r2,0(sp)
  80d268:	d8c00315 	stw	r3,12(sp)
  80d26c:	84266644 	addi	r16,r16,-26215
  80d270:	bde66644 	addi	r23,r23,-26215
  80d274:	0025883a 	mov	r18,zero
  80d278:	1039883a 	mov	fp,r2
  80d27c:	b205883a 	add	r2,r22,r8
  80d280:	11800043 	ldbu	r6,1(r2)
  80d284:	882b883a 	mov	r21,r17
  80d288:	000f883a 	mov	r7,zero
  80d28c:	3080010c 	andi	r2,r6,4
  80d290:	0009883a 	mov	r4,zero
  80d294:	000b883a 	mov	r5,zero
  80d298:	04400044 	movi	r17,1
  80d29c:	053fffc4 	movi	r20,-1
  80d2a0:	10000d26 	beq	r2,zero,80d2d8 <_strtoull_r+0x160>
  80d2a4:	44fff404 	addi	r19,r8,-48
  80d2a8:	9f00110e 	bge	r19,fp,80d2f0 <_strtoull_r+0x178>
  80d2ac:	3d000426 	beq	r7,r20,80d2c0 <_strtoull_r+0x148>
  80d2b0:	b9400236 	bltu	r23,r5,80d2bc <_strtoull_r+0x144>
  80d2b4:	2dc0291e 	bne	r5,r23,80d35c <_strtoull_r+0x1e4>
  80d2b8:	8100282e 	bgeu	r16,r4,80d35c <_strtoull_r+0x1e4>
  80d2bc:	01ffffc4 	movi	r7,-1
  80d2c0:	aa000003 	ldbu	r8,0(r21)
  80d2c4:	ad400044 	addi	r21,r21,1
  80d2c8:	b205883a 	add	r2,r22,r8
  80d2cc:	11800043 	ldbu	r6,1(r2)
  80d2d0:	3080010c 	andi	r2,r6,4
  80d2d4:	103ff31e 	bne	r2,zero,80d2a4 <__alt_data_end+0xff80d2a4>
  80d2d8:	318000cc 	andi	r6,r6,3
  80d2dc:	30000426 	beq	r6,zero,80d2f0 <_strtoull_r+0x178>
  80d2e0:	34402a26 	beq	r6,r17,80d38c <_strtoull_r+0x214>
  80d2e4:	00c015c4 	movi	r3,87
  80d2e8:	40e7c83a 	sub	r19,r8,r3
  80d2ec:	9f3fef16 	blt	r19,fp,80d2ac <__alt_data_end+0xff80d2ac>
  80d2f0:	38002c16 	blt	r7,zero,80d3a4 <_strtoull_r+0x22c>
  80d2f4:	d8c00417 	ldw	r3,16(sp)
  80d2f8:	18000426 	beq	r3,zero,80d30c <_strtoull_r+0x194>
  80d2fc:	0109c83a 	sub	r4,zero,r4
  80d300:	2004c03a 	cmpne	r2,r4,zero
  80d304:	0151c83a 	sub	r8,zero,r5
  80d308:	408bc83a 	sub	r5,r8,r2
  80d30c:	d8800117 	ldw	r2,4(sp)
  80d310:	10000426 	beq	r2,zero,80d324 <_strtoull_r+0x1ac>
  80d314:	dd000217 	ldw	r20,8(sp)
  80d318:	3800291e 	bne	r7,zero,80d3c0 <_strtoull_r+0x248>
  80d31c:	d8c00117 	ldw	r3,4(sp)
  80d320:	1d000015 	stw	r20,0(r3)
  80d324:	2005883a 	mov	r2,r4
  80d328:	2807883a 	mov	r3,r5
  80d32c:	dfc01017 	ldw	ra,64(sp)
  80d330:	df000f17 	ldw	fp,60(sp)
  80d334:	ddc00e17 	ldw	r23,56(sp)
  80d338:	dd800d17 	ldw	r22,52(sp)
  80d33c:	dd400c17 	ldw	r21,48(sp)
  80d340:	dd000b17 	ldw	r20,44(sp)
  80d344:	dcc00a17 	ldw	r19,40(sp)
  80d348:	dc800917 	ldw	r18,36(sp)
  80d34c:	dc400817 	ldw	r17,32(sp)
  80d350:	dc000717 	ldw	r16,28(sp)
  80d354:	dec01104 	addi	sp,sp,68
  80d358:	f800283a 	ret
  80d35c:	24000d26 	beq	r4,r16,80d394 <_strtoull_r+0x21c>
  80d360:	d9800017 	ldw	r6,0(sp)
  80d364:	900f883a 	mov	r7,r18
  80d368:	081490c0 	call	81490c <__muldi3>
  80d36c:	980bd7fa 	srai	r5,r19,31
  80d370:	9885883a 	add	r2,r19,r2
  80d374:	14d1803a 	cmpltu	r8,r2,r19
  80d378:	28c7883a 	add	r3,r5,r3
  80d37c:	1009883a 	mov	r4,r2
  80d380:	40cb883a 	add	r5,r8,r3
  80d384:	01c00044 	movi	r7,1
  80d388:	003fcd06 	br	80d2c0 <__alt_data_end+0xff80d2c0>
  80d38c:	00c00dc4 	movi	r3,55
  80d390:	003fd506 	br	80d2e8 <__alt_data_end+0xff80d2e8>
  80d394:	2dfff21e 	bne	r5,r23,80d360 <__alt_data_end+0xff80d360>
  80d398:	d8c00317 	ldw	r3,12(sp)
  80d39c:	1cffc716 	blt	r3,r19,80d2bc <__alt_data_end+0xff80d2bc>
  80d3a0:	003fef06 	br	80d360 <__alt_data_end+0xff80d360>
  80d3a4:	d8c00517 	ldw	r3,20(sp)
  80d3a8:	00800884 	movi	r2,34
  80d3ac:	013fffc4 	movi	r4,-1
  80d3b0:	18800015 	stw	r2,0(r3)
  80d3b4:	d8800117 	ldw	r2,4(sp)
  80d3b8:	200b883a 	mov	r5,r4
  80d3bc:	103fd926 	beq	r2,zero,80d324 <__alt_data_end+0xff80d324>
  80d3c0:	ad3fffc4 	addi	r20,r21,-1
  80d3c4:	003fd506 	br	80d31c <__alt_data_end+0xff80d31c>
  80d3c8:	00800044 	movi	r2,1
  80d3cc:	1c400084 	addi	r17,r3,2
  80d3d0:	1a000043 	ldbu	r8,1(r3)
  80d3d4:	d8800415 	stw	r2,16(sp)
  80d3d8:	003f8706 	br	80d1f8 <__alt_data_end+0xff80d1f8>
  80d3dc:	1c400084 	addi	r17,r3,2
  80d3e0:	1a000043 	ldbu	r8,1(r3)
  80d3e4:	d8000415 	stw	zero,16(sp)
  80d3e8:	003f8306 	br	80d1f8 <__alt_data_end+0xff80d1f8>
  80d3ec:	88800003 	ldbu	r2,0(r17)
  80d3f0:	00c01604 	movi	r3,88
  80d3f4:	108037cc 	andi	r2,r2,223
  80d3f8:	10c01026 	beq	r2,r3,80d43c <_strtoull_r+0x2c4>
  80d3fc:	00c00204 	movi	r3,8
  80d400:	008001c4 	movi	r2,7
  80d404:	043fffc4 	movi	r16,-1
  80d408:	05c80034 	movhi	r23,8192
  80d40c:	d8c00015 	stw	r3,0(sp)
  80d410:	d8800315 	stw	r2,12(sp)
  80d414:	bc2f883a 	add	r23,r23,r16
  80d418:	0025883a 	mov	r18,zero
  80d41c:	1839883a 	mov	fp,r3
  80d420:	003f9606 	br	80d27c <__alt_data_end+0xff80d27c>
  80d424:	00800c04 	movi	r2,48
  80d428:	4080101e 	bne	r8,r2,80d46c <_strtoull_r+0x2f4>
  80d42c:	88800003 	ldbu	r2,0(r17)
  80d430:	00c01604 	movi	r3,88
  80d434:	108037cc 	andi	r2,r2,223
  80d438:	10c0141e 	bne	r2,r3,80d48c <_strtoull_r+0x314>
  80d43c:	00c00404 	movi	r3,16
  80d440:	008003c4 	movi	r2,15
  80d444:	043fffc4 	movi	r16,-1
  80d448:	05c40034 	movhi	r23,4096
  80d44c:	8a000043 	ldbu	r8,1(r17)
  80d450:	d8c00015 	stw	r3,0(sp)
  80d454:	d8800315 	stw	r2,12(sp)
  80d458:	8c400084 	addi	r17,r17,2
  80d45c:	bc2f883a 	add	r23,r23,r16
  80d460:	0025883a 	mov	r18,zero
  80d464:	1839883a 	mov	fp,r3
  80d468:	003f8406 	br	80d27c <__alt_data_end+0xff80d27c>
  80d46c:	008003c4 	movi	r2,15
  80d470:	d8800315 	stw	r2,12(sp)
  80d474:	043fffc4 	movi	r16,-1
  80d478:	05c40034 	movhi	r23,4096
  80d47c:	bc2f883a 	add	r23,r23,r16
  80d480:	df000015 	stw	fp,0(sp)
  80d484:	0025883a 	mov	r18,zero
  80d488:	003f7c06 	br	80d27c <__alt_data_end+0xff80d27c>
  80d48c:	00c003c4 	movi	r3,15
  80d490:	d8c00315 	stw	r3,12(sp)
  80d494:	003ff706 	br	80d474 <__alt_data_end+0xff80d474>

0080d498 <_sungetc_r>:
  80d498:	00bfffc4 	movi	r2,-1
  80d49c:	28803726 	beq	r5,r2,80d57c <_sungetc_r+0xe4>
  80d4a0:	3080030b 	ldhu	r2,12(r6)
  80d4a4:	30c00c17 	ldw	r3,48(r6)
  80d4a8:	defffc04 	addi	sp,sp,-16
  80d4ac:	10bff7cc 	andi	r2,r2,65503
  80d4b0:	dc800215 	stw	r18,8(sp)
  80d4b4:	dfc00315 	stw	ra,12(sp)
  80d4b8:	dc400115 	stw	r17,4(sp)
  80d4bc:	dc000015 	stw	r16,0(sp)
  80d4c0:	3080030d 	sth	r2,12(r6)
  80d4c4:	2c803fcc 	andi	r18,r5,255
  80d4c8:	18001826 	beq	r3,zero,80d52c <_sungetc_r+0x94>
  80d4cc:	30c00117 	ldw	r3,4(r6)
  80d4d0:	30800d17 	ldw	r2,52(r6)
  80d4d4:	3021883a 	mov	r16,r6
  80d4d8:	2823883a 	mov	r17,r5
  80d4dc:	18800e0e 	bge	r3,r2,80d518 <_sungetc_r+0x80>
  80d4e0:	80c00017 	ldw	r3,0(r16)
  80d4e4:	9005883a 	mov	r2,r18
  80d4e8:	193fffc4 	addi	r4,r3,-1
  80d4ec:	81000015 	stw	r4,0(r16)
  80d4f0:	1c7fffc5 	stb	r17,-1(r3)
  80d4f4:	80c00117 	ldw	r3,4(r16)
  80d4f8:	18c00044 	addi	r3,r3,1
  80d4fc:	80c00115 	stw	r3,4(r16)
  80d500:	dfc00317 	ldw	ra,12(sp)
  80d504:	dc800217 	ldw	r18,8(sp)
  80d508:	dc400117 	ldw	r17,4(sp)
  80d50c:	dc000017 	ldw	r16,0(sp)
  80d510:	dec00404 	addi	sp,sp,16
  80d514:	f800283a 	ret
  80d518:	300b883a 	mov	r5,r6
  80d51c:	08109d00 	call	8109d0 <__submore>
  80d520:	103fef26 	beq	r2,zero,80d4e0 <__alt_data_end+0xff80d4e0>
  80d524:	00bfffc4 	movi	r2,-1
  80d528:	003ff506 	br	80d500 <__alt_data_end+0xff80d500>
  80d52c:	30c00417 	ldw	r3,16(r6)
  80d530:	30800017 	ldw	r2,0(r6)
  80d534:	18000326 	beq	r3,zero,80d544 <_sungetc_r+0xac>
  80d538:	1880022e 	bgeu	r3,r2,80d544 <_sungetc_r+0xac>
  80d53c:	10ffffc3 	ldbu	r3,-1(r2)
  80d540:	90c01026 	beq	r18,r3,80d584 <_sungetc_r+0xec>
  80d544:	31c00117 	ldw	r7,4(r6)
  80d548:	30800e15 	stw	r2,56(r6)
  80d54c:	008000c4 	movi	r2,3
  80d550:	31001004 	addi	r4,r6,64
  80d554:	30c01084 	addi	r3,r6,66
  80d558:	30800d15 	stw	r2,52(r6)
  80d55c:	00800044 	movi	r2,1
  80d560:	30800115 	stw	r2,4(r6)
  80d564:	31c00f15 	stw	r7,60(r6)
  80d568:	31000c15 	stw	r4,48(r6)
  80d56c:	31401085 	stb	r5,66(r6)
  80d570:	30c00015 	stw	r3,0(r6)
  80d574:	9005883a 	mov	r2,r18
  80d578:	003fe106 	br	80d500 <__alt_data_end+0xff80d500>
  80d57c:	00bfffc4 	movi	r2,-1
  80d580:	f800283a 	ret
  80d584:	30c00117 	ldw	r3,4(r6)
  80d588:	10bfffc4 	addi	r2,r2,-1
  80d58c:	30800015 	stw	r2,0(r6)
  80d590:	18800044 	addi	r2,r3,1
  80d594:	30800115 	stw	r2,4(r6)
  80d598:	9005883a 	mov	r2,r18
  80d59c:	003fd806 	br	80d500 <__alt_data_end+0xff80d500>

0080d5a0 <__ssrefill_r>:
  80d5a0:	defffe04 	addi	sp,sp,-8
  80d5a4:	dc000015 	stw	r16,0(sp)
  80d5a8:	2821883a 	mov	r16,r5
  80d5ac:	29400c17 	ldw	r5,48(r5)
  80d5b0:	dfc00115 	stw	ra,4(sp)
  80d5b4:	28000e26 	beq	r5,zero,80d5f0 <__ssrefill_r+0x50>
  80d5b8:	80801004 	addi	r2,r16,64
  80d5bc:	28800126 	beq	r5,r2,80d5c4 <__ssrefill_r+0x24>
  80d5c0:	08018900 	call	801890 <_free_r>
  80d5c4:	80800f17 	ldw	r2,60(r16)
  80d5c8:	80000c15 	stw	zero,48(r16)
  80d5cc:	80800115 	stw	r2,4(r16)
  80d5d0:	10000726 	beq	r2,zero,80d5f0 <__ssrefill_r+0x50>
  80d5d4:	80c00e17 	ldw	r3,56(r16)
  80d5d8:	0005883a 	mov	r2,zero
  80d5dc:	80c00015 	stw	r3,0(r16)
  80d5e0:	dfc00117 	ldw	ra,4(sp)
  80d5e4:	dc000017 	ldw	r16,0(sp)
  80d5e8:	dec00204 	addi	sp,sp,8
  80d5ec:	f800283a 	ret
  80d5f0:	8080030b 	ldhu	r2,12(r16)
  80d5f4:	80c00417 	ldw	r3,16(r16)
  80d5f8:	80000115 	stw	zero,4(r16)
  80d5fc:	10800814 	ori	r2,r2,32
  80d600:	8080030d 	sth	r2,12(r16)
  80d604:	80c00015 	stw	r3,0(r16)
  80d608:	00bfffc4 	movi	r2,-1
  80d60c:	003ff406 	br	80d5e0 <__alt_data_end+0xff80d5e0>

0080d610 <_sfread_r>:
  80d610:	defff704 	addi	sp,sp,-36
  80d614:	dd800615 	stw	r22,24(sp)
  80d618:	39ad383a 	mul	r22,r7,r6
  80d61c:	dc400115 	stw	r17,4(sp)
  80d620:	dfc00815 	stw	ra,32(sp)
  80d624:	ddc00715 	stw	r23,28(sp)
  80d628:	dd400515 	stw	r21,20(sp)
  80d62c:	dd000415 	stw	r20,16(sp)
  80d630:	dcc00315 	stw	r19,12(sp)
  80d634:	dc800215 	stw	r18,8(sp)
  80d638:	dc000015 	stw	r16,0(sp)
  80d63c:	dc400917 	ldw	r17,36(sp)
  80d640:	b0002a26 	beq	r22,zero,80d6ec <_sfread_r+0xdc>
  80d644:	302f883a 	mov	r23,r6
  80d648:	382b883a 	mov	r21,r7
  80d64c:	2029883a 	mov	r20,r4
  80d650:	2827883a 	mov	r19,r5
  80d654:	b025883a 	mov	r18,r22
  80d658:	00000b06 	br	80d688 <_sfread_r+0x78>
  80d65c:	080958c0 	call	80958c <memcpy>
  80d660:	88800017 	ldw	r2,0(r17)
  80d664:	9c27883a 	add	r19,r19,r16
  80d668:	9425c83a 	sub	r18,r18,r16
  80d66c:	1421883a 	add	r16,r2,r16
  80d670:	88000115 	stw	zero,4(r17)
  80d674:	880b883a 	mov	r5,r17
  80d678:	8c000015 	stw	r16,0(r17)
  80d67c:	a009883a 	mov	r4,r20
  80d680:	080d5a00 	call	80d5a0 <__ssrefill_r>
  80d684:	10001b1e 	bne	r2,zero,80d6f4 <_sfread_r+0xe4>
  80d688:	8c000117 	ldw	r16,4(r17)
  80d68c:	9809883a 	mov	r4,r19
  80d690:	89400017 	ldw	r5,0(r17)
  80d694:	800d883a 	mov	r6,r16
  80d698:	84bff036 	bltu	r16,r18,80d65c <__alt_data_end+0xff80d65c>
  80d69c:	900d883a 	mov	r6,r18
  80d6a0:	080958c0 	call	80958c <memcpy>
  80d6a4:	88c00117 	ldw	r3,4(r17)
  80d6a8:	89000017 	ldw	r4,0(r17)
  80d6ac:	a805883a 	mov	r2,r21
  80d6b0:	1c87c83a 	sub	r3,r3,r18
  80d6b4:	24a5883a 	add	r18,r4,r18
  80d6b8:	88c00115 	stw	r3,4(r17)
  80d6bc:	8c800015 	stw	r18,0(r17)
  80d6c0:	dfc00817 	ldw	ra,32(sp)
  80d6c4:	ddc00717 	ldw	r23,28(sp)
  80d6c8:	dd800617 	ldw	r22,24(sp)
  80d6cc:	dd400517 	ldw	r21,20(sp)
  80d6d0:	dd000417 	ldw	r20,16(sp)
  80d6d4:	dcc00317 	ldw	r19,12(sp)
  80d6d8:	dc800217 	ldw	r18,8(sp)
  80d6dc:	dc400117 	ldw	r17,4(sp)
  80d6e0:	dc000017 	ldw	r16,0(sp)
  80d6e4:	dec00904 	addi	sp,sp,36
  80d6e8:	f800283a 	ret
  80d6ec:	0005883a 	mov	r2,zero
  80d6f0:	003ff306 	br	80d6c0 <__alt_data_end+0xff80d6c0>
  80d6f4:	b80b883a 	mov	r5,r23
  80d6f8:	b489c83a 	sub	r4,r22,r18
  80d6fc:	08155880 	call	815588 <__udivsi3>
  80d700:	003fef06 	br	80d6c0 <__alt_data_end+0xff80d6c0>

0080d704 <__ssvfiscanf_r>:
  80d704:	2880030b 	ldhu	r2,12(r5)
  80d708:	deff9b04 	addi	sp,sp,-404
  80d70c:	df006315 	stw	fp,396(sp)
  80d710:	dc405c15 	stw	r17,368(sp)
  80d714:	dfc06415 	stw	ra,400(sp)
  80d718:	ddc06215 	stw	r23,392(sp)
  80d71c:	dd806115 	stw	r22,388(sp)
  80d720:	dd406015 	stw	r21,384(sp)
  80d724:	dd005f15 	stw	r20,380(sp)
  80d728:	dcc05e15 	stw	r19,376(sp)
  80d72c:	dc805d15 	stw	r18,372(sp)
  80d730:	dc005b15 	stw	r16,364(sp)
  80d734:	10c8000c 	andi	r3,r2,8192
  80d738:	d9c04f15 	stw	r7,316(sp)
  80d73c:	2839883a 	mov	fp,r5
  80d740:	2023883a 	mov	r17,r4
  80d744:	1800061e 	bne	r3,zero,80d760 <__ssvfiscanf_r+0x5c>
  80d748:	29001917 	ldw	r4,100(r5)
  80d74c:	00f7ffc4 	movi	r3,-8193
  80d750:	10880014 	ori	r2,r2,8192
  80d754:	20c6703a 	and	r3,r4,r3
  80d758:	2880030d 	sth	r2,12(r5)
  80d75c:	28c01915 	stw	r3,100(r5)
  80d760:	30800003 	ldbu	r2,0(r6)
  80d764:	dac04104 	addi	r11,sp,260
  80d768:	0025883a 	mov	r18,zero
  80d76c:	050020b4 	movhi	r20,130
  80d770:	d8005215 	stw	zero,328(sp)
  80d774:	d8005015 	stw	zero,320(sp)
  80d778:	d8005115 	stw	zero,324(sp)
  80d77c:	dac04e15 	stw	r11,312(sp)
  80d780:	d8804d15 	stw	r2,308(sp)
  80d784:	e027883a 	mov	r19,fp
  80d788:	a53a8804 	addi	r20,r20,-5600
  80d78c:	9039883a 	mov	fp,r18
  80d790:	34800044 	addi	r18,r6,1
  80d794:	10001e26 	beq	r2,zero,80d810 <__ssvfiscanf_r+0x10c>
  80d798:	a1c00017 	ldw	r7,0(r20)
  80d79c:	3887883a 	add	r3,r7,r2
  80d7a0:	18c00043 	ldbu	r3,1(r3)
  80d7a4:	18c0020c 	andi	r3,r3,8
  80d7a8:	18001b26 	beq	r3,zero,80d818 <__ssvfiscanf_r+0x114>
  80d7ac:	98800117 	ldw	r2,4(r19)
  80d7b0:	00800e0e 	bge	zero,r2,80d7ec <__ssvfiscanf_r+0xe8>
  80d7b4:	98c00017 	ldw	r3,0(r19)
  80d7b8:	a1000017 	ldw	r4,0(r20)
  80d7bc:	18800003 	ldbu	r2,0(r3)
  80d7c0:	2085883a 	add	r2,r4,r2
  80d7c4:	10800043 	ldbu	r2,1(r2)
  80d7c8:	1080020c 	andi	r2,r2,8
  80d7cc:	10000b26 	beq	r2,zero,80d7fc <__ssvfiscanf_r+0xf8>
  80d7d0:	98800117 	ldw	r2,4(r19)
  80d7d4:	18c00044 	addi	r3,r3,1
  80d7d8:	98c00015 	stw	r3,0(r19)
  80d7dc:	10bfffc4 	addi	r2,r2,-1
  80d7e0:	98800115 	stw	r2,4(r19)
  80d7e4:	e7000044 	addi	fp,fp,1
  80d7e8:	00bff216 	blt	zero,r2,80d7b4 <__alt_data_end+0xff80d7b4>
  80d7ec:	980b883a 	mov	r5,r19
  80d7f0:	8809883a 	mov	r4,r17
  80d7f4:	080d5a00 	call	80d5a0 <__ssrefill_r>
  80d7f8:	103fee26 	beq	r2,zero,80d7b4 <__alt_data_end+0xff80d7b4>
  80d7fc:	900d883a 	mov	r6,r18
  80d800:	30800003 	ldbu	r2,0(r6)
  80d804:	34800044 	addi	r18,r6,1
  80d808:	d8804d15 	stw	r2,308(sp)
  80d80c:	103fe21e 	bne	r2,zero,80d798 <__alt_data_end+0xff80d798>
  80d810:	d8805117 	ldw	r2,324(sp)
  80d814:	00009806 	br	80da78 <__ssvfiscanf_r+0x374>
  80d818:	00c00944 	movi	r3,37
  80d81c:	10c0871e 	bne	r2,r3,80da3c <__ssvfiscanf_r+0x338>
  80d820:	30c00043 	ldbu	r3,1(r6)
  80d824:	0021883a 	mov	r16,zero
  80d828:	002f883a 	mov	r23,zero
  80d82c:	01001e04 	movi	r4,120
  80d830:	01401b04 	movi	r5,108
  80d834:	95400044 	addi	r21,r18,1
  80d838:	20c0e036 	bltu	r4,r3,80dbbc <__ssvfiscanf_r+0x4b8>
  80d83c:	180490ba 	slli	r2,r3,2
  80d840:	01802074 	movhi	r6,129
  80d844:	31b61504 	addi	r6,r6,-10156
  80d848:	1185883a 	add	r2,r2,r6
  80d84c:	10800017 	ldw	r2,0(r2)
  80d850:	1000683a 	jmp	r2
  80d854:	0080da74 	movhi	r2,873
  80d858:	0080dbbc 	xorhi	r2,zero,878
  80d85c:	0080dbbc 	xorhi	r2,zero,878
  80d860:	0080dbbc 	xorhi	r2,zero,878
  80d864:	0080dbbc 	xorhi	r2,zero,878
  80d868:	0080dbbc 	xorhi	r2,zero,878
  80d86c:	0080dbbc 	xorhi	r2,zero,878
  80d870:	0080dbbc 	xorhi	r2,zero,878
  80d874:	0080dbbc 	xorhi	r2,zero,878
  80d878:	0080dbbc 	xorhi	r2,zero,878
  80d87c:	0080dbbc 	xorhi	r2,zero,878
  80d880:	0080dbbc 	xorhi	r2,zero,878
  80d884:	0080dbbc 	xorhi	r2,zero,878
  80d888:	0080dbbc 	xorhi	r2,zero,878
  80d88c:	0080dbbc 	xorhi	r2,zero,878
  80d890:	0080dbbc 	xorhi	r2,zero,878
  80d894:	0080dbbc 	xorhi	r2,zero,878
  80d898:	0080dbbc 	xorhi	r2,zero,878
  80d89c:	0080dbbc 	xorhi	r2,zero,878
  80d8a0:	0080dbbc 	xorhi	r2,zero,878
  80d8a4:	0080dbbc 	xorhi	r2,zero,878
  80d8a8:	0080dbbc 	xorhi	r2,zero,878
  80d8ac:	0080dbbc 	xorhi	r2,zero,878
  80d8b0:	0080dbbc 	xorhi	r2,zero,878
  80d8b4:	0080dbbc 	xorhi	r2,zero,878
  80d8b8:	0080dbbc 	xorhi	r2,zero,878
  80d8bc:	0080dbbc 	xorhi	r2,zero,878
  80d8c0:	0080dbbc 	xorhi	r2,zero,878
  80d8c4:	0080dbbc 	xorhi	r2,zero,878
  80d8c8:	0080dbbc 	xorhi	r2,zero,878
  80d8cc:	0080dbbc 	xorhi	r2,zero,878
  80d8d0:	0080dbbc 	xorhi	r2,zero,878
  80d8d4:	0080dbbc 	xorhi	r2,zero,878
  80d8d8:	0080dbbc 	xorhi	r2,zero,878
  80d8dc:	0080dbbc 	xorhi	r2,zero,878
  80d8e0:	0080dbbc 	xorhi	r2,zero,878
  80d8e4:	0080dbbc 	xorhi	r2,zero,878
  80d8e8:	0080da38 	rdprs	r2,zero,872
  80d8ec:	0080dbbc 	xorhi	r2,zero,878
  80d8f0:	0080dbbc 	xorhi	r2,zero,878
  80d8f4:	0080dbbc 	xorhi	r2,zero,878
  80d8f8:	0080dbbc 	xorhi	r2,zero,878
  80d8fc:	0080ddcc 	andi	r2,zero,887
  80d900:	0080dbbc 	xorhi	r2,zero,878
  80d904:	0080dbbc 	xorhi	r2,zero,878
  80d908:	0080dbbc 	xorhi	r2,zero,878
  80d90c:	0080dbbc 	xorhi	r2,zero,878
  80d910:	0080dbbc 	xorhi	r2,zero,878
  80d914:	0080dd54 	movui	r2,885
  80d918:	0080dd54 	movui	r2,885
  80d91c:	0080dd54 	movui	r2,885
  80d920:	0080dd54 	movui	r2,885
  80d924:	0080dd54 	movui	r2,885
  80d928:	0080dd54 	movui	r2,885
  80d92c:	0080dd54 	movui	r2,885
  80d930:	0080dd54 	movui	r2,885
  80d934:	0080dd54 	movui	r2,885
  80d938:	0080dd54 	movui	r2,885
  80d93c:	0080dbbc 	xorhi	r2,zero,878
  80d940:	0080dbbc 	xorhi	r2,zero,878
  80d944:	0080dbbc 	xorhi	r2,zero,878
  80d948:	0080dbbc 	xorhi	r2,zero,878
  80d94c:	0080dbbc 	xorhi	r2,zero,878
  80d950:	0080dbbc 	xorhi	r2,zero,878
  80d954:	0080dbbc 	xorhi	r2,zero,878
  80d958:	0080dbbc 	xorhi	r2,zero,878
  80d95c:	0080dbbc 	xorhi	r2,zero,878
  80d960:	0080dbbc 	xorhi	r2,zero,878
  80d964:	0080dd2c 	andhi	r2,zero,884
  80d968:	0080dbbc 	xorhi	r2,zero,878
  80d96c:	0080dbbc 	xorhi	r2,zero,878
  80d970:	0080dbbc 	xorhi	r2,zero,878
  80d974:	0080dbbc 	xorhi	r2,zero,878
  80d978:	0080dbbc 	xorhi	r2,zero,878
  80d97c:	0080dbbc 	xorhi	r2,zero,878
  80d980:	0080dbbc 	xorhi	r2,zero,878
  80d984:	0080dd94 	movui	r2,886
  80d988:	0080dbbc 	xorhi	r2,zero,878
  80d98c:	0080dbbc 	xorhi	r2,zero,878
  80d990:	0080dd70 	cmpltui	r2,zero,885
  80d994:	0080dbbc 	xorhi	r2,zero,878
  80d998:	0080dbbc 	xorhi	r2,zero,878
  80d99c:	0080dbbc 	xorhi	r2,zero,878
  80d9a0:	0080dbbc 	xorhi	r2,zero,878
  80d9a4:	0080dbbc 	xorhi	r2,zero,878
  80d9a8:	0080dbbc 	xorhi	r2,zero,878
  80d9ac:	0080dbbc 	xorhi	r2,zero,878
  80d9b0:	0080dbbc 	xorhi	r2,zero,878
  80d9b4:	0080dda8 	cmpgeui	r2,zero,886
  80d9b8:	0080dbbc 	xorhi	r2,zero,878
  80d9bc:	0080dbbc 	xorhi	r2,zero,878
  80d9c0:	0080dca4 	muli	r2,zero,882
  80d9c4:	0080dbbc 	xorhi	r2,zero,878
  80d9c8:	0080dbbc 	xorhi	r2,zero,878
  80d9cc:	0080dbbc 	xorhi	r2,zero,878
  80d9d0:	0080dbbc 	xorhi	r2,zero,878
  80d9d4:	0080dbbc 	xorhi	r2,zero,878
  80d9d8:	0080dbbc 	xorhi	r2,zero,878
  80d9dc:	0080dbbc 	xorhi	r2,zero,878
  80d9e0:	0080dc2c 	andhi	r2,zero,880
  80d9e4:	0080dc08 	cmpgei	r2,zero,880
  80d9e8:	0080dbbc 	xorhi	r2,zero,878
  80d9ec:	0080dbbc 	xorhi	r2,zero,878
  80d9f0:	0080dbbc 	xorhi	r2,zero,878
  80d9f4:	0080dbf4 	movhi	r2,879
  80d9f8:	0080dde0 	cmpeqi	r2,zero,887
  80d9fc:	0080dbbc 	xorhi	r2,zero,878
  80da00:	0080dbbc 	xorhi	r2,zero,878
  80da04:	0080dba4 	muli	r2,zero,878
  80da08:	0080dbbc 	xorhi	r2,zero,878
  80da0c:	0080db78 	rdprs	r2,zero,877
  80da10:	0080db54 	movui	r2,877
  80da14:	0080db2c 	andhi	r2,zero,876
  80da18:	0080dbbc 	xorhi	r2,zero,878
  80da1c:	0080dbbc 	xorhi	r2,zero,878
  80da20:	0080db1c 	xori	r2,zero,876
  80da24:	0080dbbc 	xorhi	r2,zero,878
  80da28:	0080daa8 	cmpgeui	r2,zero,874
  80da2c:	0080dbbc 	xorhi	r2,zero,878
  80da30:	0080dbbc 	xorhi	r2,zero,878
  80da34:	0080dda8 	cmpgeui	r2,zero,886
  80da38:	a825883a 	mov	r18,r21
  80da3c:	98800117 	ldw	r2,4(r19)
  80da40:	0081d20e 	bge	zero,r2,80e18c <__ssvfiscanf_r+0xa88>
  80da44:	98800017 	ldw	r2,0(r19)
  80da48:	90ffffc3 	ldbu	r3,-1(r18)
  80da4c:	11000003 	ldbu	r4,0(r2)
  80da50:	20ff6f1e 	bne	r4,r3,80d810 <__alt_data_end+0xff80d810>
  80da54:	98c00117 	ldw	r3,4(r19)
  80da58:	10800044 	addi	r2,r2,1
  80da5c:	98800015 	stw	r2,0(r19)
  80da60:	18bfffc4 	addi	r2,r3,-1
  80da64:	98800115 	stw	r2,4(r19)
  80da68:	e7000044 	addi	fp,fp,1
  80da6c:	900d883a 	mov	r6,r18
  80da70:	003f6306 	br	80d800 <__alt_data_end+0xff80d800>
  80da74:	00bfffc4 	movi	r2,-1
  80da78:	dfc06417 	ldw	ra,400(sp)
  80da7c:	df006317 	ldw	fp,396(sp)
  80da80:	ddc06217 	ldw	r23,392(sp)
  80da84:	dd806117 	ldw	r22,388(sp)
  80da88:	dd406017 	ldw	r21,384(sp)
  80da8c:	dd005f17 	ldw	r20,380(sp)
  80da90:	dcc05e17 	ldw	r19,376(sp)
  80da94:	dc805d17 	ldw	r18,372(sp)
  80da98:	dc405c17 	ldw	r17,368(sp)
  80da9c:	dc005b17 	ldw	r16,364(sp)
  80daa0:	dec06504 	addi	sp,sp,404
  80daa4:	f800283a 	ret
  80daa8:	98800117 	ldw	r2,4(r19)
  80daac:	0081e10e 	bge	zero,r2,80e234 <__ssvfiscanf_r+0xb30>
  80dab0:	00802074 	movhi	r2,129
  80dab4:	10b3c404 	addi	r2,r2,-12528
  80dab8:	02c00284 	movi	r11,10
  80dabc:	d8805215 	stw	r2,328(sp)
  80dac0:	dac05015 	stw	r11,320(sp)
  80dac4:	058000c4 	movi	r22,3
  80dac8:	98800017 	ldw	r2,0(r19)
  80dacc:	00000206 	br	80dad8 <__ssvfiscanf_r+0x3d4>
  80dad0:	10800044 	addi	r2,r2,1
  80dad4:	98800015 	stw	r2,0(r19)
  80dad8:	11000003 	ldbu	r4,0(r2)
  80dadc:	20c03fcc 	andi	r3,r4,255
  80dae0:	38c7883a 	add	r3,r7,r3
  80dae4:	18c00043 	ldbu	r3,1(r3)
  80dae8:	1940020c 	andi	r5,r3,8
  80daec:	2801dd26 	beq	r5,zero,80e264 <__ssvfiscanf_r+0xb60>
  80daf0:	98c00117 	ldw	r3,4(r19)
  80daf4:	e7000044 	addi	fp,fp,1
  80daf8:	18ffffc4 	addi	r3,r3,-1
  80dafc:	98c00115 	stw	r3,4(r19)
  80db00:	00fff316 	blt	zero,r3,80dad0 <__alt_data_end+0xff80dad0>
  80db04:	980b883a 	mov	r5,r19
  80db08:	8809883a 	mov	r4,r17
  80db0c:	080d5a00 	call	80d5a0 <__ssrefill_r>
  80db10:	1001591e 	bne	r2,zero,80e078 <__ssvfiscanf_r+0x974>
  80db14:	a1c00017 	ldw	r7,0(r20)
  80db18:	003feb06 	br	80dac8 <__alt_data_end+0xff80dac8>
  80db1c:	98800117 	ldw	r2,4(r19)
  80db20:	0081b80e 	bge	zero,r2,80e204 <__ssvfiscanf_r+0xb00>
  80db24:	05800084 	movi	r22,2
  80db28:	003fe706 	br	80dac8 <__alt_data_end+0xff80dac8>
  80db2c:	98800117 	ldw	r2,4(r19)
  80db30:	84008814 	ori	r16,r16,544
  80db34:	00809f0e 	bge	zero,r2,80ddb4 <__ssvfiscanf_r+0x6b0>
  80db38:	00802074 	movhi	r2,129
  80db3c:	10b3c404 	addi	r2,r2,-12528
  80db40:	02c00404 	movi	r11,16
  80db44:	d8805215 	stw	r2,328(sp)
  80db48:	dac05015 	stw	r11,320(sp)
  80db4c:	058000c4 	movi	r22,3
  80db50:	003fdd06 	br	80dac8 <__alt_data_end+0xff80dac8>
  80db54:	98800117 	ldw	r2,4(r19)
  80db58:	0080880e 	bge	zero,r2,80dd7c <__ssvfiscanf_r+0x678>
  80db5c:	00802074 	movhi	r2,129
  80db60:	10b3c404 	addi	r2,r2,-12528
  80db64:	02c00204 	movi	r11,8
  80db68:	d8805215 	stw	r2,328(sp)
  80db6c:	dac05015 	stw	r11,320(sp)
  80db70:	058000c4 	movi	r22,3
  80db74:	003fd406 	br	80dac8 <__alt_data_end+0xff80dac8>
  80db78:	8080040c 	andi	r2,r16,16
  80db7c:	1000d61e 	bne	r2,zero,80ded8 <__ssvfiscanf_r+0x7d4>
  80db80:	8080010c 	andi	r2,r16,4
  80db84:	10018b26 	beq	r2,zero,80e1b4 <__ssvfiscanf_r+0xab0>
  80db88:	dac04f17 	ldw	r11,316(sp)
  80db8c:	a825883a 	mov	r18,r21
  80db90:	58800017 	ldw	r2,0(r11)
  80db94:	5ac00104 	addi	r11,r11,4
  80db98:	dac04f15 	stw	r11,316(sp)
  80db9c:	1700000d 	sth	fp,0(r2)
  80dba0:	003f1606 	br	80d7fc <__alt_data_end+0xff80d7fc>
  80dba4:	90c00043 	ldbu	r3,1(r18)
  80dba8:	19417d26 	beq	r3,r5,80e1a0 <__ssvfiscanf_r+0xa9c>
  80dbac:	a825883a 	mov	r18,r21
  80dbb0:	84000054 	ori	r16,r16,1
  80dbb4:	95400044 	addi	r21,r18,1
  80dbb8:	20ff202e 	bgeu	r4,r3,80d83c <__alt_data_end+0xff80d83c>
  80dbbc:	38c7883a 	add	r3,r7,r3
  80dbc0:	18800043 	ldbu	r2,1(r3)
  80dbc4:	00c00044 	movi	r3,1
  80dbc8:	108000cc 	andi	r2,r2,3
  80dbcc:	10c16626 	beq	r2,r3,80e168 <__ssvfiscanf_r+0xa64>
  80dbd0:	98800117 	ldw	r2,4(r19)
  80dbd4:	0081670e 	bge	zero,r2,80e174 <__ssvfiscanf_r+0xa70>
  80dbd8:	00802074 	movhi	r2,129
  80dbdc:	10b26e04 	addi	r2,r2,-13896
  80dbe0:	02c00284 	movi	r11,10
  80dbe4:	d8805215 	stw	r2,328(sp)
  80dbe8:	dac05015 	stw	r11,320(sp)
  80dbec:	058000c4 	movi	r22,3
  80dbf0:	003fb506 	br	80dac8 <__alt_data_end+0xff80dac8>
  80dbf4:	90800043 	ldbu	r2,1(r18)
  80dbf8:	84000114 	ori	r16,r16,4
  80dbfc:	a825883a 	mov	r18,r21
  80dc00:	10c03fcc 	andi	r3,r2,255
  80dc04:	003f0b06 	br	80d834 <__alt_data_end+0xff80d834>
  80dc08:	98800117 	ldw	r2,4(r19)
  80dc0c:	0081590e 	bge	zero,r2,80e174 <__ssvfiscanf_r+0xa70>
  80dc10:	02c02074 	movhi	r11,129
  80dc14:	5af26e04 	addi	r11,r11,-13896
  80dc18:	dac05215 	stw	r11,328(sp)
  80dc1c:	02c00284 	movi	r11,10
  80dc20:	dac05015 	stw	r11,320(sp)
  80dc24:	058000c4 	movi	r22,3
  80dc28:	003fa706 	br	80dac8 <__alt_data_end+0xff80dac8>
  80dc2c:	98800117 	ldw	r2,4(r19)
  80dc30:	0081220e 	bge	zero,r2,80e0bc <__ssvfiscanf_r+0x9b8>
  80dc34:	b800011e 	bne	r23,zero,80dc3c <__ssvfiscanf_r+0x538>
  80dc38:	05c00044 	movi	r23,1
  80dc3c:	8080004c 	andi	r2,r16,1
  80dc40:	10006f1e 	bne	r2,zero,80de00 <__ssvfiscanf_r+0x6fc>
  80dc44:	8400040c 	andi	r16,r16,16
  80dc48:	80013526 	beq	r16,zero,80e120 <__ssvfiscanf_r+0xa1c>
  80dc4c:	0021883a 	mov	r16,zero
  80dc50:	00000806 	br	80dc74 <__ssvfiscanf_r+0x570>
  80dc54:	1887883a 	add	r3,r3,r2
  80dc58:	980b883a 	mov	r5,r19
  80dc5c:	8809883a 	mov	r4,r17
  80dc60:	98c00015 	stw	r3,0(r19)
  80dc64:	80a1883a 	add	r16,r16,r2
  80dc68:	b8afc83a 	sub	r23,r23,r2
  80dc6c:	080d5a00 	call	80d5a0 <__ssrefill_r>
  80dc70:	1001291e 	bne	r2,zero,80e118 <__ssvfiscanf_r+0xa14>
  80dc74:	98800117 	ldw	r2,4(r19)
  80dc78:	98c00017 	ldw	r3,0(r19)
  80dc7c:	15fff516 	blt	r2,r23,80dc54 <__alt_data_end+0xff80dc54>
  80dc80:	15c5c83a 	sub	r2,r2,r23
  80dc84:	1dd5883a 	add	r10,r3,r23
  80dc88:	85e1883a 	add	r16,r16,r23
  80dc8c:	98800115 	stw	r2,4(r19)
  80dc90:	9a800015 	stw	r10,0(r19)
  80dc94:	a825883a 	mov	r18,r21
  80dc98:	e439883a 	add	fp,fp,r16
  80dc9c:	900d883a 	mov	r6,r18
  80dca0:	003ed706 	br	80d800 <__alt_data_end+0xff80d800>
  80dca4:	a80b883a 	mov	r5,r21
  80dca8:	d9000104 	addi	r4,sp,4
  80dcac:	080afcc0 	call	80afcc <__sccl>
  80dcb0:	1025883a 	mov	r18,r2
  80dcb4:	98800117 	ldw	r2,4(r19)
  80dcb8:	0081590e 	bge	zero,r2,80e220 <__ssvfiscanf_r+0xb1c>
  80dcbc:	99000017 	ldw	r4,0(r19)
  80dcc0:	20800003 	ldbu	r2,0(r4)
  80dcc4:	b8008726 	beq	r23,zero,80dee4 <__ssvfiscanf_r+0x7e0>
  80dcc8:	8400040c 	andi	r16,r16,16
  80dccc:	80008826 	beq	r16,zero,80def0 <__ssvfiscanf_r+0x7ec>
  80dcd0:	b821883a 	mov	r16,r23
  80dcd4:	002b883a 	mov	r21,zero
  80dcd8:	00000106 	br	80dce0 <__ssvfiscanf_r+0x5dc>
  80dcdc:	20800003 	ldbu	r2,0(r4)
  80dce0:	10803fcc 	andi	r2,r2,255
  80dce4:	d8c00104 	addi	r3,sp,4
  80dce8:	1885883a 	add	r2,r3,r2
  80dcec:	10800007 	ldb	r2,0(r2)
  80dcf0:	10010726 	beq	r2,zero,80e110 <__ssvfiscanf_r+0xa0c>
  80dcf4:	98800117 	ldw	r2,4(r19)
  80dcf8:	21000044 	addi	r4,r4,1
  80dcfc:	ad400044 	addi	r21,r21,1
  80dd00:	10bfffc4 	addi	r2,r2,-1
  80dd04:	98800115 	stw	r2,4(r19)
  80dd08:	99000015 	stw	r4,0(r19)
  80dd0c:	adc0e226 	beq	r21,r23,80e098 <__ssvfiscanf_r+0x994>
  80dd10:	00bff216 	blt	zero,r2,80dcdc <__alt_data_end+0xff80dcdc>
  80dd14:	980b883a 	mov	r5,r19
  80dd18:	8809883a 	mov	r4,r17
  80dd1c:	080d5a00 	call	80d5a0 <__ssrefill_r>
  80dd20:	1000dc1e 	bne	r2,zero,80e094 <__ssvfiscanf_r+0x990>
  80dd24:	99000017 	ldw	r4,0(r19)
  80dd28:	003fec06 	br	80dcdc <__alt_data_end+0xff80dcdc>
  80dd2c:	98800117 	ldw	r2,4(r19)
  80dd30:	84000054 	ori	r16,r16,1
  80dd34:	00810f0e 	bge	zero,r2,80e174 <__ssvfiscanf_r+0xa70>
  80dd38:	00c02074 	movhi	r3,129
  80dd3c:	18f26e04 	addi	r3,r3,-13896
  80dd40:	02c00284 	movi	r11,10
  80dd44:	d8c05215 	stw	r3,328(sp)
  80dd48:	dac05015 	stw	r11,320(sp)
  80dd4c:	058000c4 	movi	r22,3
  80dd50:	003f5d06 	br	80dac8 <__alt_data_end+0xff80dac8>
  80dd54:	bdc002a4 	muli	r23,r23,10
  80dd58:	90800043 	ldbu	r2,1(r18)
  80dd5c:	a825883a 	mov	r18,r21
  80dd60:	b8ef883a 	add	r23,r23,r3
  80dd64:	bdfff404 	addi	r23,r23,-48
  80dd68:	10c03fcc 	andi	r3,r2,255
  80dd6c:	003eb106 	br	80d834 <__alt_data_end+0xff80d834>
  80dd70:	98800117 	ldw	r2,4(r19)
  80dd74:	84000054 	ori	r16,r16,1
  80dd78:	00bf7816 	blt	zero,r2,80db5c <__alt_data_end+0xff80db5c>
  80dd7c:	980b883a 	mov	r5,r19
  80dd80:	8809883a 	mov	r4,r17
  80dd84:	080d5a00 	call	80d5a0 <__ssrefill_r>
  80dd88:	1000bb1e 	bne	r2,zero,80e078 <__ssvfiscanf_r+0x974>
  80dd8c:	a1c00017 	ldw	r7,0(r20)
  80dd90:	003f7206 	br	80db5c <__alt_data_end+0xff80db5c>
  80dd94:	90800043 	ldbu	r2,1(r18)
  80dd98:	84000094 	ori	r16,r16,2
  80dd9c:	a825883a 	mov	r18,r21
  80dda0:	10c03fcc 	andi	r3,r2,255
  80dda4:	003ea306 	br	80d834 <__alt_data_end+0xff80d834>
  80dda8:	98800117 	ldw	r2,4(r19)
  80ddac:	84008014 	ori	r16,r16,512
  80ddb0:	00bf6116 	blt	zero,r2,80db38 <__alt_data_end+0xff80db38>
  80ddb4:	980b883a 	mov	r5,r19
  80ddb8:	8809883a 	mov	r4,r17
  80ddbc:	080d5a00 	call	80d5a0 <__ssrefill_r>
  80ddc0:	1000ad1e 	bne	r2,zero,80e078 <__ssvfiscanf_r+0x974>
  80ddc4:	a1c00017 	ldw	r7,0(r20)
  80ddc8:	003f5b06 	br	80db38 <__alt_data_end+0xff80db38>
  80ddcc:	90800043 	ldbu	r2,1(r18)
  80ddd0:	84000414 	ori	r16,r16,16
  80ddd4:	a825883a 	mov	r18,r21
  80ddd8:	10c03fcc 	andi	r3,r2,255
  80dddc:	003e9506 	br	80d834 <__alt_data_end+0xff80d834>
  80dde0:	98800117 	ldw	r2,4(r19)
  80dde4:	0081190e 	bge	zero,r2,80e24c <__ssvfiscanf_r+0xb48>
  80dde8:	00802074 	movhi	r2,129
  80ddec:	10b26e04 	addi	r2,r2,-13896
  80ddf0:	d8805215 	stw	r2,328(sp)
  80ddf4:	d8005015 	stw	zero,320(sp)
  80ddf8:	058000c4 	movi	r22,3
  80ddfc:	003f3206 	br	80dac8 <__alt_data_end+0xff80dac8>
  80de00:	d8c04b04 	addi	r3,sp,300
  80de04:	8400040c 	andi	r16,r16,16
  80de08:	01800204 	movi	r6,8
  80de0c:	000b883a 	mov	r5,zero
  80de10:	1809883a 	mov	r4,r3
  80de14:	dc005415 	stw	r16,336(sp)
  80de18:	d8c05315 	stw	r3,332(sp)
  80de1c:	0802dc40 	call	802dc4 <memset>
  80de20:	dc005417 	ldw	r16,336(sp)
  80de24:	8000a026 	beq	r16,zero,80e0a8 <__ssvfiscanf_r+0x9a4>
  80de28:	002d883a 	mov	r22,zero
  80de2c:	0021883a 	mov	r16,zero
  80de30:	08091d00 	call	8091d0 <__locale_mb_cur_max>
  80de34:	14009026 	beq	r2,r16,80e078 <__ssvfiscanf_r+0x974>
  80de38:	98800017 	ldw	r2,0(r19)
  80de3c:	98c00117 	ldw	r3,4(r19)
  80de40:	dac05317 	ldw	r11,332(sp)
  80de44:	12000003 	ldbu	r8,0(r2)
  80de48:	18ffffc4 	addi	r3,r3,-1
  80de4c:	10800044 	addi	r2,r2,1
  80de50:	d9004104 	addi	r4,sp,260
  80de54:	98c00115 	stw	r3,4(r19)
  80de58:	98800015 	stw	r2,0(r19)
  80de5c:	84800044 	addi	r18,r16,1
  80de60:	dac00015 	stw	r11,0(sp)
  80de64:	2421883a 	add	r16,r4,r16
  80de68:	200d883a 	mov	r6,r4
  80de6c:	900f883a 	mov	r7,r18
  80de70:	b00b883a 	mov	r5,r22
  80de74:	8809883a 	mov	r4,r17
  80de78:	82000005 	stb	r8,0(r16)
  80de7c:	08092840 	call	809284 <_mbrtowc_r>
  80de80:	00ffffc4 	movi	r3,-1
  80de84:	10c07c26 	beq	r2,r3,80e078 <__ssvfiscanf_r+0x974>
  80de88:	1000911e 	bne	r2,zero,80e0d0 <__ssvfiscanf_r+0x9cc>
  80de8c:	dac05417 	ldw	r11,336(sp)
  80de90:	5800951e 	bne	r11,zero,80e0e8 <__ssvfiscanf_r+0x9e4>
  80de94:	b0000015 	stw	zero,0(r22)
  80de98:	e4b9883a 	add	fp,fp,r18
  80de9c:	b8ef883a 	add	r23,r23,r3
  80dea0:	b5800104 	addi	r22,r22,4
  80dea4:	98800117 	ldw	r2,4(r19)
  80dea8:	0021883a 	mov	r16,zero
  80deac:	00807c16 	blt	zero,r2,80e0a0 <__ssvfiscanf_r+0x99c>
  80deb0:	980b883a 	mov	r5,r19
  80deb4:	8809883a 	mov	r4,r17
  80deb8:	080d5a00 	call	80d5a0 <__ssrefill_r>
  80debc:	10007826 	beq	r2,zero,80e0a0 <__ssvfiscanf_r+0x99c>
  80dec0:	80006d1e 	bne	r16,zero,80e078 <__ssvfiscanf_r+0x974>
  80dec4:	d8c05417 	ldw	r3,336(sp)
  80dec8:	1800031e 	bne	r3,zero,80ded8 <__ssvfiscanf_r+0x7d4>
  80decc:	dac05117 	ldw	r11,324(sp)
  80ded0:	5ac00044 	addi	r11,r11,1
  80ded4:	dac05115 	stw	r11,324(sp)
  80ded8:	a825883a 	mov	r18,r21
  80dedc:	900d883a 	mov	r6,r18
  80dee0:	003e4706 	br	80d800 <__alt_data_end+0xff80d800>
  80dee4:	8400040c 	andi	r16,r16,16
  80dee8:	05ffffc4 	movi	r23,-1
  80deec:	803f781e 	bne	r16,zero,80dcd0 <__alt_data_end+0xff80dcd0>
  80def0:	dac04f17 	ldw	r11,316(sp)
  80def4:	babfffc4 	addi	r10,r23,-1
  80def8:	5d400017 	ldw	r21,0(r11)
  80defc:	5c000104 	addi	r16,r11,4
  80df00:	a807883a 	mov	r3,r21
  80df04:	aaaf883a 	add	r23,r21,r10
  80df08:	00000306 	br	80df18 <__ssvfiscanf_r+0x814>
  80df0c:	99000017 	ldw	r4,0(r19)
  80df10:	b007883a 	mov	r3,r22
  80df14:	20800003 	ldbu	r2,0(r4)
  80df18:	10803fcc 	andi	r2,r2,255
  80df1c:	d9400104 	addi	r5,sp,4
  80df20:	2885883a 	add	r2,r5,r2
  80df24:	10800007 	ldb	r2,0(r2)
  80df28:	10007726 	beq	r2,zero,80e108 <__ssvfiscanf_r+0xa04>
  80df2c:	98800117 	ldw	r2,4(r19)
  80df30:	21400044 	addi	r5,r4,1
  80df34:	99400015 	stw	r5,0(r19)
  80df38:	10bfffc4 	addi	r2,r2,-1
  80df3c:	98800115 	stw	r2,4(r19)
  80df40:	20800003 	ldbu	r2,0(r4)
  80df44:	1d800044 	addi	r22,r3,1
  80df48:	18800005 	stb	r2,0(r3)
  80df4c:	1dc00726 	beq	r3,r23,80df6c <__ssvfiscanf_r+0x868>
  80df50:	98800117 	ldw	r2,4(r19)
  80df54:	00bfed16 	blt	zero,r2,80df0c <__alt_data_end+0xff80df0c>
  80df58:	980b883a 	mov	r5,r19
  80df5c:	8809883a 	mov	r4,r17
  80df60:	080d5a00 	call	80d5a0 <__ssrefill_r>
  80df64:	103fe926 	beq	r2,zero,80df0c <__alt_data_end+0xff80df0c>
  80df68:	ad804326 	beq	r21,r22,80e078 <__ssvfiscanf_r+0x974>
  80df6c:	b56bc83a 	sub	r21,r22,r21
  80df70:	a83e2726 	beq	r21,zero,80d810 <__alt_data_end+0xff80d810>
  80df74:	dac05117 	ldw	r11,324(sp)
  80df78:	b0000005 	stb	zero,0(r22)
  80df7c:	dc004f15 	stw	r16,316(sp)
  80df80:	5ac00044 	addi	r11,r11,1
  80df84:	dac05115 	stw	r11,324(sp)
  80df88:	e579883a 	add	fp,fp,r21
  80df8c:	900d883a 	mov	r6,r18
  80df90:	003e1b06 	br	80d800 <__alt_data_end+0xff80d800>
  80df94:	d8c04b04 	addi	r3,sp,300
  80df98:	8400040c 	andi	r16,r16,16
  80df9c:	01800204 	movi	r6,8
  80dfa0:	000b883a 	mov	r5,zero
  80dfa4:	1809883a 	mov	r4,r3
  80dfa8:	d8c05315 	stw	r3,332(sp)
  80dfac:	0802dc40 	call	802dc4 <memset>
  80dfb0:	8001e91e 	bne	r16,zero,80e758 <__ssvfiscanf_r+0x1054>
  80dfb4:	dac04f17 	ldw	r11,316(sp)
  80dfb8:	5d800017 	ldw	r22,0(r11)
  80dfbc:	5ac00104 	addi	r11,r11,4
  80dfc0:	dac04f15 	stw	r11,316(sp)
  80dfc4:	000d883a 	mov	r6,zero
  80dfc8:	3025883a 	mov	r18,r6
  80dfcc:	98800017 	ldw	r2,0(r19)
  80dfd0:	a0c00017 	ldw	r3,0(r20)
  80dfd4:	10800003 	ldbu	r2,0(r2)
  80dfd8:	1885883a 	add	r2,r3,r2
  80dfdc:	10800043 	ldbu	r2,1(r2)
  80dfe0:	1080020c 	andi	r2,r2,8
  80dfe4:	1001cc1e 	bne	r2,zero,80e718 <__ssvfiscanf_r+0x1014>
  80dfe8:	b801cb26 	beq	r23,zero,80e718 <__ssvfiscanf_r+0x1014>
  80dfec:	08091d00 	call	8091d0 <__locale_mb_cur_max>
  80dff0:	90802126 	beq	r18,r2,80e078 <__ssvfiscanf_r+0x974>
  80dff4:	98800017 	ldw	r2,0(r19)
  80dff8:	99000117 	ldw	r4,4(r19)
  80dffc:	dac05317 	ldw	r11,332(sp)
  80e000:	12000003 	ldbu	r8,0(r2)
  80e004:	213fffc4 	addi	r4,r4,-1
  80e008:	10800044 	addi	r2,r2,1
  80e00c:	99000115 	stw	r4,4(r19)
  80e010:	d9404104 	addi	r5,sp,260
  80e014:	98800015 	stw	r2,0(r19)
  80e018:	90c00044 	addi	r3,r18,1
  80e01c:	dac00015 	stw	r11,0(sp)
  80e020:	2ca5883a 	add	r18,r5,r18
  80e024:	180f883a 	mov	r7,r3
  80e028:	280d883a 	mov	r6,r5
  80e02c:	8809883a 	mov	r4,r17
  80e030:	92000005 	stb	r8,0(r18)
  80e034:	b00b883a 	mov	r5,r22
  80e038:	d8c05a15 	stw	r3,360(sp)
  80e03c:	08092840 	call	809284 <_mbrtowc_r>
  80e040:	013fffc4 	movi	r4,-1
  80e044:	d8c05a17 	ldw	r3,360(sp)
  80e048:	11000b26 	beq	r2,r4,80e078 <__ssvfiscanf_r+0x974>
  80e04c:	1001a026 	beq	r2,zero,80e6d0 <__ssvfiscanf_r+0xfcc>
  80e050:	017fff84 	movi	r5,-2
  80e054:	1825883a 	mov	r18,r3
  80e058:	1141e31e 	bne	r2,r5,80e7e8 <__ssvfiscanf_r+0x10e4>
  80e05c:	98800117 	ldw	r2,4(r19)
  80e060:	00bfda16 	blt	zero,r2,80dfcc <__alt_data_end+0xff80dfcc>
  80e064:	980b883a 	mov	r5,r19
  80e068:	8809883a 	mov	r4,r17
  80e06c:	080d5a00 	call	80d5a0 <__ssrefill_r>
  80e070:	103fd626 	beq	r2,zero,80dfcc <__alt_data_end+0xff80dfcc>
  80e074:	9001a826 	beq	r18,zero,80e718 <__ssvfiscanf_r+0x1014>
  80e078:	dac05117 	ldw	r11,324(sp)
  80e07c:	583e7d26 	beq	r11,zero,80da74 <__alt_data_end+0xff80da74>
  80e080:	9880030b 	ldhu	r2,12(r19)
  80e084:	1080100c 	andi	r2,r2,64
  80e088:	103e7a1e 	bne	r2,zero,80da74 <__alt_data_end+0xff80da74>
  80e08c:	5805883a 	mov	r2,r11
  80e090:	003e7906 	br	80da78 <__alt_data_end+0xff80da78>
  80e094:	a821883a 	mov	r16,r21
  80e098:	802b883a 	mov	r21,r16
  80e09c:	003fba06 	br	80df88 <__alt_data_end+0xff80df88>
  80e0a0:	b83f631e 	bne	r23,zero,80de30 <__alt_data_end+0xff80de30>
  80e0a4:	003f8706 	br	80dec4 <__alt_data_end+0xff80dec4>
  80e0a8:	dac04f17 	ldw	r11,316(sp)
  80e0ac:	5d800017 	ldw	r22,0(r11)
  80e0b0:	5ac00104 	addi	r11,r11,4
  80e0b4:	dac04f15 	stw	r11,316(sp)
  80e0b8:	003f5c06 	br	80de2c <__alt_data_end+0xff80de2c>
  80e0bc:	980b883a 	mov	r5,r19
  80e0c0:	8809883a 	mov	r4,r17
  80e0c4:	080d5a00 	call	80d5a0 <__ssrefill_r>
  80e0c8:	103eda26 	beq	r2,zero,80dc34 <__alt_data_end+0xff80dc34>
  80e0cc:	003fea06 	br	80e078 <__alt_data_end+0xff80e078>
  80e0d0:	00ffff84 	movi	r3,-2
  80e0d4:	10c0071e 	bne	r2,r3,80e0f4 <__ssvfiscanf_r+0x9f0>
  80e0d8:	98800117 	ldw	r2,4(r19)
  80e0dc:	9021883a 	mov	r16,r18
  80e0e0:	00bf5316 	blt	zero,r2,80de30 <__alt_data_end+0xff80de30>
  80e0e4:	003f7206 	br	80deb0 <__alt_data_end+0xff80deb0>
  80e0e8:	e4b9883a 	add	fp,fp,r18
  80e0ec:	bdffffc4 	addi	r23,r23,-1
  80e0f0:	003f6c06 	br	80dea4 <__alt_data_end+0xff80dea4>
  80e0f4:	dac05417 	ldw	r11,336(sp)
  80e0f8:	e4b9883a 	add	fp,fp,r18
  80e0fc:	bdffffc4 	addi	r23,r23,-1
  80e100:	583f6726 	beq	r11,zero,80dea0 <__alt_data_end+0xff80dea0>
  80e104:	003f6706 	br	80dea4 <__alt_data_end+0xff80dea4>
  80e108:	182d883a 	mov	r22,r3
  80e10c:	003f9706 	br	80df6c <__alt_data_end+0xff80df6c>
  80e110:	a83f9d1e 	bne	r21,zero,80df88 <__alt_data_end+0xff80df88>
  80e114:	003dbe06 	br	80d810 <__alt_data_end+0xff80d810>
  80e118:	803ede1e 	bne	r16,zero,80dc94 <__alt_data_end+0xff80dc94>
  80e11c:	003fd606 	br	80e078 <__alt_data_end+0xff80e078>
  80e120:	dac04f17 	ldw	r11,316(sp)
  80e124:	dcc00015 	stw	r19,0(sp)
  80e128:	b80f883a 	mov	r7,r23
  80e12c:	59400017 	ldw	r5,0(r11)
  80e130:	01800044 	movi	r6,1
  80e134:	8809883a 	mov	r4,r17
  80e138:	080d6100 	call	80d610 <_sfread_r>
  80e13c:	dac04f17 	ldw	r11,316(sp)
  80e140:	58c00104 	addi	r3,r11,4
  80e144:	103fcc26 	beq	r2,zero,80e078 <__alt_data_end+0xff80e078>
  80e148:	dac05117 	ldw	r11,324(sp)
  80e14c:	a825883a 	mov	r18,r21
  80e150:	e0b9883a 	add	fp,fp,r2
  80e154:	5ac00044 	addi	r11,r11,1
  80e158:	dac05115 	stw	r11,324(sp)
  80e15c:	d8c04f15 	stw	r3,316(sp)
  80e160:	900d883a 	mov	r6,r18
  80e164:	003da606 	br	80d800 <__alt_data_end+0xff80d800>
  80e168:	98800117 	ldw	r2,4(r19)
  80e16c:	80e0b03a 	or	r16,r16,r3
  80e170:	00be9916 	blt	zero,r2,80dbd8 <__alt_data_end+0xff80dbd8>
  80e174:	980b883a 	mov	r5,r19
  80e178:	8809883a 	mov	r4,r17
  80e17c:	080d5a00 	call	80d5a0 <__ssrefill_r>
  80e180:	103fbd1e 	bne	r2,zero,80e078 <__alt_data_end+0xff80e078>
  80e184:	a1c00017 	ldw	r7,0(r20)
  80e188:	003e9306 	br	80dbd8 <__alt_data_end+0xff80dbd8>
  80e18c:	980b883a 	mov	r5,r19
  80e190:	8809883a 	mov	r4,r17
  80e194:	080d5a00 	call	80d5a0 <__ssrefill_r>
  80e198:	103e2a26 	beq	r2,zero,80da44 <__alt_data_end+0xff80da44>
  80e19c:	003fb606 	br	80e078 <__alt_data_end+0xff80e078>
  80e1a0:	90800083 	ldbu	r2,2(r18)
  80e1a4:	84000094 	ori	r16,r16,2
  80e1a8:	94800084 	addi	r18,r18,2
  80e1ac:	10c03fcc 	andi	r3,r2,255
  80e1b0:	003da006 	br	80d834 <__alt_data_end+0xff80d834>
  80e1b4:	8080004c 	andi	r2,r16,1
  80e1b8:	10000b1e 	bne	r2,zero,80e1e8 <__ssvfiscanf_r+0xae4>
  80e1bc:	8400008c 	andi	r16,r16,2
  80e1c0:	80000926 	beq	r16,zero,80e1e8 <__ssvfiscanf_r+0xae4>
  80e1c4:	dac04f17 	ldw	r11,316(sp)
  80e1c8:	e007d7fa 	srai	r3,fp,31
  80e1cc:	a825883a 	mov	r18,r21
  80e1d0:	58800017 	ldw	r2,0(r11)
  80e1d4:	5ac00104 	addi	r11,r11,4
  80e1d8:	dac04f15 	stw	r11,316(sp)
  80e1dc:	17000015 	stw	fp,0(r2)
  80e1e0:	10c00115 	stw	r3,4(r2)
  80e1e4:	003d8506 	br	80d7fc <__alt_data_end+0xff80d7fc>
  80e1e8:	dac04f17 	ldw	r11,316(sp)
  80e1ec:	a825883a 	mov	r18,r21
  80e1f0:	58800017 	ldw	r2,0(r11)
  80e1f4:	5ac00104 	addi	r11,r11,4
  80e1f8:	dac04f15 	stw	r11,316(sp)
  80e1fc:	17000015 	stw	fp,0(r2)
  80e200:	003d7e06 	br	80d7fc <__alt_data_end+0xff80d7fc>
  80e204:	980b883a 	mov	r5,r19
  80e208:	8809883a 	mov	r4,r17
  80e20c:	080d5a00 	call	80d5a0 <__ssrefill_r>
  80e210:	103f991e 	bne	r2,zero,80e078 <__alt_data_end+0xff80e078>
  80e214:	a1c00017 	ldw	r7,0(r20)
  80e218:	05800084 	movi	r22,2
  80e21c:	003e2a06 	br	80dac8 <__alt_data_end+0xff80dac8>
  80e220:	980b883a 	mov	r5,r19
  80e224:	8809883a 	mov	r4,r17
  80e228:	080d5a00 	call	80d5a0 <__ssrefill_r>
  80e22c:	103ea326 	beq	r2,zero,80dcbc <__alt_data_end+0xff80dcbc>
  80e230:	003f9106 	br	80e078 <__alt_data_end+0xff80e078>
  80e234:	980b883a 	mov	r5,r19
  80e238:	8809883a 	mov	r4,r17
  80e23c:	080d5a00 	call	80d5a0 <__ssrefill_r>
  80e240:	103f8d1e 	bne	r2,zero,80e078 <__alt_data_end+0xff80e078>
  80e244:	a1c00017 	ldw	r7,0(r20)
  80e248:	003e1906 	br	80dab0 <__alt_data_end+0xff80dab0>
  80e24c:	980b883a 	mov	r5,r19
  80e250:	8809883a 	mov	r4,r17
  80e254:	080d5a00 	call	80d5a0 <__ssrefill_r>
  80e258:	103f871e 	bne	r2,zero,80e078 <__alt_data_end+0xff80e078>
  80e25c:	a1c00017 	ldw	r7,0(r20)
  80e260:	003ee106 	br	80dde8 <__alt_data_end+0xff80dde8>
  80e264:	014000c4 	movi	r5,3
  80e268:	b140ac1e 	bne	r22,r5,80e51c <__ssvfiscanf_r+0xe18>
  80e26c:	b8ffffc4 	addi	r3,r23,-1
  80e270:	01400984 	movi	r5,38
  80e274:	28c0d62e 	bgeu	r5,r3,80e5d0 <__ssvfiscanf_r+0xecc>
  80e278:	b9bff644 	addi	r6,r23,-39
  80e27c:	05c009c4 	movi	r23,39
  80e280:	85836014 	ori	r22,r16,3456
  80e284:	0021883a 	mov	r16,zero
  80e288:	a815883a 	mov	r10,r21
  80e28c:	802b883a 	mov	r21,r16
  80e290:	dc005017 	ldw	r16,320(sp)
  80e294:	dc804104 	addi	r18,sp,260
  80e298:	02401344 	movi	r9,77
  80e29c:	01c08004 	movi	r7,512
  80e2a0:	00ff7fc4 	movi	r3,-513
  80e2a4:	023fdfc4 	movi	r8,-129
  80e2a8:	217ff544 	addi	r5,r4,-43
  80e2ac:	29403fcc 	andi	r5,r5,255
  80e2b0:	49408836 	bltu	r9,r5,80e4d4 <__ssvfiscanf_r+0xdd0>
  80e2b4:	280a90ba 	slli	r5,r5,2
  80e2b8:	02c02074 	movhi	r11,129
  80e2bc:	5af8b304 	addi	r11,r11,-7476
  80e2c0:	2acb883a 	add	r5,r5,r11
  80e2c4:	29400017 	ldw	r5,0(r5)
  80e2c8:	2800683a 	jmp	r5
  80e2cc:	0080e460 	cmpeqi	r2,zero,913
  80e2d0:	0080e4d4 	movui	r2,915
  80e2d4:	0080e460 	cmpeqi	r2,zero,913
  80e2d8:	0080e4d4 	movui	r2,915
  80e2dc:	0080e4d4 	movui	r2,915
  80e2e0:	0080e490 	cmplti	r2,zero,914
  80e2e4:	0080e470 	cmpltui	r2,zero,913
  80e2e8:	0080e470 	cmpltui	r2,zero,913
  80e2ec:	0080e470 	cmpltui	r2,zero,913
  80e2f0:	0080e470 	cmpltui	r2,zero,913
  80e2f4:	0080e470 	cmpltui	r2,zero,913
  80e2f8:	0080e470 	cmpltui	r2,zero,913
  80e2fc:	0080e470 	cmpltui	r2,zero,913
  80e300:	0080e4b8 	rdprs	r2,zero,914
  80e304:	0080e4b8 	rdprs	r2,zero,914
  80e308:	0080e4d4 	movui	r2,915
  80e30c:	0080e4d4 	movui	r2,915
  80e310:	0080e4d4 	movui	r2,915
  80e314:	0080e4d4 	movui	r2,915
  80e318:	0080e4d4 	movui	r2,915
  80e31c:	0080e4d4 	movui	r2,915
  80e320:	0080e4d4 	movui	r2,915
  80e324:	0080e44c 	andi	r2,zero,913
  80e328:	0080e44c 	andi	r2,zero,913
  80e32c:	0080e44c 	andi	r2,zero,913
  80e330:	0080e44c 	andi	r2,zero,913
  80e334:	0080e44c 	andi	r2,zero,913
  80e338:	0080e44c 	andi	r2,zero,913
  80e33c:	0080e4d4 	movui	r2,915
  80e340:	0080e4d4 	movui	r2,915
  80e344:	0080e4d4 	movui	r2,915
  80e348:	0080e4d4 	movui	r2,915
  80e34c:	0080e4d4 	movui	r2,915
  80e350:	0080e4d4 	movui	r2,915
  80e354:	0080e4d4 	movui	r2,915
  80e358:	0080e4d4 	movui	r2,915
  80e35c:	0080e4d4 	movui	r2,915
  80e360:	0080e4d4 	movui	r2,915
  80e364:	0080e4d4 	movui	r2,915
  80e368:	0080e4d4 	movui	r2,915
  80e36c:	0080e4d4 	movui	r2,915
  80e370:	0080e4d4 	movui	r2,915
  80e374:	0080e4d4 	movui	r2,915
  80e378:	0080e4d4 	movui	r2,915
  80e37c:	0080e4d4 	movui	r2,915
  80e380:	0080e404 	movi	r2,912
  80e384:	0080e4d4 	movui	r2,915
  80e388:	0080e4d4 	movui	r2,915
  80e38c:	0080e4d4 	movui	r2,915
  80e390:	0080e4d4 	movui	r2,915
  80e394:	0080e4d4 	movui	r2,915
  80e398:	0080e4d4 	movui	r2,915
  80e39c:	0080e4d4 	movui	r2,915
  80e3a0:	0080e4d4 	movui	r2,915
  80e3a4:	0080e44c 	andi	r2,zero,913
  80e3a8:	0080e44c 	andi	r2,zero,913
  80e3ac:	0080e44c 	andi	r2,zero,913
  80e3b0:	0080e44c 	andi	r2,zero,913
  80e3b4:	0080e44c 	andi	r2,zero,913
  80e3b8:	0080e44c 	andi	r2,zero,913
  80e3bc:	0080e4d4 	movui	r2,915
  80e3c0:	0080e4d4 	movui	r2,915
  80e3c4:	0080e4d4 	movui	r2,915
  80e3c8:	0080e4d4 	movui	r2,915
  80e3cc:	0080e4d4 	movui	r2,915
  80e3d0:	0080e4d4 	movui	r2,915
  80e3d4:	0080e4d4 	movui	r2,915
  80e3d8:	0080e4d4 	movui	r2,915
  80e3dc:	0080e4d4 	movui	r2,915
  80e3e0:	0080e4d4 	movui	r2,915
  80e3e4:	0080e4d4 	movui	r2,915
  80e3e8:	0080e4d4 	movui	r2,915
  80e3ec:	0080e4d4 	movui	r2,915
  80e3f0:	0080e4d4 	movui	r2,915
  80e3f4:	0080e4d4 	movui	r2,915
  80e3f8:	0080e4d4 	movui	r2,915
  80e3fc:	0080e4d4 	movui	r2,915
  80e400:	0080e404 	movi	r2,912
  80e404:	b141800c 	andi	r5,r22,1536
  80e408:	29c0321e 	bne	r5,r7,80e4d4 <__ssvfiscanf_r+0xdd0>
  80e40c:	b0ec703a 	and	r22,r22,r3
  80e410:	b5814014 	ori	r22,r22,1280
  80e414:	04000404 	movi	r16,16
  80e418:	91000005 	stb	r4,0(r18)
  80e41c:	94800044 	addi	r18,r18,1
  80e420:	99000117 	ldw	r4,4(r19)
  80e424:	213fffc4 	addi	r4,r4,-1
  80e428:	99000115 	stw	r4,4(r19)
  80e42c:	0100570e 	bge	zero,r4,80e58c <__ssvfiscanf_r+0xe88>
  80e430:	10800044 	addi	r2,r2,1
  80e434:	98800015 	stw	r2,0(r19)
  80e438:	bdffffc4 	addi	r23,r23,-1
  80e43c:	b8002526 	beq	r23,zero,80e4d4 <__ssvfiscanf_r+0xdd0>
  80e440:	98800017 	ldw	r2,0(r19)
  80e444:	11000003 	ldbu	r4,0(r2)
  80e448:	003f9706 	br	80e2a8 <__alt_data_end+0xff80e2a8>
  80e44c:	01400284 	movi	r5,10
  80e450:	2c00200e 	bge	r5,r16,80e4d4 <__ssvfiscanf_r+0xdd0>
  80e454:	017d1fc4 	movi	r5,-2945
  80e458:	b16c703a 	and	r22,r22,r5
  80e45c:	003fee06 	br	80e418 <__alt_data_end+0xff80e418>
  80e460:	b140200c 	andi	r5,r22,128
  80e464:	28001b26 	beq	r5,zero,80e4d4 <__ssvfiscanf_r+0xdd0>
  80e468:	b22c703a 	and	r22,r22,r8
  80e46c:	003fea06 	br	80e418 <__alt_data_end+0xff80e418>
  80e470:	02c020b4 	movhi	r11,130
  80e474:	8421883a 	add	r16,r16,r16
  80e478:	5af28504 	addi	r11,r11,-13804
  80e47c:	5c0b883a 	add	r5,r11,r16
  80e480:	2c00000f 	ldh	r16,0(r5)
  80e484:	017d1fc4 	movi	r5,-2945
  80e488:	b16c703a 	and	r22,r22,r5
  80e48c:	003fe206 	br	80e418 <__alt_data_end+0xff80e418>
  80e490:	b142000c 	andi	r5,r22,2048
  80e494:	283fe026 	beq	r5,zero,80e418 <__alt_data_end+0xff80e418>
  80e498:	8000021e 	bne	r16,zero,80e4a4 <__ssvfiscanf_r+0xda0>
  80e49c:	b5808014 	ori	r22,r22,512
  80e4a0:	04000204 	movi	r16,8
  80e4a4:	b141000c 	andi	r5,r22,1024
  80e4a8:	28009e26 	beq	r5,zero,80e724 <__ssvfiscanf_r+0x1020>
  80e4ac:	017e9fc4 	movi	r5,-1409
  80e4b0:	b16c703a 	and	r22,r22,r5
  80e4b4:	003fd806 	br	80e418 <__alt_data_end+0xff80e418>
  80e4b8:	02c020b4 	movhi	r11,130
  80e4bc:	8421883a 	add	r16,r16,r16
  80e4c0:	5af28504 	addi	r11,r11,-13804
  80e4c4:	5c0b883a 	add	r5,r11,r16
  80e4c8:	2c00000f 	ldh	r16,0(r5)
  80e4cc:	01400204 	movi	r5,8
  80e4d0:	2c3fe016 	blt	r5,r16,80e454 <__alt_data_end+0xff80e454>
  80e4d4:	dc005015 	stw	r16,320(sp)
  80e4d8:	b080400c 	andi	r2,r22,256
  80e4dc:	a821883a 	mov	r16,r21
  80e4e0:	502b883a 	mov	r21,r10
  80e4e4:	10000426 	beq	r2,zero,80e4f8 <__ssvfiscanf_r+0xdf4>
  80e4e8:	dac04e17 	ldw	r11,312(sp)
  80e4ec:	5c809c36 	bltu	r11,r18,80e760 <__ssvfiscanf_r+0x105c>
  80e4f0:	dac04e17 	ldw	r11,312(sp)
  80e4f4:	92fcc626 	beq	r18,r11,80d810 <__alt_data_end+0xff80d810>
  80e4f8:	b080040c 	andi	r2,r22,16
  80e4fc:	10006026 	beq	r2,zero,80e680 <__ssvfiscanf_r+0xf7c>
  80e500:	dac04e17 	ldw	r11,312(sp)
  80e504:	92e5c83a 	sub	r18,r18,r11
  80e508:	9425883a 	add	r18,r18,r16
  80e50c:	e4b9883a 	add	fp,fp,r18
  80e510:	a825883a 	mov	r18,r21
  80e514:	900d883a 	mov	r6,r18
  80e518:	003cb906 	br	80d800 <__alt_data_end+0xff80d800>
  80e51c:	b800011e 	bne	r23,zero,80e524 <__ssvfiscanf_r+0xe20>
  80e520:	05ffffc4 	movi	r23,-1
  80e524:	8100004c 	andi	r4,r16,1
  80e528:	203e9a1e 	bne	r4,zero,80df94 <__alt_data_end+0xff80df94>
  80e52c:	8400040c 	andi	r16,r16,16
  80e530:	80002926 	beq	r16,zero,80e5d8 <__ssvfiscanf_r+0xed4>
  80e534:	0021883a 	mov	r16,zero
  80e538:	00000306 	br	80e548 <__ssvfiscanf_r+0xe44>
  80e53c:	10c00003 	ldbu	r3,0(r2)
  80e540:	38c7883a 	add	r3,r7,r3
  80e544:	18c00043 	ldbu	r3,1(r3)
  80e548:	18c0020c 	andi	r3,r3,8
  80e54c:	183dd11e 	bne	r3,zero,80dc94 <__alt_data_end+0xff80dc94>
  80e550:	98c00117 	ldw	r3,4(r19)
  80e554:	10800044 	addi	r2,r2,1
  80e558:	84000044 	addi	r16,r16,1
  80e55c:	18ffffc4 	addi	r3,r3,-1
  80e560:	98c00115 	stw	r3,4(r19)
  80e564:	98800015 	stw	r2,0(r19)
  80e568:	85fdca26 	beq	r16,r23,80dc94 <__alt_data_end+0xff80dc94>
  80e56c:	00fff316 	blt	zero,r3,80e53c <__alt_data_end+0xff80e53c>
  80e570:	980b883a 	mov	r5,r19
  80e574:	8809883a 	mov	r4,r17
  80e578:	080d5a00 	call	80d5a0 <__ssrefill_r>
  80e57c:	103dc51e 	bne	r2,zero,80dc94 <__alt_data_end+0xff80dc94>
  80e580:	a1c00017 	ldw	r7,0(r20)
  80e584:	98800017 	ldw	r2,0(r19)
  80e588:	003fec06 	br	80e53c <__alt_data_end+0xff80e53c>
  80e58c:	980b883a 	mov	r5,r19
  80e590:	8809883a 	mov	r4,r17
  80e594:	d8c05a15 	stw	r3,360(sp)
  80e598:	d9805815 	stw	r6,352(sp)
  80e59c:	d9c05615 	stw	r7,344(sp)
  80e5a0:	da005715 	stw	r8,348(sp)
  80e5a4:	da405515 	stw	r9,340(sp)
  80e5a8:	da805915 	stw	r10,356(sp)
  80e5ac:	080d5a00 	call	80d5a0 <__ssrefill_r>
  80e5b0:	d8c05a17 	ldw	r3,360(sp)
  80e5b4:	d9805817 	ldw	r6,352(sp)
  80e5b8:	d9c05617 	ldw	r7,344(sp)
  80e5bc:	da005717 	ldw	r8,348(sp)
  80e5c0:	da405517 	ldw	r9,340(sp)
  80e5c4:	da805917 	ldw	r10,356(sp)
  80e5c8:	103f9b26 	beq	r2,zero,80e438 <__alt_data_end+0xff80e438>
  80e5cc:	003fc106 	br	80e4d4 <__alt_data_end+0xff80e4d4>
  80e5d0:	000d883a 	mov	r6,zero
  80e5d4:	003f2a06 	br	80e280 <__alt_data_end+0xff80e280>
  80e5d8:	dac04f17 	ldw	r11,316(sp)
  80e5dc:	babfffc4 	addi	r10,r23,-1
  80e5e0:	5c800017 	ldw	r18,0(r11)
  80e5e4:	5c000104 	addi	r16,r11,4
  80e5e8:	900b883a 	mov	r5,r18
  80e5ec:	92ad883a 	add	r22,r18,r10
  80e5f0:	00000606 	br	80e60c <__ssvfiscanf_r+0xf08>
  80e5f4:	98800017 	ldw	r2,0(r19)
  80e5f8:	a1000017 	ldw	r4,0(r20)
  80e5fc:	b80b883a 	mov	r5,r23
  80e600:	10c00003 	ldbu	r3,0(r2)
  80e604:	20c7883a 	add	r3,r4,r3
  80e608:	18c00043 	ldbu	r3,1(r3)
  80e60c:	18c0020c 	andi	r3,r3,8
  80e610:	2809883a 	mov	r4,r5
  80e614:	1800101e 	bne	r3,zero,80e658 <__ssvfiscanf_r+0xf54>
  80e618:	98c00117 	ldw	r3,4(r19)
  80e61c:	11800044 	addi	r6,r2,1
  80e620:	99800015 	stw	r6,0(r19)
  80e624:	18ffffc4 	addi	r3,r3,-1
  80e628:	98c00115 	stw	r3,4(r19)
  80e62c:	10800003 	ldbu	r2,0(r2)
  80e630:	25c00044 	addi	r23,r4,1
  80e634:	28800005 	stb	r2,0(r5)
  80e638:	25800626 	beq	r4,r22,80e654 <__ssvfiscanf_r+0xf50>
  80e63c:	98800117 	ldw	r2,4(r19)
  80e640:	00bfec16 	blt	zero,r2,80e5f4 <__alt_data_end+0xff80e5f4>
  80e644:	980b883a 	mov	r5,r19
  80e648:	8809883a 	mov	r4,r17
  80e64c:	080d5a00 	call	80d5a0 <__ssrefill_r>
  80e650:	103fe826 	beq	r2,zero,80e5f4 <__alt_data_end+0xff80e5f4>
  80e654:	b809883a 	mov	r4,r23
  80e658:	dac05117 	ldw	r11,324(sp)
  80e65c:	24a5c83a 	sub	r18,r4,r18
  80e660:	e4b9883a 	add	fp,fp,r18
  80e664:	5ac00044 	addi	r11,r11,1
  80e668:	a825883a 	mov	r18,r21
  80e66c:	20000005 	stb	zero,0(r4)
  80e670:	dac05115 	stw	r11,324(sp)
  80e674:	dc004f15 	stw	r16,316(sp)
  80e678:	900d883a 	mov	r6,r18
  80e67c:	003c6006 	br	80d800 <__alt_data_end+0xff80d800>
  80e680:	d9c05017 	ldw	r7,320(sp)
  80e684:	dac05217 	ldw	r11,328(sp)
  80e688:	000d883a 	mov	r6,zero
  80e68c:	d9404104 	addi	r5,sp,260
  80e690:	8809883a 	mov	r4,r17
  80e694:	90000005 	stb	zero,0(r18)
  80e698:	583ee83a 	callr	r11
  80e69c:	b0c0080c 	andi	r3,r22,32
  80e6a0:	1800271e 	bne	r3,zero,80e740 <__ssvfiscanf_r+0x103c>
  80e6a4:	b0c0010c 	andi	r3,r22,4
  80e6a8:	18003326 	beq	r3,zero,80e778 <__ssvfiscanf_r+0x1074>
  80e6ac:	dac04f17 	ldw	r11,316(sp)
  80e6b0:	58c00017 	ldw	r3,0(r11)
  80e6b4:	5ac00104 	addi	r11,r11,4
  80e6b8:	dac04f15 	stw	r11,316(sp)
  80e6bc:	1880000d 	sth	r2,0(r3)
  80e6c0:	dac05117 	ldw	r11,324(sp)
  80e6c4:	5ac00044 	addi	r11,r11,1
  80e6c8:	dac05115 	stw	r11,324(sp)
  80e6cc:	003f8c06 	br	80e500 <__alt_data_end+0xff80e500>
  80e6d0:	b0000015 	stw	zero,0(r22)
  80e6d4:	0009883a 	mov	r4,zero
  80e6d8:	d8c05a15 	stw	r3,360(sp)
  80e6dc:	08091180 	call	809118 <iswspace>
  80e6e0:	d8c05a17 	ldw	r3,360(sp)
  80e6e4:	10003826 	beq	r2,zero,80e7c8 <__ssvfiscanf_r+0x10c4>
  80e6e8:	18000b26 	beq	r3,zero,80e718 <__ssvfiscanf_r+0x1014>
  80e6ec:	1cbfffc4 	addi	r18,r3,-1
  80e6f0:	d9804104 	addi	r6,sp,260
  80e6f4:	34af883a 	add	r23,r6,r18
  80e6f8:	00000106 	br	80e700 <__ssvfiscanf_r+0xffc>
  80e6fc:	94bfffc4 	addi	r18,r18,-1
  80e700:	b9400003 	ldbu	r5,0(r23)
  80e704:	980d883a 	mov	r6,r19
  80e708:	8809883a 	mov	r4,r17
  80e70c:	080d4980 	call	80d498 <_sungetc_r>
  80e710:	bdffffc4 	addi	r23,r23,-1
  80e714:	903ff91e 	bne	r18,zero,80e6fc <__alt_data_end+0xff80e6fc>
  80e718:	803def1e 	bne	r16,zero,80ded8 <__alt_data_end+0xff80ded8>
  80e71c:	b0000015 	stw	zero,0(r22)
  80e720:	003dea06 	br	80decc <__alt_data_end+0xff80decc>
  80e724:	013f1fc4 	movi	r4,-897
  80e728:	b12c703a 	and	r22,r22,r4
  80e72c:	30000226 	beq	r6,zero,80e738 <__ssvfiscanf_r+0x1034>
  80e730:	31bfffc4 	addi	r6,r6,-1
  80e734:	bdc00044 	addi	r23,r23,1
  80e738:	ad400044 	addi	r21,r21,1
  80e73c:	003f3806 	br	80e420 <__alt_data_end+0xff80e420>
  80e740:	dac04f17 	ldw	r11,316(sp)
  80e744:	58c00017 	ldw	r3,0(r11)
  80e748:	5ac00104 	addi	r11,r11,4
  80e74c:	dac04f15 	stw	r11,316(sp)
  80e750:	18800015 	stw	r2,0(r3)
  80e754:	003fda06 	br	80e6c0 <__alt_data_end+0xff80e6c0>
  80e758:	dd804d04 	addi	r22,sp,308
  80e75c:	003e1906 	br	80dfc4 <__alt_data_end+0xff80dfc4>
  80e760:	917fffc7 	ldb	r5,-1(r18)
  80e764:	980d883a 	mov	r6,r19
  80e768:	8809883a 	mov	r4,r17
  80e76c:	94bfffc4 	addi	r18,r18,-1
  80e770:	080d4980 	call	80d498 <_sungetc_r>
  80e774:	003f5e06 	br	80e4f0 <__alt_data_end+0xff80e4f0>
  80e778:	b0c0004c 	andi	r3,r22,1
  80e77c:	183ff01e 	bne	r3,zero,80e740 <__alt_data_end+0xff80e740>
  80e780:	b580008c 	andi	r22,r22,2
  80e784:	b03fee26 	beq	r22,zero,80e740 <__alt_data_end+0xff80e740>
  80e788:	dac05217 	ldw	r11,328(sp)
  80e78c:	00802074 	movhi	r2,129
  80e790:	10b3c404 	addi	r2,r2,-12528
  80e794:	d9c05017 	ldw	r7,320(sp)
  80e798:	000d883a 	mov	r6,zero
  80e79c:	d9404104 	addi	r5,sp,260
  80e7a0:	8809883a 	mov	r4,r17
  80e7a4:	58801226 	beq	r11,r2,80e7f0 <__ssvfiscanf_r+0x10ec>
  80e7a8:	080cc0c0 	call	80cc0c <_strtoll_r>
  80e7ac:	dac04f17 	ldw	r11,316(sp)
  80e7b0:	59000017 	ldw	r4,0(r11)
  80e7b4:	5ac00104 	addi	r11,r11,4
  80e7b8:	dac04f15 	stw	r11,316(sp)
  80e7bc:	20800015 	stw	r2,0(r4)
  80e7c0:	20c00115 	stw	r3,4(r4)
  80e7c4:	003fbe06 	br	80e6c0 <__alt_data_end+0xff80e6c0>
  80e7c8:	e0f9883a 	add	fp,fp,r3
  80e7cc:	bdffffc4 	addi	r23,r23,-1
  80e7d0:	8000031e 	bne	r16,zero,80e7e0 <__ssvfiscanf_r+0x10dc>
  80e7d4:	b5800104 	addi	r22,r22,4
  80e7d8:	0025883a 	mov	r18,zero
  80e7dc:	003e1f06 	br	80e05c <__alt_data_end+0xff80e05c>
  80e7e0:	0025883a 	mov	r18,zero
  80e7e4:	003e1d06 	br	80e05c <__alt_data_end+0xff80e05c>
  80e7e8:	b1000017 	ldw	r4,0(r22)
  80e7ec:	003fba06 	br	80e6d8 <__alt_data_end+0xff80e6d8>
  80e7f0:	080d1780 	call	80d178 <_strtoull_r>
  80e7f4:	003fed06 	br	80e7ac <__alt_data_end+0xff80e7ac>

0080e7f8 <___svfprintf_internal_r>:
  80e7f8:	deffb704 	addi	sp,sp,-292
  80e7fc:	dfc04815 	stw	ra,288(sp)
  80e800:	ddc04615 	stw	r23,280(sp)
  80e804:	d9402c15 	stw	r5,176(sp)
  80e808:	d9003915 	stw	r4,228(sp)
  80e80c:	302f883a 	mov	r23,r6
  80e810:	d9c02d15 	stw	r7,180(sp)
  80e814:	df004715 	stw	fp,284(sp)
  80e818:	dd804515 	stw	r22,276(sp)
  80e81c:	dd404415 	stw	r21,272(sp)
  80e820:	dd004315 	stw	r20,268(sp)
  80e824:	dcc04215 	stw	r19,264(sp)
  80e828:	dc804115 	stw	r18,260(sp)
  80e82c:	dc404015 	stw	r17,256(sp)
  80e830:	dc003f15 	stw	r16,252(sp)
  80e834:	08091f40 	call	8091f4 <_localeconv_r>
  80e838:	10800017 	ldw	r2,0(r2)
  80e83c:	1009883a 	mov	r4,r2
  80e840:	d8803415 	stw	r2,208(sp)
  80e844:	08035a80 	call	8035a8 <strlen>
  80e848:	d8c02c17 	ldw	r3,176(sp)
  80e84c:	d8803815 	stw	r2,224(sp)
  80e850:	1880030b 	ldhu	r2,12(r3)
  80e854:	1080200c 	andi	r2,r2,128
  80e858:	10000226 	beq	r2,zero,80e864 <___svfprintf_internal_r+0x6c>
  80e85c:	18800417 	ldw	r2,16(r3)
  80e860:	10067f26 	beq	r2,zero,810260 <___svfprintf_internal_r+0x1a68>
  80e864:	dcc03917 	ldw	r19,228(sp)
  80e868:	d8c00404 	addi	r3,sp,16
  80e86c:	054020b4 	movhi	r21,130
  80e870:	d9001e04 	addi	r4,sp,120
  80e874:	ad728d84 	addi	r21,r21,-13770
  80e878:	d8c01e15 	stw	r3,120(sp)
  80e87c:	d8002015 	stw	zero,128(sp)
  80e880:	d8001f15 	stw	zero,124(sp)
  80e884:	d8003315 	stw	zero,204(sp)
  80e888:	d8003615 	stw	zero,216(sp)
  80e88c:	d8003715 	stw	zero,220(sp)
  80e890:	1811883a 	mov	r8,r3
  80e894:	d8003a15 	stw	zero,232(sp)
  80e898:	d8003b15 	stw	zero,236(sp)
  80e89c:	d8002f15 	stw	zero,188(sp)
  80e8a0:	d9002815 	stw	r4,160(sp)
  80e8a4:	b8800007 	ldb	r2,0(r23)
  80e8a8:	10026726 	beq	r2,zero,80f248 <___svfprintf_internal_r+0xa50>
  80e8ac:	00c00944 	movi	r3,37
  80e8b0:	b821883a 	mov	r16,r23
  80e8b4:	10c0021e 	bne	r2,r3,80e8c0 <___svfprintf_internal_r+0xc8>
  80e8b8:	00001406 	br	80e90c <___svfprintf_internal_r+0x114>
  80e8bc:	10c00326 	beq	r2,r3,80e8cc <___svfprintf_internal_r+0xd4>
  80e8c0:	84000044 	addi	r16,r16,1
  80e8c4:	80800007 	ldb	r2,0(r16)
  80e8c8:	103ffc1e 	bne	r2,zero,80e8bc <__alt_data_end+0xff80e8bc>
  80e8cc:	85e3c83a 	sub	r17,r16,r23
  80e8d0:	88000e26 	beq	r17,zero,80e90c <___svfprintf_internal_r+0x114>
  80e8d4:	d8c02017 	ldw	r3,128(sp)
  80e8d8:	d8801f17 	ldw	r2,124(sp)
  80e8dc:	45c00015 	stw	r23,0(r8)
  80e8e0:	1c47883a 	add	r3,r3,r17
  80e8e4:	10800044 	addi	r2,r2,1
  80e8e8:	d8c02015 	stw	r3,128(sp)
  80e8ec:	44400115 	stw	r17,4(r8)
  80e8f0:	d8801f15 	stw	r2,124(sp)
  80e8f4:	00c001c4 	movi	r3,7
  80e8f8:	18809716 	blt	r3,r2,80eb58 <___svfprintf_internal_r+0x360>
  80e8fc:	42000204 	addi	r8,r8,8
  80e900:	d9402f17 	ldw	r5,188(sp)
  80e904:	2c4b883a 	add	r5,r5,r17
  80e908:	d9402f15 	stw	r5,188(sp)
  80e90c:	80800007 	ldb	r2,0(r16)
  80e910:	10009826 	beq	r2,zero,80eb74 <___svfprintf_internal_r+0x37c>
  80e914:	84400047 	ldb	r17,1(r16)
  80e918:	00bfffc4 	movi	r2,-1
  80e91c:	85c00044 	addi	r23,r16,1
  80e920:	d8002785 	stb	zero,158(sp)
  80e924:	0007883a 	mov	r3,zero
  80e928:	000f883a 	mov	r7,zero
  80e92c:	d8802915 	stw	r2,164(sp)
  80e930:	d8003115 	stw	zero,196(sp)
  80e934:	0025883a 	mov	r18,zero
  80e938:	01401604 	movi	r5,88
  80e93c:	01800244 	movi	r6,9
  80e940:	02800a84 	movi	r10,42
  80e944:	02401b04 	movi	r9,108
  80e948:	bdc00044 	addi	r23,r23,1
  80e94c:	88bff804 	addi	r2,r17,-32
  80e950:	2882f036 	bltu	r5,r2,80f514 <___svfprintf_internal_r+0xd1c>
  80e954:	100490ba 	slli	r2,r2,2
  80e958:	01002074 	movhi	r4,129
  80e95c:	213a5b04 	addi	r4,r4,-5780
  80e960:	1105883a 	add	r2,r2,r4
  80e964:	10800017 	ldw	r2,0(r2)
  80e968:	1000683a 	jmp	r2
  80e96c:	0080f47c 	xorhi	r2,zero,977
  80e970:	0080f514 	movui	r2,980
  80e974:	0080f514 	movui	r2,980
  80e978:	0080f470 	cmpltui	r2,zero,977
  80e97c:	0080f514 	movui	r2,980
  80e980:	0080f514 	movui	r2,980
  80e984:	0080f514 	movui	r2,980
  80e988:	0080f514 	movui	r2,980
  80e98c:	0080f514 	movui	r2,980
  80e990:	0080f514 	movui	r2,980
  80e994:	0080ebd0 	cmplti	r2,zero,943
  80e998:	0080f3ac 	andhi	r2,zero,974
  80e99c:	0080f514 	movui	r2,980
  80e9a0:	0080eae0 	cmpeqi	r2,zero,939
  80e9a4:	0080ebf8 	rdprs	r2,zero,943
  80e9a8:	0080f514 	movui	r2,980
  80e9ac:	0080ec6c 	andhi	r2,zero,945
  80e9b0:	0080ec38 	rdprs	r2,zero,944
  80e9b4:	0080ec38 	rdprs	r2,zero,944
  80e9b8:	0080ec38 	rdprs	r2,zero,944
  80e9bc:	0080ec38 	rdprs	r2,zero,944
  80e9c0:	0080ec38 	rdprs	r2,zero,944
  80e9c4:	0080ec38 	rdprs	r2,zero,944
  80e9c8:	0080ec38 	rdprs	r2,zero,944
  80e9cc:	0080ec38 	rdprs	r2,zero,944
  80e9d0:	0080ec38 	rdprs	r2,zero,944
  80e9d4:	0080f514 	movui	r2,980
  80e9d8:	0080f514 	movui	r2,980
  80e9dc:	0080f514 	movui	r2,980
  80e9e0:	0080f514 	movui	r2,980
  80e9e4:	0080f514 	movui	r2,980
  80e9e8:	0080f514 	movui	r2,980
  80e9ec:	0080f514 	movui	r2,980
  80e9f0:	0080f514 	movui	r2,980
  80e9f4:	0080f514 	movui	r2,980
  80e9f8:	0080f514 	movui	r2,980
  80e9fc:	0080ed24 	muli	r2,zero,948
  80ea00:	0080ec78 	rdprs	r2,zero,945
  80ea04:	0080f514 	movui	r2,980
  80ea08:	0080ec78 	rdprs	r2,zero,945
  80ea0c:	0080f514 	movui	r2,980
  80ea10:	0080f514 	movui	r2,980
  80ea14:	0080f514 	movui	r2,980
  80ea18:	0080f514 	movui	r2,980
  80ea1c:	0080ed18 	cmpnei	r2,zero,948
  80ea20:	0080f514 	movui	r2,980
  80ea24:	0080f514 	movui	r2,980
  80ea28:	0080ede0 	cmpeqi	r2,zero,951
  80ea2c:	0080f514 	movui	r2,980
  80ea30:	0080f514 	movui	r2,980
  80ea34:	0080f514 	movui	r2,980
  80ea38:	0080f514 	movui	r2,980
  80ea3c:	0080f514 	movui	r2,980
  80ea40:	0080f250 	cmplti	r2,zero,969
  80ea44:	0080f514 	movui	r2,980
  80ea48:	0080f514 	movui	r2,980
  80ea4c:	0080f2b0 	cmpltui	r2,zero,970
  80ea50:	0080f514 	movui	r2,980
  80ea54:	0080f514 	movui	r2,980
  80ea58:	0080f514 	movui	r2,980
  80ea5c:	0080f514 	movui	r2,980
  80ea60:	0080f514 	movui	r2,980
  80ea64:	0080f514 	movui	r2,980
  80ea68:	0080f514 	movui	r2,980
  80ea6c:	0080f514 	movui	r2,980
  80ea70:	0080f514 	movui	r2,980
  80ea74:	0080f514 	movui	r2,980
  80ea78:	0080f360 	cmpeqi	r2,zero,973
  80ea7c:	0080f49c 	xori	r2,zero,978
  80ea80:	0080ec78 	rdprs	r2,zero,945
  80ea84:	0080ec78 	rdprs	r2,zero,945
  80ea88:	0080ec78 	rdprs	r2,zero,945
  80ea8c:	0080f4f0 	cmpltui	r2,zero,979
  80ea90:	0080f49c 	xori	r2,zero,978
  80ea94:	0080f514 	movui	r2,980
  80ea98:	0080f514 	movui	r2,980
  80ea9c:	0080f4ac 	andhi	r2,zero,978
  80eaa0:	0080f514 	movui	r2,980
  80eaa4:	0080f4bc 	xorhi	r2,zero,978
  80eaa8:	0080f39c 	xori	r2,zero,974
  80eaac:	0080eaec 	andhi	r2,zero,939
  80eab0:	0080f3bc 	xorhi	r2,zero,974
  80eab4:	0080f514 	movui	r2,980
  80eab8:	0080f3c8 	cmpgei	r2,zero,975
  80eabc:	0080f514 	movui	r2,980
  80eac0:	0080f424 	muli	r2,zero,976
  80eac4:	0080f514 	movui	r2,980
  80eac8:	0080f514 	movui	r2,980
  80eacc:	0080f434 	movhi	r2,976
  80ead0:	d9003117 	ldw	r4,196(sp)
  80ead4:	d8802d15 	stw	r2,180(sp)
  80ead8:	0109c83a 	sub	r4,zero,r4
  80eadc:	d9003115 	stw	r4,196(sp)
  80eae0:	94800114 	ori	r18,r18,4
  80eae4:	bc400007 	ldb	r17,0(r23)
  80eae8:	003f9706 	br	80e948 <__alt_data_end+0xff80e948>
  80eaec:	00800c04 	movi	r2,48
  80eaf0:	d9002d17 	ldw	r4,180(sp)
  80eaf4:	d9402917 	ldw	r5,164(sp)
  80eaf8:	d8802705 	stb	r2,156(sp)
  80eafc:	00801e04 	movi	r2,120
  80eb00:	d8802745 	stb	r2,157(sp)
  80eb04:	d8002785 	stb	zero,158(sp)
  80eb08:	20c00104 	addi	r3,r4,4
  80eb0c:	25000017 	ldw	r20,0(r4)
  80eb10:	002d883a 	mov	r22,zero
  80eb14:	90800094 	ori	r2,r18,2
  80eb18:	28028616 	blt	r5,zero,80f534 <___svfprintf_internal_r+0xd3c>
  80eb1c:	00bfdfc4 	movi	r2,-129
  80eb20:	90a4703a 	and	r18,r18,r2
  80eb24:	d8c02d15 	stw	r3,180(sp)
  80eb28:	94800094 	ori	r18,r18,2
  80eb2c:	a002731e 	bne	r20,zero,80f4fc <___svfprintf_internal_r+0xd04>
  80eb30:	008020b4 	movhi	r2,130
  80eb34:	10b16d04 	addi	r2,r2,-14924
  80eb38:	d8803a15 	stw	r2,232(sp)
  80eb3c:	04401e04 	movi	r17,120
  80eb40:	d8c02917 	ldw	r3,164(sp)
  80eb44:	0039883a 	mov	fp,zero
  80eb48:	1801d526 	beq	r3,zero,80f2a0 <___svfprintf_internal_r+0xaa8>
  80eb4c:	0029883a 	mov	r20,zero
  80eb50:	002d883a 	mov	r22,zero
  80eb54:	0001f106 	br	80f31c <___svfprintf_internal_r+0xb24>
  80eb58:	d9402c17 	ldw	r5,176(sp)
  80eb5c:	d9801e04 	addi	r6,sp,120
  80eb60:	9809883a 	mov	r4,r19
  80eb64:	08133180 	call	813318 <__ssprint_r>
  80eb68:	1000081e 	bne	r2,zero,80eb8c <___svfprintf_internal_r+0x394>
  80eb6c:	da000404 	addi	r8,sp,16
  80eb70:	003f6306 	br	80e900 <__alt_data_end+0xff80e900>
  80eb74:	d8802017 	ldw	r2,128(sp)
  80eb78:	10000426 	beq	r2,zero,80eb8c <___svfprintf_internal_r+0x394>
  80eb7c:	d9402c17 	ldw	r5,176(sp)
  80eb80:	d9003917 	ldw	r4,228(sp)
  80eb84:	d9801e04 	addi	r6,sp,120
  80eb88:	08133180 	call	813318 <__ssprint_r>
  80eb8c:	d8802c17 	ldw	r2,176(sp)
  80eb90:	10c0030b 	ldhu	r3,12(r2)
  80eb94:	d8802f17 	ldw	r2,188(sp)
  80eb98:	18c0100c 	andi	r3,r3,64
  80eb9c:	1805f51e 	bne	r3,zero,810374 <___svfprintf_internal_r+0x1b7c>
  80eba0:	dfc04817 	ldw	ra,288(sp)
  80eba4:	df004717 	ldw	fp,284(sp)
  80eba8:	ddc04617 	ldw	r23,280(sp)
  80ebac:	dd804517 	ldw	r22,276(sp)
  80ebb0:	dd404417 	ldw	r21,272(sp)
  80ebb4:	dd004317 	ldw	r20,268(sp)
  80ebb8:	dcc04217 	ldw	r19,264(sp)
  80ebbc:	dc804117 	ldw	r18,260(sp)
  80ebc0:	dc404017 	ldw	r17,256(sp)
  80ebc4:	dc003f17 	ldw	r16,252(sp)
  80ebc8:	dec04904 	addi	sp,sp,292
  80ebcc:	f800283a 	ret
  80ebd0:	d8802d17 	ldw	r2,180(sp)
  80ebd4:	d9002d17 	ldw	r4,180(sp)
  80ebd8:	10800017 	ldw	r2,0(r2)
  80ebdc:	d8803115 	stw	r2,196(sp)
  80ebe0:	20800104 	addi	r2,r4,4
  80ebe4:	d9003117 	ldw	r4,196(sp)
  80ebe8:	203fb916 	blt	r4,zero,80ead0 <__alt_data_end+0xff80ead0>
  80ebec:	d8802d15 	stw	r2,180(sp)
  80ebf0:	bc400007 	ldb	r17,0(r23)
  80ebf4:	003f5406 	br	80e948 <__alt_data_end+0xff80e948>
  80ebf8:	bc400007 	ldb	r17,0(r23)
  80ebfc:	bac00044 	addi	r11,r23,1
  80ec00:	8a873926 	beq	r17,r10,8108e8 <___svfprintf_internal_r+0x20f0>
  80ec04:	88bff404 	addi	r2,r17,-48
  80ec08:	0009883a 	mov	r4,zero
  80ec0c:	30868836 	bltu	r6,r2,810630 <___svfprintf_internal_r+0x1e38>
  80ec10:	5c400007 	ldb	r17,0(r11)
  80ec14:	210002a4 	muli	r4,r4,10
  80ec18:	5dc00044 	addi	r23,r11,1
  80ec1c:	b817883a 	mov	r11,r23
  80ec20:	2089883a 	add	r4,r4,r2
  80ec24:	88bff404 	addi	r2,r17,-48
  80ec28:	30bff92e 	bgeu	r6,r2,80ec10 <__alt_data_end+0xff80ec10>
  80ec2c:	2005d716 	blt	r4,zero,81038c <___svfprintf_internal_r+0x1b94>
  80ec30:	d9002915 	stw	r4,164(sp)
  80ec34:	003f4506 	br	80e94c <__alt_data_end+0xff80e94c>
  80ec38:	b809883a 	mov	r4,r23
  80ec3c:	d8003115 	stw	zero,196(sp)
  80ec40:	88bff404 	addi	r2,r17,-48
  80ec44:	0017883a 	mov	r11,zero
  80ec48:	24400007 	ldb	r17,0(r4)
  80ec4c:	5ac002a4 	muli	r11,r11,10
  80ec50:	bdc00044 	addi	r23,r23,1
  80ec54:	b809883a 	mov	r4,r23
  80ec58:	12d7883a 	add	r11,r2,r11
  80ec5c:	88bff404 	addi	r2,r17,-48
  80ec60:	30bff92e 	bgeu	r6,r2,80ec48 <__alt_data_end+0xff80ec48>
  80ec64:	dac03115 	stw	r11,196(sp)
  80ec68:	003f3806 	br	80e94c <__alt_data_end+0xff80e94c>
  80ec6c:	94802014 	ori	r18,r18,128
  80ec70:	bc400007 	ldb	r17,0(r23)
  80ec74:	003f3406 	br	80e948 <__alt_data_end+0xff80e948>
  80ec78:	18c03fcc 	andi	r3,r3,255
  80ec7c:	1807471e 	bne	r3,zero,81099c <___svfprintf_internal_r+0x21a4>
  80ec80:	9080020c 	andi	r2,r18,8
  80ec84:	10047d26 	beq	r2,zero,80fe7c <___svfprintf_internal_r+0x1684>
  80ec88:	d8c02d17 	ldw	r3,180(sp)
  80ec8c:	d9002d17 	ldw	r4,180(sp)
  80ec90:	d9402d17 	ldw	r5,180(sp)
  80ec94:	18c00017 	ldw	r3,0(r3)
  80ec98:	21000117 	ldw	r4,4(r4)
  80ec9c:	29400204 	addi	r5,r5,8
  80eca0:	d8c03615 	stw	r3,216(sp)
  80eca4:	d9003715 	stw	r4,220(sp)
  80eca8:	d9402d15 	stw	r5,180(sp)
  80ecac:	d9003617 	ldw	r4,216(sp)
  80ecb0:	d9403717 	ldw	r5,220(sp)
  80ecb4:	da003e15 	stw	r8,248(sp)
  80ecb8:	04000044 	movi	r16,1
  80ecbc:	080af580 	call	80af58 <__fpclassifyd>
  80ecc0:	da003e17 	ldw	r8,248(sp)
  80ecc4:	14044b1e 	bne	r2,r16,80fdf4 <___svfprintf_internal_r+0x15fc>
  80ecc8:	d9003617 	ldw	r4,216(sp)
  80eccc:	d9403717 	ldw	r5,220(sp)
  80ecd0:	000d883a 	mov	r6,zero
  80ecd4:	000f883a 	mov	r7,zero
  80ecd8:	0816b380 	call	816b38 <__ledf2>
  80ecdc:	da003e17 	ldw	r8,248(sp)
  80ece0:	1005f316 	blt	r2,zero,8104b0 <___svfprintf_internal_r+0x1cb8>
  80ece4:	df002783 	ldbu	fp,158(sp)
  80ece8:	008011c4 	movi	r2,71
  80ecec:	1445590e 	bge	r2,r17,810254 <___svfprintf_internal_r+0x1a5c>
  80ecf0:	040020b4 	movhi	r16,130
  80ecf4:	84316504 	addi	r16,r16,-14956
  80ecf8:	00c000c4 	movi	r3,3
  80ecfc:	00bfdfc4 	movi	r2,-129
  80ed00:	d8c02a15 	stw	r3,168(sp)
  80ed04:	90a4703a 	and	r18,r18,r2
  80ed08:	d8c02e15 	stw	r3,184(sp)
  80ed0c:	d8002915 	stw	zero,164(sp)
  80ed10:	d8003215 	stw	zero,200(sp)
  80ed14:	00006606 	br	80eeb0 <___svfprintf_internal_r+0x6b8>
  80ed18:	94800214 	ori	r18,r18,8
  80ed1c:	bc400007 	ldb	r17,0(r23)
  80ed20:	003f0906 	br	80e948 <__alt_data_end+0xff80e948>
  80ed24:	18c03fcc 	andi	r3,r3,255
  80ed28:	1807181e 	bne	r3,zero,81098c <___svfprintf_internal_r+0x2194>
  80ed2c:	94800414 	ori	r18,r18,16
  80ed30:	9080080c 	andi	r2,r18,32
  80ed34:	10039626 	beq	r2,zero,80fb90 <___svfprintf_internal_r+0x1398>
  80ed38:	d9402d17 	ldw	r5,180(sp)
  80ed3c:	28800117 	ldw	r2,4(r5)
  80ed40:	2d000017 	ldw	r20,0(r5)
  80ed44:	29400204 	addi	r5,r5,8
  80ed48:	d9402d15 	stw	r5,180(sp)
  80ed4c:	102d883a 	mov	r22,r2
  80ed50:	10039816 	blt	r2,zero,80fbb4 <___svfprintf_internal_r+0x13bc>
  80ed54:	d9402917 	ldw	r5,164(sp)
  80ed58:	df002783 	ldbu	fp,158(sp)
  80ed5c:	2803ab16 	blt	r5,zero,80fc0c <___svfprintf_internal_r+0x1414>
  80ed60:	00ffdfc4 	movi	r3,-129
  80ed64:	a584b03a 	or	r2,r20,r22
  80ed68:	90e4703a 	and	r18,r18,r3
  80ed6c:	10014a26 	beq	r2,zero,80f298 <___svfprintf_internal_r+0xaa0>
  80ed70:	b0034b26 	beq	r22,zero,80faa0 <___svfprintf_internal_r+0x12a8>
  80ed74:	dc402a15 	stw	r17,168(sp)
  80ed78:	dc001e04 	addi	r16,sp,120
  80ed7c:	b023883a 	mov	r17,r22
  80ed80:	402d883a 	mov	r22,r8
  80ed84:	a009883a 	mov	r4,r20
  80ed88:	880b883a 	mov	r5,r17
  80ed8c:	01800284 	movi	r6,10
  80ed90:	000f883a 	mov	r7,zero
  80ed94:	0814f580 	call	814f58 <__umoddi3>
  80ed98:	10800c04 	addi	r2,r2,48
  80ed9c:	843fffc4 	addi	r16,r16,-1
  80eda0:	a009883a 	mov	r4,r20
  80eda4:	880b883a 	mov	r5,r17
  80eda8:	80800005 	stb	r2,0(r16)
  80edac:	01800284 	movi	r6,10
  80edb0:	000f883a 	mov	r7,zero
  80edb4:	08149e00 	call	8149e0 <__udivdi3>
  80edb8:	1029883a 	mov	r20,r2
  80edbc:	10c4b03a 	or	r2,r2,r3
  80edc0:	1823883a 	mov	r17,r3
  80edc4:	103fef1e 	bne	r2,zero,80ed84 <__alt_data_end+0xff80ed84>
  80edc8:	d8c02817 	ldw	r3,160(sp)
  80edcc:	dc402a17 	ldw	r17,168(sp)
  80edd0:	b011883a 	mov	r8,r22
  80edd4:	1c07c83a 	sub	r3,r3,r16
  80edd8:	d8c02e15 	stw	r3,184(sp)
  80eddc:	00002e06 	br	80ee98 <___svfprintf_internal_r+0x6a0>
  80ede0:	18c03fcc 	andi	r3,r3,255
  80ede4:	1806e71e 	bne	r3,zero,810984 <___svfprintf_internal_r+0x218c>
  80ede8:	94800414 	ori	r18,r18,16
  80edec:	9080080c 	andi	r2,r18,32
  80edf0:	1002d426 	beq	r2,zero,80f944 <___svfprintf_internal_r+0x114c>
  80edf4:	d9402d17 	ldw	r5,180(sp)
  80edf8:	d8c02917 	ldw	r3,164(sp)
  80edfc:	d8002785 	stb	zero,158(sp)
  80ee00:	28800204 	addi	r2,r5,8
  80ee04:	2d000017 	ldw	r20,0(r5)
  80ee08:	2d800117 	ldw	r22,4(r5)
  80ee0c:	18041516 	blt	r3,zero,80fe64 <___svfprintf_internal_r+0x166c>
  80ee10:	013fdfc4 	movi	r4,-129
  80ee14:	a586b03a 	or	r3,r20,r22
  80ee18:	d8802d15 	stw	r2,180(sp)
  80ee1c:	9124703a 	and	r18,r18,r4
  80ee20:	1802d51e 	bne	r3,zero,80f978 <___svfprintf_internal_r+0x1180>
  80ee24:	d9402917 	ldw	r5,164(sp)
  80ee28:	0039883a 	mov	fp,zero
  80ee2c:	2806be26 	beq	r5,zero,810928 <___svfprintf_internal_r+0x2130>
  80ee30:	0029883a 	mov	r20,zero
  80ee34:	002d883a 	mov	r22,zero
  80ee38:	dc001e04 	addi	r16,sp,120
  80ee3c:	a006d0fa 	srli	r3,r20,3
  80ee40:	b008977a 	slli	r4,r22,29
  80ee44:	b02cd0fa 	srli	r22,r22,3
  80ee48:	a50001cc 	andi	r20,r20,7
  80ee4c:	a0800c04 	addi	r2,r20,48
  80ee50:	843fffc4 	addi	r16,r16,-1
  80ee54:	20e8b03a 	or	r20,r4,r3
  80ee58:	80800005 	stb	r2,0(r16)
  80ee5c:	a586b03a 	or	r3,r20,r22
  80ee60:	183ff61e 	bne	r3,zero,80ee3c <__alt_data_end+0xff80ee3c>
  80ee64:	90c0004c 	andi	r3,r18,1
  80ee68:	18013926 	beq	r3,zero,80f350 <___svfprintf_internal_r+0xb58>
  80ee6c:	10803fcc 	andi	r2,r2,255
  80ee70:	1080201c 	xori	r2,r2,128
  80ee74:	10bfe004 	addi	r2,r2,-128
  80ee78:	00c00c04 	movi	r3,48
  80ee7c:	10c13426 	beq	r2,r3,80f350 <___svfprintf_internal_r+0xb58>
  80ee80:	80ffffc5 	stb	r3,-1(r16)
  80ee84:	d8c02817 	ldw	r3,160(sp)
  80ee88:	80bfffc4 	addi	r2,r16,-1
  80ee8c:	1021883a 	mov	r16,r2
  80ee90:	1887c83a 	sub	r3,r3,r2
  80ee94:	d8c02e15 	stw	r3,184(sp)
  80ee98:	d8802e17 	ldw	r2,184(sp)
  80ee9c:	d9002917 	ldw	r4,164(sp)
  80eea0:	1100010e 	bge	r2,r4,80eea8 <___svfprintf_internal_r+0x6b0>
  80eea4:	2005883a 	mov	r2,r4
  80eea8:	d8802a15 	stw	r2,168(sp)
  80eeac:	d8003215 	stw	zero,200(sp)
  80eeb0:	e7003fcc 	andi	fp,fp,255
  80eeb4:	e700201c 	xori	fp,fp,128
  80eeb8:	e73fe004 	addi	fp,fp,-128
  80eebc:	e0000326 	beq	fp,zero,80eecc <___svfprintf_internal_r+0x6d4>
  80eec0:	d8c02a17 	ldw	r3,168(sp)
  80eec4:	18c00044 	addi	r3,r3,1
  80eec8:	d8c02a15 	stw	r3,168(sp)
  80eecc:	90c0008c 	andi	r3,r18,2
  80eed0:	d8c02b15 	stw	r3,172(sp)
  80eed4:	18000326 	beq	r3,zero,80eee4 <___svfprintf_internal_r+0x6ec>
  80eed8:	d8c02a17 	ldw	r3,168(sp)
  80eedc:	18c00084 	addi	r3,r3,2
  80eee0:	d8c02a15 	stw	r3,168(sp)
  80eee4:	90c0210c 	andi	r3,r18,132
  80eee8:	d8c03015 	stw	r3,192(sp)
  80eeec:	1801a11e 	bne	r3,zero,80f574 <___svfprintf_internal_r+0xd7c>
  80eef0:	d9003117 	ldw	r4,196(sp)
  80eef4:	d8c02a17 	ldw	r3,168(sp)
  80eef8:	20e9c83a 	sub	r20,r4,r3
  80eefc:	05019d0e 	bge	zero,r20,80f574 <___svfprintf_internal_r+0xd7c>
  80ef00:	02400404 	movi	r9,16
  80ef04:	d8c02017 	ldw	r3,128(sp)
  80ef08:	d8801f17 	ldw	r2,124(sp)
  80ef0c:	4d051b0e 	bge	r9,r20,81037c <___svfprintf_internal_r+0x1b84>
  80ef10:	014020b4 	movhi	r5,130
  80ef14:	29729184 	addi	r5,r5,-13754
  80ef18:	dc403c15 	stw	r17,240(sp)
  80ef1c:	d9403515 	stw	r5,212(sp)
  80ef20:	a023883a 	mov	r17,r20
  80ef24:	482d883a 	mov	r22,r9
  80ef28:	9029883a 	mov	r20,r18
  80ef2c:	070001c4 	movi	fp,7
  80ef30:	8025883a 	mov	r18,r16
  80ef34:	dc002c17 	ldw	r16,176(sp)
  80ef38:	00000306 	br	80ef48 <___svfprintf_internal_r+0x750>
  80ef3c:	8c7ffc04 	addi	r17,r17,-16
  80ef40:	42000204 	addi	r8,r8,8
  80ef44:	b440130e 	bge	r22,r17,80ef94 <___svfprintf_internal_r+0x79c>
  80ef48:	010020b4 	movhi	r4,130
  80ef4c:	18c00404 	addi	r3,r3,16
  80ef50:	10800044 	addi	r2,r2,1
  80ef54:	21329184 	addi	r4,r4,-13754
  80ef58:	41000015 	stw	r4,0(r8)
  80ef5c:	45800115 	stw	r22,4(r8)
  80ef60:	d8c02015 	stw	r3,128(sp)
  80ef64:	d8801f15 	stw	r2,124(sp)
  80ef68:	e0bff40e 	bge	fp,r2,80ef3c <__alt_data_end+0xff80ef3c>
  80ef6c:	d9801e04 	addi	r6,sp,120
  80ef70:	800b883a 	mov	r5,r16
  80ef74:	9809883a 	mov	r4,r19
  80ef78:	08133180 	call	813318 <__ssprint_r>
  80ef7c:	103f031e 	bne	r2,zero,80eb8c <__alt_data_end+0xff80eb8c>
  80ef80:	8c7ffc04 	addi	r17,r17,-16
  80ef84:	d8c02017 	ldw	r3,128(sp)
  80ef88:	d8801f17 	ldw	r2,124(sp)
  80ef8c:	da000404 	addi	r8,sp,16
  80ef90:	b47fed16 	blt	r22,r17,80ef48 <__alt_data_end+0xff80ef48>
  80ef94:	9021883a 	mov	r16,r18
  80ef98:	a025883a 	mov	r18,r20
  80ef9c:	8829883a 	mov	r20,r17
  80efa0:	dc403c17 	ldw	r17,240(sp)
  80efa4:	d9403517 	ldw	r5,212(sp)
  80efa8:	a0c7883a 	add	r3,r20,r3
  80efac:	10800044 	addi	r2,r2,1
  80efb0:	41400015 	stw	r5,0(r8)
  80efb4:	45000115 	stw	r20,4(r8)
  80efb8:	d8c02015 	stw	r3,128(sp)
  80efbc:	d8801f15 	stw	r2,124(sp)
  80efc0:	010001c4 	movi	r4,7
  80efc4:	20829f16 	blt	r4,r2,80fa44 <___svfprintf_internal_r+0x124c>
  80efc8:	df002787 	ldb	fp,158(sp)
  80efcc:	42000204 	addi	r8,r8,8
  80efd0:	e0000c26 	beq	fp,zero,80f004 <___svfprintf_internal_r+0x80c>
  80efd4:	d8801f17 	ldw	r2,124(sp)
  80efd8:	d9002784 	addi	r4,sp,158
  80efdc:	18c00044 	addi	r3,r3,1
  80efe0:	10800044 	addi	r2,r2,1
  80efe4:	41000015 	stw	r4,0(r8)
  80efe8:	01000044 	movi	r4,1
  80efec:	41000115 	stw	r4,4(r8)
  80eff0:	d8c02015 	stw	r3,128(sp)
  80eff4:	d8801f15 	stw	r2,124(sp)
  80eff8:	010001c4 	movi	r4,7
  80effc:	20823816 	blt	r4,r2,80f8e0 <___svfprintf_internal_r+0x10e8>
  80f000:	42000204 	addi	r8,r8,8
  80f004:	d8802b17 	ldw	r2,172(sp)
  80f008:	10000c26 	beq	r2,zero,80f03c <___svfprintf_internal_r+0x844>
  80f00c:	d8801f17 	ldw	r2,124(sp)
  80f010:	d9002704 	addi	r4,sp,156
  80f014:	18c00084 	addi	r3,r3,2
  80f018:	10800044 	addi	r2,r2,1
  80f01c:	41000015 	stw	r4,0(r8)
  80f020:	01000084 	movi	r4,2
  80f024:	41000115 	stw	r4,4(r8)
  80f028:	d8c02015 	stw	r3,128(sp)
  80f02c:	d8801f15 	stw	r2,124(sp)
  80f030:	010001c4 	movi	r4,7
  80f034:	20823216 	blt	r4,r2,80f900 <___svfprintf_internal_r+0x1108>
  80f038:	42000204 	addi	r8,r8,8
  80f03c:	d9003017 	ldw	r4,192(sp)
  80f040:	00802004 	movi	r2,128
  80f044:	20819726 	beq	r4,r2,80f6a4 <___svfprintf_internal_r+0xeac>
  80f048:	d9402917 	ldw	r5,164(sp)
  80f04c:	d8802e17 	ldw	r2,184(sp)
  80f050:	28adc83a 	sub	r22,r5,r2
  80f054:	05802f0e 	bge	zero,r22,80f114 <___svfprintf_internal_r+0x91c>
  80f058:	07000404 	movi	fp,16
  80f05c:	d8801f17 	ldw	r2,124(sp)
  80f060:	e583c00e 	bge	fp,r22,80ff64 <___svfprintf_internal_r+0x176c>
  80f064:	014020b4 	movhi	r5,130
  80f068:	29728d84 	addi	r5,r5,-13770
  80f06c:	dc402915 	stw	r17,164(sp)
  80f070:	d9402b15 	stw	r5,172(sp)
  80f074:	b023883a 	mov	r17,r22
  80f078:	050001c4 	movi	r20,7
  80f07c:	902d883a 	mov	r22,r18
  80f080:	8025883a 	mov	r18,r16
  80f084:	dc002c17 	ldw	r16,176(sp)
  80f088:	00000306 	br	80f098 <___svfprintf_internal_r+0x8a0>
  80f08c:	8c7ffc04 	addi	r17,r17,-16
  80f090:	42000204 	addi	r8,r8,8
  80f094:	e440110e 	bge	fp,r17,80f0dc <___svfprintf_internal_r+0x8e4>
  80f098:	18c00404 	addi	r3,r3,16
  80f09c:	10800044 	addi	r2,r2,1
  80f0a0:	45400015 	stw	r21,0(r8)
  80f0a4:	47000115 	stw	fp,4(r8)
  80f0a8:	d8c02015 	stw	r3,128(sp)
  80f0ac:	d8801f15 	stw	r2,124(sp)
  80f0b0:	a0bff60e 	bge	r20,r2,80f08c <__alt_data_end+0xff80f08c>
  80f0b4:	d9801e04 	addi	r6,sp,120
  80f0b8:	800b883a 	mov	r5,r16
  80f0bc:	9809883a 	mov	r4,r19
  80f0c0:	08133180 	call	813318 <__ssprint_r>
  80f0c4:	103eb11e 	bne	r2,zero,80eb8c <__alt_data_end+0xff80eb8c>
  80f0c8:	8c7ffc04 	addi	r17,r17,-16
  80f0cc:	d8c02017 	ldw	r3,128(sp)
  80f0d0:	d8801f17 	ldw	r2,124(sp)
  80f0d4:	da000404 	addi	r8,sp,16
  80f0d8:	e47fef16 	blt	fp,r17,80f098 <__alt_data_end+0xff80f098>
  80f0dc:	9021883a 	mov	r16,r18
  80f0e0:	b025883a 	mov	r18,r22
  80f0e4:	882d883a 	mov	r22,r17
  80f0e8:	dc402917 	ldw	r17,164(sp)
  80f0ec:	d9002b17 	ldw	r4,172(sp)
  80f0f0:	1d87883a 	add	r3,r3,r22
  80f0f4:	10800044 	addi	r2,r2,1
  80f0f8:	41000015 	stw	r4,0(r8)
  80f0fc:	45800115 	stw	r22,4(r8)
  80f100:	d8c02015 	stw	r3,128(sp)
  80f104:	d8801f15 	stw	r2,124(sp)
  80f108:	010001c4 	movi	r4,7
  80f10c:	2081ec16 	blt	r4,r2,80f8c0 <___svfprintf_internal_r+0x10c8>
  80f110:	42000204 	addi	r8,r8,8
  80f114:	9080400c 	andi	r2,r18,256
  80f118:	1001181e 	bne	r2,zero,80f57c <___svfprintf_internal_r+0xd84>
  80f11c:	d9402e17 	ldw	r5,184(sp)
  80f120:	d8801f17 	ldw	r2,124(sp)
  80f124:	44000015 	stw	r16,0(r8)
  80f128:	1947883a 	add	r3,r3,r5
  80f12c:	10800044 	addi	r2,r2,1
  80f130:	41400115 	stw	r5,4(r8)
  80f134:	d8c02015 	stw	r3,128(sp)
  80f138:	d8801f15 	stw	r2,124(sp)
  80f13c:	010001c4 	movi	r4,7
  80f140:	2081d116 	blt	r4,r2,80f888 <___svfprintf_internal_r+0x1090>
  80f144:	42000204 	addi	r8,r8,8
  80f148:	9480010c 	andi	r18,r18,4
  80f14c:	90003226 	beq	r18,zero,80f218 <___svfprintf_internal_r+0xa20>
  80f150:	d9403117 	ldw	r5,196(sp)
  80f154:	d8802a17 	ldw	r2,168(sp)
  80f158:	28a1c83a 	sub	r16,r5,r2
  80f15c:	04002e0e 	bge	zero,r16,80f218 <___svfprintf_internal_r+0xa20>
  80f160:	04400404 	movi	r17,16
  80f164:	d8801f17 	ldw	r2,124(sp)
  80f168:	8c04b90e 	bge	r17,r16,810450 <___svfprintf_internal_r+0x1c58>
  80f16c:	014020b4 	movhi	r5,130
  80f170:	29729184 	addi	r5,r5,-13754
  80f174:	d9403515 	stw	r5,212(sp)
  80f178:	048001c4 	movi	r18,7
  80f17c:	dd002c17 	ldw	r20,176(sp)
  80f180:	00000306 	br	80f190 <___svfprintf_internal_r+0x998>
  80f184:	843ffc04 	addi	r16,r16,-16
  80f188:	42000204 	addi	r8,r8,8
  80f18c:	8c00130e 	bge	r17,r16,80f1dc <___svfprintf_internal_r+0x9e4>
  80f190:	010020b4 	movhi	r4,130
  80f194:	18c00404 	addi	r3,r3,16
  80f198:	10800044 	addi	r2,r2,1
  80f19c:	21329184 	addi	r4,r4,-13754
  80f1a0:	41000015 	stw	r4,0(r8)
  80f1a4:	44400115 	stw	r17,4(r8)
  80f1a8:	d8c02015 	stw	r3,128(sp)
  80f1ac:	d8801f15 	stw	r2,124(sp)
  80f1b0:	90bff40e 	bge	r18,r2,80f184 <__alt_data_end+0xff80f184>
  80f1b4:	d9801e04 	addi	r6,sp,120
  80f1b8:	a00b883a 	mov	r5,r20
  80f1bc:	9809883a 	mov	r4,r19
  80f1c0:	08133180 	call	813318 <__ssprint_r>
  80f1c4:	103e711e 	bne	r2,zero,80eb8c <__alt_data_end+0xff80eb8c>
  80f1c8:	843ffc04 	addi	r16,r16,-16
  80f1cc:	d8c02017 	ldw	r3,128(sp)
  80f1d0:	d8801f17 	ldw	r2,124(sp)
  80f1d4:	da000404 	addi	r8,sp,16
  80f1d8:	8c3fed16 	blt	r17,r16,80f190 <__alt_data_end+0xff80f190>
  80f1dc:	d9403517 	ldw	r5,212(sp)
  80f1e0:	1c07883a 	add	r3,r3,r16
  80f1e4:	10800044 	addi	r2,r2,1
  80f1e8:	41400015 	stw	r5,0(r8)
  80f1ec:	44000115 	stw	r16,4(r8)
  80f1f0:	d8c02015 	stw	r3,128(sp)
  80f1f4:	d8801f15 	stw	r2,124(sp)
  80f1f8:	010001c4 	movi	r4,7
  80f1fc:	2080060e 	bge	r4,r2,80f218 <___svfprintf_internal_r+0xa20>
  80f200:	d9402c17 	ldw	r5,176(sp)
  80f204:	d9801e04 	addi	r6,sp,120
  80f208:	9809883a 	mov	r4,r19
  80f20c:	08133180 	call	813318 <__ssprint_r>
  80f210:	103e5e1e 	bne	r2,zero,80eb8c <__alt_data_end+0xff80eb8c>
  80f214:	d8c02017 	ldw	r3,128(sp)
  80f218:	d8803117 	ldw	r2,196(sp)
  80f21c:	d9002a17 	ldw	r4,168(sp)
  80f220:	1100010e 	bge	r2,r4,80f228 <___svfprintf_internal_r+0xa30>
  80f224:	2005883a 	mov	r2,r4
  80f228:	d9402f17 	ldw	r5,188(sp)
  80f22c:	288b883a 	add	r5,r5,r2
  80f230:	d9402f15 	stw	r5,188(sp)
  80f234:	18019c1e 	bne	r3,zero,80f8a8 <___svfprintf_internal_r+0x10b0>
  80f238:	b8800007 	ldb	r2,0(r23)
  80f23c:	d8001f15 	stw	zero,124(sp)
  80f240:	da000404 	addi	r8,sp,16
  80f244:	103d991e 	bne	r2,zero,80e8ac <__alt_data_end+0xff80e8ac>
  80f248:	b821883a 	mov	r16,r23
  80f24c:	003daf06 	br	80e90c <__alt_data_end+0xff80e90c>
  80f250:	18c03fcc 	andi	r3,r3,255
  80f254:	1805c71e 	bne	r3,zero,810974 <___svfprintf_internal_r+0x217c>
  80f258:	94800414 	ori	r18,r18,16
  80f25c:	9080080c 	andi	r2,r18,32
  80f260:	10020126 	beq	r2,zero,80fa68 <___svfprintf_internal_r+0x1270>
  80f264:	d8802d17 	ldw	r2,180(sp)
  80f268:	d9002917 	ldw	r4,164(sp)
  80f26c:	d8002785 	stb	zero,158(sp)
  80f270:	10c00204 	addi	r3,r2,8
  80f274:	15000017 	ldw	r20,0(r2)
  80f278:	15800117 	ldw	r22,4(r2)
  80f27c:	20038e16 	blt	r4,zero,8100b8 <___svfprintf_internal_r+0x18c0>
  80f280:	013fdfc4 	movi	r4,-129
  80f284:	a584b03a 	or	r2,r20,r22
  80f288:	d8c02d15 	stw	r3,180(sp)
  80f28c:	9124703a 	and	r18,r18,r4
  80f290:	0039883a 	mov	fp,zero
  80f294:	103eb61e 	bne	r2,zero,80ed70 <__alt_data_end+0xff80ed70>
  80f298:	d8802917 	ldw	r2,164(sp)
  80f29c:	1002c81e 	bne	r2,zero,80fdc0 <___svfprintf_internal_r+0x15c8>
  80f2a0:	d8002915 	stw	zero,164(sp)
  80f2a4:	d8002e15 	stw	zero,184(sp)
  80f2a8:	dc001e04 	addi	r16,sp,120
  80f2ac:	003efa06 	br	80ee98 <__alt_data_end+0xff80ee98>
  80f2b0:	18c03fcc 	andi	r3,r3,255
  80f2b4:	1805ad1e 	bne	r3,zero,81096c <___svfprintf_internal_r+0x2174>
  80f2b8:	014020b4 	movhi	r5,130
  80f2bc:	29716804 	addi	r5,r5,-14944
  80f2c0:	d9403a15 	stw	r5,232(sp)
  80f2c4:	9080080c 	andi	r2,r18,32
  80f2c8:	10006126 	beq	r2,zero,80f450 <___svfprintf_internal_r+0xc58>
  80f2cc:	d8802d17 	ldw	r2,180(sp)
  80f2d0:	15000017 	ldw	r20,0(r2)
  80f2d4:	15800117 	ldw	r22,4(r2)
  80f2d8:	10800204 	addi	r2,r2,8
  80f2dc:	d8802d15 	stw	r2,180(sp)
  80f2e0:	9080004c 	andi	r2,r18,1
  80f2e4:	10018e26 	beq	r2,zero,80f920 <___svfprintf_internal_r+0x1128>
  80f2e8:	a584b03a 	or	r2,r20,r22
  80f2ec:	10030926 	beq	r2,zero,80ff14 <___svfprintf_internal_r+0x171c>
  80f2f0:	d8c02917 	ldw	r3,164(sp)
  80f2f4:	00800c04 	movi	r2,48
  80f2f8:	d8802705 	stb	r2,156(sp)
  80f2fc:	dc402745 	stb	r17,157(sp)
  80f300:	d8002785 	stb	zero,158(sp)
  80f304:	90800094 	ori	r2,r18,2
  80f308:	18048716 	blt	r3,zero,810528 <___svfprintf_internal_r+0x1d30>
  80f30c:	00bfdfc4 	movi	r2,-129
  80f310:	90a4703a 	and	r18,r18,r2
  80f314:	94800094 	ori	r18,r18,2
  80f318:	0039883a 	mov	fp,zero
  80f31c:	d9003a17 	ldw	r4,232(sp)
  80f320:	dc001e04 	addi	r16,sp,120
  80f324:	a08003cc 	andi	r2,r20,15
  80f328:	b006973a 	slli	r3,r22,28
  80f32c:	2085883a 	add	r2,r4,r2
  80f330:	a028d13a 	srli	r20,r20,4
  80f334:	10800003 	ldbu	r2,0(r2)
  80f338:	b02cd13a 	srli	r22,r22,4
  80f33c:	843fffc4 	addi	r16,r16,-1
  80f340:	1d28b03a 	or	r20,r3,r20
  80f344:	80800005 	stb	r2,0(r16)
  80f348:	a584b03a 	or	r2,r20,r22
  80f34c:	103ff51e 	bne	r2,zero,80f324 <__alt_data_end+0xff80f324>
  80f350:	d8c02817 	ldw	r3,160(sp)
  80f354:	1c07c83a 	sub	r3,r3,r16
  80f358:	d8c02e15 	stw	r3,184(sp)
  80f35c:	003ece06 	br	80ee98 <__alt_data_end+0xff80ee98>
  80f360:	d8c02d17 	ldw	r3,180(sp)
  80f364:	d9002d17 	ldw	r4,180(sp)
  80f368:	d8002785 	stb	zero,158(sp)
  80f36c:	18800017 	ldw	r2,0(r3)
  80f370:	21000104 	addi	r4,r4,4
  80f374:	00c00044 	movi	r3,1
  80f378:	d8c02a15 	stw	r3,168(sp)
  80f37c:	d8801405 	stb	r2,80(sp)
  80f380:	d9002d15 	stw	r4,180(sp)
  80f384:	d8c02e15 	stw	r3,184(sp)
  80f388:	d8002915 	stw	zero,164(sp)
  80f38c:	d8003215 	stw	zero,200(sp)
  80f390:	dc001404 	addi	r16,sp,80
  80f394:	0039883a 	mov	fp,zero
  80f398:	003ecc06 	br	80eecc <__alt_data_end+0xff80eecc>
  80f39c:	18c03fcc 	andi	r3,r3,255
  80f3a0:	183e9226 	beq	r3,zero,80edec <__alt_data_end+0xff80edec>
  80f3a4:	d9c02785 	stb	r7,158(sp)
  80f3a8:	003e9006 	br	80edec <__alt_data_end+0xff80edec>
  80f3ac:	00c00044 	movi	r3,1
  80f3b0:	01c00ac4 	movi	r7,43
  80f3b4:	bc400007 	ldb	r17,0(r23)
  80f3b8:	003d6306 	br	80e948 <__alt_data_end+0xff80e948>
  80f3bc:	94800814 	ori	r18,r18,32
  80f3c0:	bc400007 	ldb	r17,0(r23)
  80f3c4:	003d6006 	br	80e948 <__alt_data_end+0xff80e948>
  80f3c8:	d8c02d17 	ldw	r3,180(sp)
  80f3cc:	d8002785 	stb	zero,158(sp)
  80f3d0:	1c000017 	ldw	r16,0(r3)
  80f3d4:	1d000104 	addi	r20,r3,4
  80f3d8:	80040f26 	beq	r16,zero,810418 <___svfprintf_internal_r+0x1c20>
  80f3dc:	d9002917 	ldw	r4,164(sp)
  80f3e0:	2003dc16 	blt	r4,zero,810354 <___svfprintf_internal_r+0x1b5c>
  80f3e4:	200d883a 	mov	r6,r4
  80f3e8:	000b883a 	mov	r5,zero
  80f3ec:	8009883a 	mov	r4,r16
  80f3f0:	da003e15 	stw	r8,248(sp)
  80f3f4:	08094a80 	call	8094a8 <memchr>
  80f3f8:	da003e17 	ldw	r8,248(sp)
  80f3fc:	10045826 	beq	r2,zero,810560 <___svfprintf_internal_r+0x1d68>
  80f400:	1405c83a 	sub	r2,r2,r16
  80f404:	d8802e15 	stw	r2,184(sp)
  80f408:	1003d816 	blt	r2,zero,81036c <___svfprintf_internal_r+0x1b74>
  80f40c:	df002783 	ldbu	fp,158(sp)
  80f410:	d8802a15 	stw	r2,168(sp)
  80f414:	dd002d15 	stw	r20,180(sp)
  80f418:	d8002915 	stw	zero,164(sp)
  80f41c:	d8003215 	stw	zero,200(sp)
  80f420:	003ea306 	br	80eeb0 <__alt_data_end+0xff80eeb0>
  80f424:	18c03fcc 	andi	r3,r3,255
  80f428:	183f8c26 	beq	r3,zero,80f25c <__alt_data_end+0xff80f25c>
  80f42c:	d9c02785 	stb	r7,158(sp)
  80f430:	003f8a06 	br	80f25c <__alt_data_end+0xff80f25c>
  80f434:	18c03fcc 	andi	r3,r3,255
  80f438:	1805631e 	bne	r3,zero,8109c8 <___svfprintf_internal_r+0x21d0>
  80f43c:	014020b4 	movhi	r5,130
  80f440:	29716d04 	addi	r5,r5,-14924
  80f444:	d9403a15 	stw	r5,232(sp)
  80f448:	9080080c 	andi	r2,r18,32
  80f44c:	103f9f1e 	bne	r2,zero,80f2cc <__alt_data_end+0xff80f2cc>
  80f450:	9080040c 	andi	r2,r18,16
  80f454:	10029c26 	beq	r2,zero,80fec8 <___svfprintf_internal_r+0x16d0>
  80f458:	d8c02d17 	ldw	r3,180(sp)
  80f45c:	002d883a 	mov	r22,zero
  80f460:	1d000017 	ldw	r20,0(r3)
  80f464:	18c00104 	addi	r3,r3,4
  80f468:	d8c02d15 	stw	r3,180(sp)
  80f46c:	003f9c06 	br	80f2e0 <__alt_data_end+0xff80f2e0>
  80f470:	94800054 	ori	r18,r18,1
  80f474:	bc400007 	ldb	r17,0(r23)
  80f478:	003d3306 	br	80e948 <__alt_data_end+0xff80e948>
  80f47c:	38803fcc 	andi	r2,r7,255
  80f480:	1080201c 	xori	r2,r2,128
  80f484:	10bfe004 	addi	r2,r2,-128
  80f488:	1002971e 	bne	r2,zero,80fee8 <___svfprintf_internal_r+0x16f0>
  80f48c:	00c00044 	movi	r3,1
  80f490:	01c00804 	movi	r7,32
  80f494:	bc400007 	ldb	r17,0(r23)
  80f498:	003d2b06 	br	80e948 <__alt_data_end+0xff80e948>
  80f49c:	18c03fcc 	andi	r3,r3,255
  80f4a0:	183e2326 	beq	r3,zero,80ed30 <__alt_data_end+0xff80ed30>
  80f4a4:	d9c02785 	stb	r7,158(sp)
  80f4a8:	003e2106 	br	80ed30 <__alt_data_end+0xff80ed30>
  80f4ac:	bc400007 	ldb	r17,0(r23)
  80f4b0:	8a430426 	beq	r17,r9,8100c4 <___svfprintf_internal_r+0x18cc>
  80f4b4:	94800414 	ori	r18,r18,16
  80f4b8:	003d2306 	br	80e948 <__alt_data_end+0xff80e948>
  80f4bc:	18c03fcc 	andi	r3,r3,255
  80f4c0:	18053f1e 	bne	r3,zero,8109c0 <___svfprintf_internal_r+0x21c8>
  80f4c4:	9080080c 	andi	r2,r18,32
  80f4c8:	10028926 	beq	r2,zero,80fef0 <___svfprintf_internal_r+0x16f8>
  80f4cc:	d9402d17 	ldw	r5,180(sp)
  80f4d0:	d9002f17 	ldw	r4,188(sp)
  80f4d4:	28800017 	ldw	r2,0(r5)
  80f4d8:	2007d7fa 	srai	r3,r4,31
  80f4dc:	29400104 	addi	r5,r5,4
  80f4e0:	d9402d15 	stw	r5,180(sp)
  80f4e4:	11000015 	stw	r4,0(r2)
  80f4e8:	10c00115 	stw	r3,4(r2)
  80f4ec:	003ced06 	br	80e8a4 <__alt_data_end+0xff80e8a4>
  80f4f0:	94801014 	ori	r18,r18,64
  80f4f4:	bc400007 	ldb	r17,0(r23)
  80f4f8:	003d1306 	br	80e948 <__alt_data_end+0xff80e948>
  80f4fc:	010020b4 	movhi	r4,130
  80f500:	21316d04 	addi	r4,r4,-14924
  80f504:	0039883a 	mov	fp,zero
  80f508:	d9003a15 	stw	r4,232(sp)
  80f50c:	04401e04 	movi	r17,120
  80f510:	003f8206 	br	80f31c <__alt_data_end+0xff80f31c>
  80f514:	18c03fcc 	andi	r3,r3,255
  80f518:	1805221e 	bne	r3,zero,8109a4 <___svfprintf_internal_r+0x21ac>
  80f51c:	883d9526 	beq	r17,zero,80eb74 <__alt_data_end+0xff80eb74>
  80f520:	00c00044 	movi	r3,1
  80f524:	d8c02a15 	stw	r3,168(sp)
  80f528:	dc401405 	stb	r17,80(sp)
  80f52c:	d8002785 	stb	zero,158(sp)
  80f530:	003f9406 	br	80f384 <__alt_data_end+0xff80f384>
  80f534:	010020b4 	movhi	r4,130
  80f538:	21316d04 	addi	r4,r4,-14924
  80f53c:	d9003a15 	stw	r4,232(sp)
  80f540:	d8c02d15 	stw	r3,180(sp)
  80f544:	1025883a 	mov	r18,r2
  80f548:	04401e04 	movi	r17,120
  80f54c:	a584b03a 	or	r2,r20,r22
  80f550:	1000fa1e 	bne	r2,zero,80f93c <___svfprintf_internal_r+0x1144>
  80f554:	0039883a 	mov	fp,zero
  80f558:	00800084 	movi	r2,2
  80f55c:	10803fcc 	andi	r2,r2,255
  80f560:	00c00044 	movi	r3,1
  80f564:	10c21626 	beq	r2,r3,80fdc0 <___svfprintf_internal_r+0x15c8>
  80f568:	00c00084 	movi	r3,2
  80f56c:	10fe301e 	bne	r2,r3,80ee30 <__alt_data_end+0xff80ee30>
  80f570:	003d7606 	br	80eb4c <__alt_data_end+0xff80eb4c>
  80f574:	d8c02017 	ldw	r3,128(sp)
  80f578:	003e9506 	br	80efd0 <__alt_data_end+0xff80efd0>
  80f57c:	00801944 	movi	r2,101
  80f580:	14407c0e 	bge	r2,r17,80f774 <___svfprintf_internal_r+0xf7c>
  80f584:	d9003617 	ldw	r4,216(sp)
  80f588:	d9403717 	ldw	r5,220(sp)
  80f58c:	000d883a 	mov	r6,zero
  80f590:	000f883a 	mov	r7,zero
  80f594:	d8c03d15 	stw	r3,244(sp)
  80f598:	da003e15 	stw	r8,248(sp)
  80f59c:	08169d40 	call	8169d4 <__eqdf2>
  80f5a0:	d8c03d17 	ldw	r3,244(sp)
  80f5a4:	da003e17 	ldw	r8,248(sp)
  80f5a8:	1000f51e 	bne	r2,zero,80f980 <___svfprintf_internal_r+0x1188>
  80f5ac:	d8801f17 	ldw	r2,124(sp)
  80f5b0:	010020b4 	movhi	r4,130
  80f5b4:	21317404 	addi	r4,r4,-14896
  80f5b8:	18c00044 	addi	r3,r3,1
  80f5bc:	10800044 	addi	r2,r2,1
  80f5c0:	41000015 	stw	r4,0(r8)
  80f5c4:	01000044 	movi	r4,1
  80f5c8:	41000115 	stw	r4,4(r8)
  80f5cc:	d8c02015 	stw	r3,128(sp)
  80f5d0:	d8801f15 	stw	r2,124(sp)
  80f5d4:	010001c4 	movi	r4,7
  80f5d8:	20826616 	blt	r4,r2,80ff74 <___svfprintf_internal_r+0x177c>
  80f5dc:	42000204 	addi	r8,r8,8
  80f5e0:	d8802617 	ldw	r2,152(sp)
  80f5e4:	d9403317 	ldw	r5,204(sp)
  80f5e8:	11400216 	blt	r2,r5,80f5f4 <___svfprintf_internal_r+0xdfc>
  80f5ec:	9080004c 	andi	r2,r18,1
  80f5f0:	103ed526 	beq	r2,zero,80f148 <__alt_data_end+0xff80f148>
  80f5f4:	d8803817 	ldw	r2,224(sp)
  80f5f8:	d9003417 	ldw	r4,208(sp)
  80f5fc:	d9403817 	ldw	r5,224(sp)
  80f600:	1887883a 	add	r3,r3,r2
  80f604:	d8801f17 	ldw	r2,124(sp)
  80f608:	41000015 	stw	r4,0(r8)
  80f60c:	41400115 	stw	r5,4(r8)
  80f610:	10800044 	addi	r2,r2,1
  80f614:	d8c02015 	stw	r3,128(sp)
  80f618:	d8801f15 	stw	r2,124(sp)
  80f61c:	010001c4 	movi	r4,7
  80f620:	2082af16 	blt	r4,r2,8100e0 <___svfprintf_internal_r+0x18e8>
  80f624:	42000204 	addi	r8,r8,8
  80f628:	d8803317 	ldw	r2,204(sp)
  80f62c:	143fffc4 	addi	r16,r2,-1
  80f630:	043ec50e 	bge	zero,r16,80f148 <__alt_data_end+0xff80f148>
  80f634:	04400404 	movi	r17,16
  80f638:	d8801f17 	ldw	r2,124(sp)
  80f63c:	8c00860e 	bge	r17,r16,80f858 <___svfprintf_internal_r+0x1060>
  80f640:	014020b4 	movhi	r5,130
  80f644:	29728d84 	addi	r5,r5,-13770
  80f648:	d9402b15 	stw	r5,172(sp)
  80f64c:	058001c4 	movi	r22,7
  80f650:	dd002c17 	ldw	r20,176(sp)
  80f654:	00000306 	br	80f664 <___svfprintf_internal_r+0xe6c>
  80f658:	42000204 	addi	r8,r8,8
  80f65c:	843ffc04 	addi	r16,r16,-16
  80f660:	8c00800e 	bge	r17,r16,80f864 <___svfprintf_internal_r+0x106c>
  80f664:	18c00404 	addi	r3,r3,16
  80f668:	10800044 	addi	r2,r2,1
  80f66c:	45400015 	stw	r21,0(r8)
  80f670:	44400115 	stw	r17,4(r8)
  80f674:	d8c02015 	stw	r3,128(sp)
  80f678:	d8801f15 	stw	r2,124(sp)
  80f67c:	b0bff60e 	bge	r22,r2,80f658 <__alt_data_end+0xff80f658>
  80f680:	d9801e04 	addi	r6,sp,120
  80f684:	a00b883a 	mov	r5,r20
  80f688:	9809883a 	mov	r4,r19
  80f68c:	08133180 	call	813318 <__ssprint_r>
  80f690:	103d3e1e 	bne	r2,zero,80eb8c <__alt_data_end+0xff80eb8c>
  80f694:	d8c02017 	ldw	r3,128(sp)
  80f698:	d8801f17 	ldw	r2,124(sp)
  80f69c:	da000404 	addi	r8,sp,16
  80f6a0:	003fee06 	br	80f65c <__alt_data_end+0xff80f65c>
  80f6a4:	d9403117 	ldw	r5,196(sp)
  80f6a8:	d8802a17 	ldw	r2,168(sp)
  80f6ac:	28adc83a 	sub	r22,r5,r2
  80f6b0:	05be650e 	bge	zero,r22,80f048 <__alt_data_end+0xff80f048>
  80f6b4:	07000404 	movi	fp,16
  80f6b8:	d8801f17 	ldw	r2,124(sp)
  80f6bc:	e583a20e 	bge	fp,r22,810548 <___svfprintf_internal_r+0x1d50>
  80f6c0:	014020b4 	movhi	r5,130
  80f6c4:	29728d84 	addi	r5,r5,-13770
  80f6c8:	dc403015 	stw	r17,192(sp)
  80f6cc:	d9402b15 	stw	r5,172(sp)
  80f6d0:	b023883a 	mov	r17,r22
  80f6d4:	050001c4 	movi	r20,7
  80f6d8:	902d883a 	mov	r22,r18
  80f6dc:	8025883a 	mov	r18,r16
  80f6e0:	dc002c17 	ldw	r16,176(sp)
  80f6e4:	00000306 	br	80f6f4 <___svfprintf_internal_r+0xefc>
  80f6e8:	8c7ffc04 	addi	r17,r17,-16
  80f6ec:	42000204 	addi	r8,r8,8
  80f6f0:	e440110e 	bge	fp,r17,80f738 <___svfprintf_internal_r+0xf40>
  80f6f4:	18c00404 	addi	r3,r3,16
  80f6f8:	10800044 	addi	r2,r2,1
  80f6fc:	45400015 	stw	r21,0(r8)
  80f700:	47000115 	stw	fp,4(r8)
  80f704:	d8c02015 	stw	r3,128(sp)
  80f708:	d8801f15 	stw	r2,124(sp)
  80f70c:	a0bff60e 	bge	r20,r2,80f6e8 <__alt_data_end+0xff80f6e8>
  80f710:	d9801e04 	addi	r6,sp,120
  80f714:	800b883a 	mov	r5,r16
  80f718:	9809883a 	mov	r4,r19
  80f71c:	08133180 	call	813318 <__ssprint_r>
  80f720:	103d1a1e 	bne	r2,zero,80eb8c <__alt_data_end+0xff80eb8c>
  80f724:	8c7ffc04 	addi	r17,r17,-16
  80f728:	d8c02017 	ldw	r3,128(sp)
  80f72c:	d8801f17 	ldw	r2,124(sp)
  80f730:	da000404 	addi	r8,sp,16
  80f734:	e47fef16 	blt	fp,r17,80f6f4 <__alt_data_end+0xff80f6f4>
  80f738:	9021883a 	mov	r16,r18
  80f73c:	b025883a 	mov	r18,r22
  80f740:	882d883a 	mov	r22,r17
  80f744:	dc403017 	ldw	r17,192(sp)
  80f748:	d9002b17 	ldw	r4,172(sp)
  80f74c:	1d87883a 	add	r3,r3,r22
  80f750:	10800044 	addi	r2,r2,1
  80f754:	41000015 	stw	r4,0(r8)
  80f758:	45800115 	stw	r22,4(r8)
  80f75c:	d8c02015 	stw	r3,128(sp)
  80f760:	d8801f15 	stw	r2,124(sp)
  80f764:	010001c4 	movi	r4,7
  80f768:	20819a16 	blt	r4,r2,80fdd4 <___svfprintf_internal_r+0x15dc>
  80f76c:	42000204 	addi	r8,r8,8
  80f770:	003e3506 	br	80f048 <__alt_data_end+0xff80f048>
  80f774:	d9403317 	ldw	r5,204(sp)
  80f778:	00800044 	movi	r2,1
  80f77c:	18c00044 	addi	r3,r3,1
  80f780:	1141710e 	bge	r2,r5,80fd48 <___svfprintf_internal_r+0x1550>
  80f784:	dc401f17 	ldw	r17,124(sp)
  80f788:	00800044 	movi	r2,1
  80f78c:	40800115 	stw	r2,4(r8)
  80f790:	8c400044 	addi	r17,r17,1
  80f794:	44000015 	stw	r16,0(r8)
  80f798:	d8c02015 	stw	r3,128(sp)
  80f79c:	dc401f15 	stw	r17,124(sp)
  80f7a0:	008001c4 	movi	r2,7
  80f7a4:	14417416 	blt	r2,r17,80fd78 <___svfprintf_internal_r+0x1580>
  80f7a8:	42000204 	addi	r8,r8,8
  80f7ac:	d8803817 	ldw	r2,224(sp)
  80f7b0:	d9003417 	ldw	r4,208(sp)
  80f7b4:	8c400044 	addi	r17,r17,1
  80f7b8:	10c7883a 	add	r3,r2,r3
  80f7bc:	40800115 	stw	r2,4(r8)
  80f7c0:	41000015 	stw	r4,0(r8)
  80f7c4:	d8c02015 	stw	r3,128(sp)
  80f7c8:	dc401f15 	stw	r17,124(sp)
  80f7cc:	008001c4 	movi	r2,7
  80f7d0:	14417216 	blt	r2,r17,80fd9c <___svfprintf_internal_r+0x15a4>
  80f7d4:	45800204 	addi	r22,r8,8
  80f7d8:	d9003617 	ldw	r4,216(sp)
  80f7dc:	d9403717 	ldw	r5,220(sp)
  80f7e0:	000d883a 	mov	r6,zero
  80f7e4:	000f883a 	mov	r7,zero
  80f7e8:	d8c03d15 	stw	r3,244(sp)
  80f7ec:	08169d40 	call	8169d4 <__eqdf2>
  80f7f0:	d8c03d17 	ldw	r3,244(sp)
  80f7f4:	1000b326 	beq	r2,zero,80fac4 <___svfprintf_internal_r+0x12cc>
  80f7f8:	d9403317 	ldw	r5,204(sp)
  80f7fc:	84000044 	addi	r16,r16,1
  80f800:	8c400044 	addi	r17,r17,1
  80f804:	28bfffc4 	addi	r2,r5,-1
  80f808:	1887883a 	add	r3,r3,r2
  80f80c:	b0800115 	stw	r2,4(r22)
  80f810:	b4000015 	stw	r16,0(r22)
  80f814:	d8c02015 	stw	r3,128(sp)
  80f818:	dc401f15 	stw	r17,124(sp)
  80f81c:	008001c4 	movi	r2,7
  80f820:	1440d216 	blt	r2,r17,80fb6c <___svfprintf_internal_r+0x1374>
  80f824:	b5800204 	addi	r22,r22,8
  80f828:	d9003b17 	ldw	r4,236(sp)
  80f82c:	df0022c4 	addi	fp,sp,139
  80f830:	8c400044 	addi	r17,r17,1
  80f834:	20c7883a 	add	r3,r4,r3
  80f838:	b7000015 	stw	fp,0(r22)
  80f83c:	b1000115 	stw	r4,4(r22)
  80f840:	d8c02015 	stw	r3,128(sp)
  80f844:	dc401f15 	stw	r17,124(sp)
  80f848:	008001c4 	movi	r2,7
  80f84c:	14400e16 	blt	r2,r17,80f888 <___svfprintf_internal_r+0x1090>
  80f850:	b2000204 	addi	r8,r22,8
  80f854:	003e3c06 	br	80f148 <__alt_data_end+0xff80f148>
  80f858:	010020b4 	movhi	r4,130
  80f85c:	21328d84 	addi	r4,r4,-13770
  80f860:	d9002b15 	stw	r4,172(sp)
  80f864:	d9002b17 	ldw	r4,172(sp)
  80f868:	1c07883a 	add	r3,r3,r16
  80f86c:	44000115 	stw	r16,4(r8)
  80f870:	41000015 	stw	r4,0(r8)
  80f874:	10800044 	addi	r2,r2,1
  80f878:	d8c02015 	stw	r3,128(sp)
  80f87c:	d8801f15 	stw	r2,124(sp)
  80f880:	010001c4 	movi	r4,7
  80f884:	20be2f0e 	bge	r4,r2,80f144 <__alt_data_end+0xff80f144>
  80f888:	d9402c17 	ldw	r5,176(sp)
  80f88c:	d9801e04 	addi	r6,sp,120
  80f890:	9809883a 	mov	r4,r19
  80f894:	08133180 	call	813318 <__ssprint_r>
  80f898:	103cbc1e 	bne	r2,zero,80eb8c <__alt_data_end+0xff80eb8c>
  80f89c:	d8c02017 	ldw	r3,128(sp)
  80f8a0:	da000404 	addi	r8,sp,16
  80f8a4:	003e2806 	br	80f148 <__alt_data_end+0xff80f148>
  80f8a8:	d9402c17 	ldw	r5,176(sp)
  80f8ac:	d9801e04 	addi	r6,sp,120
  80f8b0:	9809883a 	mov	r4,r19
  80f8b4:	08133180 	call	813318 <__ssprint_r>
  80f8b8:	103e5f26 	beq	r2,zero,80f238 <__alt_data_end+0xff80f238>
  80f8bc:	003cb306 	br	80eb8c <__alt_data_end+0xff80eb8c>
  80f8c0:	d9402c17 	ldw	r5,176(sp)
  80f8c4:	d9801e04 	addi	r6,sp,120
  80f8c8:	9809883a 	mov	r4,r19
  80f8cc:	08133180 	call	813318 <__ssprint_r>
  80f8d0:	103cae1e 	bne	r2,zero,80eb8c <__alt_data_end+0xff80eb8c>
  80f8d4:	d8c02017 	ldw	r3,128(sp)
  80f8d8:	da000404 	addi	r8,sp,16
  80f8dc:	003e0d06 	br	80f114 <__alt_data_end+0xff80f114>
  80f8e0:	d9402c17 	ldw	r5,176(sp)
  80f8e4:	d9801e04 	addi	r6,sp,120
  80f8e8:	9809883a 	mov	r4,r19
  80f8ec:	08133180 	call	813318 <__ssprint_r>
  80f8f0:	103ca61e 	bne	r2,zero,80eb8c <__alt_data_end+0xff80eb8c>
  80f8f4:	d8c02017 	ldw	r3,128(sp)
  80f8f8:	da000404 	addi	r8,sp,16
  80f8fc:	003dc106 	br	80f004 <__alt_data_end+0xff80f004>
  80f900:	d9402c17 	ldw	r5,176(sp)
  80f904:	d9801e04 	addi	r6,sp,120
  80f908:	9809883a 	mov	r4,r19
  80f90c:	08133180 	call	813318 <__ssprint_r>
  80f910:	103c9e1e 	bne	r2,zero,80eb8c <__alt_data_end+0xff80eb8c>
  80f914:	d8c02017 	ldw	r3,128(sp)
  80f918:	da000404 	addi	r8,sp,16
  80f91c:	003dc706 	br	80f03c <__alt_data_end+0xff80f03c>
  80f920:	d8802917 	ldw	r2,164(sp)
  80f924:	d8002785 	stb	zero,158(sp)
  80f928:	103f0816 	blt	r2,zero,80f54c <__alt_data_end+0xff80f54c>
  80f92c:	00ffdfc4 	movi	r3,-129
  80f930:	a584b03a 	or	r2,r20,r22
  80f934:	90e4703a 	and	r18,r18,r3
  80f938:	103c8126 	beq	r2,zero,80eb40 <__alt_data_end+0xff80eb40>
  80f93c:	0039883a 	mov	fp,zero
  80f940:	003e7606 	br	80f31c <__alt_data_end+0xff80f31c>
  80f944:	9080040c 	andi	r2,r18,16
  80f948:	10013d26 	beq	r2,zero,80fe40 <___svfprintf_internal_r+0x1648>
  80f94c:	d9002d17 	ldw	r4,180(sp)
  80f950:	d9402917 	ldw	r5,164(sp)
  80f954:	d8002785 	stb	zero,158(sp)
  80f958:	20800104 	addi	r2,r4,4
  80f95c:	25000017 	ldw	r20,0(r4)
  80f960:	002d883a 	mov	r22,zero
  80f964:	28013f16 	blt	r5,zero,80fe64 <___svfprintf_internal_r+0x166c>
  80f968:	00ffdfc4 	movi	r3,-129
  80f96c:	d8802d15 	stw	r2,180(sp)
  80f970:	90e4703a 	and	r18,r18,r3
  80f974:	a03d2b26 	beq	r20,zero,80ee24 <__alt_data_end+0xff80ee24>
  80f978:	0039883a 	mov	fp,zero
  80f97c:	003d2e06 	br	80ee38 <__alt_data_end+0xff80ee38>
  80f980:	dc402617 	ldw	r17,152(sp)
  80f984:	0441830e 	bge	zero,r17,80ff94 <___svfprintf_internal_r+0x179c>
  80f988:	dc403217 	ldw	r17,200(sp)
  80f98c:	d8803317 	ldw	r2,204(sp)
  80f990:	1440010e 	bge	r2,r17,80f998 <___svfprintf_internal_r+0x11a0>
  80f994:	1023883a 	mov	r17,r2
  80f998:	04400a0e 	bge	zero,r17,80f9c4 <___svfprintf_internal_r+0x11cc>
  80f99c:	d8801f17 	ldw	r2,124(sp)
  80f9a0:	1c47883a 	add	r3,r3,r17
  80f9a4:	44000015 	stw	r16,0(r8)
  80f9a8:	10800044 	addi	r2,r2,1
  80f9ac:	44400115 	stw	r17,4(r8)
  80f9b0:	d8c02015 	stw	r3,128(sp)
  80f9b4:	d8801f15 	stw	r2,124(sp)
  80f9b8:	010001c4 	movi	r4,7
  80f9bc:	20827516 	blt	r4,r2,810394 <___svfprintf_internal_r+0x1b9c>
  80f9c0:	42000204 	addi	r8,r8,8
  80f9c4:	88027b16 	blt	r17,zero,8103b4 <___svfprintf_internal_r+0x1bbc>
  80f9c8:	d9003217 	ldw	r4,200(sp)
  80f9cc:	2463c83a 	sub	r17,r4,r17
  80f9d0:	0440990e 	bge	zero,r17,80fc38 <___svfprintf_internal_r+0x1440>
  80f9d4:	05800404 	movi	r22,16
  80f9d8:	d8801f17 	ldw	r2,124(sp)
  80f9dc:	b441530e 	bge	r22,r17,80ff2c <___svfprintf_internal_r+0x1734>
  80f9e0:	010020b4 	movhi	r4,130
  80f9e4:	21328d84 	addi	r4,r4,-13770
  80f9e8:	d9002b15 	stw	r4,172(sp)
  80f9ec:	070001c4 	movi	fp,7
  80f9f0:	dd002c17 	ldw	r20,176(sp)
  80f9f4:	00000306 	br	80fa04 <___svfprintf_internal_r+0x120c>
  80f9f8:	42000204 	addi	r8,r8,8
  80f9fc:	8c7ffc04 	addi	r17,r17,-16
  80fa00:	b4414d0e 	bge	r22,r17,80ff38 <___svfprintf_internal_r+0x1740>
  80fa04:	18c00404 	addi	r3,r3,16
  80fa08:	10800044 	addi	r2,r2,1
  80fa0c:	45400015 	stw	r21,0(r8)
  80fa10:	45800115 	stw	r22,4(r8)
  80fa14:	d8c02015 	stw	r3,128(sp)
  80fa18:	d8801f15 	stw	r2,124(sp)
  80fa1c:	e0bff60e 	bge	fp,r2,80f9f8 <__alt_data_end+0xff80f9f8>
  80fa20:	d9801e04 	addi	r6,sp,120
  80fa24:	a00b883a 	mov	r5,r20
  80fa28:	9809883a 	mov	r4,r19
  80fa2c:	08133180 	call	813318 <__ssprint_r>
  80fa30:	103c561e 	bne	r2,zero,80eb8c <__alt_data_end+0xff80eb8c>
  80fa34:	d8c02017 	ldw	r3,128(sp)
  80fa38:	d8801f17 	ldw	r2,124(sp)
  80fa3c:	da000404 	addi	r8,sp,16
  80fa40:	003fee06 	br	80f9fc <__alt_data_end+0xff80f9fc>
  80fa44:	d9402c17 	ldw	r5,176(sp)
  80fa48:	d9801e04 	addi	r6,sp,120
  80fa4c:	9809883a 	mov	r4,r19
  80fa50:	08133180 	call	813318 <__ssprint_r>
  80fa54:	103c4d1e 	bne	r2,zero,80eb8c <__alt_data_end+0xff80eb8c>
  80fa58:	d8c02017 	ldw	r3,128(sp)
  80fa5c:	df002787 	ldb	fp,158(sp)
  80fa60:	da000404 	addi	r8,sp,16
  80fa64:	003d5a06 	br	80efd0 <__alt_data_end+0xff80efd0>
  80fa68:	9080040c 	andi	r2,r18,16
  80fa6c:	10005c26 	beq	r2,zero,80fbe0 <___svfprintf_internal_r+0x13e8>
  80fa70:	d9402d17 	ldw	r5,180(sp)
  80fa74:	d8c02917 	ldw	r3,164(sp)
  80fa78:	d8002785 	stb	zero,158(sp)
  80fa7c:	28800104 	addi	r2,r5,4
  80fa80:	2d000017 	ldw	r20,0(r5)
  80fa84:	002d883a 	mov	r22,zero
  80fa88:	18005e16 	blt	r3,zero,80fc04 <___svfprintf_internal_r+0x140c>
  80fa8c:	00ffdfc4 	movi	r3,-129
  80fa90:	d8802d15 	stw	r2,180(sp)
  80fa94:	90e4703a 	and	r18,r18,r3
  80fa98:	0039883a 	mov	fp,zero
  80fa9c:	a03dfe26 	beq	r20,zero,80f298 <__alt_data_end+0xff80f298>
  80faa0:	00800244 	movi	r2,9
  80faa4:	153cb336 	bltu	r2,r20,80ed74 <__alt_data_end+0xff80ed74>
  80faa8:	a5000c04 	addi	r20,r20,48
  80faac:	dc001dc4 	addi	r16,sp,119
  80fab0:	dd001dc5 	stb	r20,119(sp)
  80fab4:	d8c02817 	ldw	r3,160(sp)
  80fab8:	1c07c83a 	sub	r3,r3,r16
  80fabc:	d8c02e15 	stw	r3,184(sp)
  80fac0:	003cf506 	br	80ee98 <__alt_data_end+0xff80ee98>
  80fac4:	d8803317 	ldw	r2,204(sp)
  80fac8:	143fffc4 	addi	r16,r2,-1
  80facc:	043f560e 	bge	zero,r16,80f828 <__alt_data_end+0xff80f828>
  80fad0:	07000404 	movi	fp,16
  80fad4:	e403530e 	bge	fp,r16,810824 <___svfprintf_internal_r+0x202c>
  80fad8:	014020b4 	movhi	r5,130
  80fadc:	29728d84 	addi	r5,r5,-13770
  80fae0:	d9402b15 	stw	r5,172(sp)
  80fae4:	01c001c4 	movi	r7,7
  80fae8:	dd002c17 	ldw	r20,176(sp)
  80faec:	00000306 	br	80fafc <___svfprintf_internal_r+0x1304>
  80faf0:	843ffc04 	addi	r16,r16,-16
  80faf4:	b5800204 	addi	r22,r22,8
  80faf8:	e400130e 	bge	fp,r16,80fb48 <___svfprintf_internal_r+0x1350>
  80fafc:	18c00404 	addi	r3,r3,16
  80fb00:	8c400044 	addi	r17,r17,1
  80fb04:	b5400015 	stw	r21,0(r22)
  80fb08:	b7000115 	stw	fp,4(r22)
  80fb0c:	d8c02015 	stw	r3,128(sp)
  80fb10:	dc401f15 	stw	r17,124(sp)
  80fb14:	3c7ff60e 	bge	r7,r17,80faf0 <__alt_data_end+0xff80faf0>
  80fb18:	d9801e04 	addi	r6,sp,120
  80fb1c:	a00b883a 	mov	r5,r20
  80fb20:	9809883a 	mov	r4,r19
  80fb24:	d9c03d15 	stw	r7,244(sp)
  80fb28:	08133180 	call	813318 <__ssprint_r>
  80fb2c:	d9c03d17 	ldw	r7,244(sp)
  80fb30:	103c161e 	bne	r2,zero,80eb8c <__alt_data_end+0xff80eb8c>
  80fb34:	843ffc04 	addi	r16,r16,-16
  80fb38:	d8c02017 	ldw	r3,128(sp)
  80fb3c:	dc401f17 	ldw	r17,124(sp)
  80fb40:	dd800404 	addi	r22,sp,16
  80fb44:	e43fed16 	blt	fp,r16,80fafc <__alt_data_end+0xff80fafc>
  80fb48:	d8802b17 	ldw	r2,172(sp)
  80fb4c:	1c07883a 	add	r3,r3,r16
  80fb50:	8c400044 	addi	r17,r17,1
  80fb54:	b0800015 	stw	r2,0(r22)
  80fb58:	b4000115 	stw	r16,4(r22)
  80fb5c:	d8c02015 	stw	r3,128(sp)
  80fb60:	dc401f15 	stw	r17,124(sp)
  80fb64:	008001c4 	movi	r2,7
  80fb68:	147f2e0e 	bge	r2,r17,80f824 <__alt_data_end+0xff80f824>
  80fb6c:	d9402c17 	ldw	r5,176(sp)
  80fb70:	d9801e04 	addi	r6,sp,120
  80fb74:	9809883a 	mov	r4,r19
  80fb78:	08133180 	call	813318 <__ssprint_r>
  80fb7c:	103c031e 	bne	r2,zero,80eb8c <__alt_data_end+0xff80eb8c>
  80fb80:	d8c02017 	ldw	r3,128(sp)
  80fb84:	dc401f17 	ldw	r17,124(sp)
  80fb88:	dd800404 	addi	r22,sp,16
  80fb8c:	003f2606 	br	80f828 <__alt_data_end+0xff80f828>
  80fb90:	9080040c 	andi	r2,r18,16
  80fb94:	1000c326 	beq	r2,zero,80fea4 <___svfprintf_internal_r+0x16ac>
  80fb98:	d8802d17 	ldw	r2,180(sp)
  80fb9c:	15000017 	ldw	r20,0(r2)
  80fba0:	10800104 	addi	r2,r2,4
  80fba4:	d8802d15 	stw	r2,180(sp)
  80fba8:	a02dd7fa 	srai	r22,r20,31
  80fbac:	b005883a 	mov	r2,r22
  80fbb0:	103c680e 	bge	r2,zero,80ed54 <__alt_data_end+0xff80ed54>
  80fbb4:	0529c83a 	sub	r20,zero,r20
  80fbb8:	a004c03a 	cmpne	r2,r20,zero
  80fbbc:	05adc83a 	sub	r22,zero,r22
  80fbc0:	b0adc83a 	sub	r22,r22,r2
  80fbc4:	d8802917 	ldw	r2,164(sp)
  80fbc8:	07000b44 	movi	fp,45
  80fbcc:	df002785 	stb	fp,158(sp)
  80fbd0:	10022e16 	blt	r2,zero,81048c <___svfprintf_internal_r+0x1c94>
  80fbd4:	00bfdfc4 	movi	r2,-129
  80fbd8:	90a4703a 	and	r18,r18,r2
  80fbdc:	003c6406 	br	80ed70 <__alt_data_end+0xff80ed70>
  80fbe0:	9080100c 	andi	r2,r18,64
  80fbe4:	d8002785 	stb	zero,158(sp)
  80fbe8:	10012526 	beq	r2,zero,810080 <___svfprintf_internal_r+0x1888>
  80fbec:	d9002d17 	ldw	r4,180(sp)
  80fbf0:	d9402917 	ldw	r5,164(sp)
  80fbf4:	002d883a 	mov	r22,zero
  80fbf8:	20800104 	addi	r2,r4,4
  80fbfc:	2500000b 	ldhu	r20,0(r4)
  80fc00:	283fa20e 	bge	r5,zero,80fa8c <__alt_data_end+0xff80fa8c>
  80fc04:	d8802d15 	stw	r2,180(sp)
  80fc08:	0039883a 	mov	fp,zero
  80fc0c:	a584b03a 	or	r2,r20,r22
  80fc10:	103c571e 	bne	r2,zero,80ed70 <__alt_data_end+0xff80ed70>
  80fc14:	00800044 	movi	r2,1
  80fc18:	003e5006 	br	80f55c <__alt_data_end+0xff80f55c>
  80fc1c:	d9402c17 	ldw	r5,176(sp)
  80fc20:	d9801e04 	addi	r6,sp,120
  80fc24:	9809883a 	mov	r4,r19
  80fc28:	08133180 	call	813318 <__ssprint_r>
  80fc2c:	103bd71e 	bne	r2,zero,80eb8c <__alt_data_end+0xff80eb8c>
  80fc30:	d8c02017 	ldw	r3,128(sp)
  80fc34:	da000404 	addi	r8,sp,16
  80fc38:	d9003217 	ldw	r4,200(sp)
  80fc3c:	d8802617 	ldw	r2,152(sp)
  80fc40:	d9403317 	ldw	r5,204(sp)
  80fc44:	8123883a 	add	r17,r16,r4
  80fc48:	11400216 	blt	r2,r5,80fc54 <___svfprintf_internal_r+0x145c>
  80fc4c:	9100004c 	andi	r4,r18,1
  80fc50:	20000d26 	beq	r4,zero,80fc88 <___svfprintf_internal_r+0x1490>
  80fc54:	d9003817 	ldw	r4,224(sp)
  80fc58:	d9403417 	ldw	r5,208(sp)
  80fc5c:	1907883a 	add	r3,r3,r4
  80fc60:	d9001f17 	ldw	r4,124(sp)
  80fc64:	41400015 	stw	r5,0(r8)
  80fc68:	d9403817 	ldw	r5,224(sp)
  80fc6c:	21000044 	addi	r4,r4,1
  80fc70:	d8c02015 	stw	r3,128(sp)
  80fc74:	41400115 	stw	r5,4(r8)
  80fc78:	d9001f15 	stw	r4,124(sp)
  80fc7c:	014001c4 	movi	r5,7
  80fc80:	2901dc16 	blt	r5,r4,8103f4 <___svfprintf_internal_r+0x1bfc>
  80fc84:	42000204 	addi	r8,r8,8
  80fc88:	d9003317 	ldw	r4,204(sp)
  80fc8c:	8121883a 	add	r16,r16,r4
  80fc90:	2085c83a 	sub	r2,r4,r2
  80fc94:	8461c83a 	sub	r16,r16,r17
  80fc98:	1400010e 	bge	r2,r16,80fca0 <___svfprintf_internal_r+0x14a8>
  80fc9c:	1021883a 	mov	r16,r2
  80fca0:	04000a0e 	bge	zero,r16,80fccc <___svfprintf_internal_r+0x14d4>
  80fca4:	d9001f17 	ldw	r4,124(sp)
  80fca8:	1c07883a 	add	r3,r3,r16
  80fcac:	44400015 	stw	r17,0(r8)
  80fcb0:	21000044 	addi	r4,r4,1
  80fcb4:	44000115 	stw	r16,4(r8)
  80fcb8:	d8c02015 	stw	r3,128(sp)
  80fcbc:	d9001f15 	stw	r4,124(sp)
  80fcc0:	014001c4 	movi	r5,7
  80fcc4:	2901e616 	blt	r5,r4,810460 <___svfprintf_internal_r+0x1c68>
  80fcc8:	42000204 	addi	r8,r8,8
  80fccc:	8001f616 	blt	r16,zero,8104a8 <___svfprintf_internal_r+0x1cb0>
  80fcd0:	1421c83a 	sub	r16,r2,r16
  80fcd4:	043d1c0e 	bge	zero,r16,80f148 <__alt_data_end+0xff80f148>
  80fcd8:	04400404 	movi	r17,16
  80fcdc:	d8801f17 	ldw	r2,124(sp)
  80fce0:	8c3edd0e 	bge	r17,r16,80f858 <__alt_data_end+0xff80f858>
  80fce4:	014020b4 	movhi	r5,130
  80fce8:	29728d84 	addi	r5,r5,-13770
  80fcec:	d9402b15 	stw	r5,172(sp)
  80fcf0:	058001c4 	movi	r22,7
  80fcf4:	dd002c17 	ldw	r20,176(sp)
  80fcf8:	00000306 	br	80fd08 <___svfprintf_internal_r+0x1510>
  80fcfc:	42000204 	addi	r8,r8,8
  80fd00:	843ffc04 	addi	r16,r16,-16
  80fd04:	8c3ed70e 	bge	r17,r16,80f864 <__alt_data_end+0xff80f864>
  80fd08:	18c00404 	addi	r3,r3,16
  80fd0c:	10800044 	addi	r2,r2,1
  80fd10:	45400015 	stw	r21,0(r8)
  80fd14:	44400115 	stw	r17,4(r8)
  80fd18:	d8c02015 	stw	r3,128(sp)
  80fd1c:	d8801f15 	stw	r2,124(sp)
  80fd20:	b0bff60e 	bge	r22,r2,80fcfc <__alt_data_end+0xff80fcfc>
  80fd24:	d9801e04 	addi	r6,sp,120
  80fd28:	a00b883a 	mov	r5,r20
  80fd2c:	9809883a 	mov	r4,r19
  80fd30:	08133180 	call	813318 <__ssprint_r>
  80fd34:	103b951e 	bne	r2,zero,80eb8c <__alt_data_end+0xff80eb8c>
  80fd38:	d8c02017 	ldw	r3,128(sp)
  80fd3c:	d8801f17 	ldw	r2,124(sp)
  80fd40:	da000404 	addi	r8,sp,16
  80fd44:	003fee06 	br	80fd00 <__alt_data_end+0xff80fd00>
  80fd48:	9088703a 	and	r4,r18,r2
  80fd4c:	203e8d1e 	bne	r4,zero,80f784 <__alt_data_end+0xff80f784>
  80fd50:	dc401f17 	ldw	r17,124(sp)
  80fd54:	40800115 	stw	r2,4(r8)
  80fd58:	44000015 	stw	r16,0(r8)
  80fd5c:	8c400044 	addi	r17,r17,1
  80fd60:	d8c02015 	stw	r3,128(sp)
  80fd64:	dc401f15 	stw	r17,124(sp)
  80fd68:	008001c4 	movi	r2,7
  80fd6c:	147f7f16 	blt	r2,r17,80fb6c <__alt_data_end+0xff80fb6c>
  80fd70:	45800204 	addi	r22,r8,8
  80fd74:	003eac06 	br	80f828 <__alt_data_end+0xff80f828>
  80fd78:	d9402c17 	ldw	r5,176(sp)
  80fd7c:	d9801e04 	addi	r6,sp,120
  80fd80:	9809883a 	mov	r4,r19
  80fd84:	08133180 	call	813318 <__ssprint_r>
  80fd88:	103b801e 	bne	r2,zero,80eb8c <__alt_data_end+0xff80eb8c>
  80fd8c:	d8c02017 	ldw	r3,128(sp)
  80fd90:	dc401f17 	ldw	r17,124(sp)
  80fd94:	da000404 	addi	r8,sp,16
  80fd98:	003e8406 	br	80f7ac <__alt_data_end+0xff80f7ac>
  80fd9c:	d9402c17 	ldw	r5,176(sp)
  80fda0:	d9801e04 	addi	r6,sp,120
  80fda4:	9809883a 	mov	r4,r19
  80fda8:	08133180 	call	813318 <__ssprint_r>
  80fdac:	103b771e 	bne	r2,zero,80eb8c <__alt_data_end+0xff80eb8c>
  80fdb0:	d8c02017 	ldw	r3,128(sp)
  80fdb4:	dc401f17 	ldw	r17,124(sp)
  80fdb8:	dd800404 	addi	r22,sp,16
  80fdbc:	003e8606 	br	80f7d8 <__alt_data_end+0xff80f7d8>
  80fdc0:	0029883a 	mov	r20,zero
  80fdc4:	a5000c04 	addi	r20,r20,48
  80fdc8:	dc001dc4 	addi	r16,sp,119
  80fdcc:	dd001dc5 	stb	r20,119(sp)
  80fdd0:	003f3806 	br	80fab4 <__alt_data_end+0xff80fab4>
  80fdd4:	d9402c17 	ldw	r5,176(sp)
  80fdd8:	d9801e04 	addi	r6,sp,120
  80fddc:	9809883a 	mov	r4,r19
  80fde0:	08133180 	call	813318 <__ssprint_r>
  80fde4:	103b691e 	bne	r2,zero,80eb8c <__alt_data_end+0xff80eb8c>
  80fde8:	d8c02017 	ldw	r3,128(sp)
  80fdec:	da000404 	addi	r8,sp,16
  80fdf0:	003c9506 	br	80f048 <__alt_data_end+0xff80f048>
  80fdf4:	d9003617 	ldw	r4,216(sp)
  80fdf8:	d9403717 	ldw	r5,220(sp)
  80fdfc:	da003e15 	stw	r8,248(sp)
  80fe00:	080af580 	call	80af58 <__fpclassifyd>
  80fe04:	da003e17 	ldw	r8,248(sp)
  80fe08:	1000bd1e 	bne	r2,zero,810100 <___svfprintf_internal_r+0x1908>
  80fe0c:	008011c4 	movi	r2,71
  80fe10:	14411e0e 	bge	r2,r17,81028c <___svfprintf_internal_r+0x1a94>
  80fe14:	040020b4 	movhi	r16,130
  80fe18:	84316704 	addi	r16,r16,-14948
  80fe1c:	00c000c4 	movi	r3,3
  80fe20:	00bfdfc4 	movi	r2,-129
  80fe24:	d8c02a15 	stw	r3,168(sp)
  80fe28:	90a4703a 	and	r18,r18,r2
  80fe2c:	df002783 	ldbu	fp,158(sp)
  80fe30:	d8c02e15 	stw	r3,184(sp)
  80fe34:	d8002915 	stw	zero,164(sp)
  80fe38:	d8003215 	stw	zero,200(sp)
  80fe3c:	003c1c06 	br	80eeb0 <__alt_data_end+0xff80eeb0>
  80fe40:	9080100c 	andi	r2,r18,64
  80fe44:	d8002785 	stb	zero,158(sp)
  80fe48:	10009426 	beq	r2,zero,81009c <___svfprintf_internal_r+0x18a4>
  80fe4c:	d8c02d17 	ldw	r3,180(sp)
  80fe50:	d9002917 	ldw	r4,164(sp)
  80fe54:	002d883a 	mov	r22,zero
  80fe58:	18800104 	addi	r2,r3,4
  80fe5c:	1d00000b 	ldhu	r20,0(r3)
  80fe60:	203ec10e 	bge	r4,zero,80f968 <__alt_data_end+0xff80f968>
  80fe64:	a586b03a 	or	r3,r20,r22
  80fe68:	d8802d15 	stw	r2,180(sp)
  80fe6c:	183ec21e 	bne	r3,zero,80f978 <__alt_data_end+0xff80f978>
  80fe70:	0039883a 	mov	fp,zero
  80fe74:	0005883a 	mov	r2,zero
  80fe78:	003db806 	br	80f55c <__alt_data_end+0xff80f55c>
  80fe7c:	d8802d17 	ldw	r2,180(sp)
  80fe80:	d8c02d17 	ldw	r3,180(sp)
  80fe84:	d9002d17 	ldw	r4,180(sp)
  80fe88:	10800017 	ldw	r2,0(r2)
  80fe8c:	18c00117 	ldw	r3,4(r3)
  80fe90:	21000204 	addi	r4,r4,8
  80fe94:	d8803615 	stw	r2,216(sp)
  80fe98:	d8c03715 	stw	r3,220(sp)
  80fe9c:	d9002d15 	stw	r4,180(sp)
  80fea0:	003b8206 	br	80ecac <__alt_data_end+0xff80ecac>
  80fea4:	9080100c 	andi	r2,r18,64
  80fea8:	10010726 	beq	r2,zero,8102c8 <___svfprintf_internal_r+0x1ad0>
  80feac:	d8c02d17 	ldw	r3,180(sp)
  80feb0:	1d00000f 	ldh	r20,0(r3)
  80feb4:	18c00104 	addi	r3,r3,4
  80feb8:	d8c02d15 	stw	r3,180(sp)
  80febc:	a02dd7fa 	srai	r22,r20,31
  80fec0:	b005883a 	mov	r2,r22
  80fec4:	003ba206 	br	80ed50 <__alt_data_end+0xff80ed50>
  80fec8:	9080100c 	andi	r2,r18,64
  80fecc:	10010526 	beq	r2,zero,8102e4 <___svfprintf_internal_r+0x1aec>
  80fed0:	d9002d17 	ldw	r4,180(sp)
  80fed4:	002d883a 	mov	r22,zero
  80fed8:	2500000b 	ldhu	r20,0(r4)
  80fedc:	21000104 	addi	r4,r4,4
  80fee0:	d9002d15 	stw	r4,180(sp)
  80fee4:	003cfe06 	br	80f2e0 <__alt_data_end+0xff80f2e0>
  80fee8:	bc400007 	ldb	r17,0(r23)
  80feec:	003a9606 	br	80e948 <__alt_data_end+0xff80e948>
  80fef0:	9080040c 	andi	r2,r18,16
  80fef4:	10010126 	beq	r2,zero,8102fc <___svfprintf_internal_r+0x1b04>
  80fef8:	d9402d17 	ldw	r5,180(sp)
  80fefc:	d8c02f17 	ldw	r3,188(sp)
  80ff00:	28800017 	ldw	r2,0(r5)
  80ff04:	29400104 	addi	r5,r5,4
  80ff08:	d9402d15 	stw	r5,180(sp)
  80ff0c:	10c00015 	stw	r3,0(r2)
  80ff10:	003a6406 	br	80e8a4 <__alt_data_end+0xff80e8a4>
  80ff14:	d9002917 	ldw	r4,164(sp)
  80ff18:	d8002785 	stb	zero,158(sp)
  80ff1c:	203d8d16 	blt	r4,zero,80f554 <__alt_data_end+0xff80f554>
  80ff20:	00bfdfc4 	movi	r2,-129
  80ff24:	90a4703a 	and	r18,r18,r2
  80ff28:	003b0506 	br	80eb40 <__alt_data_end+0xff80eb40>
  80ff2c:	014020b4 	movhi	r5,130
  80ff30:	29728d84 	addi	r5,r5,-13770
  80ff34:	d9402b15 	stw	r5,172(sp)
  80ff38:	d9402b17 	ldw	r5,172(sp)
  80ff3c:	1c47883a 	add	r3,r3,r17
  80ff40:	10800044 	addi	r2,r2,1
  80ff44:	41400015 	stw	r5,0(r8)
  80ff48:	44400115 	stw	r17,4(r8)
  80ff4c:	d8c02015 	stw	r3,128(sp)
  80ff50:	d8801f15 	stw	r2,124(sp)
  80ff54:	010001c4 	movi	r4,7
  80ff58:	20bf3016 	blt	r4,r2,80fc1c <__alt_data_end+0xff80fc1c>
  80ff5c:	42000204 	addi	r8,r8,8
  80ff60:	003f3506 	br	80fc38 <__alt_data_end+0xff80fc38>
  80ff64:	010020b4 	movhi	r4,130
  80ff68:	21328d84 	addi	r4,r4,-13770
  80ff6c:	d9002b15 	stw	r4,172(sp)
  80ff70:	003c5e06 	br	80f0ec <__alt_data_end+0xff80f0ec>
  80ff74:	d9402c17 	ldw	r5,176(sp)
  80ff78:	d9801e04 	addi	r6,sp,120
  80ff7c:	9809883a 	mov	r4,r19
  80ff80:	08133180 	call	813318 <__ssprint_r>
  80ff84:	103b011e 	bne	r2,zero,80eb8c <__alt_data_end+0xff80eb8c>
  80ff88:	d8c02017 	ldw	r3,128(sp)
  80ff8c:	da000404 	addi	r8,sp,16
  80ff90:	003d9306 	br	80f5e0 <__alt_data_end+0xff80f5e0>
  80ff94:	d8801f17 	ldw	r2,124(sp)
  80ff98:	014020b4 	movhi	r5,130
  80ff9c:	01000044 	movi	r4,1
  80ffa0:	18c00044 	addi	r3,r3,1
  80ffa4:	10800044 	addi	r2,r2,1
  80ffa8:	29717404 	addi	r5,r5,-14896
  80ffac:	41000115 	stw	r4,4(r8)
  80ffb0:	41400015 	stw	r5,0(r8)
  80ffb4:	d8c02015 	stw	r3,128(sp)
  80ffb8:	d8801f15 	stw	r2,124(sp)
  80ffbc:	010001c4 	movi	r4,7
  80ffc0:	2080b516 	blt	r4,r2,810298 <___svfprintf_internal_r+0x1aa0>
  80ffc4:	42000204 	addi	r8,r8,8
  80ffc8:	8800041e 	bne	r17,zero,80ffdc <___svfprintf_internal_r+0x17e4>
  80ffcc:	d8803317 	ldw	r2,204(sp)
  80ffd0:	1000021e 	bne	r2,zero,80ffdc <___svfprintf_internal_r+0x17e4>
  80ffd4:	9080004c 	andi	r2,r18,1
  80ffd8:	103c5b26 	beq	r2,zero,80f148 <__alt_data_end+0xff80f148>
  80ffdc:	d9003817 	ldw	r4,224(sp)
  80ffe0:	d8801f17 	ldw	r2,124(sp)
  80ffe4:	d9403417 	ldw	r5,208(sp)
  80ffe8:	20c7883a 	add	r3,r4,r3
  80ffec:	10800044 	addi	r2,r2,1
  80fff0:	41000115 	stw	r4,4(r8)
  80fff4:	41400015 	stw	r5,0(r8)
  80fff8:	d8c02015 	stw	r3,128(sp)
  80fffc:	d8801f15 	stw	r2,124(sp)
  810000:	010001c4 	movi	r4,7
  810004:	20818016 	blt	r4,r2,810608 <___svfprintf_internal_r+0x1e10>
  810008:	42000204 	addi	r8,r8,8
  81000c:	0463c83a 	sub	r17,zero,r17
  810010:	0440cb0e 	bge	zero,r17,810340 <___svfprintf_internal_r+0x1b48>
  810014:	05800404 	movi	r22,16
  810018:	b440e80e 	bge	r22,r17,8103bc <___svfprintf_internal_r+0x1bc4>
  81001c:	014020b4 	movhi	r5,130
  810020:	29728d84 	addi	r5,r5,-13770
  810024:	d9402b15 	stw	r5,172(sp)
  810028:	070001c4 	movi	fp,7
  81002c:	dd002c17 	ldw	r20,176(sp)
  810030:	00000306 	br	810040 <___svfprintf_internal_r+0x1848>
  810034:	42000204 	addi	r8,r8,8
  810038:	8c7ffc04 	addi	r17,r17,-16
  81003c:	b440e20e 	bge	r22,r17,8103c8 <___svfprintf_internal_r+0x1bd0>
  810040:	18c00404 	addi	r3,r3,16
  810044:	10800044 	addi	r2,r2,1
  810048:	45400015 	stw	r21,0(r8)
  81004c:	45800115 	stw	r22,4(r8)
  810050:	d8c02015 	stw	r3,128(sp)
  810054:	d8801f15 	stw	r2,124(sp)
  810058:	e0bff60e 	bge	fp,r2,810034 <__alt_data_end+0xff810034>
  81005c:	d9801e04 	addi	r6,sp,120
  810060:	a00b883a 	mov	r5,r20
  810064:	9809883a 	mov	r4,r19
  810068:	08133180 	call	813318 <__ssprint_r>
  81006c:	103ac71e 	bne	r2,zero,80eb8c <__alt_data_end+0xff80eb8c>
  810070:	d8c02017 	ldw	r3,128(sp)
  810074:	d8801f17 	ldw	r2,124(sp)
  810078:	da000404 	addi	r8,sp,16
  81007c:	003fee06 	br	810038 <__alt_data_end+0xff810038>
  810080:	d8c02d17 	ldw	r3,180(sp)
  810084:	d9002917 	ldw	r4,164(sp)
  810088:	002d883a 	mov	r22,zero
  81008c:	18800104 	addi	r2,r3,4
  810090:	1d000017 	ldw	r20,0(r3)
  810094:	203e7d0e 	bge	r4,zero,80fa8c <__alt_data_end+0xff80fa8c>
  810098:	003eda06 	br	80fc04 <__alt_data_end+0xff80fc04>
  81009c:	d9402d17 	ldw	r5,180(sp)
  8100a0:	d8c02917 	ldw	r3,164(sp)
  8100a4:	002d883a 	mov	r22,zero
  8100a8:	28800104 	addi	r2,r5,4
  8100ac:	2d000017 	ldw	r20,0(r5)
  8100b0:	183e2d0e 	bge	r3,zero,80f968 <__alt_data_end+0xff80f968>
  8100b4:	003f6b06 	br	80fe64 <__alt_data_end+0xff80fe64>
  8100b8:	d8c02d15 	stw	r3,180(sp)
  8100bc:	0039883a 	mov	fp,zero
  8100c0:	003ed206 	br	80fc0c <__alt_data_end+0xff80fc0c>
  8100c4:	bc400043 	ldbu	r17,1(r23)
  8100c8:	94800814 	ori	r18,r18,32
  8100cc:	bdc00044 	addi	r23,r23,1
  8100d0:	8c403fcc 	andi	r17,r17,255
  8100d4:	8c40201c 	xori	r17,r17,128
  8100d8:	8c7fe004 	addi	r17,r17,-128
  8100dc:	003a1a06 	br	80e948 <__alt_data_end+0xff80e948>
  8100e0:	d9402c17 	ldw	r5,176(sp)
  8100e4:	d9801e04 	addi	r6,sp,120
  8100e8:	9809883a 	mov	r4,r19
  8100ec:	08133180 	call	813318 <__ssprint_r>
  8100f0:	103aa61e 	bne	r2,zero,80eb8c <__alt_data_end+0xff80eb8c>
  8100f4:	d8c02017 	ldw	r3,128(sp)
  8100f8:	da000404 	addi	r8,sp,16
  8100fc:	003d4a06 	br	80f628 <__alt_data_end+0xff80f628>
  810100:	d9002917 	ldw	r4,164(sp)
  810104:	05bff7c4 	movi	r22,-33
  810108:	00bfffc4 	movi	r2,-1
  81010c:	8dac703a 	and	r22,r17,r22
  810110:	20806a26 	beq	r4,r2,8102bc <___svfprintf_internal_r+0x1ac4>
  810114:	008011c4 	movi	r2,71
  810118:	b0813726 	beq	r22,r2,8105f8 <___svfprintf_internal_r+0x1e00>
  81011c:	d9003717 	ldw	r4,220(sp)
  810120:	90c04014 	ori	r3,r18,256
  810124:	d8c02b15 	stw	r3,172(sp)
  810128:	20015d16 	blt	r4,zero,8106a0 <___svfprintf_internal_r+0x1ea8>
  81012c:	dd003717 	ldw	r20,220(sp)
  810130:	d8002a05 	stb	zero,168(sp)
  810134:	00801984 	movi	r2,102
  810138:	88814026 	beq	r17,r2,81063c <___svfprintf_internal_r+0x1e44>
  81013c:	00801184 	movi	r2,70
  810140:	88817126 	beq	r17,r2,810708 <___svfprintf_internal_r+0x1f10>
  810144:	00801144 	movi	r2,69
  810148:	b0816226 	beq	r22,r2,8106d4 <___svfprintf_internal_r+0x1edc>
  81014c:	d8c02917 	ldw	r3,164(sp)
  810150:	d8802104 	addi	r2,sp,132
  810154:	d8800315 	stw	r2,12(sp)
  810158:	d9403617 	ldw	r5,216(sp)
  81015c:	d8802504 	addi	r2,sp,148
  810160:	d8800215 	stw	r2,8(sp)
  810164:	d8802604 	addi	r2,sp,152
  810168:	d8c00015 	stw	r3,0(sp)
  81016c:	d8800115 	stw	r2,4(sp)
  810170:	01c00084 	movi	r7,2
  810174:	a00d883a 	mov	r6,r20
  810178:	9809883a 	mov	r4,r19
  81017c:	d8c03d15 	stw	r3,244(sp)
  810180:	da003e15 	stw	r8,248(sp)
  810184:	08074d40 	call	8074d4 <_dtoa_r>
  810188:	1021883a 	mov	r16,r2
  81018c:	008019c4 	movi	r2,103
  810190:	d8c03d17 	ldw	r3,244(sp)
  810194:	da003e17 	ldw	r8,248(sp)
  810198:	8880e726 	beq	r17,r2,810538 <___svfprintf_internal_r+0x1d40>
  81019c:	008011c4 	movi	r2,71
  8101a0:	8880d426 	beq	r17,r2,8104f4 <___svfprintf_internal_r+0x1cfc>
  8101a4:	80f9883a 	add	fp,r16,r3
  8101a8:	d9003617 	ldw	r4,216(sp)
  8101ac:	000d883a 	mov	r6,zero
  8101b0:	000f883a 	mov	r7,zero
  8101b4:	a00b883a 	mov	r5,r20
  8101b8:	da003e15 	stw	r8,248(sp)
  8101bc:	08169d40 	call	8169d4 <__eqdf2>
  8101c0:	da003e17 	ldw	r8,248(sp)
  8101c4:	1000e426 	beq	r2,zero,810558 <___svfprintf_internal_r+0x1d60>
  8101c8:	d8802117 	ldw	r2,132(sp)
  8101cc:	1700062e 	bgeu	r2,fp,8101e8 <___svfprintf_internal_r+0x19f0>
  8101d0:	01000c04 	movi	r4,48
  8101d4:	10c00044 	addi	r3,r2,1
  8101d8:	d8c02115 	stw	r3,132(sp)
  8101dc:	11000005 	stb	r4,0(r2)
  8101e0:	d8802117 	ldw	r2,132(sp)
  8101e4:	173ffb36 	bltu	r2,fp,8101d4 <__alt_data_end+0xff8101d4>
  8101e8:	1405c83a 	sub	r2,r2,r16
  8101ec:	d8803315 	stw	r2,204(sp)
  8101f0:	008011c4 	movi	r2,71
  8101f4:	b080c526 	beq	r22,r2,81050c <___svfprintf_internal_r+0x1d14>
  8101f8:	00801944 	movi	r2,101
  8101fc:	1441d90e 	bge	r2,r17,810964 <___svfprintf_internal_r+0x216c>
  810200:	d8c02617 	ldw	r3,152(sp)
  810204:	00801984 	movi	r2,102
  810208:	d8c03215 	stw	r3,200(sp)
  81020c:	88813426 	beq	r17,r2,8106e0 <___svfprintf_internal_r+0x1ee8>
  810210:	d8c03217 	ldw	r3,200(sp)
  810214:	d9003317 	ldw	r4,204(sp)
  810218:	19012516 	blt	r3,r4,8106b0 <___svfprintf_internal_r+0x1eb8>
  81021c:	9480004c 	andi	r18,r18,1
  810220:	9001841e 	bne	r18,zero,810834 <___svfprintf_internal_r+0x203c>
  810224:	1805883a 	mov	r2,r3
  810228:	1801cc16 	blt	r3,zero,81095c <___svfprintf_internal_r+0x2164>
  81022c:	d8c03217 	ldw	r3,200(sp)
  810230:	044019c4 	movi	r17,103
  810234:	d8c02e15 	stw	r3,184(sp)
  810238:	df002a07 	ldb	fp,168(sp)
  81023c:	e000a61e 	bne	fp,zero,8104d8 <___svfprintf_internal_r+0x1ce0>
  810240:	df002783 	ldbu	fp,158(sp)
  810244:	d8802a15 	stw	r2,168(sp)
  810248:	dc802b17 	ldw	r18,172(sp)
  81024c:	d8002915 	stw	zero,164(sp)
  810250:	003b1706 	br	80eeb0 <__alt_data_end+0xff80eeb0>
  810254:	040020b4 	movhi	r16,130
  810258:	84316404 	addi	r16,r16,-14960
  81025c:	003aa606 	br	80ecf8 <__alt_data_end+0xff80ecf8>
  810260:	d9003917 	ldw	r4,228(sp)
  810264:	04001004 	movi	r16,64
  810268:	800b883a 	mov	r5,r16
  81026c:	08025b80 	call	8025b8 <_malloc_r>
  810270:	d9002c17 	ldw	r4,176(sp)
  810274:	20800015 	stw	r2,0(r4)
  810278:	20800415 	stw	r2,16(r4)
  81027c:	1001cb26 	beq	r2,zero,8109ac <___svfprintf_internal_r+0x21b4>
  810280:	d8802c17 	ldw	r2,176(sp)
  810284:	14000515 	stw	r16,20(r2)
  810288:	00397606 	br	80e864 <__alt_data_end+0xff80e864>
  81028c:	040020b4 	movhi	r16,130
  810290:	84316604 	addi	r16,r16,-14952
  810294:	003ee106 	br	80fe1c <__alt_data_end+0xff80fe1c>
  810298:	d9402c17 	ldw	r5,176(sp)
  81029c:	d9801e04 	addi	r6,sp,120
  8102a0:	9809883a 	mov	r4,r19
  8102a4:	08133180 	call	813318 <__ssprint_r>
  8102a8:	103a381e 	bne	r2,zero,80eb8c <__alt_data_end+0xff80eb8c>
  8102ac:	dc402617 	ldw	r17,152(sp)
  8102b0:	d8c02017 	ldw	r3,128(sp)
  8102b4:	da000404 	addi	r8,sp,16
  8102b8:	003f4306 	br	80ffc8 <__alt_data_end+0xff80ffc8>
  8102bc:	01400184 	movi	r5,6
  8102c0:	d9402915 	stw	r5,164(sp)
  8102c4:	003f9506 	br	81011c <__alt_data_end+0xff81011c>
  8102c8:	d9002d17 	ldw	r4,180(sp)
  8102cc:	25000017 	ldw	r20,0(r4)
  8102d0:	21000104 	addi	r4,r4,4
  8102d4:	d9002d15 	stw	r4,180(sp)
  8102d8:	a02dd7fa 	srai	r22,r20,31
  8102dc:	b005883a 	mov	r2,r22
  8102e0:	003a9b06 	br	80ed50 <__alt_data_end+0xff80ed50>
  8102e4:	d9402d17 	ldw	r5,180(sp)
  8102e8:	002d883a 	mov	r22,zero
  8102ec:	2d000017 	ldw	r20,0(r5)
  8102f0:	29400104 	addi	r5,r5,4
  8102f4:	d9402d15 	stw	r5,180(sp)
  8102f8:	003bf906 	br	80f2e0 <__alt_data_end+0xff80f2e0>
  8102fc:	9480100c 	andi	r18,r18,64
  810300:	90006e26 	beq	r18,zero,8104bc <___svfprintf_internal_r+0x1cc4>
  810304:	d9002d17 	ldw	r4,180(sp)
  810308:	d9402f17 	ldw	r5,188(sp)
  81030c:	20800017 	ldw	r2,0(r4)
  810310:	21000104 	addi	r4,r4,4
  810314:	d9002d15 	stw	r4,180(sp)
  810318:	1140000d 	sth	r5,0(r2)
  81031c:	00396106 	br	80e8a4 <__alt_data_end+0xff80e8a4>
  810320:	d9402c17 	ldw	r5,176(sp)
  810324:	d9801e04 	addi	r6,sp,120
  810328:	9809883a 	mov	r4,r19
  81032c:	08133180 	call	813318 <__ssprint_r>
  810330:	103a161e 	bne	r2,zero,80eb8c <__alt_data_end+0xff80eb8c>
  810334:	d8c02017 	ldw	r3,128(sp)
  810338:	d8801f17 	ldw	r2,124(sp)
  81033c:	da000404 	addi	r8,sp,16
  810340:	d9403317 	ldw	r5,204(sp)
  810344:	10800044 	addi	r2,r2,1
  810348:	44000015 	stw	r16,0(r8)
  81034c:	28c7883a 	add	r3,r5,r3
  810350:	003b7706 	br	80f130 <__alt_data_end+0xff80f130>
  810354:	8009883a 	mov	r4,r16
  810358:	da003e15 	stw	r8,248(sp)
  81035c:	08035a80 	call	8035a8 <strlen>
  810360:	d8802e15 	stw	r2,184(sp)
  810364:	da003e17 	ldw	r8,248(sp)
  810368:	103c280e 	bge	r2,zero,80f40c <__alt_data_end+0xff80f40c>
  81036c:	0005883a 	mov	r2,zero
  810370:	003c2606 	br	80f40c <__alt_data_end+0xff80f40c>
  810374:	00bfffc4 	movi	r2,-1
  810378:	003a0906 	br	80eba0 <__alt_data_end+0xff80eba0>
  81037c:	010020b4 	movhi	r4,130
  810380:	21329184 	addi	r4,r4,-13754
  810384:	d9003515 	stw	r4,212(sp)
  810388:	003b0606 	br	80efa4 <__alt_data_end+0xff80efa4>
  81038c:	013fffc4 	movi	r4,-1
  810390:	003a2706 	br	80ec30 <__alt_data_end+0xff80ec30>
  810394:	d9402c17 	ldw	r5,176(sp)
  810398:	d9801e04 	addi	r6,sp,120
  81039c:	9809883a 	mov	r4,r19
  8103a0:	08133180 	call	813318 <__ssprint_r>
  8103a4:	1039f91e 	bne	r2,zero,80eb8c <__alt_data_end+0xff80eb8c>
  8103a8:	d8c02017 	ldw	r3,128(sp)
  8103ac:	da000404 	addi	r8,sp,16
  8103b0:	003d8406 	br	80f9c4 <__alt_data_end+0xff80f9c4>
  8103b4:	0023883a 	mov	r17,zero
  8103b8:	003d8306 	br	80f9c8 <__alt_data_end+0xff80f9c8>
  8103bc:	010020b4 	movhi	r4,130
  8103c0:	21328d84 	addi	r4,r4,-13770
  8103c4:	d9002b15 	stw	r4,172(sp)
  8103c8:	d9002b17 	ldw	r4,172(sp)
  8103cc:	1c47883a 	add	r3,r3,r17
  8103d0:	10800044 	addi	r2,r2,1
  8103d4:	41000015 	stw	r4,0(r8)
  8103d8:	44400115 	stw	r17,4(r8)
  8103dc:	d8c02015 	stw	r3,128(sp)
  8103e0:	d8801f15 	stw	r2,124(sp)
  8103e4:	010001c4 	movi	r4,7
  8103e8:	20bfcd16 	blt	r4,r2,810320 <__alt_data_end+0xff810320>
  8103ec:	42000204 	addi	r8,r8,8
  8103f0:	003fd306 	br	810340 <__alt_data_end+0xff810340>
  8103f4:	d9402c17 	ldw	r5,176(sp)
  8103f8:	d9801e04 	addi	r6,sp,120
  8103fc:	9809883a 	mov	r4,r19
  810400:	08133180 	call	813318 <__ssprint_r>
  810404:	1039e11e 	bne	r2,zero,80eb8c <__alt_data_end+0xff80eb8c>
  810408:	d8802617 	ldw	r2,152(sp)
  81040c:	d8c02017 	ldw	r3,128(sp)
  810410:	da000404 	addi	r8,sp,16
  810414:	003e1c06 	br	80fc88 <__alt_data_end+0xff80fc88>
  810418:	d8802917 	ldw	r2,164(sp)
  81041c:	00c00184 	movi	r3,6
  810420:	1880012e 	bgeu	r3,r2,810428 <___svfprintf_internal_r+0x1c30>
  810424:	1805883a 	mov	r2,r3
  810428:	d8802e15 	stw	r2,184(sp)
  81042c:	1000f316 	blt	r2,zero,8107fc <___svfprintf_internal_r+0x2004>
  810430:	040020b4 	movhi	r16,130
  810434:	d8802a15 	stw	r2,168(sp)
  810438:	dd002d15 	stw	r20,180(sp)
  81043c:	d8002915 	stw	zero,164(sp)
  810440:	d8003215 	stw	zero,200(sp)
  810444:	84317204 	addi	r16,r16,-14904
  810448:	0039883a 	mov	fp,zero
  81044c:	003a9f06 	br	80eecc <__alt_data_end+0xff80eecc>
  810450:	010020b4 	movhi	r4,130
  810454:	21329184 	addi	r4,r4,-13754
  810458:	d9003515 	stw	r4,212(sp)
  81045c:	003b5f06 	br	80f1dc <__alt_data_end+0xff80f1dc>
  810460:	d9402c17 	ldw	r5,176(sp)
  810464:	d9801e04 	addi	r6,sp,120
  810468:	9809883a 	mov	r4,r19
  81046c:	08133180 	call	813318 <__ssprint_r>
  810470:	1039c61e 	bne	r2,zero,80eb8c <__alt_data_end+0xff80eb8c>
  810474:	d8802617 	ldw	r2,152(sp)
  810478:	d9403317 	ldw	r5,204(sp)
  81047c:	d8c02017 	ldw	r3,128(sp)
  810480:	da000404 	addi	r8,sp,16
  810484:	2885c83a 	sub	r2,r5,r2
  810488:	003e1006 	br	80fccc <__alt_data_end+0xff80fccc>
  81048c:	00800044 	movi	r2,1
  810490:	10803fcc 	andi	r2,r2,255
  810494:	00c00044 	movi	r3,1
  810498:	10fa3526 	beq	r2,r3,80ed70 <__alt_data_end+0xff80ed70>
  81049c:	00c00084 	movi	r3,2
  8104a0:	10fb9e26 	beq	r2,r3,80f31c <__alt_data_end+0xff80f31c>
  8104a4:	003a6406 	br	80ee38 <__alt_data_end+0xff80ee38>
  8104a8:	0021883a 	mov	r16,zero
  8104ac:	003e0806 	br	80fcd0 <__alt_data_end+0xff80fcd0>
  8104b0:	07000b44 	movi	fp,45
  8104b4:	df002785 	stb	fp,158(sp)
  8104b8:	003a0b06 	br	80ece8 <__alt_data_end+0xff80ece8>
  8104bc:	d8c02d17 	ldw	r3,180(sp)
  8104c0:	d9002f17 	ldw	r4,188(sp)
  8104c4:	18800017 	ldw	r2,0(r3)
  8104c8:	18c00104 	addi	r3,r3,4
  8104cc:	d8c02d15 	stw	r3,180(sp)
  8104d0:	11000015 	stw	r4,0(r2)
  8104d4:	0038f306 	br	80e8a4 <__alt_data_end+0xff80e8a4>
  8104d8:	00c00b44 	movi	r3,45
  8104dc:	d8c02785 	stb	r3,158(sp)
  8104e0:	d8802a15 	stw	r2,168(sp)
  8104e4:	dc802b17 	ldw	r18,172(sp)
  8104e8:	d8002915 	stw	zero,164(sp)
  8104ec:	07000b44 	movi	fp,45
  8104f0:	003a7306 	br	80eec0 <__alt_data_end+0xff80eec0>
  8104f4:	9080004c 	andi	r2,r18,1
  8104f8:	1000941e 	bne	r2,zero,81074c <___svfprintf_internal_r+0x1f54>
  8104fc:	d8802117 	ldw	r2,132(sp)
  810500:	1405c83a 	sub	r2,r2,r16
  810504:	d8803315 	stw	r2,204(sp)
  810508:	b441161e 	bne	r22,r17,810964 <___svfprintf_internal_r+0x216c>
  81050c:	dd802617 	ldw	r22,152(sp)
  810510:	00bfff44 	movi	r2,-3
  810514:	b0801a16 	blt	r22,r2,810580 <___svfprintf_internal_r+0x1d88>
  810518:	d9402917 	ldw	r5,164(sp)
  81051c:	2d801816 	blt	r5,r22,810580 <___svfprintf_internal_r+0x1d88>
  810520:	dd803215 	stw	r22,200(sp)
  810524:	003f3a06 	br	810210 <__alt_data_end+0xff810210>
  810528:	1025883a 	mov	r18,r2
  81052c:	0039883a 	mov	fp,zero
  810530:	00800084 	movi	r2,2
  810534:	003fd606 	br	810490 <__alt_data_end+0xff810490>
  810538:	9080004c 	andi	r2,r18,1
  81053c:	103f191e 	bne	r2,zero,8101a4 <__alt_data_end+0xff8101a4>
  810540:	d8802117 	ldw	r2,132(sp)
  810544:	003f2806 	br	8101e8 <__alt_data_end+0xff8101e8>
  810548:	010020b4 	movhi	r4,130
  81054c:	21328d84 	addi	r4,r4,-13770
  810550:	d9002b15 	stw	r4,172(sp)
  810554:	003c7c06 	br	80f748 <__alt_data_end+0xff80f748>
  810558:	e005883a 	mov	r2,fp
  81055c:	003f2206 	br	8101e8 <__alt_data_end+0xff8101e8>
  810560:	d9402917 	ldw	r5,164(sp)
  810564:	df002783 	ldbu	fp,158(sp)
  810568:	dd002d15 	stw	r20,180(sp)
  81056c:	d9402a15 	stw	r5,168(sp)
  810570:	d9402e15 	stw	r5,184(sp)
  810574:	d8002915 	stw	zero,164(sp)
  810578:	d8003215 	stw	zero,200(sp)
  81057c:	003a4c06 	br	80eeb0 <__alt_data_end+0xff80eeb0>
  810580:	8c7fff84 	addi	r17,r17,-2
  810584:	b5bfffc4 	addi	r22,r22,-1
  810588:	dd802615 	stw	r22,152(sp)
  81058c:	dc4022c5 	stb	r17,139(sp)
  810590:	b000c316 	blt	r22,zero,8108a0 <___svfprintf_internal_r+0x20a8>
  810594:	00800ac4 	movi	r2,43
  810598:	d8802305 	stb	r2,140(sp)
  81059c:	00800244 	movi	r2,9
  8105a0:	15806e16 	blt	r2,r22,81075c <___svfprintf_internal_r+0x1f64>
  8105a4:	00800c04 	movi	r2,48
  8105a8:	b5800c04 	addi	r22,r22,48
  8105ac:	d8802345 	stb	r2,141(sp)
  8105b0:	dd802385 	stb	r22,142(sp)
  8105b4:	d88023c4 	addi	r2,sp,143
  8105b8:	df0022c4 	addi	fp,sp,139
  8105bc:	d8c03317 	ldw	r3,204(sp)
  8105c0:	1739c83a 	sub	fp,r2,fp
  8105c4:	d9003317 	ldw	r4,204(sp)
  8105c8:	e0c7883a 	add	r3,fp,r3
  8105cc:	df003b15 	stw	fp,236(sp)
  8105d0:	d8c02e15 	stw	r3,184(sp)
  8105d4:	00800044 	movi	r2,1
  8105d8:	1100b70e 	bge	r2,r4,8108b8 <___svfprintf_internal_r+0x20c0>
  8105dc:	d8c02e17 	ldw	r3,184(sp)
  8105e0:	18c00044 	addi	r3,r3,1
  8105e4:	d8c02e15 	stw	r3,184(sp)
  8105e8:	1805883a 	mov	r2,r3
  8105ec:	1800b016 	blt	r3,zero,8108b0 <___svfprintf_internal_r+0x20b8>
  8105f0:	d8003215 	stw	zero,200(sp)
  8105f4:	003f1006 	br	810238 <__alt_data_end+0xff810238>
  8105f8:	d8802917 	ldw	r2,164(sp)
  8105fc:	103ec71e 	bne	r2,zero,81011c <__alt_data_end+0xff81011c>
  810600:	dc002915 	stw	r16,164(sp)
  810604:	003ec506 	br	81011c <__alt_data_end+0xff81011c>
  810608:	d9402c17 	ldw	r5,176(sp)
  81060c:	d9801e04 	addi	r6,sp,120
  810610:	9809883a 	mov	r4,r19
  810614:	08133180 	call	813318 <__ssprint_r>
  810618:	10395c1e 	bne	r2,zero,80eb8c <__alt_data_end+0xff80eb8c>
  81061c:	dc402617 	ldw	r17,152(sp)
  810620:	d8c02017 	ldw	r3,128(sp)
  810624:	d8801f17 	ldw	r2,124(sp)
  810628:	da000404 	addi	r8,sp,16
  81062c:	003e7706 	br	81000c <__alt_data_end+0xff81000c>
  810630:	582f883a 	mov	r23,r11
  810634:	d8002915 	stw	zero,164(sp)
  810638:	0038c406 	br	80e94c <__alt_data_end+0xff80e94c>
  81063c:	d8c02917 	ldw	r3,164(sp)
  810640:	d8802104 	addi	r2,sp,132
  810644:	d8800315 	stw	r2,12(sp)
  810648:	d9403617 	ldw	r5,216(sp)
  81064c:	d8802504 	addi	r2,sp,148
  810650:	d8800215 	stw	r2,8(sp)
  810654:	d8802604 	addi	r2,sp,152
  810658:	d8c00015 	stw	r3,0(sp)
  81065c:	9809883a 	mov	r4,r19
  810660:	d8800115 	stw	r2,4(sp)
  810664:	01c000c4 	movi	r7,3
  810668:	a00d883a 	mov	r6,r20
  81066c:	da003e15 	stw	r8,248(sp)
  810670:	08074d40 	call	8074d4 <_dtoa_r>
  810674:	d9002917 	ldw	r4,164(sp)
  810678:	da003e17 	ldw	r8,248(sp)
  81067c:	1021883a 	mov	r16,r2
  810680:	1139883a 	add	fp,r2,r4
  810684:	2007883a 	mov	r3,r4
  810688:	81000007 	ldb	r4,0(r16)
  81068c:	00800c04 	movi	r2,48
  810690:	20806f26 	beq	r4,r2,810850 <___svfprintf_internal_r+0x2058>
  810694:	d8c02617 	ldw	r3,152(sp)
  810698:	e0f9883a 	add	fp,fp,r3
  81069c:	003ec206 	br	8101a8 <__alt_data_end+0xff8101a8>
  8106a0:	00c00b44 	movi	r3,45
  8106a4:	2520003c 	xorhi	r20,r4,32768
  8106a8:	d8c02a05 	stb	r3,168(sp)
  8106ac:	003ea106 	br	810134 <__alt_data_end+0xff810134>
  8106b0:	d8c03217 	ldw	r3,200(sp)
  8106b4:	00c0890e 	bge	zero,r3,8108dc <___svfprintf_internal_r+0x20e4>
  8106b8:	00800044 	movi	r2,1
  8106bc:	d9003317 	ldw	r4,204(sp)
  8106c0:	1105883a 	add	r2,r2,r4
  8106c4:	d8802e15 	stw	r2,184(sp)
  8106c8:	10005f16 	blt	r2,zero,810848 <___svfprintf_internal_r+0x2050>
  8106cc:	044019c4 	movi	r17,103
  8106d0:	003ed906 	br	810238 <__alt_data_end+0xff810238>
  8106d4:	d9002917 	ldw	r4,164(sp)
  8106d8:	20c00044 	addi	r3,r4,1
  8106dc:	003e9c06 	br	810150 <__alt_data_end+0xff810150>
  8106e0:	d9002917 	ldw	r4,164(sp)
  8106e4:	00c0680e 	bge	zero,r3,810888 <___svfprintf_internal_r+0x2090>
  8106e8:	2000461e 	bne	r4,zero,810804 <___svfprintf_internal_r+0x200c>
  8106ec:	9480004c 	andi	r18,r18,1
  8106f0:	9000441e 	bne	r18,zero,810804 <___svfprintf_internal_r+0x200c>
  8106f4:	1805883a 	mov	r2,r3
  8106f8:	1800a016 	blt	r3,zero,81097c <___svfprintf_internal_r+0x2184>
  8106fc:	d8c03217 	ldw	r3,200(sp)
  810700:	d8c02e15 	stw	r3,184(sp)
  810704:	003ecc06 	br	810238 <__alt_data_end+0xff810238>
  810708:	d9402917 	ldw	r5,164(sp)
  81070c:	d8802104 	addi	r2,sp,132
  810710:	d8800315 	stw	r2,12(sp)
  810714:	d9400015 	stw	r5,0(sp)
  810718:	d8802504 	addi	r2,sp,148
  81071c:	d9403617 	ldw	r5,216(sp)
  810720:	d8800215 	stw	r2,8(sp)
  810724:	d8802604 	addi	r2,sp,152
  810728:	d8800115 	stw	r2,4(sp)
  81072c:	01c000c4 	movi	r7,3
  810730:	a00d883a 	mov	r6,r20
  810734:	9809883a 	mov	r4,r19
  810738:	da003e15 	stw	r8,248(sp)
  81073c:	08074d40 	call	8074d4 <_dtoa_r>
  810740:	d8c02917 	ldw	r3,164(sp)
  810744:	da003e17 	ldw	r8,248(sp)
  810748:	1021883a 	mov	r16,r2
  81074c:	00801184 	movi	r2,70
  810750:	80f9883a 	add	fp,r16,r3
  810754:	88bfcc26 	beq	r17,r2,810688 <__alt_data_end+0xff810688>
  810758:	003e9306 	br	8101a8 <__alt_data_end+0xff8101a8>
  81075c:	df0022c4 	addi	fp,sp,139
  810760:	dc002915 	stw	r16,164(sp)
  810764:	9829883a 	mov	r20,r19
  810768:	e021883a 	mov	r16,fp
  81076c:	4027883a 	mov	r19,r8
  810770:	b009883a 	mov	r4,r22
  810774:	01400284 	movi	r5,10
  810778:	08155140 	call	815514 <__modsi3>
  81077c:	10800c04 	addi	r2,r2,48
  810780:	843fffc4 	addi	r16,r16,-1
  810784:	b009883a 	mov	r4,r22
  810788:	01400284 	movi	r5,10
  81078c:	80800005 	stb	r2,0(r16)
  810790:	08154900 	call	815490 <__divsi3>
  810794:	102d883a 	mov	r22,r2
  810798:	00800244 	movi	r2,9
  81079c:	15bff416 	blt	r2,r22,810770 <__alt_data_end+0xff810770>
  8107a0:	9811883a 	mov	r8,r19
  8107a4:	b0800c04 	addi	r2,r22,48
  8107a8:	a027883a 	mov	r19,r20
  8107ac:	8029883a 	mov	r20,r16
  8107b0:	a17fffc4 	addi	r5,r20,-1
  8107b4:	a0bfffc5 	stb	r2,-1(r20)
  8107b8:	dc002917 	ldw	r16,164(sp)
  8107bc:	2f00752e 	bgeu	r5,fp,810994 <___svfprintf_internal_r+0x219c>
  8107c0:	d9c02384 	addi	r7,sp,142
  8107c4:	3d0fc83a 	sub	r7,r7,r20
  8107c8:	d9002344 	addi	r4,sp,141
  8107cc:	e1cf883a 	add	r7,fp,r7
  8107d0:	00000106 	br	8107d8 <___svfprintf_internal_r+0x1fe0>
  8107d4:	28800003 	ldbu	r2,0(r5)
  8107d8:	20800005 	stb	r2,0(r4)
  8107dc:	21000044 	addi	r4,r4,1
  8107e0:	29400044 	addi	r5,r5,1
  8107e4:	21fffb1e 	bne	r4,r7,8107d4 <__alt_data_end+0xff8107d4>
  8107e8:	d8802304 	addi	r2,sp,140
  8107ec:	1505c83a 	sub	r2,r2,r20
  8107f0:	d8c02344 	addi	r3,sp,141
  8107f4:	1885883a 	add	r2,r3,r2
  8107f8:	003f7006 	br	8105bc <__alt_data_end+0xff8105bc>
  8107fc:	0005883a 	mov	r2,zero
  810800:	003f0b06 	br	810430 <__alt_data_end+0xff810430>
  810804:	d9002917 	ldw	r4,164(sp)
  810808:	d8c03217 	ldw	r3,200(sp)
  81080c:	20800044 	addi	r2,r4,1
  810810:	1885883a 	add	r2,r3,r2
  810814:	d8802e15 	stw	r2,184(sp)
  810818:	103e870e 	bge	r2,zero,810238 <__alt_data_end+0xff810238>
  81081c:	0005883a 	mov	r2,zero
  810820:	003e8506 	br	810238 <__alt_data_end+0xff810238>
  810824:	010020b4 	movhi	r4,130
  810828:	21328d84 	addi	r4,r4,-13770
  81082c:	d9002b15 	stw	r4,172(sp)
  810830:	003cc506 	br	80fb48 <__alt_data_end+0xff80fb48>
  810834:	d8c03217 	ldw	r3,200(sp)
  810838:	18c00044 	addi	r3,r3,1
  81083c:	d8c02e15 	stw	r3,184(sp)
  810840:	1805883a 	mov	r2,r3
  810844:	183fa10e 	bge	r3,zero,8106cc <__alt_data_end+0xff8106cc>
  810848:	0005883a 	mov	r2,zero
  81084c:	003f9f06 	br	8106cc <__alt_data_end+0xff8106cc>
  810850:	d9003617 	ldw	r4,216(sp)
  810854:	000d883a 	mov	r6,zero
  810858:	000f883a 	mov	r7,zero
  81085c:	a00b883a 	mov	r5,r20
  810860:	d8c03d15 	stw	r3,244(sp)
  810864:	da003e15 	stw	r8,248(sp)
  810868:	08169d40 	call	8169d4 <__eqdf2>
  81086c:	d8c03d17 	ldw	r3,244(sp)
  810870:	da003e17 	ldw	r8,248(sp)
  810874:	103f8726 	beq	r2,zero,810694 <__alt_data_end+0xff810694>
  810878:	00800044 	movi	r2,1
  81087c:	10c7c83a 	sub	r3,r2,r3
  810880:	d8c02615 	stw	r3,152(sp)
  810884:	003f8406 	br	810698 <__alt_data_end+0xff810698>
  810888:	20000e1e 	bne	r4,zero,8108c4 <___svfprintf_internal_r+0x20cc>
  81088c:	9480004c 	andi	r18,r18,1
  810890:	90000c1e 	bne	r18,zero,8108c4 <___svfprintf_internal_r+0x20cc>
  810894:	00800044 	movi	r2,1
  810898:	d8802e15 	stw	r2,184(sp)
  81089c:	003e6606 	br	810238 <__alt_data_end+0xff810238>
  8108a0:	00800b44 	movi	r2,45
  8108a4:	05adc83a 	sub	r22,zero,r22
  8108a8:	d8802305 	stb	r2,140(sp)
  8108ac:	003f3b06 	br	81059c <__alt_data_end+0xff81059c>
  8108b0:	0005883a 	mov	r2,zero
  8108b4:	003f4e06 	br	8105f0 <__alt_data_end+0xff8105f0>
  8108b8:	90a4703a 	and	r18,r18,r2
  8108bc:	903f4a26 	beq	r18,zero,8105e8 <__alt_data_end+0xff8105e8>
  8108c0:	003f4606 	br	8105dc <__alt_data_end+0xff8105dc>
  8108c4:	d8c02917 	ldw	r3,164(sp)
  8108c8:	18c00084 	addi	r3,r3,2
  8108cc:	d8c02e15 	stw	r3,184(sp)
  8108d0:	1805883a 	mov	r2,r3
  8108d4:	183e580e 	bge	r3,zero,810238 <__alt_data_end+0xff810238>
  8108d8:	003fd006 	br	81081c <__alt_data_end+0xff81081c>
  8108dc:	00800084 	movi	r2,2
  8108e0:	10c5c83a 	sub	r2,r2,r3
  8108e4:	003f7506 	br	8106bc <__alt_data_end+0xff8106bc>
  8108e8:	d8802d17 	ldw	r2,180(sp)
  8108ec:	d9002d17 	ldw	r4,180(sp)
  8108f0:	bc400043 	ldbu	r17,1(r23)
  8108f4:	10800017 	ldw	r2,0(r2)
  8108f8:	582f883a 	mov	r23,r11
  8108fc:	d8802915 	stw	r2,164(sp)
  810900:	20800104 	addi	r2,r4,4
  810904:	d9002917 	ldw	r4,164(sp)
  810908:	d8802d15 	stw	r2,180(sp)
  81090c:	203df00e 	bge	r4,zero,8100d0 <__alt_data_end+0xff8100d0>
  810910:	8c403fcc 	andi	r17,r17,255
  810914:	00bfffc4 	movi	r2,-1
  810918:	8c40201c 	xori	r17,r17,128
  81091c:	d8802915 	stw	r2,164(sp)
  810920:	8c7fe004 	addi	r17,r17,-128
  810924:	00380806 	br	80e948 <__alt_data_end+0xff80e948>
  810928:	9080004c 	andi	r2,r18,1
  81092c:	0039883a 	mov	fp,zero
  810930:	10000726 	beq	r2,zero,810950 <___svfprintf_internal_r+0x2158>
  810934:	d8c02817 	ldw	r3,160(sp)
  810938:	dc001dc4 	addi	r16,sp,119
  81093c:	00800c04 	movi	r2,48
  810940:	1c07c83a 	sub	r3,r3,r16
  810944:	d8801dc5 	stb	r2,119(sp)
  810948:	d8c02e15 	stw	r3,184(sp)
  81094c:	00395206 	br	80ee98 <__alt_data_end+0xff80ee98>
  810950:	d8002e15 	stw	zero,184(sp)
  810954:	dc001e04 	addi	r16,sp,120
  810958:	00394f06 	br	80ee98 <__alt_data_end+0xff80ee98>
  81095c:	0005883a 	mov	r2,zero
  810960:	003e3206 	br	81022c <__alt_data_end+0xff81022c>
  810964:	dd802617 	ldw	r22,152(sp)
  810968:	003f0606 	br	810584 <__alt_data_end+0xff810584>
  81096c:	d9c02785 	stb	r7,158(sp)
  810970:	003a5106 	br	80f2b8 <__alt_data_end+0xff80f2b8>
  810974:	d9c02785 	stb	r7,158(sp)
  810978:	003a3706 	br	80f258 <__alt_data_end+0xff80f258>
  81097c:	0005883a 	mov	r2,zero
  810980:	003f5e06 	br	8106fc <__alt_data_end+0xff8106fc>
  810984:	d9c02785 	stb	r7,158(sp)
  810988:	00391706 	br	80ede8 <__alt_data_end+0xff80ede8>
  81098c:	d9c02785 	stb	r7,158(sp)
  810990:	0038e606 	br	80ed2c <__alt_data_end+0xff80ed2c>
  810994:	d8802344 	addi	r2,sp,141
  810998:	003f0806 	br	8105bc <__alt_data_end+0xff8105bc>
  81099c:	d9c02785 	stb	r7,158(sp)
  8109a0:	0038b706 	br	80ec80 <__alt_data_end+0xff80ec80>
  8109a4:	d9c02785 	stb	r7,158(sp)
  8109a8:	003adc06 	br	80f51c <__alt_data_end+0xff80f51c>
  8109ac:	d9403917 	ldw	r5,228(sp)
  8109b0:	00800304 	movi	r2,12
  8109b4:	28800015 	stw	r2,0(r5)
  8109b8:	00bfffc4 	movi	r2,-1
  8109bc:	00387806 	br	80eba0 <__alt_data_end+0xff80eba0>
  8109c0:	d9c02785 	stb	r7,158(sp)
  8109c4:	003abf06 	br	80f4c4 <__alt_data_end+0xff80f4c4>
  8109c8:	d9c02785 	stb	r7,158(sp)
  8109cc:	003a9b06 	br	80f43c <__alt_data_end+0xff80f43c>

008109d0 <__submore>:
  8109d0:	defffa04 	addi	sp,sp,-24
  8109d4:	dc000015 	stw	r16,0(sp)
  8109d8:	2821883a 	mov	r16,r5
  8109dc:	29400c17 	ldw	r5,48(r5)
  8109e0:	dfc00515 	stw	ra,20(sp)
  8109e4:	dd000415 	stw	r20,16(sp)
  8109e8:	dcc00315 	stw	r19,12(sp)
  8109ec:	dc800215 	stw	r18,8(sp)
  8109f0:	dc400115 	stw	r17,4(sp)
  8109f4:	80801004 	addi	r2,r16,64
  8109f8:	28801726 	beq	r5,r2,810a58 <__submore+0x88>
  8109fc:	84400d17 	ldw	r17,52(r16)
  810a00:	8c67883a 	add	r19,r17,r17
  810a04:	980d883a 	mov	r6,r19
  810a08:	080a9f40 	call	80a9f4 <_realloc_r>
  810a0c:	1025883a 	mov	r18,r2
  810a10:	10002226 	beq	r2,zero,810a9c <__submore+0xcc>
  810a14:	1469883a 	add	r20,r2,r17
  810a18:	880d883a 	mov	r6,r17
  810a1c:	100b883a 	mov	r5,r2
  810a20:	a009883a 	mov	r4,r20
  810a24:	080958c0 	call	80958c <memcpy>
  810a28:	0005883a 	mov	r2,zero
  810a2c:	85000015 	stw	r20,0(r16)
  810a30:	84800c15 	stw	r18,48(r16)
  810a34:	84c00d15 	stw	r19,52(r16)
  810a38:	dfc00517 	ldw	ra,20(sp)
  810a3c:	dd000417 	ldw	r20,16(sp)
  810a40:	dcc00317 	ldw	r19,12(sp)
  810a44:	dc800217 	ldw	r18,8(sp)
  810a48:	dc400117 	ldw	r17,4(sp)
  810a4c:	dc000017 	ldw	r16,0(sp)
  810a50:	dec00604 	addi	sp,sp,24
  810a54:	f800283a 	ret
  810a58:	04410004 	movi	r17,1024
  810a5c:	880b883a 	mov	r5,r17
  810a60:	08025b80 	call	8025b8 <_malloc_r>
  810a64:	1007883a 	mov	r3,r2
  810a68:	10000c26 	beq	r2,zero,810a9c <__submore+0xcc>
  810a6c:	80801083 	ldbu	r2,66(r16)
  810a70:	80c00c15 	stw	r3,48(r16)
  810a74:	84400d15 	stw	r17,52(r16)
  810a78:	1880ffc5 	stb	r2,1023(r3)
  810a7c:	81401043 	ldbu	r5,65(r16)
  810a80:	1900ff44 	addi	r4,r3,1021
  810a84:	0005883a 	mov	r2,zero
  810a88:	1940ff85 	stb	r5,1022(r3)
  810a8c:	81401003 	ldbu	r5,64(r16)
  810a90:	1940ff45 	stb	r5,1021(r3)
  810a94:	81000015 	stw	r4,0(r16)
  810a98:	003fe706 	br	810a38 <__alt_data_end+0xff810a38>
  810a9c:	00bfffc4 	movi	r2,-1
  810aa0:	003fe506 	br	810a38 <__alt_data_end+0xff810a38>

00810aa4 <_ungetc_r>:
  810aa4:	00bfffc4 	movi	r2,-1
  810aa8:	28806126 	beq	r5,r2,810c30 <_ungetc_r+0x18c>
  810aac:	defffb04 	addi	sp,sp,-20
  810ab0:	dcc00315 	stw	r19,12(sp)
  810ab4:	dc400115 	stw	r17,4(sp)
  810ab8:	dc000015 	stw	r16,0(sp)
  810abc:	dfc00415 	stw	ra,16(sp)
  810ac0:	dc800215 	stw	r18,8(sp)
  810ac4:	2023883a 	mov	r17,r4
  810ac8:	3021883a 	mov	r16,r6
  810acc:	2827883a 	mov	r19,r5
  810ad0:	20000226 	beq	r4,zero,810adc <_ungetc_r+0x38>
  810ad4:	20800e17 	ldw	r2,56(r4)
  810ad8:	10002e26 	beq	r2,zero,810b94 <_ungetc_r+0xf0>
  810adc:	80c0030b 	ldhu	r3,12(r16)
  810ae0:	1888000c 	andi	r2,r3,8192
  810ae4:	1000051e 	bne	r2,zero,810afc <_ungetc_r+0x58>
  810ae8:	81001917 	ldw	r4,100(r16)
  810aec:	00b7ffc4 	movi	r2,-8193
  810af0:	18c80014 	ori	r3,r3,8192
  810af4:	2084703a 	and	r2,r4,r2
  810af8:	80801915 	stw	r2,100(r16)
  810afc:	00bff7c4 	movi	r2,-33
  810b00:	1884703a 	and	r2,r3,r2
  810b04:	8080030d 	sth	r2,12(r16)
  810b08:	1900010c 	andi	r4,r3,4
  810b0c:	2000061e 	bne	r4,zero,810b28 <_ungetc_r+0x84>
  810b10:	1900040c 	andi	r4,r3,16
  810b14:	20001d26 	beq	r4,zero,810b8c <_ungetc_r+0xe8>
  810b18:	18c0020c 	andi	r3,r3,8
  810b1c:	1800331e 	bne	r3,zero,810bec <_ungetc_r+0x148>
  810b20:	10800114 	ori	r2,r2,4
  810b24:	8080030d 	sth	r2,12(r16)
  810b28:	80800c17 	ldw	r2,48(r16)
  810b2c:	9c803fcc 	andi	r18,r19,255
  810b30:	10001a26 	beq	r2,zero,810b9c <_ungetc_r+0xf8>
  810b34:	80c00117 	ldw	r3,4(r16)
  810b38:	80800d17 	ldw	r2,52(r16)
  810b3c:	18800f0e 	bge	r3,r2,810b7c <_ungetc_r+0xd8>
  810b40:	80c00017 	ldw	r3,0(r16)
  810b44:	9005883a 	mov	r2,r18
  810b48:	193fffc4 	addi	r4,r3,-1
  810b4c:	81000015 	stw	r4,0(r16)
  810b50:	1cffffc5 	stb	r19,-1(r3)
  810b54:	80c00117 	ldw	r3,4(r16)
  810b58:	18c00044 	addi	r3,r3,1
  810b5c:	80c00115 	stw	r3,4(r16)
  810b60:	dfc00417 	ldw	ra,16(sp)
  810b64:	dcc00317 	ldw	r19,12(sp)
  810b68:	dc800217 	ldw	r18,8(sp)
  810b6c:	dc400117 	ldw	r17,4(sp)
  810b70:	dc000017 	ldw	r16,0(sp)
  810b74:	dec00504 	addi	sp,sp,20
  810b78:	f800283a 	ret
  810b7c:	800b883a 	mov	r5,r16
  810b80:	8809883a 	mov	r4,r17
  810b84:	08109d00 	call	8109d0 <__submore>
  810b88:	103fed26 	beq	r2,zero,810b40 <__alt_data_end+0xff810b40>
  810b8c:	00bfffc4 	movi	r2,-1
  810b90:	003ff306 	br	810b60 <__alt_data_end+0xff810b60>
  810b94:	08015c40 	call	8015c4 <__sinit>
  810b98:	003fd006 	br	810adc <__alt_data_end+0xff810adc>
  810b9c:	80c00417 	ldw	r3,16(r16)
  810ba0:	80800017 	ldw	r2,0(r16)
  810ba4:	18000326 	beq	r3,zero,810bb4 <_ungetc_r+0x110>
  810ba8:	1880022e 	bgeu	r3,r2,810bb4 <_ungetc_r+0x110>
  810bac:	10ffffc3 	ldbu	r3,-1(r2)
  810bb0:	90c01826 	beq	r18,r3,810c14 <_ungetc_r+0x170>
  810bb4:	81400117 	ldw	r5,4(r16)
  810bb8:	80800e15 	stw	r2,56(r16)
  810bbc:	008000c4 	movi	r2,3
  810bc0:	81001004 	addi	r4,r16,64
  810bc4:	80c01084 	addi	r3,r16,66
  810bc8:	80800d15 	stw	r2,52(r16)
  810bcc:	00800044 	movi	r2,1
  810bd0:	80800115 	stw	r2,4(r16)
  810bd4:	81400f15 	stw	r5,60(r16)
  810bd8:	81000c15 	stw	r4,48(r16)
  810bdc:	84c01085 	stb	r19,66(r16)
  810be0:	80c00015 	stw	r3,0(r16)
  810be4:	9005883a 	mov	r2,r18
  810be8:	003fdd06 	br	810b60 <__alt_data_end+0xff810b60>
  810bec:	800b883a 	mov	r5,r16
  810bf0:	8809883a 	mov	r4,r17
  810bf4:	08011e80 	call	8011e8 <_fflush_r>
  810bf8:	103fe41e 	bne	r2,zero,810b8c <__alt_data_end+0xff810b8c>
  810bfc:	8080030b 	ldhu	r2,12(r16)
  810c00:	00fffdc4 	movi	r3,-9
  810c04:	80000215 	stw	zero,8(r16)
  810c08:	1884703a 	and	r2,r3,r2
  810c0c:	80000615 	stw	zero,24(r16)
  810c10:	003fc306 	br	810b20 <__alt_data_end+0xff810b20>
  810c14:	80c00117 	ldw	r3,4(r16)
  810c18:	10bfffc4 	addi	r2,r2,-1
  810c1c:	80800015 	stw	r2,0(r16)
  810c20:	18800044 	addi	r2,r3,1
  810c24:	80800115 	stw	r2,4(r16)
  810c28:	9005883a 	mov	r2,r18
  810c2c:	003fcc06 	br	810b60 <__alt_data_end+0xff810b60>
  810c30:	00bfffc4 	movi	r2,-1
  810c34:	f800283a 	ret

00810c38 <ungetc>:
  810c38:	008020b4 	movhi	r2,130
  810c3c:	10ba8504 	addi	r2,r2,-5612
  810c40:	280d883a 	mov	r6,r5
  810c44:	200b883a 	mov	r5,r4
  810c48:	11000017 	ldw	r4,0(r2)
  810c4c:	0810aa41 	jmpi	810aa4 <_ungetc_r>

00810c50 <__sprint_r.part.0>:
  810c50:	28801917 	ldw	r2,100(r5)
  810c54:	defff604 	addi	sp,sp,-40
  810c58:	dd400515 	stw	r21,20(sp)
  810c5c:	dfc00915 	stw	ra,36(sp)
  810c60:	df000815 	stw	fp,32(sp)
  810c64:	ddc00715 	stw	r23,28(sp)
  810c68:	dd800615 	stw	r22,24(sp)
  810c6c:	dd000415 	stw	r20,16(sp)
  810c70:	dcc00315 	stw	r19,12(sp)
  810c74:	dc800215 	stw	r18,8(sp)
  810c78:	dc400115 	stw	r17,4(sp)
  810c7c:	dc000015 	stw	r16,0(sp)
  810c80:	1088000c 	andi	r2,r2,8192
  810c84:	302b883a 	mov	r21,r6
  810c88:	10002e26 	beq	r2,zero,810d44 <__sprint_r.part.0+0xf4>
  810c8c:	30800217 	ldw	r2,8(r6)
  810c90:	35800017 	ldw	r22,0(r6)
  810c94:	10002926 	beq	r2,zero,810d3c <__sprint_r.part.0+0xec>
  810c98:	2827883a 	mov	r19,r5
  810c9c:	2029883a 	mov	r20,r4
  810ca0:	b5c00104 	addi	r23,r22,4
  810ca4:	04bfffc4 	movi	r18,-1
  810ca8:	bc400017 	ldw	r17,0(r23)
  810cac:	b4000017 	ldw	r16,0(r22)
  810cb0:	0039883a 	mov	fp,zero
  810cb4:	8822d0ba 	srli	r17,r17,2
  810cb8:	8800031e 	bne	r17,zero,810cc8 <__sprint_r.part.0+0x78>
  810cbc:	00001806 	br	810d20 <__sprint_r.part.0+0xd0>
  810cc0:	84000104 	addi	r16,r16,4
  810cc4:	8f001526 	beq	r17,fp,810d1c <__sprint_r.part.0+0xcc>
  810cc8:	81400017 	ldw	r5,0(r16)
  810ccc:	980d883a 	mov	r6,r19
  810cd0:	a009883a 	mov	r4,r20
  810cd4:	08126180 	call	812618 <_fputwc_r>
  810cd8:	e7000044 	addi	fp,fp,1
  810cdc:	14bff81e 	bne	r2,r18,810cc0 <__alt_data_end+0xff810cc0>
  810ce0:	9005883a 	mov	r2,r18
  810ce4:	a8000215 	stw	zero,8(r21)
  810ce8:	a8000115 	stw	zero,4(r21)
  810cec:	dfc00917 	ldw	ra,36(sp)
  810cf0:	df000817 	ldw	fp,32(sp)
  810cf4:	ddc00717 	ldw	r23,28(sp)
  810cf8:	dd800617 	ldw	r22,24(sp)
  810cfc:	dd400517 	ldw	r21,20(sp)
  810d00:	dd000417 	ldw	r20,16(sp)
  810d04:	dcc00317 	ldw	r19,12(sp)
  810d08:	dc800217 	ldw	r18,8(sp)
  810d0c:	dc400117 	ldw	r17,4(sp)
  810d10:	dc000017 	ldw	r16,0(sp)
  810d14:	dec00a04 	addi	sp,sp,40
  810d18:	f800283a 	ret
  810d1c:	a8800217 	ldw	r2,8(r21)
  810d20:	8c63883a 	add	r17,r17,r17
  810d24:	8c63883a 	add	r17,r17,r17
  810d28:	1445c83a 	sub	r2,r2,r17
  810d2c:	a8800215 	stw	r2,8(r21)
  810d30:	b5800204 	addi	r22,r22,8
  810d34:	bdc00204 	addi	r23,r23,8
  810d38:	103fdb1e 	bne	r2,zero,810ca8 <__alt_data_end+0xff810ca8>
  810d3c:	0005883a 	mov	r2,zero
  810d40:	003fe806 	br	810ce4 <__alt_data_end+0xff810ce4>
  810d44:	0808c080 	call	808c08 <__sfvwrite_r>
  810d48:	003fe606 	br	810ce4 <__alt_data_end+0xff810ce4>

00810d4c <__sprint_r>:
  810d4c:	30c00217 	ldw	r3,8(r6)
  810d50:	18000126 	beq	r3,zero,810d58 <__sprint_r+0xc>
  810d54:	0810c501 	jmpi	810c50 <__sprint_r.part.0>
  810d58:	30000115 	stw	zero,4(r6)
  810d5c:	0005883a 	mov	r2,zero
  810d60:	f800283a 	ret

00810d64 <___vfiprintf_internal_r>:
  810d64:	deffc904 	addi	sp,sp,-220
  810d68:	df003515 	stw	fp,212(sp)
  810d6c:	dd003115 	stw	r20,196(sp)
  810d70:	dfc03615 	stw	ra,216(sp)
  810d74:	ddc03415 	stw	r23,208(sp)
  810d78:	dd803315 	stw	r22,204(sp)
  810d7c:	dd403215 	stw	r21,200(sp)
  810d80:	dcc03015 	stw	r19,192(sp)
  810d84:	dc802f15 	stw	r18,188(sp)
  810d88:	dc402e15 	stw	r17,184(sp)
  810d8c:	dc002d15 	stw	r16,180(sp)
  810d90:	d9002015 	stw	r4,128(sp)
  810d94:	d9c02215 	stw	r7,136(sp)
  810d98:	2829883a 	mov	r20,r5
  810d9c:	3039883a 	mov	fp,r6
  810da0:	20000226 	beq	r4,zero,810dac <___vfiprintf_internal_r+0x48>
  810da4:	20800e17 	ldw	r2,56(r4)
  810da8:	1000cf26 	beq	r2,zero,8110e8 <___vfiprintf_internal_r+0x384>
  810dac:	a080030b 	ldhu	r2,12(r20)
  810db0:	10c8000c 	andi	r3,r2,8192
  810db4:	1800061e 	bne	r3,zero,810dd0 <___vfiprintf_internal_r+0x6c>
  810db8:	a1001917 	ldw	r4,100(r20)
  810dbc:	00f7ffc4 	movi	r3,-8193
  810dc0:	10880014 	ori	r2,r2,8192
  810dc4:	20c6703a 	and	r3,r4,r3
  810dc8:	a080030d 	sth	r2,12(r20)
  810dcc:	a0c01915 	stw	r3,100(r20)
  810dd0:	10c0020c 	andi	r3,r2,8
  810dd4:	1800a926 	beq	r3,zero,81107c <___vfiprintf_internal_r+0x318>
  810dd8:	a0c00417 	ldw	r3,16(r20)
  810ddc:	1800a726 	beq	r3,zero,81107c <___vfiprintf_internal_r+0x318>
  810de0:	1080068c 	andi	r2,r2,26
  810de4:	00c00284 	movi	r3,10
  810de8:	10c0ac26 	beq	r2,r3,81109c <___vfiprintf_internal_r+0x338>
  810dec:	da801a04 	addi	r10,sp,104
  810df0:	da801e15 	stw	r10,120(sp)
  810df4:	d8801e17 	ldw	r2,120(sp)
  810df8:	da8019c4 	addi	r10,sp,103
  810dfc:	058020b4 	movhi	r22,130
  810e00:	05c020b4 	movhi	r23,130
  810e04:	da801f15 	stw	r10,124(sp)
  810e08:	1295c83a 	sub	r10,r2,r10
  810e0c:	b5b29984 	addi	r22,r22,-13722
  810e10:	bdf29584 	addi	r23,r23,-13738
  810e14:	dec01a15 	stw	sp,104(sp)
  810e18:	d8001c15 	stw	zero,112(sp)
  810e1c:	d8001b15 	stw	zero,108(sp)
  810e20:	d8002615 	stw	zero,152(sp)
  810e24:	d8002315 	stw	zero,140(sp)
  810e28:	da802715 	stw	r10,156(sp)
  810e2c:	d811883a 	mov	r8,sp
  810e30:	dd002115 	stw	r20,132(sp)
  810e34:	e021883a 	mov	r16,fp
  810e38:	80800007 	ldb	r2,0(r16)
  810e3c:	1003ea26 	beq	r2,zero,811de8 <___vfiprintf_internal_r+0x1084>
  810e40:	00c00944 	movi	r3,37
  810e44:	8025883a 	mov	r18,r16
  810e48:	10c0021e 	bne	r2,r3,810e54 <___vfiprintf_internal_r+0xf0>
  810e4c:	00001606 	br	810ea8 <___vfiprintf_internal_r+0x144>
  810e50:	10c00326 	beq	r2,r3,810e60 <___vfiprintf_internal_r+0xfc>
  810e54:	94800044 	addi	r18,r18,1
  810e58:	90800007 	ldb	r2,0(r18)
  810e5c:	103ffc1e 	bne	r2,zero,810e50 <__alt_data_end+0xff810e50>
  810e60:	9423c83a 	sub	r17,r18,r16
  810e64:	88001026 	beq	r17,zero,810ea8 <___vfiprintf_internal_r+0x144>
  810e68:	d8c01c17 	ldw	r3,112(sp)
  810e6c:	d8801b17 	ldw	r2,108(sp)
  810e70:	44000015 	stw	r16,0(r8)
  810e74:	88c7883a 	add	r3,r17,r3
  810e78:	10800044 	addi	r2,r2,1
  810e7c:	44400115 	stw	r17,4(r8)
  810e80:	d8c01c15 	stw	r3,112(sp)
  810e84:	d8801b15 	stw	r2,108(sp)
  810e88:	010001c4 	movi	r4,7
  810e8c:	2080760e 	bge	r4,r2,811068 <___vfiprintf_internal_r+0x304>
  810e90:	1803821e 	bne	r3,zero,811c9c <___vfiprintf_internal_r+0xf38>
  810e94:	da802317 	ldw	r10,140(sp)
  810e98:	d8001b15 	stw	zero,108(sp)
  810e9c:	d811883a 	mov	r8,sp
  810ea0:	5455883a 	add	r10,r10,r17
  810ea4:	da802315 	stw	r10,140(sp)
  810ea8:	90800007 	ldb	r2,0(r18)
  810eac:	10044626 	beq	r2,zero,811fc8 <___vfiprintf_internal_r+0x1264>
  810eb0:	90c00047 	ldb	r3,1(r18)
  810eb4:	94000044 	addi	r16,r18,1
  810eb8:	d8001d85 	stb	zero,118(sp)
  810ebc:	0009883a 	mov	r4,zero
  810ec0:	000f883a 	mov	r7,zero
  810ec4:	027fffc4 	movi	r9,-1
  810ec8:	0023883a 	mov	r17,zero
  810ecc:	0029883a 	mov	r20,zero
  810ed0:	01401604 	movi	r5,88
  810ed4:	01800244 	movi	r6,9
  810ed8:	03400a84 	movi	r13,42
  810edc:	03001b04 	movi	r12,108
  810ee0:	84000044 	addi	r16,r16,1
  810ee4:	18bff804 	addi	r2,r3,-32
  810ee8:	28827336 	bltu	r5,r2,8118b8 <___vfiprintf_internal_r+0xb54>
  810eec:	100490ba 	slli	r2,r2,2
  810ef0:	02802074 	movhi	r10,129
  810ef4:	5283c104 	addi	r10,r10,3844
  810ef8:	1285883a 	add	r2,r2,r10
  810efc:	10800017 	ldw	r2,0(r2)
  810f00:	1000683a 	jmp	r2
  810f04:	008115ec 	andhi	r2,zero,1111
  810f08:	008118b8 	rdprs	r2,zero,1122
  810f0c:	008118b8 	rdprs	r2,zero,1122
  810f10:	0081160c 	andi	r2,zero,1112
  810f14:	008118b8 	rdprs	r2,zero,1122
  810f18:	008118b8 	rdprs	r2,zero,1122
  810f1c:	008118b8 	rdprs	r2,zero,1122
  810f20:	008118b8 	rdprs	r2,zero,1122
  810f24:	008118b8 	rdprs	r2,zero,1122
  810f28:	008118b8 	rdprs	r2,zero,1122
  810f2c:	008117f4 	movhi	r2,1119
  810f30:	00811810 	cmplti	r2,zero,1120
  810f34:	008118b8 	rdprs	r2,zero,1122
  810f38:	008110f8 	rdprs	r2,zero,1091
  810f3c:	00811820 	cmpeqi	r2,zero,1120
  810f40:	008118b8 	rdprs	r2,zero,1122
  810f44:	00811618 	cmpnei	r2,zero,1112
  810f48:	00811624 	muli	r2,zero,1112
  810f4c:	00811624 	muli	r2,zero,1112
  810f50:	00811624 	muli	r2,zero,1112
  810f54:	00811624 	muli	r2,zero,1112
  810f58:	00811624 	muli	r2,zero,1112
  810f5c:	00811624 	muli	r2,zero,1112
  810f60:	00811624 	muli	r2,zero,1112
  810f64:	00811624 	muli	r2,zero,1112
  810f68:	00811624 	muli	r2,zero,1112
  810f6c:	008118b8 	rdprs	r2,zero,1122
  810f70:	008118b8 	rdprs	r2,zero,1122
  810f74:	008118b8 	rdprs	r2,zero,1122
  810f78:	008118b8 	rdprs	r2,zero,1122
  810f7c:	008118b8 	rdprs	r2,zero,1122
  810f80:	008118b8 	rdprs	r2,zero,1122
  810f84:	008118b8 	rdprs	r2,zero,1122
  810f88:	008118b8 	rdprs	r2,zero,1122
  810f8c:	008118b8 	rdprs	r2,zero,1122
  810f90:	008118b8 	rdprs	r2,zero,1122
  810f94:	00811650 	cmplti	r2,zero,1113
  810f98:	008118b8 	rdprs	r2,zero,1122
  810f9c:	008118b8 	rdprs	r2,zero,1122
  810fa0:	008118b8 	rdprs	r2,zero,1122
  810fa4:	008118b8 	rdprs	r2,zero,1122
  810fa8:	008118b8 	rdprs	r2,zero,1122
  810fac:	008118b8 	rdprs	r2,zero,1122
  810fb0:	008118b8 	rdprs	r2,zero,1122
  810fb4:	008118b8 	rdprs	r2,zero,1122
  810fb8:	008118b8 	rdprs	r2,zero,1122
  810fbc:	008118b8 	rdprs	r2,zero,1122
  810fc0:	00811688 	cmpgei	r2,zero,1114
  810fc4:	008118b8 	rdprs	r2,zero,1122
  810fc8:	008118b8 	rdprs	r2,zero,1122
  810fcc:	008118b8 	rdprs	r2,zero,1122
  810fd0:	008118b8 	rdprs	r2,zero,1122
  810fd4:	008118b8 	rdprs	r2,zero,1122
  810fd8:	008116e0 	cmpeqi	r2,zero,1115
  810fdc:	008118b8 	rdprs	r2,zero,1122
  810fe0:	008118b8 	rdprs	r2,zero,1122
  810fe4:	00811750 	cmplti	r2,zero,1117
  810fe8:	008118b8 	rdprs	r2,zero,1122
  810fec:	008118b8 	rdprs	r2,zero,1122
  810ff0:	008118b8 	rdprs	r2,zero,1122
  810ff4:	008118b8 	rdprs	r2,zero,1122
  810ff8:	008118b8 	rdprs	r2,zero,1122
  810ffc:	008118b8 	rdprs	r2,zero,1122
  811000:	008118b8 	rdprs	r2,zero,1122
  811004:	008118b8 	rdprs	r2,zero,1122
  811008:	008118b8 	rdprs	r2,zero,1122
  81100c:	008118b8 	rdprs	r2,zero,1122
  811010:	008114fc 	xorhi	r2,zero,1107
  811014:	00811528 	cmpgeui	r2,zero,1108
  811018:	008118b8 	rdprs	r2,zero,1122
  81101c:	008118b8 	rdprs	r2,zero,1122
  811020:	008118b8 	rdprs	r2,zero,1122
  811024:	00811860 	cmpeqi	r2,zero,1121
  811028:	00811528 	cmpgeui	r2,zero,1108
  81102c:	008118b8 	rdprs	r2,zero,1122
  811030:	008118b8 	rdprs	r2,zero,1122
  811034:	008113bc 	xorhi	r2,zero,1102
  811038:	008118b8 	rdprs	r2,zero,1122
  81103c:	008113cc 	andi	r2,zero,1103
  811040:	00811408 	cmpgei	r2,zero,1104
  811044:	00811104 	movi	r2,1092
  811048:	008113b0 	cmpltui	r2,zero,1102
  81104c:	008118b8 	rdprs	r2,zero,1122
  811050:	0081178c 	andi	r2,zero,1118
  811054:	008118b8 	rdprs	r2,zero,1122
  811058:	008117e4 	muli	r2,zero,1119
  81105c:	008118b8 	rdprs	r2,zero,1122
  811060:	008118b8 	rdprs	r2,zero,1122
  811064:	008114a8 	cmpgeui	r2,zero,1106
  811068:	42000204 	addi	r8,r8,8
  81106c:	da802317 	ldw	r10,140(sp)
  811070:	5455883a 	add	r10,r10,r17
  811074:	da802315 	stw	r10,140(sp)
  811078:	003f8b06 	br	810ea8 <__alt_data_end+0xff810ea8>
  81107c:	d9002017 	ldw	r4,128(sp)
  811080:	a00b883a 	mov	r5,r20
  811084:	080712c0 	call	80712c <__swsetup_r>
  811088:	1003b11e 	bne	r2,zero,811f50 <___vfiprintf_internal_r+0x11ec>
  81108c:	a080030b 	ldhu	r2,12(r20)
  811090:	00c00284 	movi	r3,10
  811094:	1080068c 	andi	r2,r2,26
  811098:	10ff541e 	bne	r2,r3,810dec <__alt_data_end+0xff810dec>
  81109c:	a080038f 	ldh	r2,14(r20)
  8110a0:	103f5216 	blt	r2,zero,810dec <__alt_data_end+0xff810dec>
  8110a4:	d9c02217 	ldw	r7,136(sp)
  8110a8:	d9002017 	ldw	r4,128(sp)
  8110ac:	e00d883a 	mov	r6,fp
  8110b0:	a00b883a 	mov	r5,r20
  8110b4:	08121dc0 	call	8121dc <__sbprintf>
  8110b8:	dfc03617 	ldw	ra,216(sp)
  8110bc:	df003517 	ldw	fp,212(sp)
  8110c0:	ddc03417 	ldw	r23,208(sp)
  8110c4:	dd803317 	ldw	r22,204(sp)
  8110c8:	dd403217 	ldw	r21,200(sp)
  8110cc:	dd003117 	ldw	r20,196(sp)
  8110d0:	dcc03017 	ldw	r19,192(sp)
  8110d4:	dc802f17 	ldw	r18,188(sp)
  8110d8:	dc402e17 	ldw	r17,184(sp)
  8110dc:	dc002d17 	ldw	r16,180(sp)
  8110e0:	dec03704 	addi	sp,sp,220
  8110e4:	f800283a 	ret
  8110e8:	08015c40 	call	8015c4 <__sinit>
  8110ec:	003f2f06 	br	810dac <__alt_data_end+0xff810dac>
  8110f0:	0463c83a 	sub	r17,zero,r17
  8110f4:	d8802215 	stw	r2,136(sp)
  8110f8:	a5000114 	ori	r20,r20,4
  8110fc:	80c00007 	ldb	r3,0(r16)
  811100:	003f7706 	br	810ee0 <__alt_data_end+0xff810ee0>
  811104:	00800c04 	movi	r2,48
  811108:	da802217 	ldw	r10,136(sp)
  81110c:	d8801d05 	stb	r2,116(sp)
  811110:	00801e04 	movi	r2,120
  811114:	d8801d45 	stb	r2,117(sp)
  811118:	d8001d85 	stb	zero,118(sp)
  81111c:	50c00104 	addi	r3,r10,4
  811120:	54800017 	ldw	r18,0(r10)
  811124:	0027883a 	mov	r19,zero
  811128:	a0800094 	ori	r2,r20,2
  81112c:	48030b16 	blt	r9,zero,811d5c <___vfiprintf_internal_r+0xff8>
  811130:	00bfdfc4 	movi	r2,-129
  811134:	a096703a 	and	r11,r20,r2
  811138:	d8c02215 	stw	r3,136(sp)
  81113c:	5d000094 	ori	r20,r11,2
  811140:	90032b1e 	bne	r18,zero,811df0 <___vfiprintf_internal_r+0x108c>
  811144:	008020b4 	movhi	r2,130
  811148:	10b16d04 	addi	r2,r2,-14924
  81114c:	d8802615 	stw	r2,152(sp)
  811150:	0039883a 	mov	fp,zero
  811154:	48017b1e 	bne	r9,zero,811744 <___vfiprintf_internal_r+0x9e0>
  811158:	0013883a 	mov	r9,zero
  81115c:	0027883a 	mov	r19,zero
  811160:	dd401a04 	addi	r21,sp,104
  811164:	4825883a 	mov	r18,r9
  811168:	4cc0010e 	bge	r9,r19,811170 <___vfiprintf_internal_r+0x40c>
  81116c:	9825883a 	mov	r18,r19
  811170:	e7003fcc 	andi	fp,fp,255
  811174:	e700201c 	xori	fp,fp,128
  811178:	e73fe004 	addi	fp,fp,-128
  81117c:	e0000126 	beq	fp,zero,811184 <___vfiprintf_internal_r+0x420>
  811180:	94800044 	addi	r18,r18,1
  811184:	a380008c 	andi	r14,r20,2
  811188:	70000126 	beq	r14,zero,811190 <___vfiprintf_internal_r+0x42c>
  81118c:	94800084 	addi	r18,r18,2
  811190:	a700210c 	andi	fp,r20,132
  811194:	e001df1e 	bne	fp,zero,811914 <___vfiprintf_internal_r+0xbb0>
  811198:	8c87c83a 	sub	r3,r17,r18
  81119c:	00c1dd0e 	bge	zero,r3,811914 <___vfiprintf_internal_r+0xbb0>
  8111a0:	01c00404 	movi	r7,16
  8111a4:	d8801c17 	ldw	r2,112(sp)
  8111a8:	38c3ad0e 	bge	r7,r3,812060 <___vfiprintf_internal_r+0x12fc>
  8111ac:	028020b4 	movhi	r10,130
  8111b0:	52b29984 	addi	r10,r10,-13722
  8111b4:	dc002915 	stw	r16,164(sp)
  8111b8:	d9801b17 	ldw	r6,108(sp)
  8111bc:	da802415 	stw	r10,144(sp)
  8111c0:	03c001c4 	movi	r15,7
  8111c4:	da402515 	stw	r9,148(sp)
  8111c8:	db802815 	stw	r14,160(sp)
  8111cc:	1821883a 	mov	r16,r3
  8111d0:	00000506 	br	8111e8 <___vfiprintf_internal_r+0x484>
  8111d4:	31400084 	addi	r5,r6,2
  8111d8:	42000204 	addi	r8,r8,8
  8111dc:	200d883a 	mov	r6,r4
  8111e0:	843ffc04 	addi	r16,r16,-16
  8111e4:	3c000d0e 	bge	r7,r16,81121c <___vfiprintf_internal_r+0x4b8>
  8111e8:	10800404 	addi	r2,r2,16
  8111ec:	31000044 	addi	r4,r6,1
  8111f0:	45800015 	stw	r22,0(r8)
  8111f4:	41c00115 	stw	r7,4(r8)
  8111f8:	d8801c15 	stw	r2,112(sp)
  8111fc:	d9001b15 	stw	r4,108(sp)
  811200:	793ff40e 	bge	r15,r4,8111d4 <__alt_data_end+0xff8111d4>
  811204:	1001b51e 	bne	r2,zero,8118dc <___vfiprintf_internal_r+0xb78>
  811208:	843ffc04 	addi	r16,r16,-16
  81120c:	000d883a 	mov	r6,zero
  811210:	01400044 	movi	r5,1
  811214:	d811883a 	mov	r8,sp
  811218:	3c3ff316 	blt	r7,r16,8111e8 <__alt_data_end+0xff8111e8>
  81121c:	8007883a 	mov	r3,r16
  811220:	da402517 	ldw	r9,148(sp)
  811224:	db802817 	ldw	r14,160(sp)
  811228:	dc002917 	ldw	r16,164(sp)
  81122c:	da802417 	ldw	r10,144(sp)
  811230:	1885883a 	add	r2,r3,r2
  811234:	40c00115 	stw	r3,4(r8)
  811238:	42800015 	stw	r10,0(r8)
  81123c:	d8801c15 	stw	r2,112(sp)
  811240:	d9401b15 	stw	r5,108(sp)
  811244:	00c001c4 	movi	r3,7
  811248:	19426016 	blt	r3,r5,811bcc <___vfiprintf_internal_r+0xe68>
  81124c:	d8c01d87 	ldb	r3,118(sp)
  811250:	42000204 	addi	r8,r8,8
  811254:	29000044 	addi	r4,r5,1
  811258:	1801b31e 	bne	r3,zero,811928 <___vfiprintf_internal_r+0xbc4>
  81125c:	7001c026 	beq	r14,zero,811960 <___vfiprintf_internal_r+0xbfc>
  811260:	d8c01d04 	addi	r3,sp,116
  811264:	10800084 	addi	r2,r2,2
  811268:	40c00015 	stw	r3,0(r8)
  81126c:	00c00084 	movi	r3,2
  811270:	40c00115 	stw	r3,4(r8)
  811274:	d8801c15 	stw	r2,112(sp)
  811278:	d9001b15 	stw	r4,108(sp)
  81127c:	00c001c4 	movi	r3,7
  811280:	1902650e 	bge	r3,r4,811c18 <___vfiprintf_internal_r+0xeb4>
  811284:	10029a1e 	bne	r2,zero,811cf0 <___vfiprintf_internal_r+0xf8c>
  811288:	00c02004 	movi	r3,128
  81128c:	01000044 	movi	r4,1
  811290:	000b883a 	mov	r5,zero
  811294:	d811883a 	mov	r8,sp
  811298:	e0c1b31e 	bne	fp,r3,811968 <___vfiprintf_internal_r+0xc04>
  81129c:	8cb9c83a 	sub	fp,r17,r18
  8112a0:	0701b10e 	bge	zero,fp,811968 <___vfiprintf_internal_r+0xc04>
  8112a4:	01c00404 	movi	r7,16
  8112a8:	3f03890e 	bge	r7,fp,8120d0 <___vfiprintf_internal_r+0x136c>
  8112ac:	00c020b4 	movhi	r3,130
  8112b0:	18f29584 	addi	r3,r3,-13738
  8112b4:	d8c02415 	stw	r3,144(sp)
  8112b8:	8007883a 	mov	r3,r16
  8112bc:	034001c4 	movi	r13,7
  8112c0:	e021883a 	mov	r16,fp
  8112c4:	da402515 	stw	r9,148(sp)
  8112c8:	1839883a 	mov	fp,r3
  8112cc:	00000506 	br	8112e4 <___vfiprintf_internal_r+0x580>
  8112d0:	29800084 	addi	r6,r5,2
  8112d4:	42000204 	addi	r8,r8,8
  8112d8:	180b883a 	mov	r5,r3
  8112dc:	843ffc04 	addi	r16,r16,-16
  8112e0:	3c000d0e 	bge	r7,r16,811318 <___vfiprintf_internal_r+0x5b4>
  8112e4:	10800404 	addi	r2,r2,16
  8112e8:	28c00044 	addi	r3,r5,1
  8112ec:	45c00015 	stw	r23,0(r8)
  8112f0:	41c00115 	stw	r7,4(r8)
  8112f4:	d8801c15 	stw	r2,112(sp)
  8112f8:	d8c01b15 	stw	r3,108(sp)
  8112fc:	68fff40e 	bge	r13,r3,8112d0 <__alt_data_end+0xff8112d0>
  811300:	1002241e 	bne	r2,zero,811b94 <___vfiprintf_internal_r+0xe30>
  811304:	843ffc04 	addi	r16,r16,-16
  811308:	01800044 	movi	r6,1
  81130c:	000b883a 	mov	r5,zero
  811310:	d811883a 	mov	r8,sp
  811314:	3c3ff316 	blt	r7,r16,8112e4 <__alt_data_end+0xff8112e4>
  811318:	da402517 	ldw	r9,148(sp)
  81131c:	e007883a 	mov	r3,fp
  811320:	8039883a 	mov	fp,r16
  811324:	1821883a 	mov	r16,r3
  811328:	d8c02417 	ldw	r3,144(sp)
  81132c:	1705883a 	add	r2,r2,fp
  811330:	47000115 	stw	fp,4(r8)
  811334:	40c00015 	stw	r3,0(r8)
  811338:	d8801c15 	stw	r2,112(sp)
  81133c:	d9801b15 	stw	r6,108(sp)
  811340:	00c001c4 	movi	r3,7
  811344:	19827616 	blt	r3,r6,811d20 <___vfiprintf_internal_r+0xfbc>
  811348:	4cf9c83a 	sub	fp,r9,r19
  81134c:	42000204 	addi	r8,r8,8
  811350:	31000044 	addi	r4,r6,1
  811354:	300b883a 	mov	r5,r6
  811358:	07018516 	blt	zero,fp,811970 <___vfiprintf_internal_r+0xc0c>
  81135c:	9885883a 	add	r2,r19,r2
  811360:	45400015 	stw	r21,0(r8)
  811364:	44c00115 	stw	r19,4(r8)
  811368:	d8801c15 	stw	r2,112(sp)
  81136c:	d9001b15 	stw	r4,108(sp)
  811370:	00c001c4 	movi	r3,7
  811374:	1901dd0e 	bge	r3,r4,811aec <___vfiprintf_internal_r+0xd88>
  811378:	1002401e 	bne	r2,zero,811c7c <___vfiprintf_internal_r+0xf18>
  81137c:	d8001b15 	stw	zero,108(sp)
  811380:	a2c0010c 	andi	r11,r20,4
  811384:	58000226 	beq	r11,zero,811390 <___vfiprintf_internal_r+0x62c>
  811388:	8ca7c83a 	sub	r19,r17,r18
  81138c:	04c2f216 	blt	zero,r19,811f58 <___vfiprintf_internal_r+0x11f4>
  811390:	8c80010e 	bge	r17,r18,811398 <___vfiprintf_internal_r+0x634>
  811394:	9023883a 	mov	r17,r18
  811398:	da802317 	ldw	r10,140(sp)
  81139c:	5455883a 	add	r10,r10,r17
  8113a0:	da802315 	stw	r10,140(sp)
  8113a4:	d8001b15 	stw	zero,108(sp)
  8113a8:	d811883a 	mov	r8,sp
  8113ac:	003ea206 	br	810e38 <__alt_data_end+0xff810e38>
  8113b0:	a5000814 	ori	r20,r20,32
  8113b4:	80c00007 	ldb	r3,0(r16)
  8113b8:	003ec906 	br	810ee0 <__alt_data_end+0xff810ee0>
  8113bc:	80c00007 	ldb	r3,0(r16)
  8113c0:	1b030926 	beq	r3,r12,811fe8 <___vfiprintf_internal_r+0x1284>
  8113c4:	a5000414 	ori	r20,r20,16
  8113c8:	003ec506 	br	810ee0 <__alt_data_end+0xff810ee0>
  8113cc:	21003fcc 	andi	r4,r4,255
  8113d0:	20035e1e 	bne	r4,zero,81214c <___vfiprintf_internal_r+0x13e8>
  8113d4:	a080080c 	andi	r2,r20,32
  8113d8:	1002a526 	beq	r2,zero,811e70 <___vfiprintf_internal_r+0x110c>
  8113dc:	da802217 	ldw	r10,136(sp)
  8113e0:	50800017 	ldw	r2,0(r10)
  8113e4:	da802317 	ldw	r10,140(sp)
  8113e8:	5007d7fa 	srai	r3,r10,31
  8113ec:	da802217 	ldw	r10,136(sp)
  8113f0:	10c00115 	stw	r3,4(r2)
  8113f4:	52800104 	addi	r10,r10,4
  8113f8:	da802215 	stw	r10,136(sp)
  8113fc:	da802317 	ldw	r10,140(sp)
  811400:	12800015 	stw	r10,0(r2)
  811404:	003e8c06 	br	810e38 <__alt_data_end+0xff810e38>
  811408:	21003fcc 	andi	r4,r4,255
  81140c:	2003511e 	bne	r4,zero,812154 <___vfiprintf_internal_r+0x13f0>
  811410:	a080080c 	andi	r2,r20,32
  811414:	1000a126 	beq	r2,zero,81169c <___vfiprintf_internal_r+0x938>
  811418:	da802217 	ldw	r10,136(sp)
  81141c:	d8001d85 	stb	zero,118(sp)
  811420:	50800204 	addi	r2,r10,8
  811424:	54800017 	ldw	r18,0(r10)
  811428:	54c00117 	ldw	r19,4(r10)
  81142c:	4802b416 	blt	r9,zero,811f00 <___vfiprintf_internal_r+0x119c>
  811430:	013fdfc4 	movi	r4,-129
  811434:	94c6b03a 	or	r3,r18,r19
  811438:	d8802215 	stw	r2,136(sp)
  81143c:	a128703a 	and	r20,r20,r4
  811440:	1800a226 	beq	r3,zero,8116cc <___vfiprintf_internal_r+0x968>
  811444:	0039883a 	mov	fp,zero
  811448:	dd401a04 	addi	r21,sp,104
  81144c:	9006d0fa 	srli	r3,r18,3
  811450:	9808977a 	slli	r4,r19,29
  811454:	9826d0fa 	srli	r19,r19,3
  811458:	948001cc 	andi	r18,r18,7
  81145c:	90800c04 	addi	r2,r18,48
  811460:	ad7fffc4 	addi	r21,r21,-1
  811464:	20e4b03a 	or	r18,r4,r3
  811468:	a8800005 	stb	r2,0(r21)
  81146c:	94c6b03a 	or	r3,r18,r19
  811470:	183ff61e 	bne	r3,zero,81144c <__alt_data_end+0xff81144c>
  811474:	a0c0004c 	andi	r3,r20,1
  811478:	18005926 	beq	r3,zero,8115e0 <___vfiprintf_internal_r+0x87c>
  81147c:	10803fcc 	andi	r2,r2,255
  811480:	1080201c 	xori	r2,r2,128
  811484:	10bfe004 	addi	r2,r2,-128
  811488:	00c00c04 	movi	r3,48
  81148c:	10c05426 	beq	r2,r3,8115e0 <___vfiprintf_internal_r+0x87c>
  811490:	da801e17 	ldw	r10,120(sp)
  811494:	a8bfffc4 	addi	r2,r21,-1
  811498:	a8ffffc5 	stb	r3,-1(r21)
  81149c:	50a7c83a 	sub	r19,r10,r2
  8114a0:	102b883a 	mov	r21,r2
  8114a4:	003f2f06 	br	811164 <__alt_data_end+0xff811164>
  8114a8:	21003fcc 	andi	r4,r4,255
  8114ac:	2003421e 	bne	r4,zero,8121b8 <___vfiprintf_internal_r+0x1454>
  8114b0:	008020b4 	movhi	r2,130
  8114b4:	10b16d04 	addi	r2,r2,-14924
  8114b8:	d8802615 	stw	r2,152(sp)
  8114bc:	a080080c 	andi	r2,r20,32
  8114c0:	1000aa26 	beq	r2,zero,81176c <___vfiprintf_internal_r+0xa08>
  8114c4:	da802217 	ldw	r10,136(sp)
  8114c8:	54800017 	ldw	r18,0(r10)
  8114cc:	54c00117 	ldw	r19,4(r10)
  8114d0:	52800204 	addi	r10,r10,8
  8114d4:	da802215 	stw	r10,136(sp)
  8114d8:	a080004c 	andi	r2,r20,1
  8114dc:	1001d226 	beq	r2,zero,811c28 <___vfiprintf_internal_r+0xec4>
  8114e0:	94c4b03a 	or	r2,r18,r19
  8114e4:	1002351e 	bne	r2,zero,811dbc <___vfiprintf_internal_r+0x1058>
  8114e8:	d8001d85 	stb	zero,118(sp)
  8114ec:	48022216 	blt	r9,zero,811d78 <___vfiprintf_internal_r+0x1014>
  8114f0:	00bfdfc4 	movi	r2,-129
  8114f4:	a0a8703a 	and	r20,r20,r2
  8114f8:	003f1506 	br	811150 <__alt_data_end+0xff811150>
  8114fc:	da802217 	ldw	r10,136(sp)
  811500:	04800044 	movi	r18,1
  811504:	d8001d85 	stb	zero,118(sp)
  811508:	50800017 	ldw	r2,0(r10)
  81150c:	52800104 	addi	r10,r10,4
  811510:	da802215 	stw	r10,136(sp)
  811514:	d8801005 	stb	r2,64(sp)
  811518:	9027883a 	mov	r19,r18
  81151c:	dd401004 	addi	r21,sp,64
  811520:	0013883a 	mov	r9,zero
  811524:	003f1706 	br	811184 <__alt_data_end+0xff811184>
  811528:	21003fcc 	andi	r4,r4,255
  81152c:	2003201e 	bne	r4,zero,8121b0 <___vfiprintf_internal_r+0x144c>
  811530:	a080080c 	andi	r2,r20,32
  811534:	10004b26 	beq	r2,zero,811664 <___vfiprintf_internal_r+0x900>
  811538:	da802217 	ldw	r10,136(sp)
  81153c:	50800117 	ldw	r2,4(r10)
  811540:	54800017 	ldw	r18,0(r10)
  811544:	52800204 	addi	r10,r10,8
  811548:	da802215 	stw	r10,136(sp)
  81154c:	1027883a 	mov	r19,r2
  811550:	10022c16 	blt	r2,zero,811e04 <___vfiprintf_internal_r+0x10a0>
  811554:	df001d83 	ldbu	fp,118(sp)
  811558:	48007216 	blt	r9,zero,811724 <___vfiprintf_internal_r+0x9c0>
  81155c:	00ffdfc4 	movi	r3,-129
  811560:	94c4b03a 	or	r2,r18,r19
  811564:	a0e8703a 	and	r20,r20,r3
  811568:	1000cc26 	beq	r2,zero,81189c <___vfiprintf_internal_r+0xb38>
  81156c:	98021026 	beq	r19,zero,811db0 <___vfiprintf_internal_r+0x104c>
  811570:	dc402415 	stw	r17,144(sp)
  811574:	dc002515 	stw	r16,148(sp)
  811578:	9823883a 	mov	r17,r19
  81157c:	9021883a 	mov	r16,r18
  811580:	dd401a04 	addi	r21,sp,104
  811584:	4825883a 	mov	r18,r9
  811588:	4027883a 	mov	r19,r8
  81158c:	8009883a 	mov	r4,r16
  811590:	880b883a 	mov	r5,r17
  811594:	01800284 	movi	r6,10
  811598:	000f883a 	mov	r7,zero
  81159c:	0814f580 	call	814f58 <__umoddi3>
  8115a0:	10800c04 	addi	r2,r2,48
  8115a4:	ad7fffc4 	addi	r21,r21,-1
  8115a8:	8009883a 	mov	r4,r16
  8115ac:	880b883a 	mov	r5,r17
  8115b0:	a8800005 	stb	r2,0(r21)
  8115b4:	01800284 	movi	r6,10
  8115b8:	000f883a 	mov	r7,zero
  8115bc:	08149e00 	call	8149e0 <__udivdi3>
  8115c0:	1021883a 	mov	r16,r2
  8115c4:	10c4b03a 	or	r2,r2,r3
  8115c8:	1823883a 	mov	r17,r3
  8115cc:	103fef1e 	bne	r2,zero,81158c <__alt_data_end+0xff81158c>
  8115d0:	dc402417 	ldw	r17,144(sp)
  8115d4:	dc002517 	ldw	r16,148(sp)
  8115d8:	9013883a 	mov	r9,r18
  8115dc:	9811883a 	mov	r8,r19
  8115e0:	da801e17 	ldw	r10,120(sp)
  8115e4:	5567c83a 	sub	r19,r10,r21
  8115e8:	003ede06 	br	811164 <__alt_data_end+0xff811164>
  8115ec:	38803fcc 	andi	r2,r7,255
  8115f0:	1080201c 	xori	r2,r2,128
  8115f4:	10bfe004 	addi	r2,r2,-128
  8115f8:	1002371e 	bne	r2,zero,811ed8 <___vfiprintf_internal_r+0x1174>
  8115fc:	01000044 	movi	r4,1
  811600:	01c00804 	movi	r7,32
  811604:	80c00007 	ldb	r3,0(r16)
  811608:	003e3506 	br	810ee0 <__alt_data_end+0xff810ee0>
  81160c:	a5000054 	ori	r20,r20,1
  811610:	80c00007 	ldb	r3,0(r16)
  811614:	003e3206 	br	810ee0 <__alt_data_end+0xff810ee0>
  811618:	a5002014 	ori	r20,r20,128
  81161c:	80c00007 	ldb	r3,0(r16)
  811620:	003e2f06 	br	810ee0 <__alt_data_end+0xff810ee0>
  811624:	8015883a 	mov	r10,r16
  811628:	0023883a 	mov	r17,zero
  81162c:	18bff404 	addi	r2,r3,-48
  811630:	50c00007 	ldb	r3,0(r10)
  811634:	8c4002a4 	muli	r17,r17,10
  811638:	84000044 	addi	r16,r16,1
  81163c:	8015883a 	mov	r10,r16
  811640:	1463883a 	add	r17,r2,r17
  811644:	18bff404 	addi	r2,r3,-48
  811648:	30bff92e 	bgeu	r6,r2,811630 <__alt_data_end+0xff811630>
  81164c:	003e2506 	br	810ee4 <__alt_data_end+0xff810ee4>
  811650:	21003fcc 	andi	r4,r4,255
  811654:	2002d41e 	bne	r4,zero,8121a8 <___vfiprintf_internal_r+0x1444>
  811658:	a5000414 	ori	r20,r20,16
  81165c:	a080080c 	andi	r2,r20,32
  811660:	103fb51e 	bne	r2,zero,811538 <__alt_data_end+0xff811538>
  811664:	a080040c 	andi	r2,r20,16
  811668:	1001f826 	beq	r2,zero,811e4c <___vfiprintf_internal_r+0x10e8>
  81166c:	da802217 	ldw	r10,136(sp)
  811670:	54800017 	ldw	r18,0(r10)
  811674:	52800104 	addi	r10,r10,4
  811678:	da802215 	stw	r10,136(sp)
  81167c:	9027d7fa 	srai	r19,r18,31
  811680:	9805883a 	mov	r2,r19
  811684:	003fb206 	br	811550 <__alt_data_end+0xff811550>
  811688:	21003fcc 	andi	r4,r4,255
  81168c:	2002c41e 	bne	r4,zero,8121a0 <___vfiprintf_internal_r+0x143c>
  811690:	a5000414 	ori	r20,r20,16
  811694:	a080080c 	andi	r2,r20,32
  811698:	103f5f1e 	bne	r2,zero,811418 <__alt_data_end+0xff811418>
  81169c:	a080040c 	andi	r2,r20,16
  8116a0:	10020f26 	beq	r2,zero,811ee0 <___vfiprintf_internal_r+0x117c>
  8116a4:	da802217 	ldw	r10,136(sp)
  8116a8:	d8001d85 	stb	zero,118(sp)
  8116ac:	0027883a 	mov	r19,zero
  8116b0:	50800104 	addi	r2,r10,4
  8116b4:	54800017 	ldw	r18,0(r10)
  8116b8:	48021116 	blt	r9,zero,811f00 <___vfiprintf_internal_r+0x119c>
  8116bc:	00ffdfc4 	movi	r3,-129
  8116c0:	d8802215 	stw	r2,136(sp)
  8116c4:	a0e8703a 	and	r20,r20,r3
  8116c8:	903f5e1e 	bne	r18,zero,811444 <__alt_data_end+0xff811444>
  8116cc:	0039883a 	mov	fp,zero
  8116d0:	4802a626 	beq	r9,zero,81216c <___vfiprintf_internal_r+0x1408>
  8116d4:	0025883a 	mov	r18,zero
  8116d8:	0027883a 	mov	r19,zero
  8116dc:	003f5a06 	br	811448 <__alt_data_end+0xff811448>
  8116e0:	21003fcc 	andi	r4,r4,255
  8116e4:	20029f1e 	bne	r4,zero,812164 <___vfiprintf_internal_r+0x1400>
  8116e8:	a5000414 	ori	r20,r20,16
  8116ec:	a080080c 	andi	r2,r20,32
  8116f0:	10005e1e 	bne	r2,zero,81186c <___vfiprintf_internal_r+0xb08>
  8116f4:	a080040c 	andi	r2,r20,16
  8116f8:	1001a21e 	bne	r2,zero,811d84 <___vfiprintf_internal_r+0x1020>
  8116fc:	a080100c 	andi	r2,r20,64
  811700:	d8001d85 	stb	zero,118(sp)
  811704:	da802217 	ldw	r10,136(sp)
  811708:	1002231e 	bne	r2,zero,811f98 <___vfiprintf_internal_r+0x1234>
  81170c:	50800104 	addi	r2,r10,4
  811710:	54800017 	ldw	r18,0(r10)
  811714:	0027883a 	mov	r19,zero
  811718:	4801a00e 	bge	r9,zero,811d9c <___vfiprintf_internal_r+0x1038>
  81171c:	d8802215 	stw	r2,136(sp)
  811720:	0039883a 	mov	fp,zero
  811724:	94c4b03a 	or	r2,r18,r19
  811728:	103f901e 	bne	r2,zero,81156c <__alt_data_end+0xff81156c>
  81172c:	00800044 	movi	r2,1
  811730:	10803fcc 	andi	r2,r2,255
  811734:	00c00044 	movi	r3,1
  811738:	10c05926 	beq	r2,r3,8118a0 <___vfiprintf_internal_r+0xb3c>
  81173c:	00c00084 	movi	r3,2
  811740:	10ffe41e 	bne	r2,r3,8116d4 <__alt_data_end+0xff8116d4>
  811744:	0025883a 	mov	r18,zero
  811748:	0027883a 	mov	r19,zero
  81174c:	00013d06 	br	811c44 <___vfiprintf_internal_r+0xee0>
  811750:	21003fcc 	andi	r4,r4,255
  811754:	2002811e 	bne	r4,zero,81215c <___vfiprintf_internal_r+0x13f8>
  811758:	008020b4 	movhi	r2,130
  81175c:	10b16804 	addi	r2,r2,-14944
  811760:	d8802615 	stw	r2,152(sp)
  811764:	a080080c 	andi	r2,r20,32
  811768:	103f561e 	bne	r2,zero,8114c4 <__alt_data_end+0xff8114c4>
  81176c:	a080040c 	andi	r2,r20,16
  811770:	1001d126 	beq	r2,zero,811eb8 <___vfiprintf_internal_r+0x1154>
  811774:	da802217 	ldw	r10,136(sp)
  811778:	0027883a 	mov	r19,zero
  81177c:	54800017 	ldw	r18,0(r10)
  811780:	52800104 	addi	r10,r10,4
  811784:	da802215 	stw	r10,136(sp)
  811788:	003f5306 	br	8114d8 <__alt_data_end+0xff8114d8>
  81178c:	da802217 	ldw	r10,136(sp)
  811790:	d8001d85 	stb	zero,118(sp)
  811794:	55400017 	ldw	r21,0(r10)
  811798:	50c00104 	addi	r3,r10,4
  81179c:	a8024226 	beq	r21,zero,8120a8 <___vfiprintf_internal_r+0x1344>
  8117a0:	48021816 	blt	r9,zero,812004 <___vfiprintf_internal_r+0x12a0>
  8117a4:	480d883a 	mov	r6,r9
  8117a8:	000b883a 	mov	r5,zero
  8117ac:	a809883a 	mov	r4,r21
  8117b0:	d8c02a15 	stw	r3,168(sp)
  8117b4:	da002b15 	stw	r8,172(sp)
  8117b8:	da402c15 	stw	r9,176(sp)
  8117bc:	08094a80 	call	8094a8 <memchr>
  8117c0:	d8c02a17 	ldw	r3,168(sp)
  8117c4:	da002b17 	ldw	r8,172(sp)
  8117c8:	da402c17 	ldw	r9,176(sp)
  8117cc:	10024826 	beq	r2,zero,8120f0 <___vfiprintf_internal_r+0x138c>
  8117d0:	1567c83a 	sub	r19,r2,r21
  8117d4:	df001d83 	ldbu	fp,118(sp)
  8117d8:	d8c02215 	stw	r3,136(sp)
  8117dc:	0013883a 	mov	r9,zero
  8117e0:	003e6006 	br	811164 <__alt_data_end+0xff811164>
  8117e4:	21003fcc 	andi	r4,r4,255
  8117e8:	203fc026 	beq	r4,zero,8116ec <__alt_data_end+0xff8116ec>
  8117ec:	d9c01d85 	stb	r7,118(sp)
  8117f0:	003fbe06 	br	8116ec <__alt_data_end+0xff8116ec>
  8117f4:	da802217 	ldw	r10,136(sp)
  8117f8:	54400017 	ldw	r17,0(r10)
  8117fc:	50800104 	addi	r2,r10,4
  811800:	883e3b16 	blt	r17,zero,8110f0 <__alt_data_end+0xff8110f0>
  811804:	d8802215 	stw	r2,136(sp)
  811808:	80c00007 	ldb	r3,0(r16)
  81180c:	003db406 	br	810ee0 <__alt_data_end+0xff810ee0>
  811810:	01000044 	movi	r4,1
  811814:	01c00ac4 	movi	r7,43
  811818:	80c00007 	ldb	r3,0(r16)
  81181c:	003db006 	br	810ee0 <__alt_data_end+0xff810ee0>
  811820:	80c00007 	ldb	r3,0(r16)
  811824:	82800044 	addi	r10,r16,1
  811828:	1b423c26 	beq	r3,r13,81211c <___vfiprintf_internal_r+0x13b8>
  81182c:	18bff404 	addi	r2,r3,-48
  811830:	0013883a 	mov	r9,zero
  811834:	30822b36 	bltu	r6,r2,8120e4 <___vfiprintf_internal_r+0x1380>
  811838:	50c00007 	ldb	r3,0(r10)
  81183c:	4a4002a4 	muli	r9,r9,10
  811840:	54000044 	addi	r16,r10,1
  811844:	8015883a 	mov	r10,r16
  811848:	4893883a 	add	r9,r9,r2
  81184c:	18bff404 	addi	r2,r3,-48
  811850:	30bff92e 	bgeu	r6,r2,811838 <__alt_data_end+0xff811838>
  811854:	483da30e 	bge	r9,zero,810ee4 <__alt_data_end+0xff810ee4>
  811858:	027fffc4 	movi	r9,-1
  81185c:	003da106 	br	810ee4 <__alt_data_end+0xff810ee4>
  811860:	a5001014 	ori	r20,r20,64
  811864:	80c00007 	ldb	r3,0(r16)
  811868:	003d9d06 	br	810ee0 <__alt_data_end+0xff810ee0>
  81186c:	da802217 	ldw	r10,136(sp)
  811870:	d8001d85 	stb	zero,118(sp)
  811874:	50c00204 	addi	r3,r10,8
  811878:	54800017 	ldw	r18,0(r10)
  81187c:	54c00117 	ldw	r19,4(r10)
  811880:	4801ca16 	blt	r9,zero,811fac <___vfiprintf_internal_r+0x1248>
  811884:	013fdfc4 	movi	r4,-129
  811888:	94c4b03a 	or	r2,r18,r19
  81188c:	d8c02215 	stw	r3,136(sp)
  811890:	a128703a 	and	r20,r20,r4
  811894:	0039883a 	mov	fp,zero
  811898:	103f341e 	bne	r2,zero,81156c <__alt_data_end+0xff81156c>
  81189c:	483e2e26 	beq	r9,zero,811158 <__alt_data_end+0xff811158>
  8118a0:	0025883a 	mov	r18,zero
  8118a4:	94800c04 	addi	r18,r18,48
  8118a8:	dc8019c5 	stb	r18,103(sp)
  8118ac:	dcc02717 	ldw	r19,156(sp)
  8118b0:	dd4019c4 	addi	r21,sp,103
  8118b4:	003e2b06 	br	811164 <__alt_data_end+0xff811164>
  8118b8:	21003fcc 	andi	r4,r4,255
  8118bc:	2002361e 	bne	r4,zero,812198 <___vfiprintf_internal_r+0x1434>
  8118c0:	1801c126 	beq	r3,zero,811fc8 <___vfiprintf_internal_r+0x1264>
  8118c4:	04800044 	movi	r18,1
  8118c8:	d8c01005 	stb	r3,64(sp)
  8118cc:	d8001d85 	stb	zero,118(sp)
  8118d0:	9027883a 	mov	r19,r18
  8118d4:	dd401004 	addi	r21,sp,64
  8118d8:	003f1106 	br	811520 <__alt_data_end+0xff811520>
  8118dc:	d9402117 	ldw	r5,132(sp)
  8118e0:	d9002017 	ldw	r4,128(sp)
  8118e4:	d9801a04 	addi	r6,sp,104
  8118e8:	d9c02b15 	stw	r7,172(sp)
  8118ec:	dbc02a15 	stw	r15,168(sp)
  8118f0:	0810c500 	call	810c50 <__sprint_r.part.0>
  8118f4:	d9c02b17 	ldw	r7,172(sp)
  8118f8:	dbc02a17 	ldw	r15,168(sp)
  8118fc:	10006d1e 	bne	r2,zero,811ab4 <___vfiprintf_internal_r+0xd50>
  811900:	d9801b17 	ldw	r6,108(sp)
  811904:	d8801c17 	ldw	r2,112(sp)
  811908:	d811883a 	mov	r8,sp
  81190c:	31400044 	addi	r5,r6,1
  811910:	003e3306 	br	8111e0 <__alt_data_end+0xff8111e0>
  811914:	d9401b17 	ldw	r5,108(sp)
  811918:	d8801c17 	ldw	r2,112(sp)
  81191c:	29000044 	addi	r4,r5,1
  811920:	d8c01d87 	ldb	r3,118(sp)
  811924:	183e4d26 	beq	r3,zero,81125c <__alt_data_end+0xff81125c>
  811928:	00c00044 	movi	r3,1
  81192c:	d9401d84 	addi	r5,sp,118
  811930:	10c5883a 	add	r2,r2,r3
  811934:	41400015 	stw	r5,0(r8)
  811938:	40c00115 	stw	r3,4(r8)
  81193c:	d8801c15 	stw	r2,112(sp)
  811940:	d9001b15 	stw	r4,108(sp)
  811944:	014001c4 	movi	r5,7
  811948:	2900a90e 	bge	r5,r4,811bf0 <___vfiprintf_internal_r+0xe8c>
  81194c:	1000da1e 	bne	r2,zero,811cb8 <___vfiprintf_internal_r+0xf54>
  811950:	7000ab1e 	bne	r14,zero,811c00 <___vfiprintf_internal_r+0xe9c>
  811954:	000b883a 	mov	r5,zero
  811958:	1809883a 	mov	r4,r3
  81195c:	d811883a 	mov	r8,sp
  811960:	00c02004 	movi	r3,128
  811964:	e0fe4d26 	beq	fp,r3,81129c <__alt_data_end+0xff81129c>
  811968:	4cf9c83a 	sub	fp,r9,r19
  81196c:	073e7b0e 	bge	zero,fp,81135c <__alt_data_end+0xff81135c>
  811970:	01c00404 	movi	r7,16
  811974:	3f01900e 	bge	r7,fp,811fb8 <___vfiprintf_internal_r+0x1254>
  811978:	00c020b4 	movhi	r3,130
  81197c:	18f29584 	addi	r3,r3,-13738
  811980:	d8c02415 	stw	r3,144(sp)
  811984:	034001c4 	movi	r13,7
  811988:	00000506 	br	8119a0 <___vfiprintf_internal_r+0xc3c>
  81198c:	29000084 	addi	r4,r5,2
  811990:	42000204 	addi	r8,r8,8
  811994:	180b883a 	mov	r5,r3
  811998:	e73ffc04 	addi	fp,fp,-16
  81199c:	3f000d0e 	bge	r7,fp,8119d4 <___vfiprintf_internal_r+0xc70>
  8119a0:	10800404 	addi	r2,r2,16
  8119a4:	28c00044 	addi	r3,r5,1
  8119a8:	45c00015 	stw	r23,0(r8)
  8119ac:	41c00115 	stw	r7,4(r8)
  8119b0:	d8801c15 	stw	r2,112(sp)
  8119b4:	d8c01b15 	stw	r3,108(sp)
  8119b8:	68fff40e 	bge	r13,r3,81198c <__alt_data_end+0xff81198c>
  8119bc:	1000101e 	bne	r2,zero,811a00 <___vfiprintf_internal_r+0xc9c>
  8119c0:	e73ffc04 	addi	fp,fp,-16
  8119c4:	01000044 	movi	r4,1
  8119c8:	000b883a 	mov	r5,zero
  8119cc:	d811883a 	mov	r8,sp
  8119d0:	3f3ff316 	blt	r7,fp,8119a0 <__alt_data_end+0xff8119a0>
  8119d4:	da802417 	ldw	r10,144(sp)
  8119d8:	1705883a 	add	r2,r2,fp
  8119dc:	47000115 	stw	fp,4(r8)
  8119e0:	42800015 	stw	r10,0(r8)
  8119e4:	d8801c15 	stw	r2,112(sp)
  8119e8:	d9001b15 	stw	r4,108(sp)
  8119ec:	00c001c4 	movi	r3,7
  8119f0:	19003616 	blt	r3,r4,811acc <___vfiprintf_internal_r+0xd68>
  8119f4:	42000204 	addi	r8,r8,8
  8119f8:	21000044 	addi	r4,r4,1
  8119fc:	003e5706 	br	81135c <__alt_data_end+0xff81135c>
  811a00:	d9402117 	ldw	r5,132(sp)
  811a04:	d9002017 	ldw	r4,128(sp)
  811a08:	d9801a04 	addi	r6,sp,104
  811a0c:	d9c02b15 	stw	r7,172(sp)
  811a10:	db402a15 	stw	r13,168(sp)
  811a14:	0810c500 	call	810c50 <__sprint_r.part.0>
  811a18:	d9c02b17 	ldw	r7,172(sp)
  811a1c:	db402a17 	ldw	r13,168(sp)
  811a20:	1000241e 	bne	r2,zero,811ab4 <___vfiprintf_internal_r+0xd50>
  811a24:	d9401b17 	ldw	r5,108(sp)
  811a28:	d8801c17 	ldw	r2,112(sp)
  811a2c:	d811883a 	mov	r8,sp
  811a30:	29000044 	addi	r4,r5,1
  811a34:	003fd806 	br	811998 <__alt_data_end+0xff811998>
  811a38:	d9401b17 	ldw	r5,108(sp)
  811a3c:	00c020b4 	movhi	r3,130
  811a40:	18f29984 	addi	r3,r3,-13722
  811a44:	d8c02415 	stw	r3,144(sp)
  811a48:	29400044 	addi	r5,r5,1
  811a4c:	d8c02417 	ldw	r3,144(sp)
  811a50:	14c5883a 	add	r2,r2,r19
  811a54:	44c00115 	stw	r19,4(r8)
  811a58:	40c00015 	stw	r3,0(r8)
  811a5c:	d8801c15 	stw	r2,112(sp)
  811a60:	d9401b15 	stw	r5,108(sp)
  811a64:	00c001c4 	movi	r3,7
  811a68:	1940070e 	bge	r3,r5,811a88 <___vfiprintf_internal_r+0xd24>
  811a6c:	103e4826 	beq	r2,zero,811390 <__alt_data_end+0xff811390>
  811a70:	d9402117 	ldw	r5,132(sp)
  811a74:	d9002017 	ldw	r4,128(sp)
  811a78:	d9801a04 	addi	r6,sp,104
  811a7c:	0810c500 	call	810c50 <__sprint_r.part.0>
  811a80:	10000c1e 	bne	r2,zero,811ab4 <___vfiprintf_internal_r+0xd50>
  811a84:	d8801c17 	ldw	r2,112(sp)
  811a88:	8c80010e 	bge	r17,r18,811a90 <___vfiprintf_internal_r+0xd2c>
  811a8c:	9023883a 	mov	r17,r18
  811a90:	da802317 	ldw	r10,140(sp)
  811a94:	5455883a 	add	r10,r10,r17
  811a98:	da802315 	stw	r10,140(sp)
  811a9c:	103e4126 	beq	r2,zero,8113a4 <__alt_data_end+0xff8113a4>
  811aa0:	d9402117 	ldw	r5,132(sp)
  811aa4:	d9002017 	ldw	r4,128(sp)
  811aa8:	d9801a04 	addi	r6,sp,104
  811aac:	0810c500 	call	810c50 <__sprint_r.part.0>
  811ab0:	103e3c26 	beq	r2,zero,8113a4 <__alt_data_end+0xff8113a4>
  811ab4:	dd002117 	ldw	r20,132(sp)
  811ab8:	a080030b 	ldhu	r2,12(r20)
  811abc:	1080100c 	andi	r2,r2,64
  811ac0:	1001231e 	bne	r2,zero,811f50 <___vfiprintf_internal_r+0x11ec>
  811ac4:	d8802317 	ldw	r2,140(sp)
  811ac8:	003d7b06 	br	8110b8 <__alt_data_end+0xff8110b8>
  811acc:	1000991e 	bne	r2,zero,811d34 <___vfiprintf_internal_r+0xfd0>
  811ad0:	00c00044 	movi	r3,1
  811ad4:	9805883a 	mov	r2,r19
  811ad8:	dd400015 	stw	r21,0(sp)
  811adc:	dcc00115 	stw	r19,4(sp)
  811ae0:	dcc01c15 	stw	r19,112(sp)
  811ae4:	d8c01b15 	stw	r3,108(sp)
  811ae8:	d811883a 	mov	r8,sp
  811aec:	42000204 	addi	r8,r8,8
  811af0:	a2c0010c 	andi	r11,r20,4
  811af4:	583fe426 	beq	r11,zero,811a88 <__alt_data_end+0xff811a88>
  811af8:	8ca7c83a 	sub	r19,r17,r18
  811afc:	04ffe20e 	bge	zero,r19,811a88 <__alt_data_end+0xff811a88>
  811b00:	01c00404 	movi	r7,16
  811b04:	3cffcc0e 	bge	r7,r19,811a38 <__alt_data_end+0xff811a38>
  811b08:	028020b4 	movhi	r10,130
  811b0c:	52b29984 	addi	r10,r10,-13722
  811b10:	d9001b17 	ldw	r4,108(sp)
  811b14:	da802415 	stw	r10,144(sp)
  811b18:	382b883a 	mov	r21,r7
  811b1c:	050001c4 	movi	r20,7
  811b20:	df002017 	ldw	fp,128(sp)
  811b24:	00000506 	br	811b3c <___vfiprintf_internal_r+0xdd8>
  811b28:	21400084 	addi	r5,r4,2
  811b2c:	42000204 	addi	r8,r8,8
  811b30:	1809883a 	mov	r4,r3
  811b34:	9cfffc04 	addi	r19,r19,-16
  811b38:	acffc40e 	bge	r21,r19,811a4c <__alt_data_end+0xff811a4c>
  811b3c:	10800404 	addi	r2,r2,16
  811b40:	20c00044 	addi	r3,r4,1
  811b44:	45800015 	stw	r22,0(r8)
  811b48:	45400115 	stw	r21,4(r8)
  811b4c:	d8801c15 	stw	r2,112(sp)
  811b50:	d8c01b15 	stw	r3,108(sp)
  811b54:	a0fff40e 	bge	r20,r3,811b28 <__alt_data_end+0xff811b28>
  811b58:	1000041e 	bne	r2,zero,811b6c <___vfiprintf_internal_r+0xe08>
  811b5c:	01400044 	movi	r5,1
  811b60:	0009883a 	mov	r4,zero
  811b64:	d811883a 	mov	r8,sp
  811b68:	003ff206 	br	811b34 <__alt_data_end+0xff811b34>
  811b6c:	d9402117 	ldw	r5,132(sp)
  811b70:	d9801a04 	addi	r6,sp,104
  811b74:	e009883a 	mov	r4,fp
  811b78:	0810c500 	call	810c50 <__sprint_r.part.0>
  811b7c:	103fcd1e 	bne	r2,zero,811ab4 <__alt_data_end+0xff811ab4>
  811b80:	d9001b17 	ldw	r4,108(sp)
  811b84:	d8801c17 	ldw	r2,112(sp)
  811b88:	d811883a 	mov	r8,sp
  811b8c:	21400044 	addi	r5,r4,1
  811b90:	003fe806 	br	811b34 <__alt_data_end+0xff811b34>
  811b94:	d9402117 	ldw	r5,132(sp)
  811b98:	d9002017 	ldw	r4,128(sp)
  811b9c:	d9801a04 	addi	r6,sp,104
  811ba0:	d9c02b15 	stw	r7,172(sp)
  811ba4:	db402a15 	stw	r13,168(sp)
  811ba8:	0810c500 	call	810c50 <__sprint_r.part.0>
  811bac:	d9c02b17 	ldw	r7,172(sp)
  811bb0:	db402a17 	ldw	r13,168(sp)
  811bb4:	103fbf1e 	bne	r2,zero,811ab4 <__alt_data_end+0xff811ab4>
  811bb8:	d9401b17 	ldw	r5,108(sp)
  811bbc:	d8801c17 	ldw	r2,112(sp)
  811bc0:	d811883a 	mov	r8,sp
  811bc4:	29800044 	addi	r6,r5,1
  811bc8:	003dc406 	br	8112dc <__alt_data_end+0xff8112dc>
  811bcc:	1000d21e 	bne	r2,zero,811f18 <___vfiprintf_internal_r+0x11b4>
  811bd0:	d8c01d87 	ldb	r3,118(sp)
  811bd4:	18009526 	beq	r3,zero,811e2c <___vfiprintf_internal_r+0x10c8>
  811bd8:	00800044 	movi	r2,1
  811bdc:	d8c01d84 	addi	r3,sp,118
  811be0:	1009883a 	mov	r4,r2
  811be4:	d8c00015 	stw	r3,0(sp)
  811be8:	d8800115 	stw	r2,4(sp)
  811bec:	d811883a 	mov	r8,sp
  811bf0:	200b883a 	mov	r5,r4
  811bf4:	42000204 	addi	r8,r8,8
  811bf8:	21000044 	addi	r4,r4,1
  811bfc:	003d9706 	br	81125c <__alt_data_end+0xff81125c>
  811c00:	d9001d04 	addi	r4,sp,116
  811c04:	00800084 	movi	r2,2
  811c08:	d9000015 	stw	r4,0(sp)
  811c0c:	d8800115 	stw	r2,4(sp)
  811c10:	1809883a 	mov	r4,r3
  811c14:	d811883a 	mov	r8,sp
  811c18:	200b883a 	mov	r5,r4
  811c1c:	42000204 	addi	r8,r8,8
  811c20:	21000044 	addi	r4,r4,1
  811c24:	003f4e06 	br	811960 <__alt_data_end+0xff811960>
  811c28:	d8001d85 	stb	zero,118(sp)
  811c2c:	48005016 	blt	r9,zero,811d70 <___vfiprintf_internal_r+0x100c>
  811c30:	00ffdfc4 	movi	r3,-129
  811c34:	94c4b03a 	or	r2,r18,r19
  811c38:	a0e8703a 	and	r20,r20,r3
  811c3c:	103d4426 	beq	r2,zero,811150 <__alt_data_end+0xff811150>
  811c40:	0039883a 	mov	fp,zero
  811c44:	d9002617 	ldw	r4,152(sp)
  811c48:	dd401a04 	addi	r21,sp,104
  811c4c:	908003cc 	andi	r2,r18,15
  811c50:	9806973a 	slli	r3,r19,28
  811c54:	2085883a 	add	r2,r4,r2
  811c58:	9024d13a 	srli	r18,r18,4
  811c5c:	10800003 	ldbu	r2,0(r2)
  811c60:	9826d13a 	srli	r19,r19,4
  811c64:	ad7fffc4 	addi	r21,r21,-1
  811c68:	1ca4b03a 	or	r18,r3,r18
  811c6c:	a8800005 	stb	r2,0(r21)
  811c70:	94c4b03a 	or	r2,r18,r19
  811c74:	103ff51e 	bne	r2,zero,811c4c <__alt_data_end+0xff811c4c>
  811c78:	003e5906 	br	8115e0 <__alt_data_end+0xff8115e0>
  811c7c:	d9402117 	ldw	r5,132(sp)
  811c80:	d9002017 	ldw	r4,128(sp)
  811c84:	d9801a04 	addi	r6,sp,104
  811c88:	0810c500 	call	810c50 <__sprint_r.part.0>
  811c8c:	103f891e 	bne	r2,zero,811ab4 <__alt_data_end+0xff811ab4>
  811c90:	d8801c17 	ldw	r2,112(sp)
  811c94:	d811883a 	mov	r8,sp
  811c98:	003f9506 	br	811af0 <__alt_data_end+0xff811af0>
  811c9c:	d9402117 	ldw	r5,132(sp)
  811ca0:	d9002017 	ldw	r4,128(sp)
  811ca4:	d9801a04 	addi	r6,sp,104
  811ca8:	0810c500 	call	810c50 <__sprint_r.part.0>
  811cac:	103f811e 	bne	r2,zero,811ab4 <__alt_data_end+0xff811ab4>
  811cb0:	d811883a 	mov	r8,sp
  811cb4:	003ced06 	br	81106c <__alt_data_end+0xff81106c>
  811cb8:	d9402117 	ldw	r5,132(sp)
  811cbc:	d9002017 	ldw	r4,128(sp)
  811cc0:	d9801a04 	addi	r6,sp,104
  811cc4:	da402c15 	stw	r9,176(sp)
  811cc8:	db802a15 	stw	r14,168(sp)
  811ccc:	0810c500 	call	810c50 <__sprint_r.part.0>
  811cd0:	da402c17 	ldw	r9,176(sp)
  811cd4:	db802a17 	ldw	r14,168(sp)
  811cd8:	103f761e 	bne	r2,zero,811ab4 <__alt_data_end+0xff811ab4>
  811cdc:	d9401b17 	ldw	r5,108(sp)
  811ce0:	d8801c17 	ldw	r2,112(sp)
  811ce4:	d811883a 	mov	r8,sp
  811ce8:	29000044 	addi	r4,r5,1
  811cec:	003d5b06 	br	81125c <__alt_data_end+0xff81125c>
  811cf0:	d9402117 	ldw	r5,132(sp)
  811cf4:	d9002017 	ldw	r4,128(sp)
  811cf8:	d9801a04 	addi	r6,sp,104
  811cfc:	da402c15 	stw	r9,176(sp)
  811d00:	0810c500 	call	810c50 <__sprint_r.part.0>
  811d04:	da402c17 	ldw	r9,176(sp)
  811d08:	103f6a1e 	bne	r2,zero,811ab4 <__alt_data_end+0xff811ab4>
  811d0c:	d9401b17 	ldw	r5,108(sp)
  811d10:	d8801c17 	ldw	r2,112(sp)
  811d14:	d811883a 	mov	r8,sp
  811d18:	29000044 	addi	r4,r5,1
  811d1c:	003f1006 	br	811960 <__alt_data_end+0xff811960>
  811d20:	1000c31e 	bne	r2,zero,812030 <___vfiprintf_internal_r+0x12cc>
  811d24:	01000044 	movi	r4,1
  811d28:	000b883a 	mov	r5,zero
  811d2c:	d811883a 	mov	r8,sp
  811d30:	003f0d06 	br	811968 <__alt_data_end+0xff811968>
  811d34:	d9402117 	ldw	r5,132(sp)
  811d38:	d9002017 	ldw	r4,128(sp)
  811d3c:	d9801a04 	addi	r6,sp,104
  811d40:	0810c500 	call	810c50 <__sprint_r.part.0>
  811d44:	103f5b1e 	bne	r2,zero,811ab4 <__alt_data_end+0xff811ab4>
  811d48:	d9001b17 	ldw	r4,108(sp)
  811d4c:	d8801c17 	ldw	r2,112(sp)
  811d50:	d811883a 	mov	r8,sp
  811d54:	21000044 	addi	r4,r4,1
  811d58:	003d8006 	br	81135c <__alt_data_end+0xff81135c>
  811d5c:	010020b4 	movhi	r4,130
  811d60:	21316d04 	addi	r4,r4,-14924
  811d64:	d9002615 	stw	r4,152(sp)
  811d68:	d8c02215 	stw	r3,136(sp)
  811d6c:	1029883a 	mov	r20,r2
  811d70:	94c4b03a 	or	r2,r18,r19
  811d74:	103fb21e 	bne	r2,zero,811c40 <__alt_data_end+0xff811c40>
  811d78:	0039883a 	mov	fp,zero
  811d7c:	00800084 	movi	r2,2
  811d80:	003e6b06 	br	811730 <__alt_data_end+0xff811730>
  811d84:	da802217 	ldw	r10,136(sp)
  811d88:	d8001d85 	stb	zero,118(sp)
  811d8c:	0027883a 	mov	r19,zero
  811d90:	50800104 	addi	r2,r10,4
  811d94:	54800017 	ldw	r18,0(r10)
  811d98:	483e6016 	blt	r9,zero,81171c <__alt_data_end+0xff81171c>
  811d9c:	00ffdfc4 	movi	r3,-129
  811da0:	d8802215 	stw	r2,136(sp)
  811da4:	a0e8703a 	and	r20,r20,r3
  811da8:	0039883a 	mov	fp,zero
  811dac:	903ebb26 	beq	r18,zero,81189c <__alt_data_end+0xff81189c>
  811db0:	00800244 	movi	r2,9
  811db4:	14bdee36 	bltu	r2,r18,811570 <__alt_data_end+0xff811570>
  811db8:	003eba06 	br	8118a4 <__alt_data_end+0xff8118a4>
  811dbc:	00800c04 	movi	r2,48
  811dc0:	d8c01d45 	stb	r3,117(sp)
  811dc4:	d8801d05 	stb	r2,116(sp)
  811dc8:	d8001d85 	stb	zero,118(sp)
  811dcc:	a0c00094 	ori	r3,r20,2
  811dd0:	4800a916 	blt	r9,zero,812078 <___vfiprintf_internal_r+0x1314>
  811dd4:	00bfdfc4 	movi	r2,-129
  811dd8:	a096703a 	and	r11,r20,r2
  811ddc:	5d000094 	ori	r20,r11,2
  811de0:	0039883a 	mov	fp,zero
  811de4:	003f9706 	br	811c44 <__alt_data_end+0xff811c44>
  811de8:	8025883a 	mov	r18,r16
  811dec:	003c2e06 	br	810ea8 <__alt_data_end+0xff810ea8>
  811df0:	008020b4 	movhi	r2,130
  811df4:	10b16d04 	addi	r2,r2,-14924
  811df8:	0039883a 	mov	fp,zero
  811dfc:	d8802615 	stw	r2,152(sp)
  811e00:	003f9006 	br	811c44 <__alt_data_end+0xff811c44>
  811e04:	04a5c83a 	sub	r18,zero,r18
  811e08:	07000b44 	movi	fp,45
  811e0c:	9004c03a 	cmpne	r2,r18,zero
  811e10:	04e7c83a 	sub	r19,zero,r19
  811e14:	df001d85 	stb	fp,118(sp)
  811e18:	98a7c83a 	sub	r19,r19,r2
  811e1c:	48009f16 	blt	r9,zero,81209c <___vfiprintf_internal_r+0x1338>
  811e20:	00bfdfc4 	movi	r2,-129
  811e24:	a0a8703a 	and	r20,r20,r2
  811e28:	003dd006 	br	81156c <__alt_data_end+0xff81156c>
  811e2c:	70004c26 	beq	r14,zero,811f60 <___vfiprintf_internal_r+0x11fc>
  811e30:	00800084 	movi	r2,2
  811e34:	d8c01d04 	addi	r3,sp,116
  811e38:	d8c00015 	stw	r3,0(sp)
  811e3c:	d8800115 	stw	r2,4(sp)
  811e40:	01000044 	movi	r4,1
  811e44:	d811883a 	mov	r8,sp
  811e48:	003f7306 	br	811c18 <__alt_data_end+0xff811c18>
  811e4c:	a080100c 	andi	r2,r20,64
  811e50:	da802217 	ldw	r10,136(sp)
  811e54:	103e0626 	beq	r2,zero,811670 <__alt_data_end+0xff811670>
  811e58:	5480000f 	ldh	r18,0(r10)
  811e5c:	52800104 	addi	r10,r10,4
  811e60:	da802215 	stw	r10,136(sp)
  811e64:	9027d7fa 	srai	r19,r18,31
  811e68:	9805883a 	mov	r2,r19
  811e6c:	003db806 	br	811550 <__alt_data_end+0xff811550>
  811e70:	a080040c 	andi	r2,r20,16
  811e74:	1000091e 	bne	r2,zero,811e9c <___vfiprintf_internal_r+0x1138>
  811e78:	a2c0100c 	andi	r11,r20,64
  811e7c:	58000726 	beq	r11,zero,811e9c <___vfiprintf_internal_r+0x1138>
  811e80:	da802217 	ldw	r10,136(sp)
  811e84:	50800017 	ldw	r2,0(r10)
  811e88:	52800104 	addi	r10,r10,4
  811e8c:	da802215 	stw	r10,136(sp)
  811e90:	da802317 	ldw	r10,140(sp)
  811e94:	1280000d 	sth	r10,0(r2)
  811e98:	003be706 	br	810e38 <__alt_data_end+0xff810e38>
  811e9c:	da802217 	ldw	r10,136(sp)
  811ea0:	50800017 	ldw	r2,0(r10)
  811ea4:	52800104 	addi	r10,r10,4
  811ea8:	da802215 	stw	r10,136(sp)
  811eac:	da802317 	ldw	r10,140(sp)
  811eb0:	12800015 	stw	r10,0(r2)
  811eb4:	003be006 	br	810e38 <__alt_data_end+0xff810e38>
  811eb8:	a080100c 	andi	r2,r20,64
  811ebc:	da802217 	ldw	r10,136(sp)
  811ec0:	10003026 	beq	r2,zero,811f84 <___vfiprintf_internal_r+0x1220>
  811ec4:	5480000b 	ldhu	r18,0(r10)
  811ec8:	52800104 	addi	r10,r10,4
  811ecc:	0027883a 	mov	r19,zero
  811ed0:	da802215 	stw	r10,136(sp)
  811ed4:	003d8006 	br	8114d8 <__alt_data_end+0xff8114d8>
  811ed8:	80c00007 	ldb	r3,0(r16)
  811edc:	003c0006 	br	810ee0 <__alt_data_end+0xff810ee0>
  811ee0:	a080100c 	andi	r2,r20,64
  811ee4:	d8001d85 	stb	zero,118(sp)
  811ee8:	da802217 	ldw	r10,136(sp)
  811eec:	1000201e 	bne	r2,zero,811f70 <___vfiprintf_internal_r+0x120c>
  811ef0:	50800104 	addi	r2,r10,4
  811ef4:	54800017 	ldw	r18,0(r10)
  811ef8:	0027883a 	mov	r19,zero
  811efc:	483def0e 	bge	r9,zero,8116bc <__alt_data_end+0xff8116bc>
  811f00:	94c6b03a 	or	r3,r18,r19
  811f04:	d8802215 	stw	r2,136(sp)
  811f08:	183d4e1e 	bne	r3,zero,811444 <__alt_data_end+0xff811444>
  811f0c:	0039883a 	mov	fp,zero
  811f10:	0005883a 	mov	r2,zero
  811f14:	003e0606 	br	811730 <__alt_data_end+0xff811730>
  811f18:	d9402117 	ldw	r5,132(sp)
  811f1c:	d9002017 	ldw	r4,128(sp)
  811f20:	d9801a04 	addi	r6,sp,104
  811f24:	da402c15 	stw	r9,176(sp)
  811f28:	db802a15 	stw	r14,168(sp)
  811f2c:	0810c500 	call	810c50 <__sprint_r.part.0>
  811f30:	da402c17 	ldw	r9,176(sp)
  811f34:	db802a17 	ldw	r14,168(sp)
  811f38:	103ede1e 	bne	r2,zero,811ab4 <__alt_data_end+0xff811ab4>
  811f3c:	d9401b17 	ldw	r5,108(sp)
  811f40:	d8801c17 	ldw	r2,112(sp)
  811f44:	d811883a 	mov	r8,sp
  811f48:	29000044 	addi	r4,r5,1
  811f4c:	003e7406 	br	811920 <__alt_data_end+0xff811920>
  811f50:	00bfffc4 	movi	r2,-1
  811f54:	003c5806 	br	8110b8 <__alt_data_end+0xff8110b8>
  811f58:	d811883a 	mov	r8,sp
  811f5c:	003ee806 	br	811b00 <__alt_data_end+0xff811b00>
  811f60:	000b883a 	mov	r5,zero
  811f64:	01000044 	movi	r4,1
  811f68:	d811883a 	mov	r8,sp
  811f6c:	003e7c06 	br	811960 <__alt_data_end+0xff811960>
  811f70:	50800104 	addi	r2,r10,4
  811f74:	5480000b 	ldhu	r18,0(r10)
  811f78:	0027883a 	mov	r19,zero
  811f7c:	483dcf0e 	bge	r9,zero,8116bc <__alt_data_end+0xff8116bc>
  811f80:	003fdf06 	br	811f00 <__alt_data_end+0xff811f00>
  811f84:	54800017 	ldw	r18,0(r10)
  811f88:	52800104 	addi	r10,r10,4
  811f8c:	0027883a 	mov	r19,zero
  811f90:	da802215 	stw	r10,136(sp)
  811f94:	003d5006 	br	8114d8 <__alt_data_end+0xff8114d8>
  811f98:	50800104 	addi	r2,r10,4
  811f9c:	5480000b 	ldhu	r18,0(r10)
  811fa0:	0027883a 	mov	r19,zero
  811fa4:	483f7d0e 	bge	r9,zero,811d9c <__alt_data_end+0xff811d9c>
  811fa8:	003ddc06 	br	81171c <__alt_data_end+0xff81171c>
  811fac:	d8c02215 	stw	r3,136(sp)
  811fb0:	0039883a 	mov	fp,zero
  811fb4:	003ddb06 	br	811724 <__alt_data_end+0xff811724>
  811fb8:	028020b4 	movhi	r10,130
  811fbc:	52b29584 	addi	r10,r10,-13738
  811fc0:	da802415 	stw	r10,144(sp)
  811fc4:	003e8306 	br	8119d4 <__alt_data_end+0xff8119d4>
  811fc8:	d8801c17 	ldw	r2,112(sp)
  811fcc:	dd002117 	ldw	r20,132(sp)
  811fd0:	103eb926 	beq	r2,zero,811ab8 <__alt_data_end+0xff811ab8>
  811fd4:	d9002017 	ldw	r4,128(sp)
  811fd8:	d9801a04 	addi	r6,sp,104
  811fdc:	a00b883a 	mov	r5,r20
  811fe0:	0810c500 	call	810c50 <__sprint_r.part.0>
  811fe4:	003eb406 	br	811ab8 <__alt_data_end+0xff811ab8>
  811fe8:	80c00043 	ldbu	r3,1(r16)
  811fec:	a5000814 	ori	r20,r20,32
  811ff0:	84000044 	addi	r16,r16,1
  811ff4:	18c03fcc 	andi	r3,r3,255
  811ff8:	18c0201c 	xori	r3,r3,128
  811ffc:	18ffe004 	addi	r3,r3,-128
  812000:	003bb706 	br	810ee0 <__alt_data_end+0xff810ee0>
  812004:	a809883a 	mov	r4,r21
  812008:	d8c02a15 	stw	r3,168(sp)
  81200c:	da002b15 	stw	r8,172(sp)
  812010:	08035a80 	call	8035a8 <strlen>
  812014:	d8c02a17 	ldw	r3,168(sp)
  812018:	1027883a 	mov	r19,r2
  81201c:	df001d83 	ldbu	fp,118(sp)
  812020:	d8c02215 	stw	r3,136(sp)
  812024:	0013883a 	mov	r9,zero
  812028:	da002b17 	ldw	r8,172(sp)
  81202c:	003c4d06 	br	811164 <__alt_data_end+0xff811164>
  812030:	d9402117 	ldw	r5,132(sp)
  812034:	d9002017 	ldw	r4,128(sp)
  812038:	d9801a04 	addi	r6,sp,104
  81203c:	da402c15 	stw	r9,176(sp)
  812040:	0810c500 	call	810c50 <__sprint_r.part.0>
  812044:	da402c17 	ldw	r9,176(sp)
  812048:	103e9a1e 	bne	r2,zero,811ab4 <__alt_data_end+0xff811ab4>
  81204c:	d9401b17 	ldw	r5,108(sp)
  812050:	d8801c17 	ldw	r2,112(sp)
  812054:	d811883a 	mov	r8,sp
  812058:	29000044 	addi	r4,r5,1
  81205c:	003e4206 	br	811968 <__alt_data_end+0xff811968>
  812060:	d9401b17 	ldw	r5,108(sp)
  812064:	010020b4 	movhi	r4,130
  812068:	21329984 	addi	r4,r4,-13722
  81206c:	d9002415 	stw	r4,144(sp)
  812070:	29400044 	addi	r5,r5,1
  812074:	003c6d06 	br	81122c <__alt_data_end+0xff81122c>
  812078:	0039883a 	mov	fp,zero
  81207c:	00800084 	movi	r2,2
  812080:	10803fcc 	andi	r2,r2,255
  812084:	01000044 	movi	r4,1
  812088:	11001e26 	beq	r2,r4,812104 <___vfiprintf_internal_r+0x13a0>
  81208c:	01000084 	movi	r4,2
  812090:	11001e1e 	bne	r2,r4,81210c <___vfiprintf_internal_r+0x13a8>
  812094:	1829883a 	mov	r20,r3
  812098:	003eea06 	br	811c44 <__alt_data_end+0xff811c44>
  81209c:	a007883a 	mov	r3,r20
  8120a0:	00800044 	movi	r2,1
  8120a4:	003ff606 	br	812080 <__alt_data_end+0xff812080>
  8120a8:	00800184 	movi	r2,6
  8120ac:	1240012e 	bgeu	r2,r9,8120b4 <___vfiprintf_internal_r+0x1350>
  8120b0:	1013883a 	mov	r9,r2
  8120b4:	4827883a 	mov	r19,r9
  8120b8:	4825883a 	mov	r18,r9
  8120bc:	48001516 	blt	r9,zero,812114 <___vfiprintf_internal_r+0x13b0>
  8120c0:	054020b4 	movhi	r21,130
  8120c4:	d8c02215 	stw	r3,136(sp)
  8120c8:	ad717204 	addi	r21,r21,-14904
  8120cc:	003d1406 	br	811520 <__alt_data_end+0xff811520>
  8120d0:	028020b4 	movhi	r10,130
  8120d4:	52b29584 	addi	r10,r10,-13738
  8120d8:	da802415 	stw	r10,144(sp)
  8120dc:	200d883a 	mov	r6,r4
  8120e0:	003c9106 	br	811328 <__alt_data_end+0xff811328>
  8120e4:	5021883a 	mov	r16,r10
  8120e8:	0013883a 	mov	r9,zero
  8120ec:	003b7d06 	br	810ee4 <__alt_data_end+0xff810ee4>
  8120f0:	4827883a 	mov	r19,r9
  8120f4:	df001d83 	ldbu	fp,118(sp)
  8120f8:	d8c02215 	stw	r3,136(sp)
  8120fc:	0013883a 	mov	r9,zero
  812100:	003c1806 	br	811164 <__alt_data_end+0xff811164>
  812104:	1829883a 	mov	r20,r3
  812108:	003d1806 	br	81156c <__alt_data_end+0xff81156c>
  81210c:	1829883a 	mov	r20,r3
  812110:	003ccd06 	br	811448 <__alt_data_end+0xff811448>
  812114:	0025883a 	mov	r18,zero
  812118:	003fe906 	br	8120c0 <__alt_data_end+0xff8120c0>
  81211c:	d8802217 	ldw	r2,136(sp)
  812120:	80c00043 	ldbu	r3,1(r16)
  812124:	5021883a 	mov	r16,r10
  812128:	12400017 	ldw	r9,0(r2)
  81212c:	10800104 	addi	r2,r2,4
  812130:	d8802215 	stw	r2,136(sp)
  812134:	483faf0e 	bge	r9,zero,811ff4 <__alt_data_end+0xff811ff4>
  812138:	18c03fcc 	andi	r3,r3,255
  81213c:	18c0201c 	xori	r3,r3,128
  812140:	027fffc4 	movi	r9,-1
  812144:	18ffe004 	addi	r3,r3,-128
  812148:	003b6506 	br	810ee0 <__alt_data_end+0xff810ee0>
  81214c:	d9c01d85 	stb	r7,118(sp)
  812150:	003ca006 	br	8113d4 <__alt_data_end+0xff8113d4>
  812154:	d9c01d85 	stb	r7,118(sp)
  812158:	003cad06 	br	811410 <__alt_data_end+0xff811410>
  81215c:	d9c01d85 	stb	r7,118(sp)
  812160:	003d7d06 	br	811758 <__alt_data_end+0xff811758>
  812164:	d9c01d85 	stb	r7,118(sp)
  812168:	003d5f06 	br	8116e8 <__alt_data_end+0xff8116e8>
  81216c:	a080004c 	andi	r2,r20,1
  812170:	0039883a 	mov	fp,zero
  812174:	10000526 	beq	r2,zero,81218c <___vfiprintf_internal_r+0x1428>
  812178:	00800c04 	movi	r2,48
  81217c:	d88019c5 	stb	r2,103(sp)
  812180:	dcc02717 	ldw	r19,156(sp)
  812184:	dd4019c4 	addi	r21,sp,103
  812188:	003bf606 	br	811164 <__alt_data_end+0xff811164>
  81218c:	0027883a 	mov	r19,zero
  812190:	dd401a04 	addi	r21,sp,104
  812194:	003bf306 	br	811164 <__alt_data_end+0xff811164>
  812198:	d9c01d85 	stb	r7,118(sp)
  81219c:	003dc806 	br	8118c0 <__alt_data_end+0xff8118c0>
  8121a0:	d9c01d85 	stb	r7,118(sp)
  8121a4:	003d3a06 	br	811690 <__alt_data_end+0xff811690>
  8121a8:	d9c01d85 	stb	r7,118(sp)
  8121ac:	003d2a06 	br	811658 <__alt_data_end+0xff811658>
  8121b0:	d9c01d85 	stb	r7,118(sp)
  8121b4:	003cde06 	br	811530 <__alt_data_end+0xff811530>
  8121b8:	d9c01d85 	stb	r7,118(sp)
  8121bc:	003cbc06 	br	8114b0 <__alt_data_end+0xff8114b0>

008121c0 <__vfiprintf_internal>:
  8121c0:	008020b4 	movhi	r2,130
  8121c4:	10ba8504 	addi	r2,r2,-5612
  8121c8:	300f883a 	mov	r7,r6
  8121cc:	280d883a 	mov	r6,r5
  8121d0:	200b883a 	mov	r5,r4
  8121d4:	11000017 	ldw	r4,0(r2)
  8121d8:	0810d641 	jmpi	810d64 <___vfiprintf_internal_r>

008121dc <__sbprintf>:
  8121dc:	2880030b 	ldhu	r2,12(r5)
  8121e0:	2ac01917 	ldw	r11,100(r5)
  8121e4:	2a80038b 	ldhu	r10,14(r5)
  8121e8:	2a400717 	ldw	r9,28(r5)
  8121ec:	2a000917 	ldw	r8,36(r5)
  8121f0:	defee204 	addi	sp,sp,-1144
  8121f4:	00c10004 	movi	r3,1024
  8121f8:	dc011a15 	stw	r16,1128(sp)
  8121fc:	10bfff4c 	andi	r2,r2,65533
  812200:	2821883a 	mov	r16,r5
  812204:	d8cb883a 	add	r5,sp,r3
  812208:	dc811c15 	stw	r18,1136(sp)
  81220c:	dc411b15 	stw	r17,1132(sp)
  812210:	dfc11d15 	stw	ra,1140(sp)
  812214:	2025883a 	mov	r18,r4
  812218:	d881030d 	sth	r2,1036(sp)
  81221c:	dac11915 	stw	r11,1124(sp)
  812220:	da81038d 	sth	r10,1038(sp)
  812224:	da410715 	stw	r9,1052(sp)
  812228:	da010915 	stw	r8,1060(sp)
  81222c:	dec10015 	stw	sp,1024(sp)
  812230:	dec10415 	stw	sp,1040(sp)
  812234:	d8c10215 	stw	r3,1032(sp)
  812238:	d8c10515 	stw	r3,1044(sp)
  81223c:	d8010615 	stw	zero,1048(sp)
  812240:	0810d640 	call	810d64 <___vfiprintf_internal_r>
  812244:	1023883a 	mov	r17,r2
  812248:	10000416 	blt	r2,zero,81225c <__sbprintf+0x80>
  81224c:	d9410004 	addi	r5,sp,1024
  812250:	9009883a 	mov	r4,r18
  812254:	08011e80 	call	8011e8 <_fflush_r>
  812258:	10000d1e 	bne	r2,zero,812290 <__sbprintf+0xb4>
  81225c:	d881030b 	ldhu	r2,1036(sp)
  812260:	1080100c 	andi	r2,r2,64
  812264:	10000326 	beq	r2,zero,812274 <__sbprintf+0x98>
  812268:	8080030b 	ldhu	r2,12(r16)
  81226c:	10801014 	ori	r2,r2,64
  812270:	8080030d 	sth	r2,12(r16)
  812274:	8805883a 	mov	r2,r17
  812278:	dfc11d17 	ldw	ra,1140(sp)
  81227c:	dc811c17 	ldw	r18,1136(sp)
  812280:	dc411b17 	ldw	r17,1132(sp)
  812284:	dc011a17 	ldw	r16,1128(sp)
  812288:	dec11e04 	addi	sp,sp,1144
  81228c:	f800283a 	ret
  812290:	047fffc4 	movi	r17,-1
  812294:	003ff106 	br	81225c <__alt_data_end+0xff81225c>

00812298 <__swbuf_r>:
  812298:	defffb04 	addi	sp,sp,-20
  81229c:	dcc00315 	stw	r19,12(sp)
  8122a0:	dc800215 	stw	r18,8(sp)
  8122a4:	dc000015 	stw	r16,0(sp)
  8122a8:	dfc00415 	stw	ra,16(sp)
  8122ac:	dc400115 	stw	r17,4(sp)
  8122b0:	2025883a 	mov	r18,r4
  8122b4:	2827883a 	mov	r19,r5
  8122b8:	3021883a 	mov	r16,r6
  8122bc:	20000226 	beq	r4,zero,8122c8 <__swbuf_r+0x30>
  8122c0:	20800e17 	ldw	r2,56(r4)
  8122c4:	10004226 	beq	r2,zero,8123d0 <__swbuf_r+0x138>
  8122c8:	80800617 	ldw	r2,24(r16)
  8122cc:	8100030b 	ldhu	r4,12(r16)
  8122d0:	80800215 	stw	r2,8(r16)
  8122d4:	2080020c 	andi	r2,r4,8
  8122d8:	10003626 	beq	r2,zero,8123b4 <__swbuf_r+0x11c>
  8122dc:	80c00417 	ldw	r3,16(r16)
  8122e0:	18003426 	beq	r3,zero,8123b4 <__swbuf_r+0x11c>
  8122e4:	2088000c 	andi	r2,r4,8192
  8122e8:	9c403fcc 	andi	r17,r19,255
  8122ec:	10001a26 	beq	r2,zero,812358 <__swbuf_r+0xc0>
  8122f0:	80800017 	ldw	r2,0(r16)
  8122f4:	81000517 	ldw	r4,20(r16)
  8122f8:	10c7c83a 	sub	r3,r2,r3
  8122fc:	1900200e 	bge	r3,r4,812380 <__swbuf_r+0xe8>
  812300:	18c00044 	addi	r3,r3,1
  812304:	81000217 	ldw	r4,8(r16)
  812308:	11400044 	addi	r5,r2,1
  81230c:	81400015 	stw	r5,0(r16)
  812310:	213fffc4 	addi	r4,r4,-1
  812314:	81000215 	stw	r4,8(r16)
  812318:	14c00005 	stb	r19,0(r2)
  81231c:	80800517 	ldw	r2,20(r16)
  812320:	10c01e26 	beq	r2,r3,81239c <__swbuf_r+0x104>
  812324:	8080030b 	ldhu	r2,12(r16)
  812328:	1080004c 	andi	r2,r2,1
  81232c:	10000226 	beq	r2,zero,812338 <__swbuf_r+0xa0>
  812330:	00800284 	movi	r2,10
  812334:	88801926 	beq	r17,r2,81239c <__swbuf_r+0x104>
  812338:	8805883a 	mov	r2,r17
  81233c:	dfc00417 	ldw	ra,16(sp)
  812340:	dcc00317 	ldw	r19,12(sp)
  812344:	dc800217 	ldw	r18,8(sp)
  812348:	dc400117 	ldw	r17,4(sp)
  81234c:	dc000017 	ldw	r16,0(sp)
  812350:	dec00504 	addi	sp,sp,20
  812354:	f800283a 	ret
  812358:	81401917 	ldw	r5,100(r16)
  81235c:	00b7ffc4 	movi	r2,-8193
  812360:	21080014 	ori	r4,r4,8192
  812364:	2884703a 	and	r2,r5,r2
  812368:	80801915 	stw	r2,100(r16)
  81236c:	80800017 	ldw	r2,0(r16)
  812370:	8100030d 	sth	r4,12(r16)
  812374:	81000517 	ldw	r4,20(r16)
  812378:	10c7c83a 	sub	r3,r2,r3
  81237c:	193fe016 	blt	r3,r4,812300 <__alt_data_end+0xff812300>
  812380:	800b883a 	mov	r5,r16
  812384:	9009883a 	mov	r4,r18
  812388:	08011e80 	call	8011e8 <_fflush_r>
  81238c:	1000071e 	bne	r2,zero,8123ac <__swbuf_r+0x114>
  812390:	80800017 	ldw	r2,0(r16)
  812394:	00c00044 	movi	r3,1
  812398:	003fda06 	br	812304 <__alt_data_end+0xff812304>
  81239c:	800b883a 	mov	r5,r16
  8123a0:	9009883a 	mov	r4,r18
  8123a4:	08011e80 	call	8011e8 <_fflush_r>
  8123a8:	103fe326 	beq	r2,zero,812338 <__alt_data_end+0xff812338>
  8123ac:	00bfffc4 	movi	r2,-1
  8123b0:	003fe206 	br	81233c <__alt_data_end+0xff81233c>
  8123b4:	800b883a 	mov	r5,r16
  8123b8:	9009883a 	mov	r4,r18
  8123bc:	080712c0 	call	80712c <__swsetup_r>
  8123c0:	103ffa1e 	bne	r2,zero,8123ac <__alt_data_end+0xff8123ac>
  8123c4:	8100030b 	ldhu	r4,12(r16)
  8123c8:	80c00417 	ldw	r3,16(r16)
  8123cc:	003fc506 	br	8122e4 <__alt_data_end+0xff8122e4>
  8123d0:	08015c40 	call	8015c4 <__sinit>
  8123d4:	003fbc06 	br	8122c8 <__alt_data_end+0xff8122c8>

008123d8 <__swbuf>:
  8123d8:	008020b4 	movhi	r2,130
  8123dc:	10ba8504 	addi	r2,r2,-5612
  8123e0:	280d883a 	mov	r6,r5
  8123e4:	200b883a 	mov	r5,r4
  8123e8:	11000017 	ldw	r4,0(r2)
  8123ec:	08122981 	jmpi	812298 <__swbuf_r>

008123f0 <_calloc_r>:
  8123f0:	298b383a 	mul	r5,r5,r6
  8123f4:	defffe04 	addi	sp,sp,-8
  8123f8:	dfc00115 	stw	ra,4(sp)
  8123fc:	dc000015 	stw	r16,0(sp)
  812400:	08025b80 	call	8025b8 <_malloc_r>
  812404:	10002926 	beq	r2,zero,8124ac <_calloc_r+0xbc>
  812408:	11bfff17 	ldw	r6,-4(r2)
  81240c:	1021883a 	mov	r16,r2
  812410:	00bfff04 	movi	r2,-4
  812414:	308c703a 	and	r6,r6,r2
  812418:	00c00904 	movi	r3,36
  81241c:	308d883a 	add	r6,r6,r2
  812420:	19801636 	bltu	r3,r6,81247c <_calloc_r+0x8c>
  812424:	008004c4 	movi	r2,19
  812428:	11800b2e 	bgeu	r2,r6,812458 <_calloc_r+0x68>
  81242c:	80000015 	stw	zero,0(r16)
  812430:	80000115 	stw	zero,4(r16)
  812434:	008006c4 	movi	r2,27
  812438:	11801a2e 	bgeu	r2,r6,8124a4 <_calloc_r+0xb4>
  81243c:	80000215 	stw	zero,8(r16)
  812440:	80000315 	stw	zero,12(r16)
  812444:	30c0151e 	bne	r6,r3,81249c <_calloc_r+0xac>
  812448:	80000415 	stw	zero,16(r16)
  81244c:	80800604 	addi	r2,r16,24
  812450:	80000515 	stw	zero,20(r16)
  812454:	00000106 	br	81245c <_calloc_r+0x6c>
  812458:	8005883a 	mov	r2,r16
  81245c:	10000015 	stw	zero,0(r2)
  812460:	10000115 	stw	zero,4(r2)
  812464:	10000215 	stw	zero,8(r2)
  812468:	8005883a 	mov	r2,r16
  81246c:	dfc00117 	ldw	ra,4(sp)
  812470:	dc000017 	ldw	r16,0(sp)
  812474:	dec00204 	addi	sp,sp,8
  812478:	f800283a 	ret
  81247c:	000b883a 	mov	r5,zero
  812480:	8009883a 	mov	r4,r16
  812484:	0802dc40 	call	802dc4 <memset>
  812488:	8005883a 	mov	r2,r16
  81248c:	dfc00117 	ldw	ra,4(sp)
  812490:	dc000017 	ldw	r16,0(sp)
  812494:	dec00204 	addi	sp,sp,8
  812498:	f800283a 	ret
  81249c:	80800404 	addi	r2,r16,16
  8124a0:	003fee06 	br	81245c <__alt_data_end+0xff81245c>
  8124a4:	80800204 	addi	r2,r16,8
  8124a8:	003fec06 	br	81245c <__alt_data_end+0xff81245c>
  8124ac:	0005883a 	mov	r2,zero
  8124b0:	003fee06 	br	81246c <__alt_data_end+0xff81246c>

008124b4 <__fputwc>:
  8124b4:	defff804 	addi	sp,sp,-32
  8124b8:	dcc00415 	stw	r19,16(sp)
  8124bc:	dc800315 	stw	r18,12(sp)
  8124c0:	dc000115 	stw	r16,4(sp)
  8124c4:	dfc00715 	stw	ra,28(sp)
  8124c8:	dd400615 	stw	r21,24(sp)
  8124cc:	dd000515 	stw	r20,20(sp)
  8124d0:	dc400215 	stw	r17,8(sp)
  8124d4:	2027883a 	mov	r19,r4
  8124d8:	2825883a 	mov	r18,r5
  8124dc:	3021883a 	mov	r16,r6
  8124e0:	08091d00 	call	8091d0 <__locale_mb_cur_max>
  8124e4:	00c00044 	movi	r3,1
  8124e8:	10c03e26 	beq	r2,r3,8125e4 <__fputwc+0x130>
  8124ec:	81c01704 	addi	r7,r16,92
  8124f0:	900d883a 	mov	r6,r18
  8124f4:	d80b883a 	mov	r5,sp
  8124f8:	9809883a 	mov	r4,r19
  8124fc:	08147240 	call	814724 <_wcrtomb_r>
  812500:	1029883a 	mov	r20,r2
  812504:	00bfffc4 	movi	r2,-1
  812508:	a0802026 	beq	r20,r2,81258c <__fputwc+0xd8>
  81250c:	d9400003 	ldbu	r5,0(sp)
  812510:	a0001c26 	beq	r20,zero,812584 <__fputwc+0xd0>
  812514:	0023883a 	mov	r17,zero
  812518:	05400284 	movi	r21,10
  81251c:	00000906 	br	812544 <__fputwc+0x90>
  812520:	80800017 	ldw	r2,0(r16)
  812524:	11400005 	stb	r5,0(r2)
  812528:	80c00017 	ldw	r3,0(r16)
  81252c:	18c00044 	addi	r3,r3,1
  812530:	80c00015 	stw	r3,0(r16)
  812534:	8c400044 	addi	r17,r17,1
  812538:	dc45883a 	add	r2,sp,r17
  81253c:	8d00112e 	bgeu	r17,r20,812584 <__fputwc+0xd0>
  812540:	11400003 	ldbu	r5,0(r2)
  812544:	80c00217 	ldw	r3,8(r16)
  812548:	18ffffc4 	addi	r3,r3,-1
  81254c:	80c00215 	stw	r3,8(r16)
  812550:	183ff30e 	bge	r3,zero,812520 <__alt_data_end+0xff812520>
  812554:	80800617 	ldw	r2,24(r16)
  812558:	18801916 	blt	r3,r2,8125c0 <__fputwc+0x10c>
  81255c:	80800017 	ldw	r2,0(r16)
  812560:	11400005 	stb	r5,0(r2)
  812564:	80800017 	ldw	r2,0(r16)
  812568:	10c00003 	ldbu	r3,0(r2)
  81256c:	10800044 	addi	r2,r2,1
  812570:	1d402326 	beq	r3,r21,812600 <__fputwc+0x14c>
  812574:	80800015 	stw	r2,0(r16)
  812578:	8c400044 	addi	r17,r17,1
  81257c:	dc45883a 	add	r2,sp,r17
  812580:	8d3fef36 	bltu	r17,r20,812540 <__alt_data_end+0xff812540>
  812584:	9005883a 	mov	r2,r18
  812588:	00000406 	br	81259c <__fputwc+0xe8>
  81258c:	80c0030b 	ldhu	r3,12(r16)
  812590:	a005883a 	mov	r2,r20
  812594:	18c01014 	ori	r3,r3,64
  812598:	80c0030d 	sth	r3,12(r16)
  81259c:	dfc00717 	ldw	ra,28(sp)
  8125a0:	dd400617 	ldw	r21,24(sp)
  8125a4:	dd000517 	ldw	r20,20(sp)
  8125a8:	dcc00417 	ldw	r19,16(sp)
  8125ac:	dc800317 	ldw	r18,12(sp)
  8125b0:	dc400217 	ldw	r17,8(sp)
  8125b4:	dc000117 	ldw	r16,4(sp)
  8125b8:	dec00804 	addi	sp,sp,32
  8125bc:	f800283a 	ret
  8125c0:	800d883a 	mov	r6,r16
  8125c4:	29403fcc 	andi	r5,r5,255
  8125c8:	9809883a 	mov	r4,r19
  8125cc:	08122980 	call	812298 <__swbuf_r>
  8125d0:	10bfffe0 	cmpeqi	r2,r2,-1
  8125d4:	10803fcc 	andi	r2,r2,255
  8125d8:	103fd626 	beq	r2,zero,812534 <__alt_data_end+0xff812534>
  8125dc:	00bfffc4 	movi	r2,-1
  8125e0:	003fee06 	br	81259c <__alt_data_end+0xff81259c>
  8125e4:	90ffffc4 	addi	r3,r18,-1
  8125e8:	01003f84 	movi	r4,254
  8125ec:	20ffbf36 	bltu	r4,r3,8124ec <__alt_data_end+0xff8124ec>
  8125f0:	900b883a 	mov	r5,r18
  8125f4:	dc800005 	stb	r18,0(sp)
  8125f8:	1029883a 	mov	r20,r2
  8125fc:	003fc506 	br	812514 <__alt_data_end+0xff812514>
  812600:	800d883a 	mov	r6,r16
  812604:	a80b883a 	mov	r5,r21
  812608:	9809883a 	mov	r4,r19
  81260c:	08122980 	call	812298 <__swbuf_r>
  812610:	10bfffe0 	cmpeqi	r2,r2,-1
  812614:	003fef06 	br	8125d4 <__alt_data_end+0xff8125d4>

00812618 <_fputwc_r>:
  812618:	3080030b 	ldhu	r2,12(r6)
  81261c:	10c8000c 	andi	r3,r2,8192
  812620:	1800051e 	bne	r3,zero,812638 <_fputwc_r+0x20>
  812624:	30c01917 	ldw	r3,100(r6)
  812628:	10880014 	ori	r2,r2,8192
  81262c:	3080030d 	sth	r2,12(r6)
  812630:	18880014 	ori	r2,r3,8192
  812634:	30801915 	stw	r2,100(r6)
  812638:	08124b41 	jmpi	8124b4 <__fputwc>

0081263c <fputwc>:
  81263c:	008020b4 	movhi	r2,130
  812640:	defffc04 	addi	sp,sp,-16
  812644:	10ba8504 	addi	r2,r2,-5612
  812648:	dc000115 	stw	r16,4(sp)
  81264c:	14000017 	ldw	r16,0(r2)
  812650:	dc400215 	stw	r17,8(sp)
  812654:	dfc00315 	stw	ra,12(sp)
  812658:	2023883a 	mov	r17,r4
  81265c:	80000226 	beq	r16,zero,812668 <fputwc+0x2c>
  812660:	80800e17 	ldw	r2,56(r16)
  812664:	10001026 	beq	r2,zero,8126a8 <fputwc+0x6c>
  812668:	2880030b 	ldhu	r2,12(r5)
  81266c:	10c8000c 	andi	r3,r2,8192
  812670:	1800051e 	bne	r3,zero,812688 <fputwc+0x4c>
  812674:	28c01917 	ldw	r3,100(r5)
  812678:	10880014 	ori	r2,r2,8192
  81267c:	2880030d 	sth	r2,12(r5)
  812680:	18880014 	ori	r2,r3,8192
  812684:	28801915 	stw	r2,100(r5)
  812688:	280d883a 	mov	r6,r5
  81268c:	8009883a 	mov	r4,r16
  812690:	880b883a 	mov	r5,r17
  812694:	dfc00317 	ldw	ra,12(sp)
  812698:	dc400217 	ldw	r17,8(sp)
  81269c:	dc000117 	ldw	r16,4(sp)
  8126a0:	dec00404 	addi	sp,sp,16
  8126a4:	08124b41 	jmpi	8124b4 <__fputwc>
  8126a8:	8009883a 	mov	r4,r16
  8126ac:	d9400015 	stw	r5,0(sp)
  8126b0:	08015c40 	call	8015c4 <__sinit>
  8126b4:	d9400017 	ldw	r5,0(sp)
  8126b8:	003feb06 	br	812668 <__alt_data_end+0xff812668>

008126bc <rshift>:
  8126bc:	2807d17a 	srai	r3,r5,5
  8126c0:	20800417 	ldw	r2,16(r4)
  8126c4:	22000504 	addi	r8,r4,20
  8126c8:	1880250e 	bge	r3,r2,812760 <rshift+0xa4>
  8126cc:	1085883a 	add	r2,r2,r2
  8126d0:	18c7883a 	add	r3,r3,r3
  8126d4:	1085883a 	add	r2,r2,r2
  8126d8:	18c7883a 	add	r3,r3,r3
  8126dc:	294007cc 	andi	r5,r5,31
  8126e0:	4085883a 	add	r2,r8,r2
  8126e4:	40c7883a 	add	r3,r8,r3
  8126e8:	28002026 	beq	r5,zero,81276c <rshift+0xb0>
  8126ec:	19800017 	ldw	r6,0(r3)
  8126f0:	02c00804 	movi	r11,32
  8126f4:	19c00104 	addi	r7,r3,4
  8126f8:	5957c83a 	sub	r11,r11,r5
  8126fc:	314cd83a 	srl	r6,r6,r5
  812700:	38802c2e 	bgeu	r7,r2,8127b4 <rshift+0xf8>
  812704:	4015883a 	mov	r10,r8
  812708:	3a400017 	ldw	r9,0(r7)
  81270c:	52800104 	addi	r10,r10,4
  812710:	39c00104 	addi	r7,r7,4
  812714:	4ad2983a 	sll	r9,r9,r11
  812718:	498cb03a 	or	r6,r9,r6
  81271c:	51bfff15 	stw	r6,-4(r10)
  812720:	39bfff17 	ldw	r6,-4(r7)
  812724:	314cd83a 	srl	r6,r6,r5
  812728:	38bff736 	bltu	r7,r2,812708 <__alt_data_end+0xff812708>
  81272c:	10c7c83a 	sub	r3,r2,r3
  812730:	18fffec4 	addi	r3,r3,-5
  812734:	1806d0ba 	srli	r3,r3,2
  812738:	18c00044 	addi	r3,r3,1
  81273c:	18c7883a 	add	r3,r3,r3
  812740:	18c7883a 	add	r3,r3,r3
  812744:	40c7883a 	add	r3,r8,r3
  812748:	19800015 	stw	r6,0(r3)
  81274c:	30000126 	beq	r6,zero,812754 <rshift+0x98>
  812750:	18c00104 	addi	r3,r3,4
  812754:	1a05c83a 	sub	r2,r3,r8
  812758:	1005d0ba 	srai	r2,r2,2
  81275c:	00001206 	br	8127a8 <rshift+0xec>
  812760:	20000415 	stw	zero,16(r4)
  812764:	20000515 	stw	zero,20(r4)
  812768:	f800283a 	ret
  81276c:	18bffc2e 	bgeu	r3,r2,812760 <__alt_data_end+0xff812760>
  812770:	180d883a 	mov	r6,r3
  812774:	400b883a 	mov	r5,r8
  812778:	31c00017 	ldw	r7,0(r6)
  81277c:	29400104 	addi	r5,r5,4
  812780:	31800104 	addi	r6,r6,4
  812784:	29ffff15 	stw	r7,-4(r5)
  812788:	30bffb36 	bltu	r6,r2,812778 <__alt_data_end+0xff812778>
  81278c:	00c6303a 	nor	r3,zero,r3
  812790:	1885883a 	add	r2,r3,r2
  812794:	1004d0ba 	srli	r2,r2,2
  812798:	10800044 	addi	r2,r2,1
  81279c:	1085883a 	add	r2,r2,r2
  8127a0:	1085883a 	add	r2,r2,r2
  8127a4:	1005d0ba 	srai	r2,r2,2
  8127a8:	20800415 	stw	r2,16(r4)
  8127ac:	103fed26 	beq	r2,zero,812764 <__alt_data_end+0xff812764>
  8127b0:	f800283a 	ret
  8127b4:	4007883a 	mov	r3,r8
  8127b8:	003fe306 	br	812748 <__alt_data_end+0xff812748>

008127bc <__gethex>:
  8127bc:	deffeb04 	addi	sp,sp,-84
  8127c0:	dfc01415 	stw	ra,80(sp)
  8127c4:	dd801115 	stw	r22,68(sp)
  8127c8:	dcc00e15 	stw	r19,56(sp)
  8127cc:	dc800d15 	stw	r18,52(sp)
  8127d0:	2827883a 	mov	r19,r5
  8127d4:	d9000115 	stw	r4,4(sp)
  8127d8:	d9800015 	stw	r6,0(sp)
  8127dc:	d9c00415 	stw	r7,16(sp)
  8127e0:	df001315 	stw	fp,76(sp)
  8127e4:	ddc01215 	stw	r23,72(sp)
  8127e8:	dd401015 	stw	r21,64(sp)
  8127ec:	dd000f15 	stw	r20,60(sp)
  8127f0:	dc400c15 	stw	r17,48(sp)
  8127f4:	dc000b15 	stw	r16,44(sp)
  8127f8:	08091f40 	call	8091f4 <_localeconv_r>
  8127fc:	14800017 	ldw	r18,0(r2)
  812800:	9009883a 	mov	r4,r18
  812804:	08035a80 	call	8035a8 <strlen>
  812808:	98c00017 	ldw	r3,0(r19)
  81280c:	102d883a 	mov	r22,r2
  812810:	9085883a 	add	r2,r18,r2
  812814:	10bfffc3 	ldbu	r2,-1(r2)
  812818:	19000083 	ldbu	r4,2(r3)
  81281c:	d8800305 	stb	r2,12(sp)
  812820:	00800c04 	movi	r2,48
  812824:	2081521e 	bne	r4,r2,812d70 <__gethex+0x5b4>
  812828:	017fff84 	movi	r5,-2
  81282c:	188000c4 	addi	r2,r3,3
  812830:	28cbc83a 	sub	r5,r5,r3
  812834:	200d883a 	mov	r6,r4
  812838:	28a3883a 	add	r17,r5,r2
  81283c:	102b883a 	mov	r21,r2
  812840:	10800044 	addi	r2,r2,1
  812844:	113fffc3 	ldbu	r4,-1(r2)
  812848:	21bffb26 	beq	r4,r6,812838 <__alt_data_end+0xff812838>
  81284c:	050020b4 	movhi	r20,130
  812850:	a5329d84 	addi	r20,r20,-13706
  812854:	a109883a 	add	r4,r20,r4
  812858:	20800003 	ldbu	r2,0(r4)
  81285c:	10008826 	beq	r2,zero,812a80 <__gethex+0x2c4>
  812860:	a8800003 	ldbu	r2,0(r21)
  812864:	0015883a 	mov	r10,zero
  812868:	002f883a 	mov	r23,zero
  81286c:	a085883a 	add	r2,r20,r2
  812870:	10800003 	ldbu	r2,0(r2)
  812874:	a821883a 	mov	r16,r21
  812878:	10000526 	beq	r2,zero,812890 <__gethex+0xd4>
  81287c:	84000044 	addi	r16,r16,1
  812880:	80800003 	ldbu	r2,0(r16)
  812884:	a085883a 	add	r2,r20,r2
  812888:	10800003 	ldbu	r2,0(r2)
  81288c:	103ffb1e 	bne	r2,zero,81287c <__alt_data_end+0xff81287c>
  812890:	b00d883a 	mov	r6,r22
  812894:	900b883a 	mov	r5,r18
  812898:	8009883a 	mov	r4,r16
  81289c:	da800a15 	stw	r10,40(sp)
  8128a0:	08132480 	call	813248 <strncmp>
  8128a4:	da800a17 	ldw	r10,40(sp)
  8128a8:	1000031e 	bne	r2,zero,8128b8 <__gethex+0xfc>
  8128ac:	b8015226 	beq	r23,zero,812df8 <__gethex+0x63c>
  8128b0:	80800003 	ldbu	r2,0(r16)
  8128b4:	00000206 	br	8128c0 <__gethex+0x104>
  8128b8:	80800003 	ldbu	r2,0(r16)
  8128bc:	b8011f26 	beq	r23,zero,812d3c <__gethex+0x580>
  8128c0:	85efc83a 	sub	r23,r16,r23
  8128c4:	bdef883a 	add	r23,r23,r23
  8128c8:	bdef883a 	add	r23,r23,r23
  8128cc:	05efc83a 	sub	r23,zero,r23
  8128d0:	10803fcc 	andi	r2,r2,255
  8128d4:	01001404 	movi	r4,80
  8128d8:	11008626 	beq	r2,r4,812af4 <__gethex+0x338>
  8128dc:	01001c04 	movi	r4,112
  8128e0:	11008426 	beq	r2,r4,812af4 <__gethex+0x338>
  8128e4:	8039883a 	mov	fp,r16
  8128e8:	9c000015 	stw	r16,0(r19)
  8128ec:	5000711e 	bne	r10,zero,812ab4 <__gethex+0x2f8>
  8128f0:	e545c83a 	sub	r2,fp,r21
  8128f4:	10bfffc4 	addi	r2,r2,-1
  8128f8:	010001c4 	movi	r4,7
  8128fc:	000b883a 	mov	r5,zero
  812900:	2080030e 	bge	r4,r2,812910 <__gethex+0x154>
  812904:	1005d07a 	srai	r2,r2,1
  812908:	29400044 	addi	r5,r5,1
  81290c:	20bffd16 	blt	r4,r2,812904 <__alt_data_end+0xff812904>
  812910:	d9000117 	ldw	r4,4(sp)
  812914:	08098300 	call	809830 <_Balloc>
  812918:	10c00504 	addi	r3,r2,20
  81291c:	d8c00215 	stw	r3,8(sp)
  812920:	1021883a 	mov	r16,r2
  812924:	af01732e 	bgeu	r21,fp,812ef4 <__gethex+0x738>
  812928:	dc400303 	ldbu	r17,12(sp)
  81292c:	03400044 	movi	r13,1
  812930:	1815883a 	mov	r10,r3
  812934:	0013883a 	mov	r9,zero
  812938:	0027883a 	mov	r19,zero
  81293c:	6d9bc83a 	sub	r13,r13,r22
  812940:	02c00804 	movi	r11,32
  812944:	e0bfffc3 	ldbu	r2,-1(fp)
  812948:	e3bfffc4 	addi	r14,fp,-1
  81294c:	88803026 	beq	r17,r2,812a10 <__gethex+0x254>
  812950:	9ac04526 	beq	r19,r11,812a68 <__gethex+0x2ac>
  812954:	980b883a 	mov	r5,r19
  812958:	9cc00104 	addi	r19,r19,4
  81295c:	e13fffc3 	ldbu	r4,-1(fp)
  812960:	7039883a 	mov	fp,r14
  812964:	a109883a 	add	r4,r20,r4
  812968:	20800003 	ldbu	r2,0(r4)
  81296c:	108003cc 	andi	r2,r2,15
  812970:	1144983a 	sll	r2,r2,r5
  812974:	4892b03a 	or	r9,r9,r2
  812978:	af3ff236 	bltu	r21,fp,812944 <__alt_data_end+0xff812944>
  81297c:	d8c00217 	ldw	r3,8(sp)
  812980:	50800104 	addi	r2,r10,4
  812984:	52400015 	stw	r9,0(r10)
  812988:	10c5c83a 	sub	r2,r2,r3
  81298c:	1005d0ba 	srai	r2,r2,2
  812990:	4809883a 	mov	r4,r9
  812994:	80800415 	stw	r2,16(r16)
  812998:	1022917a 	slli	r17,r2,5
  81299c:	0809b240 	call	809b24 <__hi0bits>
  8129a0:	d8c00017 	ldw	r3,0(sp)
  8129a4:	8885c83a 	sub	r2,r17,r2
  8129a8:	1c800017 	ldw	r18,0(r3)
  8129ac:	9080c716 	blt	r18,r2,812ccc <__gethex+0x510>
  8129b0:	1480e416 	blt	r2,r18,812d44 <__gethex+0x588>
  8129b4:	0027883a 	mov	r19,zero
  8129b8:	d8c00017 	ldw	r3,0(sp)
  8129bc:	18800217 	ldw	r2,8(r3)
  8129c0:	15c08d16 	blt	r2,r23,812bf8 <__gethex+0x43c>
  8129c4:	d8c00017 	ldw	r3,0(sp)
  8129c8:	18800117 	ldw	r2,4(r3)
  8129cc:	b880aa0e 	bge	r23,r2,812c78 <__gethex+0x4bc>
  8129d0:	15efc83a 	sub	r23,r2,r23
  8129d4:	bc80ed16 	blt	r23,r18,812d8c <__gethex+0x5d0>
  8129d8:	18c00317 	ldw	r3,12(r3)
  8129dc:	01000084 	movi	r4,2
  8129e0:	19014926 	beq	r3,r4,812f08 <__gethex+0x74c>
  8129e4:	010000c4 	movi	r4,3
  8129e8:	19012e26 	beq	r3,r4,812ea4 <__gethex+0x6e8>
  8129ec:	01000044 	movi	r4,1
  8129f0:	19014826 	beq	r3,r4,812f14 <__gethex+0x758>
  8129f4:	d9000117 	ldw	r4,4(sp)
  8129f8:	800b883a 	mov	r5,r16
  8129fc:	08098d80 	call	8098d8 <_Bfree>
  812a00:	d8801517 	ldw	r2,84(sp)
  812a04:	10000015 	stw	zero,0(r2)
  812a08:	00801404 	movi	r2,80
  812a0c:	00002b06 	br	812abc <__gethex+0x300>
  812a10:	735f883a 	add	r15,r14,r13
  812a14:	7d7fce36 	bltu	r15,r21,812950 <__alt_data_end+0xff812950>
  812a18:	7809883a 	mov	r4,r15
  812a1c:	b00d883a 	mov	r6,r22
  812a20:	900b883a 	mov	r5,r18
  812a24:	da400515 	stw	r9,20(sp)
  812a28:	da800a15 	stw	r10,40(sp)
  812a2c:	dac00915 	stw	r11,36(sp)
  812a30:	db400815 	stw	r13,32(sp)
  812a34:	db800615 	stw	r14,24(sp)
  812a38:	dbc00715 	stw	r15,28(sp)
  812a3c:	08132480 	call	813248 <strncmp>
  812a40:	da400517 	ldw	r9,20(sp)
  812a44:	da800a17 	ldw	r10,40(sp)
  812a48:	dac00917 	ldw	r11,36(sp)
  812a4c:	db400817 	ldw	r13,32(sp)
  812a50:	db800617 	ldw	r14,24(sp)
  812a54:	dbc00717 	ldw	r15,28(sp)
  812a58:	103fbd1e 	bne	r2,zero,812950 <__alt_data_end+0xff812950>
  812a5c:	7839883a 	mov	fp,r15
  812a60:	af3fb836 	bltu	r21,fp,812944 <__alt_data_end+0xff812944>
  812a64:	003fc506 	br	81297c <__alt_data_end+0xff81297c>
  812a68:	04c00104 	movi	r19,4
  812a6c:	52400015 	stw	r9,0(r10)
  812a70:	000b883a 	mov	r5,zero
  812a74:	54d5883a 	add	r10,r10,r19
  812a78:	0013883a 	mov	r9,zero
  812a7c:	003fb706 	br	81295c <__alt_data_end+0xff81295c>
  812a80:	b00d883a 	mov	r6,r22
  812a84:	900b883a 	mov	r5,r18
  812a88:	a809883a 	mov	r4,r21
  812a8c:	08132480 	call	813248 <strncmp>
  812a90:	10006426 	beq	r2,zero,812c24 <__gethex+0x468>
  812a94:	a8800003 	ldbu	r2,0(r21)
  812a98:	a821883a 	mov	r16,r21
  812a9c:	10803fcc 	andi	r2,r2,255
  812aa0:	01001404 	movi	r4,80
  812aa4:	11001126 	beq	r2,r4,812aec <__gethex+0x330>
  812aa8:	01001c04 	movi	r4,112
  812aac:	11000f26 	beq	r2,r4,812aec <__gethex+0x330>
  812ab0:	9c000015 	stw	r16,0(r19)
  812ab4:	8800831e 	bne	r17,zero,812cc4 <__gethex+0x508>
  812ab8:	00800184 	movi	r2,6
  812abc:	dfc01417 	ldw	ra,80(sp)
  812ac0:	df001317 	ldw	fp,76(sp)
  812ac4:	ddc01217 	ldw	r23,72(sp)
  812ac8:	dd801117 	ldw	r22,68(sp)
  812acc:	dd401017 	ldw	r21,64(sp)
  812ad0:	dd000f17 	ldw	r20,60(sp)
  812ad4:	dcc00e17 	ldw	r19,56(sp)
  812ad8:	dc800d17 	ldw	r18,52(sp)
  812adc:	dc400c17 	ldw	r17,48(sp)
  812ae0:	dc000b17 	ldw	r16,44(sp)
  812ae4:	dec01504 	addi	sp,sp,84
  812ae8:	f800283a 	ret
  812aec:	002f883a 	mov	r23,zero
  812af0:	02800044 	movi	r10,1
  812af4:	80800043 	ldbu	r2,1(r16)
  812af8:	01400ac4 	movi	r5,43
  812afc:	11003fcc 	andi	r4,r2,255
  812b00:	21406e26 	beq	r4,r5,812cbc <__gethex+0x500>
  812b04:	01400b44 	movi	r5,45
  812b08:	21404226 	beq	r4,r5,812c14 <__gethex+0x458>
  812b0c:	81400044 	addi	r5,r16,1
  812b10:	000d883a 	mov	r6,zero
  812b14:	10803fcc 	andi	r2,r2,255
  812b18:	a085883a 	add	r2,r20,r2
  812b1c:	11000003 	ldbu	r4,0(r2)
  812b20:	03000604 	movi	r12,24
  812b24:	20bfffc4 	addi	r2,r4,-1
  812b28:	10803fcc 	andi	r2,r2,255
  812b2c:	60bf6d36 	bltu	r12,r2,8128e4 <__alt_data_end+0xff8128e4>
  812b30:	2ac00043 	ldbu	r11,1(r5)
  812b34:	20803fcc 	andi	r2,r4,255
  812b38:	010020b4 	movhi	r4,130
  812b3c:	21329d84 	addi	r4,r4,-13706
  812b40:	22c9883a 	add	r4,r4,r11
  812b44:	23400003 	ldbu	r13,0(r4)
  812b48:	10bffc04 	addi	r2,r2,-16
  812b4c:	29400044 	addi	r5,r5,1
  812b50:	693fffc4 	addi	r4,r13,-1
  812b54:	21003fcc 	andi	r4,r4,255
  812b58:	6b403fcc 	andi	r13,r13,255
  812b5c:	61000b36 	bltu	r12,r4,812b8c <__gethex+0x3d0>
  812b60:	29400044 	addi	r5,r5,1
  812b64:	29000003 	ldbu	r4,0(r5)
  812b68:	108002a4 	muli	r2,r2,10
  812b6c:	a109883a 	add	r4,r20,r4
  812b70:	22c00003 	ldbu	r11,0(r4)
  812b74:	1345883a 	add	r2,r2,r13
  812b78:	10bffc04 	addi	r2,r2,-16
  812b7c:	593fffc4 	addi	r4,r11,-1
  812b80:	21003fcc 	andi	r4,r4,255
  812b84:	5b403fcc 	andi	r13,r11,255
  812b88:	613ff52e 	bgeu	r12,r4,812b60 <__alt_data_end+0xff812b60>
  812b8c:	30000126 	beq	r6,zero,812b94 <__gethex+0x3d8>
  812b90:	0085c83a 	sub	r2,zero,r2
  812b94:	8039883a 	mov	fp,r16
  812b98:	b8af883a 	add	r23,r23,r2
  812b9c:	2821883a 	mov	r16,r5
  812ba0:	003f5106 	br	8128e8 <__alt_data_end+0xff8128e8>
  812ba4:	80800217 	ldw	r2,8(r16)
  812ba8:	e080f00e 	bge	fp,r2,812f6c <__gethex+0x7b0>
  812bac:	e007883a 	mov	r3,fp
  812bb0:	18800144 	addi	r2,r3,5
  812bb4:	1085883a 	add	r2,r2,r2
  812bb8:	18c00044 	addi	r3,r3,1
  812bbc:	1085883a 	add	r2,r2,r2
  812bc0:	8085883a 	add	r2,r16,r2
  812bc4:	80c00415 	stw	r3,16(r16)
  812bc8:	01000044 	movi	r4,1
  812bcc:	11000015 	stw	r4,0(r2)
  812bd0:	00800084 	movi	r2,2
  812bd4:	8880d826 	beq	r17,r2,812f38 <__gethex+0x77c>
  812bd8:	e0c0ac0e 	bge	fp,r3,812e8c <__gethex+0x6d0>
  812bdc:	01400044 	movi	r5,1
  812be0:	8009883a 	mov	r4,r16
  812be4:	08126bc0 	call	8126bc <rshift>
  812be8:	d8c00017 	ldw	r3,0(sp)
  812bec:	bdc00044 	addi	r23,r23,1
  812bf0:	18800217 	ldw	r2,8(r3)
  812bf4:	15c0a70e 	bge	r2,r23,812e94 <__gethex+0x6d8>
  812bf8:	d9000117 	ldw	r4,4(sp)
  812bfc:	800b883a 	mov	r5,r16
  812c00:	08098d80 	call	8098d8 <_Bfree>
  812c04:	d9001517 	ldw	r4,84(sp)
  812c08:	008028c4 	movi	r2,163
  812c0c:	20000015 	stw	zero,0(r4)
  812c10:	003faa06 	br	812abc <__alt_data_end+0xff812abc>
  812c14:	01800044 	movi	r6,1
  812c18:	80800083 	ldbu	r2,2(r16)
  812c1c:	81400084 	addi	r5,r16,2
  812c20:	003fbc06 	br	812b14 <__alt_data_end+0xff812b14>
  812c24:	ada1883a 	add	r16,r21,r22
  812c28:	81000003 	ldbu	r4,0(r16)
  812c2c:	21403fcc 	andi	r5,r4,255
  812c30:	a145883a 	add	r2,r20,r5
  812c34:	10800003 	ldbu	r2,0(r2)
  812c38:	11803fcc 	andi	r6,r2,255
  812c3c:	30004f26 	beq	r6,zero,812d7c <__gethex+0x5c0>
  812c40:	00c00c04 	movi	r3,48
  812c44:	802b883a 	mov	r21,r16
  812c48:	28c0061e 	bne	r5,r3,812c64 <__gethex+0x4a8>
  812c4c:	2809883a 	mov	r4,r5
  812c50:	ad400044 	addi	r21,r21,1
  812c54:	a8800003 	ldbu	r2,0(r21)
  812c58:	113ffd26 	beq	r2,r4,812c50 <__alt_data_end+0xff812c50>
  812c5c:	a085883a 	add	r2,r20,r2
  812c60:	10800003 	ldbu	r2,0(r2)
  812c64:	10803fcc 	andi	r2,r2,255
  812c68:	1015003a 	cmpeq	r10,r2,zero
  812c6c:	802f883a 	mov	r23,r16
  812c70:	04400044 	movi	r17,1
  812c74:	003eff06 	br	812874 <__alt_data_end+0xff812874>
  812c78:	04400044 	movi	r17,1
  812c7c:	98000926 	beq	r19,zero,812ca4 <__gethex+0x4e8>
  812c80:	d8c00017 	ldw	r3,0(sp)
  812c84:	18800317 	ldw	r2,12(r3)
  812c88:	00c00084 	movi	r3,2
  812c8c:	10c06826 	beq	r2,r3,812e30 <__gethex+0x674>
  812c90:	00c000c4 	movi	r3,3
  812c94:	10c06a26 	beq	r2,r3,812e40 <__gethex+0x684>
  812c98:	00c00044 	movi	r3,1
  812c9c:	10c08d26 	beq	r2,r3,812ed4 <__gethex+0x718>
  812ca0:	8c400414 	ori	r17,r17,16
  812ca4:	d9001517 	ldw	r4,84(sp)
  812ca8:	d8c00417 	ldw	r3,16(sp)
  812cac:	8805883a 	mov	r2,r17
  812cb0:	24000015 	stw	r16,0(r4)
  812cb4:	1dc00015 	stw	r23,0(r3)
  812cb8:	003f8006 	br	812abc <__alt_data_end+0xff812abc>
  812cbc:	000d883a 	mov	r6,zero
  812cc0:	003fd506 	br	812c18 <__alt_data_end+0xff812c18>
  812cc4:	0005883a 	mov	r2,zero
  812cc8:	003f7c06 	br	812abc <__alt_data_end+0xff812abc>
  812ccc:	14a3c83a 	sub	r17,r2,r18
  812cd0:	880b883a 	mov	r5,r17
  812cd4:	8009883a 	mov	r4,r16
  812cd8:	080a7a00 	call	80a7a0 <__any_on>
  812cdc:	10002926 	beq	r2,zero,812d84 <__gethex+0x5c8>
  812ce0:	897fffc4 	addi	r5,r17,-1
  812ce4:	2807d17a 	srai	r3,r5,5
  812ce8:	d8800217 	ldw	r2,8(sp)
  812cec:	290007cc 	andi	r4,r5,31
  812cf0:	18c7883a 	add	r3,r3,r3
  812cf4:	18c7883a 	add	r3,r3,r3
  812cf8:	04c00044 	movi	r19,1
  812cfc:	10c7883a 	add	r3,r2,r3
  812d00:	9908983a 	sll	r4,r19,r4
  812d04:	18c00017 	ldw	r3,0(r3)
  812d08:	20c6703a 	and	r3,r4,r3
  812d0c:	18000626 	beq	r3,zero,812d28 <__gethex+0x56c>
  812d10:	99407b0e 	bge	r19,r5,812f00 <__gethex+0x744>
  812d14:	897fff84 	addi	r5,r17,-2
  812d18:	8009883a 	mov	r4,r16
  812d1c:	080a7a00 	call	80a7a0 <__any_on>
  812d20:	10007726 	beq	r2,zero,812f00 <__gethex+0x744>
  812d24:	04c000c4 	movi	r19,3
  812d28:	880b883a 	mov	r5,r17
  812d2c:	8009883a 	mov	r4,r16
  812d30:	08126bc0 	call	8126bc <rshift>
  812d34:	bc6f883a 	add	r23,r23,r17
  812d38:	003f1f06 	br	8129b8 <__alt_data_end+0xff8129b8>
  812d3c:	002f883a 	mov	r23,zero
  812d40:	003ee306 	br	8128d0 <__alt_data_end+0xff8128d0>
  812d44:	d9000117 	ldw	r4,4(sp)
  812d48:	90a3c83a 	sub	r17,r18,r2
  812d4c:	800b883a 	mov	r5,r16
  812d50:	880d883a 	mov	r6,r17
  812d54:	0809fb00 	call	809fb0 <__lshift>
  812d58:	10c00504 	addi	r3,r2,20
  812d5c:	1021883a 	mov	r16,r2
  812d60:	bc6fc83a 	sub	r23,r23,r17
  812d64:	d8c00215 	stw	r3,8(sp)
  812d68:	0027883a 	mov	r19,zero
  812d6c:	003f1206 	br	8129b8 <__alt_data_end+0xff8129b8>
  812d70:	1d400084 	addi	r21,r3,2
  812d74:	0023883a 	mov	r17,zero
  812d78:	003eb406 	br	81284c <__alt_data_end+0xff81284c>
  812d7c:	2005883a 	mov	r2,r4
  812d80:	003f4606 	br	812a9c <__alt_data_end+0xff812a9c>
  812d84:	0027883a 	mov	r19,zero
  812d88:	003fe706 	br	812d28 <__alt_data_end+0xff812d28>
  812d8c:	bc7fffc4 	addi	r17,r23,-1
  812d90:	9800421e 	bne	r19,zero,812e9c <__gethex+0x6e0>
  812d94:	88000426 	beq	r17,zero,812da8 <__gethex+0x5ec>
  812d98:	880b883a 	mov	r5,r17
  812d9c:	8009883a 	mov	r4,r16
  812da0:	080a7a00 	call	80a7a0 <__any_on>
  812da4:	1027883a 	mov	r19,r2
  812da8:	8805d17a 	srai	r2,r17,5
  812dac:	d8c00217 	ldw	r3,8(sp)
  812db0:	8c4007cc 	andi	r17,r17,31
  812db4:	1085883a 	add	r2,r2,r2
  812db8:	1085883a 	add	r2,r2,r2
  812dbc:	1885883a 	add	r2,r3,r2
  812dc0:	00c00044 	movi	r3,1
  812dc4:	1c62983a 	sll	r17,r3,r17
  812dc8:	10800017 	ldw	r2,0(r2)
  812dcc:	8884703a 	and	r2,r17,r2
  812dd0:	10000126 	beq	r2,zero,812dd8 <__gethex+0x61c>
  812dd4:	9cc00094 	ori	r19,r19,2
  812dd8:	b80b883a 	mov	r5,r23
  812ddc:	8009883a 	mov	r4,r16
  812de0:	08126bc0 	call	8126bc <rshift>
  812de4:	d8c00017 	ldw	r3,0(sp)
  812de8:	95e5c83a 	sub	r18,r18,r23
  812dec:	04400084 	movi	r17,2
  812df0:	1dc00117 	ldw	r23,4(r3)
  812df4:	003fa106 	br	812c7c <__alt_data_end+0xff812c7c>
  812df8:	85af883a 	add	r23,r16,r22
  812dfc:	b8800003 	ldbu	r2,0(r23)
  812e00:	b821883a 	mov	r16,r23
  812e04:	11003fcc 	andi	r4,r2,255
  812e08:	a109883a 	add	r4,r20,r4
  812e0c:	21000003 	ldbu	r4,0(r4)
  812e10:	203eaa26 	beq	r4,zero,8128bc <__alt_data_end+0xff8128bc>
  812e14:	84000044 	addi	r16,r16,1
  812e18:	80800003 	ldbu	r2,0(r16)
  812e1c:	11003fcc 	andi	r4,r2,255
  812e20:	a109883a 	add	r4,r20,r4
  812e24:	21000003 	ldbu	r4,0(r4)
  812e28:	203ffa1e 	bne	r4,zero,812e14 <__alt_data_end+0xff812e14>
  812e2c:	003ea306 	br	8128bc <__alt_data_end+0xff8128bc>
  812e30:	d9001617 	ldw	r4,88(sp)
  812e34:	00800044 	movi	r2,1
  812e38:	1109c83a 	sub	r4,r2,r4
  812e3c:	d9001615 	stw	r4,88(sp)
  812e40:	d8801617 	ldw	r2,88(sp)
  812e44:	103f9626 	beq	r2,zero,812ca0 <__alt_data_end+0xff812ca0>
  812e48:	87000417 	ldw	fp,16(r16)
  812e4c:	d9800217 	ldw	r6,8(sp)
  812e50:	013fffc4 	movi	r4,-1
  812e54:	e727883a 	add	r19,fp,fp
  812e58:	9ce7883a 	add	r19,r19,r19
  812e5c:	3005883a 	mov	r2,r6
  812e60:	34cb883a 	add	r5,r6,r19
  812e64:	00000306 	br	812e74 <__gethex+0x6b8>
  812e68:	10000015 	stw	zero,0(r2)
  812e6c:	10800104 	addi	r2,r2,4
  812e70:	117f4c2e 	bgeu	r2,r5,812ba4 <__alt_data_end+0xff812ba4>
  812e74:	10c00017 	ldw	r3,0(r2)
  812e78:	193ffb26 	beq	r3,r4,812e68 <__alt_data_end+0xff812e68>
  812e7c:	18c00044 	addi	r3,r3,1
  812e80:	10c00015 	stw	r3,0(r2)
  812e84:	00800084 	movi	r2,2
  812e88:	88802b26 	beq	r17,r2,812f38 <__gethex+0x77c>
  812e8c:	948007cc 	andi	r18,r18,31
  812e90:	90002f1e 	bne	r18,zero,812f50 <__gethex+0x794>
  812e94:	04400844 	movi	r17,33
  812e98:	003f8206 	br	812ca4 <__alt_data_end+0xff812ca4>
  812e9c:	04c00044 	movi	r19,1
  812ea0:	003fc106 	br	812da8 <__alt_data_end+0xff812da8>
  812ea4:	d8c01617 	ldw	r3,88(sp)
  812ea8:	183ed226 	beq	r3,zero,8129f4 <__alt_data_end+0xff8129f4>
  812eac:	d8c00417 	ldw	r3,16(sp)
  812eb0:	d9001517 	ldw	r4,84(sp)
  812eb4:	18800015 	stw	r2,0(r3)
  812eb8:	d8c00217 	ldw	r3,8(sp)
  812ebc:	00800044 	movi	r2,1
  812ec0:	80800415 	stw	r2,16(r16)
  812ec4:	18800015 	stw	r2,0(r3)
  812ec8:	24000015 	stw	r16,0(r4)
  812ecc:	00801884 	movi	r2,98
  812ed0:	003efa06 	br	812abc <__alt_data_end+0xff812abc>
  812ed4:	9880008c 	andi	r2,r19,2
  812ed8:	103f7126 	beq	r2,zero,812ca0 <__alt_data_end+0xff812ca0>
  812edc:	d8c00217 	ldw	r3,8(sp)
  812ee0:	18800017 	ldw	r2,0(r3)
  812ee4:	9884b03a 	or	r2,r19,r2
  812ee8:	1080004c 	andi	r2,r2,1
  812eec:	103fd61e 	bne	r2,zero,812e48 <__alt_data_end+0xff812e48>
  812ef0:	003f6b06 	br	812ca0 <__alt_data_end+0xff812ca0>
  812ef4:	da800217 	ldw	r10,8(sp)
  812ef8:	0013883a 	mov	r9,zero
  812efc:	003e9f06 	br	81297c <__alt_data_end+0xff81297c>
  812f00:	04c00084 	movi	r19,2
  812f04:	003f8806 	br	812d28 <__alt_data_end+0xff812d28>
  812f08:	d9001617 	ldw	r4,88(sp)
  812f0c:	203fe726 	beq	r4,zero,812eac <__alt_data_end+0xff812eac>
  812f10:	003eb806 	br	8129f4 <__alt_data_end+0xff8129f4>
  812f14:	95feb71e 	bne	r18,r23,8129f4 <__alt_data_end+0xff8129f4>
  812f18:	1cbfe40e 	bge	r3,r18,812eac <__alt_data_end+0xff812eac>
  812f1c:	917fffc4 	addi	r5,r18,-1
  812f20:	8009883a 	mov	r4,r16
  812f24:	080a7a00 	call	80a7a0 <__any_on>
  812f28:	103eb226 	beq	r2,zero,8129f4 <__alt_data_end+0xff8129f4>
  812f2c:	d8c00017 	ldw	r3,0(sp)
  812f30:	18800117 	ldw	r2,4(r3)
  812f34:	003fdd06 	br	812eac <__alt_data_end+0xff812eac>
  812f38:	d8c00017 	ldw	r3,0(sp)
  812f3c:	18800017 	ldw	r2,0(r3)
  812f40:	10bfffc4 	addi	r2,r2,-1
  812f44:	90801c26 	beq	r18,r2,812fb8 <__gethex+0x7fc>
  812f48:	04400884 	movi	r17,34
  812f4c:	003f5506 	br	812ca4 <__alt_data_end+0xff812ca4>
  812f50:	34c5883a 	add	r2,r6,r19
  812f54:	113fff17 	ldw	r4,-4(r2)
  812f58:	0809b240 	call	809b24 <__hi0bits>
  812f5c:	00c00804 	movi	r3,32
  812f60:	1ca5c83a 	sub	r18,r3,r18
  812f64:	14bfcb0e 	bge	r2,r18,812e94 <__alt_data_end+0xff812e94>
  812f68:	003f1c06 	br	812bdc <__alt_data_end+0xff812bdc>
  812f6c:	81400117 	ldw	r5,4(r16)
  812f70:	d9000117 	ldw	r4,4(sp)
  812f74:	29400044 	addi	r5,r5,1
  812f78:	08098300 	call	809830 <_Balloc>
  812f7c:	81800417 	ldw	r6,16(r16)
  812f80:	81400304 	addi	r5,r16,12
  812f84:	11000304 	addi	r4,r2,12
  812f88:	31800084 	addi	r6,r6,2
  812f8c:	318d883a 	add	r6,r6,r6
  812f90:	318d883a 	add	r6,r6,r6
  812f94:	1029883a 	mov	r20,r2
  812f98:	080958c0 	call	80958c <memcpy>
  812f9c:	d9000117 	ldw	r4,4(sp)
  812fa0:	800b883a 	mov	r5,r16
  812fa4:	a021883a 	mov	r16,r20
  812fa8:	08098d80 	call	8098d8 <_Bfree>
  812fac:	a0c00417 	ldw	r3,16(r20)
  812fb0:	a1800504 	addi	r6,r20,20
  812fb4:	003efe06 	br	812bb0 <__alt_data_end+0xff812bb0>
  812fb8:	9005d17a 	srai	r2,r18,5
  812fbc:	944007cc 	andi	r17,r18,31
  812fc0:	1085883a 	add	r2,r2,r2
  812fc4:	1085883a 	add	r2,r2,r2
  812fc8:	3087883a 	add	r3,r6,r2
  812fcc:	00800044 	movi	r2,1
  812fd0:	1462983a 	sll	r17,r2,r17
  812fd4:	18800017 	ldw	r2,0(r3)
  812fd8:	8884703a 	and	r2,r17,r2
  812fdc:	1022c03a 	cmpne	r17,r2,zero
  812fe0:	00800884 	movi	r2,34
  812fe4:	1463c83a 	sub	r17,r2,r17
  812fe8:	003f2e06 	br	812ca4 <__alt_data_end+0xff812ca4>

00812fec <__hexnan>:
  812fec:	defff904 	addi	sp,sp,-28
  812ff0:	dc800215 	stw	r18,8(sp)
  812ff4:	2c800017 	ldw	r18,0(r5)
  812ff8:	dfc00615 	stw	ra,24(sp)
  812ffc:	dd400515 	stw	r21,20(sp)
  813000:	901fd17a 	srai	r15,r18,5
  813004:	dd000415 	stw	r20,16(sp)
  813008:	dcc00315 	stw	r19,12(sp)
  81300c:	7bdf883a 	add	r15,r15,r15
  813010:	7bdf883a 	add	r15,r15,r15
  813014:	dc400115 	stw	r17,4(sp)
  813018:	dc000015 	stw	r16,0(sp)
  81301c:	948007cc 	andi	r18,r18,31
  813020:	33df883a 	add	r15,r6,r15
  813024:	90000126 	beq	r18,zero,81302c <__hexnan+0x40>
  813028:	7bc00104 	addi	r15,r15,4
  81302c:	22000017 	ldw	r8,0(r4)
  813030:	7affff04 	addi	r11,r15,-4
  813034:	038020b4 	movhi	r14,130
  813038:	783fff15 	stw	zero,-4(r15)
  81303c:	581b883a 	mov	r13,r11
  813040:	580b883a 	mov	r5,r11
  813044:	000f883a 	mov	r7,zero
  813048:	003f883a 	mov	ra,zero
  81304c:	0019883a 	mov	r12,zero
  813050:	73b29d84 	addi	r14,r14,-13706
  813054:	04400204 	movi	r17,8
  813058:	04000804 	movi	r16,32
  81305c:	04c001c4 	movi	r19,7
  813060:	42000044 	addi	r8,r8,1
  813064:	40c00003 	ldbu	r3,0(r8)
  813068:	18001d26 	beq	r3,zero,8130e0 <__hexnan+0xf4>
  81306c:	70c5883a 	add	r2,r14,r3
  813070:	10800003 	ldbu	r2,0(r2)
  813074:	12403fcc 	andi	r9,r2,255
  813078:	4800301e 	bne	r9,zero,81313c <__hexnan+0x150>
  81307c:	80c04236 	bltu	r16,r3,813188 <__hexnan+0x19c>
  813080:	fb3ff70e 	bge	ra,r12,813060 <__alt_data_end+0xff813060>
  813084:	2b40112e 	bgeu	r5,r13,8130cc <__hexnan+0xe0>
  813088:	99c01016 	blt	r19,r7,8130cc <__hexnan+0xe0>
  81308c:	89e9c83a 	sub	r20,r17,r7
  813090:	a529883a 	add	r20,r20,r20
  813094:	2a800017 	ldw	r10,0(r5)
  813098:	a529883a 	add	r20,r20,r20
  81309c:	852bc83a 	sub	r21,r16,r20
  8130a0:	28c00104 	addi	r3,r5,4
  8130a4:	2805883a 	mov	r2,r5
  8130a8:	19c00017 	ldw	r7,0(r3)
  8130ac:	10800104 	addi	r2,r2,4
  8130b0:	18c00104 	addi	r3,r3,4
  8130b4:	3d52983a 	sll	r9,r7,r21
  8130b8:	4a92b03a 	or	r9,r9,r10
  8130bc:	3d14d83a 	srl	r10,r7,r20
  8130c0:	127fff15 	stw	r9,-4(r2)
  8130c4:	1abfff15 	stw	r10,-4(r3)
  8130c8:	137ff736 	bltu	r2,r13,8130a8 <__alt_data_end+0xff8130a8>
  8130cc:	31402836 	bltu	r6,r5,813170 <__hexnan+0x184>
  8130d0:	42000044 	addi	r8,r8,1
  8130d4:	40c00003 	ldbu	r3,0(r8)
  8130d8:	01c00204 	movi	r7,8
  8130dc:	183fe31e 	bne	r3,zero,81306c <__alt_data_end+0xff81306c>
  8130e0:	60002b26 	beq	r12,zero,813190 <__hexnan+0x1a4>
  8130e4:	2b40022e 	bgeu	r5,r13,8130f0 <__hexnan+0x104>
  8130e8:	008001c4 	movi	r2,7
  8130ec:	11c0430e 	bge	r2,r7,8131fc <__hexnan+0x210>
  8130f0:	3140312e 	bgeu	r6,r5,8131b8 <__hexnan+0x1cc>
  8130f4:	3007883a 	mov	r3,r6
  8130f8:	29000017 	ldw	r4,0(r5)
  8130fc:	18800104 	addi	r2,r3,4
  813100:	29400104 	addi	r5,r5,4
  813104:	19000015 	stw	r4,0(r3)
  813108:	1007883a 	mov	r3,r2
  81310c:	597ffa2e 	bgeu	r11,r5,8130f8 <__alt_data_end+0xff8130f8>
  813110:	10000015 	stw	zero,0(r2)
  813114:	10800104 	addi	r2,r2,4
  813118:	58bffd2e 	bgeu	r11,r2,813110 <__alt_data_end+0xff813110>
  81311c:	78bfff17 	ldw	r2,-4(r15)
  813120:	1000041e 	bne	r2,zero,813134 <__hexnan+0x148>
  813124:	32c02d26 	beq	r6,r11,8131dc <__hexnan+0x1f0>
  813128:	5affff04 	addi	r11,r11,-4
  81312c:	58800017 	ldw	r2,0(r11)
  813130:	103ffc26 	beq	r2,zero,813124 <__alt_data_end+0xff813124>
  813134:	00800144 	movi	r2,5
  813138:	00001606 	br	813194 <__hexnan+0x1a8>
  81313c:	39c00044 	addi	r7,r7,1
  813140:	63000044 	addi	r12,r12,1
  813144:	89c0040e 	bge	r17,r7,813158 <__hexnan+0x16c>
  813148:	317fc52e 	bgeu	r6,r5,813060 <__alt_data_end+0xff813060>
  81314c:	283fff15 	stw	zero,-4(r5)
  813150:	01c00044 	movi	r7,1
  813154:	297fff04 	addi	r5,r5,-4
  813158:	28c00017 	ldw	r3,0(r5)
  81315c:	108003cc 	andi	r2,r2,15
  813160:	1806913a 	slli	r3,r3,4
  813164:	1884b03a 	or	r2,r3,r2
  813168:	28800015 	stw	r2,0(r5)
  81316c:	003fbc06 	br	813060 <__alt_data_end+0xff813060>
  813170:	2b7fff04 	addi	r13,r5,-4
  813174:	283fff15 	stw	zero,-4(r5)
  813178:	603f883a 	mov	ra,r12
  81317c:	680b883a 	mov	r5,r13
  813180:	000f883a 	mov	r7,zero
  813184:	003fb606 	br	813060 <__alt_data_end+0xff813060>
  813188:	00800a44 	movi	r2,41
  81318c:	18801726 	beq	r3,r2,8131ec <__hexnan+0x200>
  813190:	00800104 	movi	r2,4
  813194:	dfc00617 	ldw	ra,24(sp)
  813198:	dd400517 	ldw	r21,20(sp)
  81319c:	dd000417 	ldw	r20,16(sp)
  8131a0:	dcc00317 	ldw	r19,12(sp)
  8131a4:	dc800217 	ldw	r18,8(sp)
  8131a8:	dc400117 	ldw	r17,4(sp)
  8131ac:	dc000017 	ldw	r16,0(sp)
  8131b0:	dec00704 	addi	sp,sp,28
  8131b4:	f800283a 	ret
  8131b8:	903fd826 	beq	r18,zero,81311c <__alt_data_end+0xff81311c>
  8131bc:	00c00804 	movi	r3,32
  8131c0:	1ca5c83a 	sub	r18,r3,r18
  8131c4:	00ffffc4 	movi	r3,-1
  8131c8:	78bfff17 	ldw	r2,-4(r15)
  8131cc:	1c86d83a 	srl	r3,r3,r18
  8131d0:	1884703a 	and	r2,r3,r2
  8131d4:	78bfff15 	stw	r2,-4(r15)
  8131d8:	003fd106 	br	813120 <__alt_data_end+0xff813120>
  8131dc:	00800044 	movi	r2,1
  8131e0:	58800015 	stw	r2,0(r11)
  8131e4:	00800144 	movi	r2,5
  8131e8:	003fea06 	br	813194 <__alt_data_end+0xff813194>
  8131ec:	42000044 	addi	r8,r8,1
  8131f0:	22000015 	stw	r8,0(r4)
  8131f4:	603fbb1e 	bne	r12,zero,8130e4 <__alt_data_end+0xff8130e4>
  8131f8:	003fe506 	br	813190 <__alt_data_end+0xff813190>
  8131fc:	02400204 	movi	r9,8
  813200:	49d3c83a 	sub	r9,r9,r7
  813204:	4a53883a 	add	r9,r9,r9
  813208:	2a000017 	ldw	r8,0(r5)
  81320c:	4a53883a 	add	r9,r9,r9
  813210:	02800804 	movi	r10,32
  813214:	5255c83a 	sub	r10,r10,r9
  813218:	28c00104 	addi	r3,r5,4
  81321c:	2805883a 	mov	r2,r5
  813220:	19c00017 	ldw	r7,0(r3)
  813224:	10800104 	addi	r2,r2,4
  813228:	18c00104 	addi	r3,r3,4
  81322c:	3a88983a 	sll	r4,r7,r10
  813230:	2208b03a 	or	r4,r4,r8
  813234:	3a50d83a 	srl	r8,r7,r9
  813238:	113fff15 	stw	r4,-4(r2)
  81323c:	1a3fff15 	stw	r8,-4(r3)
  813240:	137ff736 	bltu	r2,r13,813220 <__alt_data_end+0xff813220>
  813244:	003faa06 	br	8130f0 <__alt_data_end+0xff8130f0>

00813248 <strncmp>:
  813248:	30003126 	beq	r6,zero,813310 <strncmp+0xc8>
  81324c:	2144b03a 	or	r2,r4,r5
  813250:	108000cc 	andi	r2,r2,3
  813254:	10001e1e 	bne	r2,zero,8132d0 <strncmp+0x88>
  813258:	024000c4 	movi	r9,3
  81325c:	49801c2e 	bgeu	r9,r6,8132d0 <strncmp+0x88>
  813260:	20800017 	ldw	r2,0(r4)
  813264:	28c00017 	ldw	r3,0(r5)
  813268:	10c0191e 	bne	r2,r3,8132d0 <strncmp+0x88>
  81326c:	31bfff04 	addi	r6,r6,-4
  813270:	30002726 	beq	r6,zero,813310 <strncmp+0xc8>
  813274:	02ffbff4 	movhi	r11,65279
  813278:	5affbfc4 	addi	r11,r11,-257
  81327c:	0086303a 	nor	r3,zero,r2
  813280:	02a02074 	movhi	r10,32897
  813284:	12c5883a 	add	r2,r2,r11
  813288:	52a02004 	addi	r10,r10,-32640
  81328c:	10c4703a 	and	r2,r2,r3
  813290:	1284703a 	and	r2,r2,r10
  813294:	10000b26 	beq	r2,zero,8132c4 <strncmp+0x7c>
  813298:	00001d06 	br	813310 <strncmp+0xc8>
  81329c:	20c00017 	ldw	r3,0(r4)
  8132a0:	29c00017 	ldw	r7,0(r5)
  8132a4:	1ad1883a 	add	r8,r3,r11
  8132a8:	00c4303a 	nor	r2,zero,r3
  8132ac:	4084703a 	and	r2,r8,r2
  8132b0:	1284703a 	and	r2,r2,r10
  8132b4:	19c0061e 	bne	r3,r7,8132d0 <strncmp+0x88>
  8132b8:	31bfff04 	addi	r6,r6,-4
  8132bc:	30001426 	beq	r6,zero,813310 <strncmp+0xc8>
  8132c0:	1000131e 	bne	r2,zero,813310 <strncmp+0xc8>
  8132c4:	21000104 	addi	r4,r4,4
  8132c8:	29400104 	addi	r5,r5,4
  8132cc:	49bff336 	bltu	r9,r6,81329c <__alt_data_end+0xff81329c>
  8132d0:	28800007 	ldb	r2,0(r5)
  8132d4:	20c00007 	ldb	r3,0(r4)
  8132d8:	31bfffc4 	addi	r6,r6,-1
  8132dc:	10c0081e 	bne	r2,r3,813300 <strncmp+0xb8>
  8132e0:	30000b26 	beq	r6,zero,813310 <strncmp+0xc8>
  8132e4:	10000a26 	beq	r2,zero,813310 <strncmp+0xc8>
  8132e8:	21000044 	addi	r4,r4,1
  8132ec:	29400044 	addi	r5,r5,1
  8132f0:	20800007 	ldb	r2,0(r4)
  8132f4:	28c00007 	ldb	r3,0(r5)
  8132f8:	31bfffc4 	addi	r6,r6,-1
  8132fc:	10fff826 	beq	r2,r3,8132e0 <__alt_data_end+0xff8132e0>
  813300:	20800003 	ldbu	r2,0(r4)
  813304:	28c00003 	ldbu	r3,0(r5)
  813308:	10c5c83a 	sub	r2,r2,r3
  81330c:	f800283a 	ret
  813310:	0005883a 	mov	r2,zero
  813314:	f800283a 	ret

00813318 <__ssprint_r>:
  813318:	30800217 	ldw	r2,8(r6)
  81331c:	defff604 	addi	sp,sp,-40
  813320:	dc800215 	stw	r18,8(sp)
  813324:	dfc00915 	stw	ra,36(sp)
  813328:	df000815 	stw	fp,32(sp)
  81332c:	ddc00715 	stw	r23,28(sp)
  813330:	dd800615 	stw	r22,24(sp)
  813334:	dd400515 	stw	r21,20(sp)
  813338:	dd000415 	stw	r20,16(sp)
  81333c:	dcc00315 	stw	r19,12(sp)
  813340:	dc400115 	stw	r17,4(sp)
  813344:	dc000015 	stw	r16,0(sp)
  813348:	3025883a 	mov	r18,r6
  81334c:	10005826 	beq	r2,zero,8134b0 <__ssprint_r+0x198>
  813350:	2027883a 	mov	r19,r4
  813354:	35c00017 	ldw	r23,0(r6)
  813358:	29000017 	ldw	r4,0(r5)
  81335c:	28800217 	ldw	r2,8(r5)
  813360:	2823883a 	mov	r17,r5
  813364:	0039883a 	mov	fp,zero
  813368:	0021883a 	mov	r16,zero
  81336c:	80003926 	beq	r16,zero,813454 <__ssprint_r+0x13c>
  813370:	102b883a 	mov	r21,r2
  813374:	102d883a 	mov	r22,r2
  813378:	80803a36 	bltu	r16,r2,813464 <__ssprint_r+0x14c>
  81337c:	88c0030b 	ldhu	r3,12(r17)
  813380:	1881200c 	andi	r2,r3,1152
  813384:	10002626 	beq	r2,zero,813420 <__ssprint_r+0x108>
  813388:	88800517 	ldw	r2,20(r17)
  81338c:	89400417 	ldw	r5,16(r17)
  813390:	81800044 	addi	r6,r16,1
  813394:	108f883a 	add	r7,r2,r2
  813398:	3885883a 	add	r2,r7,r2
  81339c:	100ed7fa 	srli	r7,r2,31
  8133a0:	216dc83a 	sub	r22,r4,r5
  8133a4:	3589883a 	add	r4,r6,r22
  8133a8:	3885883a 	add	r2,r7,r2
  8133ac:	102bd07a 	srai	r21,r2,1
  8133b0:	a80d883a 	mov	r6,r21
  8133b4:	a900022e 	bgeu	r21,r4,8133c0 <__ssprint_r+0xa8>
  8133b8:	202b883a 	mov	r21,r4
  8133bc:	200d883a 	mov	r6,r4
  8133c0:	18c1000c 	andi	r3,r3,1024
  8133c4:	18002a26 	beq	r3,zero,813470 <__ssprint_r+0x158>
  8133c8:	300b883a 	mov	r5,r6
  8133cc:	9809883a 	mov	r4,r19
  8133d0:	08025b80 	call	8025b8 <_malloc_r>
  8133d4:	1029883a 	mov	r20,r2
  8133d8:	10002c26 	beq	r2,zero,81348c <__ssprint_r+0x174>
  8133dc:	89400417 	ldw	r5,16(r17)
  8133e0:	b00d883a 	mov	r6,r22
  8133e4:	1009883a 	mov	r4,r2
  8133e8:	080958c0 	call	80958c <memcpy>
  8133ec:	8880030b 	ldhu	r2,12(r17)
  8133f0:	00fedfc4 	movi	r3,-1153
  8133f4:	10c4703a 	and	r2,r2,r3
  8133f8:	10802014 	ori	r2,r2,128
  8133fc:	8880030d 	sth	r2,12(r17)
  813400:	a589883a 	add	r4,r20,r22
  813404:	adadc83a 	sub	r22,r21,r22
  813408:	8d400515 	stw	r21,20(r17)
  81340c:	8d800215 	stw	r22,8(r17)
  813410:	8d000415 	stw	r20,16(r17)
  813414:	89000015 	stw	r4,0(r17)
  813418:	802b883a 	mov	r21,r16
  81341c:	802d883a 	mov	r22,r16
  813420:	b00d883a 	mov	r6,r22
  813424:	e00b883a 	mov	r5,fp
  813428:	08096d40 	call	8096d4 <memmove>
  81342c:	88800217 	ldw	r2,8(r17)
  813430:	89000017 	ldw	r4,0(r17)
  813434:	90c00217 	ldw	r3,8(r18)
  813438:	1545c83a 	sub	r2,r2,r21
  81343c:	2589883a 	add	r4,r4,r22
  813440:	88800215 	stw	r2,8(r17)
  813444:	89000015 	stw	r4,0(r17)
  813448:	1c21c83a 	sub	r16,r3,r16
  81344c:	94000215 	stw	r16,8(r18)
  813450:	80001726 	beq	r16,zero,8134b0 <__ssprint_r+0x198>
  813454:	bf000017 	ldw	fp,0(r23)
  813458:	bc000117 	ldw	r16,4(r23)
  81345c:	bdc00204 	addi	r23,r23,8
  813460:	003fc206 	br	81336c <__alt_data_end+0xff81336c>
  813464:	802b883a 	mov	r21,r16
  813468:	802d883a 	mov	r22,r16
  81346c:	003fec06 	br	813420 <__alt_data_end+0xff813420>
  813470:	9809883a 	mov	r4,r19
  813474:	080a9f40 	call	80a9f4 <_realloc_r>
  813478:	1029883a 	mov	r20,r2
  81347c:	103fe01e 	bne	r2,zero,813400 <__alt_data_end+0xff813400>
  813480:	89400417 	ldw	r5,16(r17)
  813484:	9809883a 	mov	r4,r19
  813488:	08018900 	call	801890 <_free_r>
  81348c:	88c0030b 	ldhu	r3,12(r17)
  813490:	00800304 	movi	r2,12
  813494:	98800015 	stw	r2,0(r19)
  813498:	18c01014 	ori	r3,r3,64
  81349c:	88c0030d 	sth	r3,12(r17)
  8134a0:	00bfffc4 	movi	r2,-1
  8134a4:	90000215 	stw	zero,8(r18)
  8134a8:	90000115 	stw	zero,4(r18)
  8134ac:	00000206 	br	8134b8 <__ssprint_r+0x1a0>
  8134b0:	90000115 	stw	zero,4(r18)
  8134b4:	0005883a 	mov	r2,zero
  8134b8:	dfc00917 	ldw	ra,36(sp)
  8134bc:	df000817 	ldw	fp,32(sp)
  8134c0:	ddc00717 	ldw	r23,28(sp)
  8134c4:	dd800617 	ldw	r22,24(sp)
  8134c8:	dd400517 	ldw	r21,20(sp)
  8134cc:	dd000417 	ldw	r20,16(sp)
  8134d0:	dcc00317 	ldw	r19,12(sp)
  8134d4:	dc800217 	ldw	r18,8(sp)
  8134d8:	dc400117 	ldw	r17,4(sp)
  8134dc:	dc000017 	ldw	r16,0(sp)
  8134e0:	dec00a04 	addi	sp,sp,40
  8134e4:	f800283a 	ret

008134e8 <___svfiprintf_internal_r>:
  8134e8:	2880030b 	ldhu	r2,12(r5)
  8134ec:	deffc804 	addi	sp,sp,-224
  8134f0:	dcc03115 	stw	r19,196(sp)
  8134f4:	dfc03715 	stw	ra,220(sp)
  8134f8:	df003615 	stw	fp,216(sp)
  8134fc:	ddc03515 	stw	r23,212(sp)
  813500:	dd803415 	stw	r22,208(sp)
  813504:	dd403315 	stw	r21,204(sp)
  813508:	dd003215 	stw	r20,200(sp)
  81350c:	dc803015 	stw	r18,192(sp)
  813510:	dc402f15 	stw	r17,188(sp)
  813514:	dc002e15 	stw	r16,184(sp)
  813518:	d9402715 	stw	r5,156(sp)
  81351c:	d9002a15 	stw	r4,168(sp)
  813520:	1080200c 	andi	r2,r2,128
  813524:	d9c02315 	stw	r7,140(sp)
  813528:	3027883a 	mov	r19,r6
  81352c:	10000226 	beq	r2,zero,813538 <___svfiprintf_internal_r+0x50>
  813530:	28800417 	ldw	r2,16(r5)
  813534:	10041d26 	beq	r2,zero,8145ac <___svfiprintf_internal_r+0x10c4>
  813538:	dac01a04 	addi	r11,sp,104
  81353c:	dac01e15 	stw	r11,120(sp)
  813540:	d8801e17 	ldw	r2,120(sp)
  813544:	dac019c4 	addi	r11,sp,103
  813548:	dd402a17 	ldw	r21,168(sp)
  81354c:	ddc02717 	ldw	r23,156(sp)
  813550:	058020b4 	movhi	r22,130
  813554:	050020b4 	movhi	r20,130
  813558:	dac01f15 	stw	r11,124(sp)
  81355c:	12d7c83a 	sub	r11,r2,r11
  813560:	b5b2e184 	addi	r22,r22,-13434
  813564:	a532dd84 	addi	r20,r20,-13450
  813568:	dec01a15 	stw	sp,104(sp)
  81356c:	d8001c15 	stw	zero,112(sp)
  813570:	d8001b15 	stw	zero,108(sp)
  813574:	d811883a 	mov	r8,sp
  813578:	d8002915 	stw	zero,164(sp)
  81357c:	d8002515 	stw	zero,148(sp)
  813580:	dac02b15 	stw	r11,172(sp)
  813584:	98800007 	ldb	r2,0(r19)
  813588:	1002dd26 	beq	r2,zero,814100 <___svfiprintf_internal_r+0xc18>
  81358c:	00c00944 	movi	r3,37
  813590:	9823883a 	mov	r17,r19
  813594:	10c0021e 	bne	r2,r3,8135a0 <___svfiprintf_internal_r+0xb8>
  813598:	00001406 	br	8135ec <___svfiprintf_internal_r+0x104>
  81359c:	10c00326 	beq	r2,r3,8135ac <___svfiprintf_internal_r+0xc4>
  8135a0:	8c400044 	addi	r17,r17,1
  8135a4:	88800007 	ldb	r2,0(r17)
  8135a8:	103ffc1e 	bne	r2,zero,81359c <__alt_data_end+0xff81359c>
  8135ac:	8ce1c83a 	sub	r16,r17,r19
  8135b0:	80000e26 	beq	r16,zero,8135ec <___svfiprintf_internal_r+0x104>
  8135b4:	d8c01c17 	ldw	r3,112(sp)
  8135b8:	d8801b17 	ldw	r2,108(sp)
  8135bc:	44c00015 	stw	r19,0(r8)
  8135c0:	1c07883a 	add	r3,r3,r16
  8135c4:	10800044 	addi	r2,r2,1
  8135c8:	d8c01c15 	stw	r3,112(sp)
  8135cc:	44000115 	stw	r16,4(r8)
  8135d0:	d8801b15 	stw	r2,108(sp)
  8135d4:	00c001c4 	movi	r3,7
  8135d8:	18831e16 	blt	r3,r2,814254 <___svfiprintf_internal_r+0xd6c>
  8135dc:	42000204 	addi	r8,r8,8
  8135e0:	dac02517 	ldw	r11,148(sp)
  8135e4:	5c17883a 	add	r11,r11,r16
  8135e8:	dac02515 	stw	r11,148(sp)
  8135ec:	88800007 	ldb	r2,0(r17)
  8135f0:	1002c526 	beq	r2,zero,814108 <___svfiprintf_internal_r+0xc20>
  8135f4:	88c00047 	ldb	r3,1(r17)
  8135f8:	8cc00044 	addi	r19,r17,1
  8135fc:	d8001d85 	stb	zero,118(sp)
  813600:	0009883a 	mov	r4,zero
  813604:	000f883a 	mov	r7,zero
  813608:	043fffc4 	movi	r16,-1
  81360c:	d8002415 	stw	zero,144(sp)
  813610:	0025883a 	mov	r18,zero
  813614:	01401604 	movi	r5,88
  813618:	01800244 	movi	r6,9
  81361c:	02800a84 	movi	r10,42
  813620:	02401b04 	movi	r9,108
  813624:	9cc00044 	addi	r19,r19,1
  813628:	18bff804 	addi	r2,r3,-32
  81362c:	2881dd36 	bltu	r5,r2,813da4 <___svfiprintf_internal_r+0x8bc>
  813630:	100490ba 	slli	r2,r2,2
  813634:	02c02074 	movhi	r11,129
  813638:	5acd9204 	addi	r11,r11,13896
  81363c:	12c5883a 	add	r2,r2,r11
  813640:	10800017 	ldw	r2,0(r2)
  813644:	1000683a 	jmp	r2
  813648:	00813844 	movi	r2,1249
  81364c:	00813da4 	muli	r2,zero,1270
  813650:	00813da4 	muli	r2,zero,1270
  813654:	00813838 	rdprs	r2,zero,1248
  813658:	00813da4 	muli	r2,zero,1270
  81365c:	00813da4 	muli	r2,zero,1270
  813660:	00813da4 	muli	r2,zero,1270
  813664:	00813da4 	muli	r2,zero,1270
  813668:	00813da4 	muli	r2,zero,1270
  81366c:	00813da4 	muli	r2,zero,1270
  813670:	008137ac 	andhi	r2,zero,1246
  813674:	00813988 	cmpgei	r2,zero,1254
  813678:	00813da4 	muli	r2,zero,1270
  81367c:	008137d8 	cmpnei	r2,zero,1247
  813680:	00813dd8 	cmpnei	r2,zero,1271
  813684:	00813da4 	muli	r2,zero,1270
  813688:	00813dcc 	andi	r2,zero,1271
  81368c:	00813d6c 	andhi	r2,zero,1269
  813690:	00813d6c 	andhi	r2,zero,1269
  813694:	00813d6c 	andhi	r2,zero,1269
  813698:	00813d6c 	andhi	r2,zero,1269
  81369c:	00813d6c 	andhi	r2,zero,1269
  8136a0:	00813d6c 	andhi	r2,zero,1269
  8136a4:	00813d6c 	andhi	r2,zero,1269
  8136a8:	00813d6c 	andhi	r2,zero,1269
  8136ac:	00813d6c 	andhi	r2,zero,1269
  8136b0:	00813da4 	muli	r2,zero,1270
  8136b4:	00813da4 	muli	r2,zero,1270
  8136b8:	00813da4 	muli	r2,zero,1270
  8136bc:	00813da4 	muli	r2,zero,1270
  8136c0:	00813da4 	muli	r2,zero,1270
  8136c4:	00813da4 	muli	r2,zero,1270
  8136c8:	00813da4 	muli	r2,zero,1270
  8136cc:	00813da4 	muli	r2,zero,1270
  8136d0:	00813da4 	muli	r2,zero,1270
  8136d4:	00813da4 	muli	r2,zero,1270
  8136d8:	00813d08 	cmpgei	r2,zero,1268
  8136dc:	00813da4 	muli	r2,zero,1270
  8136e0:	00813da4 	muli	r2,zero,1270
  8136e4:	00813da4 	muli	r2,zero,1270
  8136e8:	00813da4 	muli	r2,zero,1270
  8136ec:	00813da4 	muli	r2,zero,1270
  8136f0:	00813da4 	muli	r2,zero,1270
  8136f4:	00813da4 	muli	r2,zero,1270
  8136f8:	00813da4 	muli	r2,zero,1270
  8136fc:	00813da4 	muli	r2,zero,1270
  813700:	00813da4 	muli	r2,zero,1270
  813704:	00813e80 	call	813e8 <__alt_mem_sdram_0-0x77ec18>
  813708:	00813da4 	muli	r2,zero,1270
  81370c:	00813da4 	muli	r2,zero,1270
  813710:	00813da4 	muli	r2,zero,1270
  813714:	00813da4 	muli	r2,zero,1270
  813718:	00813da4 	muli	r2,zero,1270
  81371c:	00813e18 	cmpnei	r2,zero,1272
  813720:	00813da4 	muli	r2,zero,1270
  813724:	00813da4 	muli	r2,zero,1270
  813728:	00813b4c 	andi	r2,zero,1261
  81372c:	00813da4 	muli	r2,zero,1270
  813730:	00813da4 	muli	r2,zero,1270
  813734:	00813da4 	muli	r2,zero,1270
  813738:	00813da4 	muli	r2,zero,1270
  81373c:	00813da4 	muli	r2,zero,1270
  813740:	00813da4 	muli	r2,zero,1270
  813744:	00813da4 	muli	r2,zero,1270
  813748:	00813da4 	muli	r2,zero,1270
  81374c:	00813da4 	muli	r2,zero,1270
  813750:	00813da4 	muli	r2,zero,1270
  813754:	00813a3c 	xorhi	r2,zero,1256
  813758:	00813be8 	cmpgeui	r2,zero,1263
  81375c:	00813da4 	muli	r2,zero,1270
  813760:	00813da4 	muli	r2,zero,1270
  813764:	00813da4 	muli	r2,zero,1270
  813768:	00813bdc 	xori	r2,zero,1263
  81376c:	00813be8 	cmpgeui	r2,zero,1263
  813770:	00813da4 	muli	r2,zero,1270
  813774:	00813da4 	muli	r2,zero,1270
  813778:	00813bcc 	andi	r2,zero,1263
  81377c:	00813da4 	muli	r2,zero,1270
  813780:	00813b90 	cmplti	r2,zero,1262
  813784:	00813998 	cmpnei	r2,zero,1254
  813788:	008137e4 	muli	r2,zero,1247
  81378c:	00813cfc 	xorhi	r2,zero,1267
  813790:	00813da4 	muli	r2,zero,1270
  813794:	00813cb0 	cmpltui	r2,zero,1266
  813798:	00813da4 	muli	r2,zero,1270
  81379c:	00813908 	cmpgei	r2,zero,1252
  8137a0:	00813da4 	muli	r2,zero,1270
  8137a4:	00813da4 	muli	r2,zero,1270
  8137a8:	00813864 	muli	r2,zero,1249
  8137ac:	dac02317 	ldw	r11,140(sp)
  8137b0:	5ac00017 	ldw	r11,0(r11)
  8137b4:	dac02415 	stw	r11,144(sp)
  8137b8:	dac02317 	ldw	r11,140(sp)
  8137bc:	58800104 	addi	r2,r11,4
  8137c0:	dac02417 	ldw	r11,144(sp)
  8137c4:	5802e90e 	bge	r11,zero,81436c <___svfiprintf_internal_r+0xe84>
  8137c8:	dac02417 	ldw	r11,144(sp)
  8137cc:	d8802315 	stw	r2,140(sp)
  8137d0:	02d7c83a 	sub	r11,zero,r11
  8137d4:	dac02415 	stw	r11,144(sp)
  8137d8:	94800114 	ori	r18,r18,4
  8137dc:	98c00007 	ldb	r3,0(r19)
  8137e0:	003f9006 	br	813624 <__alt_data_end+0xff813624>
  8137e4:	00800c04 	movi	r2,48
  8137e8:	dac02317 	ldw	r11,140(sp)
  8137ec:	d8801d05 	stb	r2,116(sp)
  8137f0:	00801e04 	movi	r2,120
  8137f4:	d8801d45 	stb	r2,117(sp)
  8137f8:	d8001d85 	stb	zero,118(sp)
  8137fc:	58c00104 	addi	r3,r11,4
  813800:	5f000017 	ldw	fp,0(r11)
  813804:	0013883a 	mov	r9,zero
  813808:	90800094 	ori	r2,r18,2
  81380c:	80032b16 	blt	r16,zero,8144bc <___svfiprintf_internal_r+0xfd4>
  813810:	00bfdfc4 	movi	r2,-129
  813814:	90a4703a 	and	r18,r18,r2
  813818:	d8c02315 	stw	r3,140(sp)
  81381c:	94800094 	ori	r18,r18,2
  813820:	e002dc26 	beq	fp,zero,814394 <___svfiprintf_internal_r+0xeac>
  813824:	010020b4 	movhi	r4,130
  813828:	21316d04 	addi	r4,r4,-14924
  81382c:	0015883a 	mov	r10,zero
  813830:	d9002915 	stw	r4,164(sp)
  813834:	00002306 	br	8138c4 <___svfiprintf_internal_r+0x3dc>
  813838:	94800054 	ori	r18,r18,1
  81383c:	98c00007 	ldb	r3,0(r19)
  813840:	003f7806 	br	813624 <__alt_data_end+0xff813624>
  813844:	38803fcc 	andi	r2,r7,255
  813848:	1080201c 	xori	r2,r2,128
  81384c:	10bfe004 	addi	r2,r2,-128
  813850:	1002f31e 	bne	r2,zero,814420 <___svfiprintf_internal_r+0xf38>
  813854:	01000044 	movi	r4,1
  813858:	01c00804 	movi	r7,32
  81385c:	98c00007 	ldb	r3,0(r19)
  813860:	003f7006 	br	813624 <__alt_data_end+0xff813624>
  813864:	21003fcc 	andi	r4,r4,255
  813868:	2003aa1e 	bne	r4,zero,814714 <___svfiprintf_internal_r+0x122c>
  81386c:	008020b4 	movhi	r2,130
  813870:	10b16d04 	addi	r2,r2,-14924
  813874:	d8802915 	stw	r2,164(sp)
  813878:	9080080c 	andi	r2,r18,32
  81387c:	1000ba26 	beq	r2,zero,813b68 <___svfiprintf_internal_r+0x680>
  813880:	dac02317 	ldw	r11,140(sp)
  813884:	5f000017 	ldw	fp,0(r11)
  813888:	5a400117 	ldw	r9,4(r11)
  81388c:	5ac00204 	addi	r11,r11,8
  813890:	dac02315 	stw	r11,140(sp)
  813894:	9080004c 	andi	r2,r18,1
  813898:	10029026 	beq	r2,zero,8142dc <___svfiprintf_internal_r+0xdf4>
  81389c:	e244b03a 	or	r2,fp,r9
  8138a0:	1002d41e 	bne	r2,zero,8143f4 <___svfiprintf_internal_r+0xf0c>
  8138a4:	d8001d85 	stb	zero,118(sp)
  8138a8:	80030b16 	blt	r16,zero,8144d8 <___svfiprintf_internal_r+0xff0>
  8138ac:	00bfdfc4 	movi	r2,-129
  8138b0:	90a4703a 	and	r18,r18,r2
  8138b4:	0015883a 	mov	r10,zero
  8138b8:	80002426 	beq	r16,zero,81394c <___svfiprintf_internal_r+0x464>
  8138bc:	0039883a 	mov	fp,zero
  8138c0:	0013883a 	mov	r9,zero
  8138c4:	d9002917 	ldw	r4,164(sp)
  8138c8:	dc401a04 	addi	r17,sp,104
  8138cc:	e08003cc 	andi	r2,fp,15
  8138d0:	4806973a 	slli	r3,r9,28
  8138d4:	2085883a 	add	r2,r4,r2
  8138d8:	e038d13a 	srli	fp,fp,4
  8138dc:	10800003 	ldbu	r2,0(r2)
  8138e0:	4812d13a 	srli	r9,r9,4
  8138e4:	8c7fffc4 	addi	r17,r17,-1
  8138e8:	1f38b03a 	or	fp,r3,fp
  8138ec:	88800005 	stb	r2,0(r17)
  8138f0:	e244b03a 	or	r2,fp,r9
  8138f4:	103ff51e 	bne	r2,zero,8138cc <__alt_data_end+0xff8138cc>
  8138f8:	dac01e17 	ldw	r11,120(sp)
  8138fc:	5c57c83a 	sub	r11,r11,r17
  813900:	dac02115 	stw	r11,132(sp)
  813904:	00001406 	br	813958 <___svfiprintf_internal_r+0x470>
  813908:	21003fcc 	andi	r4,r4,255
  81390c:	2003741e 	bne	r4,zero,8146e0 <___svfiprintf_internal_r+0x11f8>
  813910:	9080080c 	andi	r2,r18,32
  813914:	10014526 	beq	r2,zero,813e2c <___svfiprintf_internal_r+0x944>
  813918:	dac02317 	ldw	r11,140(sp)
  81391c:	d8001d85 	stb	zero,118(sp)
  813920:	58c00204 	addi	r3,r11,8
  813924:	5f000017 	ldw	fp,0(r11)
  813928:	5a400117 	ldw	r9,4(r11)
  81392c:	8002d916 	blt	r16,zero,814494 <___svfiprintf_internal_r+0xfac>
  813930:	013fdfc4 	movi	r4,-129
  813934:	e244b03a 	or	r2,fp,r9
  813938:	d8c02315 	stw	r3,140(sp)
  81393c:	9124703a 	and	r18,r18,r4
  813940:	0015883a 	mov	r10,zero
  813944:	1000b91e 	bne	r2,zero,813c2c <___svfiprintf_internal_r+0x744>
  813948:	8002e61e 	bne	r16,zero,8144e4 <___svfiprintf_internal_r+0xffc>
  81394c:	0021883a 	mov	r16,zero
  813950:	d8002115 	stw	zero,132(sp)
  813954:	dc401a04 	addi	r17,sp,104
  813958:	d8c02117 	ldw	r3,132(sp)
  81395c:	dc002015 	stw	r16,128(sp)
  813960:	80c0010e 	bge	r16,r3,813968 <___svfiprintf_internal_r+0x480>
  813964:	d8c02015 	stw	r3,128(sp)
  813968:	52803fcc 	andi	r10,r10,255
  81396c:	5280201c 	xori	r10,r10,128
  813970:	52bfe004 	addi	r10,r10,-128
  813974:	50003c26 	beq	r10,zero,813a68 <___svfiprintf_internal_r+0x580>
  813978:	dac02017 	ldw	r11,128(sp)
  81397c:	5ac00044 	addi	r11,r11,1
  813980:	dac02015 	stw	r11,128(sp)
  813984:	00003806 	br	813a68 <___svfiprintf_internal_r+0x580>
  813988:	01000044 	movi	r4,1
  81398c:	01c00ac4 	movi	r7,43
  813990:	98c00007 	ldb	r3,0(r19)
  813994:	003f2306 	br	813624 <__alt_data_end+0xff813624>
  813998:	21003fcc 	andi	r4,r4,255
  81399c:	2003481e 	bne	r4,zero,8146c0 <___svfiprintf_internal_r+0x11d8>
  8139a0:	9080080c 	andi	r2,r18,32
  8139a4:	10013b26 	beq	r2,zero,813e94 <___svfiprintf_internal_r+0x9ac>
  8139a8:	dac02317 	ldw	r11,140(sp)
  8139ac:	d8001d85 	stb	zero,118(sp)
  8139b0:	58800204 	addi	r2,r11,8
  8139b4:	5f000017 	ldw	fp,0(r11)
  8139b8:	5a400117 	ldw	r9,4(r11)
  8139bc:	8002a816 	blt	r16,zero,814460 <___svfiprintf_internal_r+0xf78>
  8139c0:	013fdfc4 	movi	r4,-129
  8139c4:	e246b03a 	or	r3,fp,r9
  8139c8:	d8802315 	stw	r2,140(sp)
  8139cc:	9124703a 	and	r18,r18,r4
  8139d0:	18013c26 	beq	r3,zero,813ec4 <___svfiprintf_internal_r+0x9dc>
  8139d4:	0015883a 	mov	r10,zero
  8139d8:	dc401a04 	addi	r17,sp,104
  8139dc:	e006d0fa 	srli	r3,fp,3
  8139e0:	4808977a 	slli	r4,r9,29
  8139e4:	4812d0fa 	srli	r9,r9,3
  8139e8:	e70001cc 	andi	fp,fp,7
  8139ec:	e0800c04 	addi	r2,fp,48
  8139f0:	8c7fffc4 	addi	r17,r17,-1
  8139f4:	20f8b03a 	or	fp,r4,r3
  8139f8:	88800005 	stb	r2,0(r17)
  8139fc:	e246b03a 	or	r3,fp,r9
  813a00:	183ff61e 	bne	r3,zero,8139dc <__alt_data_end+0xff8139dc>
  813a04:	90c0004c 	andi	r3,r18,1
  813a08:	1800a526 	beq	r3,zero,813ca0 <___svfiprintf_internal_r+0x7b8>
  813a0c:	10803fcc 	andi	r2,r2,255
  813a10:	1080201c 	xori	r2,r2,128
  813a14:	10bfe004 	addi	r2,r2,-128
  813a18:	00c00c04 	movi	r3,48
  813a1c:	10ffb626 	beq	r2,r3,8138f8 <__alt_data_end+0xff8138f8>
  813a20:	88ffffc5 	stb	r3,-1(r17)
  813a24:	d8c01e17 	ldw	r3,120(sp)
  813a28:	88bfffc4 	addi	r2,r17,-1
  813a2c:	1023883a 	mov	r17,r2
  813a30:	1887c83a 	sub	r3,r3,r2
  813a34:	d8c02115 	stw	r3,132(sp)
  813a38:	003fc706 	br	813958 <__alt_data_end+0xff813958>
  813a3c:	dac02317 	ldw	r11,140(sp)
  813a40:	00c00044 	movi	r3,1
  813a44:	d8c02015 	stw	r3,128(sp)
  813a48:	58800017 	ldw	r2,0(r11)
  813a4c:	5ac00104 	addi	r11,r11,4
  813a50:	d8001d85 	stb	zero,118(sp)
  813a54:	d8801005 	stb	r2,64(sp)
  813a58:	dac02315 	stw	r11,140(sp)
  813a5c:	d8c02115 	stw	r3,132(sp)
  813a60:	dc401004 	addi	r17,sp,64
  813a64:	0021883a 	mov	r16,zero
  813a68:	90c0008c 	andi	r3,r18,2
  813a6c:	d8c02215 	stw	r3,136(sp)
  813a70:	18000326 	beq	r3,zero,813a80 <___svfiprintf_internal_r+0x598>
  813a74:	dac02017 	ldw	r11,128(sp)
  813a78:	5ac00084 	addi	r11,r11,2
  813a7c:	dac02015 	stw	r11,128(sp)
  813a80:	90c0210c 	andi	r3,r18,132
  813a84:	d8c02615 	stw	r3,152(sp)
  813a88:	1801131e 	bne	r3,zero,813ed8 <___svfiprintf_internal_r+0x9f0>
  813a8c:	dac02417 	ldw	r11,144(sp)
  813a90:	d8c02017 	ldw	r3,128(sp)
  813a94:	58f9c83a 	sub	fp,r11,r3
  813a98:	07010f0e 	bge	zero,fp,813ed8 <___svfiprintf_internal_r+0x9f0>
  813a9c:	02400404 	movi	r9,16
  813aa0:	d8c01c17 	ldw	r3,112(sp)
  813aa4:	d8801b17 	ldw	r2,108(sp)
  813aa8:	4f02d60e 	bge	r9,fp,814604 <___svfiprintf_internal_r+0x111c>
  813aac:	014020b4 	movhi	r5,130
  813ab0:	2972e184 	addi	r5,r5,-13434
  813ab4:	d9402815 	stw	r5,160(sp)
  813ab8:	028001c4 	movi	r10,7
  813abc:	00000306 	br	813acc <___svfiprintf_internal_r+0x5e4>
  813ac0:	e73ffc04 	addi	fp,fp,-16
  813ac4:	42000204 	addi	r8,r8,8
  813ac8:	4f00150e 	bge	r9,fp,813b20 <___svfiprintf_internal_r+0x638>
  813acc:	18c00404 	addi	r3,r3,16
  813ad0:	10800044 	addi	r2,r2,1
  813ad4:	45800015 	stw	r22,0(r8)
  813ad8:	42400115 	stw	r9,4(r8)
  813adc:	d8c01c15 	stw	r3,112(sp)
  813ae0:	d8801b15 	stw	r2,108(sp)
  813ae4:	50bff60e 	bge	r10,r2,813ac0 <__alt_data_end+0xff813ac0>
  813ae8:	d9801a04 	addi	r6,sp,104
  813aec:	b80b883a 	mov	r5,r23
  813af0:	a809883a 	mov	r4,r21
  813af4:	da402c15 	stw	r9,176(sp)
  813af8:	da802d15 	stw	r10,180(sp)
  813afc:	08133180 	call	813318 <__ssprint_r>
  813b00:	da402c17 	ldw	r9,176(sp)
  813b04:	da802d17 	ldw	r10,180(sp)
  813b08:	1001851e 	bne	r2,zero,814120 <___svfiprintf_internal_r+0xc38>
  813b0c:	e73ffc04 	addi	fp,fp,-16
  813b10:	d8c01c17 	ldw	r3,112(sp)
  813b14:	d8801b17 	ldw	r2,108(sp)
  813b18:	d811883a 	mov	r8,sp
  813b1c:	4f3feb16 	blt	r9,fp,813acc <__alt_data_end+0xff813acc>
  813b20:	dac02817 	ldw	r11,160(sp)
  813b24:	e0c7883a 	add	r3,fp,r3
  813b28:	10800044 	addi	r2,r2,1
  813b2c:	42c00015 	stw	r11,0(r8)
  813b30:	47000115 	stw	fp,4(r8)
  813b34:	d8c01c15 	stw	r3,112(sp)
  813b38:	d8801b15 	stw	r2,108(sp)
  813b3c:	010001c4 	movi	r4,7
  813b40:	2081ee16 	blt	r4,r2,8142fc <___svfiprintf_internal_r+0xe14>
  813b44:	42000204 	addi	r8,r8,8
  813b48:	0000e506 	br	813ee0 <___svfiprintf_internal_r+0x9f8>
  813b4c:	21003fcc 	andi	r4,r4,255
  813b50:	2002dd1e 	bne	r4,zero,8146c8 <___svfiprintf_internal_r+0x11e0>
  813b54:	008020b4 	movhi	r2,130
  813b58:	10b16804 	addi	r2,r2,-14944
  813b5c:	d8802915 	stw	r2,164(sp)
  813b60:	9080080c 	andi	r2,r18,32
  813b64:	103f461e 	bne	r2,zero,813880 <__alt_data_end+0xff813880>
  813b68:	9080040c 	andi	r2,r18,16
  813b6c:	10022e1e 	bne	r2,zero,814428 <___svfiprintf_internal_r+0xf40>
  813b70:	9080100c 	andi	r2,r18,64
  813b74:	dac02317 	ldw	r11,140(sp)
  813b78:	10027326 	beq	r2,zero,814548 <___svfiprintf_internal_r+0x1060>
  813b7c:	5f00000b 	ldhu	fp,0(r11)
  813b80:	5ac00104 	addi	r11,r11,4
  813b84:	0013883a 	mov	r9,zero
  813b88:	dac02315 	stw	r11,140(sp)
  813b8c:	003f4106 	br	813894 <__alt_data_end+0xff813894>
  813b90:	21003fcc 	andi	r4,r4,255
  813b94:	2002e11e 	bne	r4,zero,81471c <___svfiprintf_internal_r+0x1234>
  813b98:	9080080c 	andi	r2,r18,32
  813b9c:	1002011e 	bne	r2,zero,8143a4 <___svfiprintf_internal_r+0xebc>
  813ba0:	9080040c 	andi	r2,r18,16
  813ba4:	10023e1e 	bne	r2,zero,8144a0 <___svfiprintf_internal_r+0xfb8>
  813ba8:	9480100c 	andi	r18,r18,64
  813bac:	90023c26 	beq	r18,zero,8144a0 <___svfiprintf_internal_r+0xfb8>
  813bb0:	dac02317 	ldw	r11,140(sp)
  813bb4:	58800017 	ldw	r2,0(r11)
  813bb8:	5ac00104 	addi	r11,r11,4
  813bbc:	dac02315 	stw	r11,140(sp)
  813bc0:	dac02517 	ldw	r11,148(sp)
  813bc4:	12c0000d 	sth	r11,0(r2)
  813bc8:	003e6e06 	br	813584 <__alt_data_end+0xff813584>
  813bcc:	98c00007 	ldb	r3,0(r19)
  813bd0:	1a422926 	beq	r3,r9,814478 <___svfiprintf_internal_r+0xf90>
  813bd4:	94800414 	ori	r18,r18,16
  813bd8:	003e9206 	br	813624 <__alt_data_end+0xff813624>
  813bdc:	94801014 	ori	r18,r18,64
  813be0:	98c00007 	ldb	r3,0(r19)
  813be4:	003e8f06 	br	813624 <__alt_data_end+0xff813624>
  813be8:	21003fcc 	andi	r4,r4,255
  813bec:	2002c71e 	bne	r4,zero,81470c <___svfiprintf_internal_r+0x1224>
  813bf0:	9080080c 	andi	r2,r18,32
  813bf4:	10004926 	beq	r2,zero,813d1c <___svfiprintf_internal_r+0x834>
  813bf8:	dac02317 	ldw	r11,140(sp)
  813bfc:	58800117 	ldw	r2,4(r11)
  813c00:	5f000017 	ldw	fp,0(r11)
  813c04:	5ac00204 	addi	r11,r11,8
  813c08:	dac02315 	stw	r11,140(sp)
  813c0c:	1013883a 	mov	r9,r2
  813c10:	10004b16 	blt	r2,zero,813d40 <___svfiprintf_internal_r+0x858>
  813c14:	da801d83 	ldbu	r10,118(sp)
  813c18:	8001cb16 	blt	r16,zero,814348 <___svfiprintf_internal_r+0xe60>
  813c1c:	00ffdfc4 	movi	r3,-129
  813c20:	e244b03a 	or	r2,fp,r9
  813c24:	90e4703a 	and	r18,r18,r3
  813c28:	103f4726 	beq	r2,zero,813948 <__alt_data_end+0xff813948>
  813c2c:	48008c26 	beq	r9,zero,813e60 <___svfiprintf_internal_r+0x978>
  813c30:	dc802015 	stw	r18,128(sp)
  813c34:	dc002115 	stw	r16,132(sp)
  813c38:	dc401a04 	addi	r17,sp,104
  813c3c:	e021883a 	mov	r16,fp
  813c40:	da002215 	stw	r8,136(sp)
  813c44:	5039883a 	mov	fp,r10
  813c48:	4825883a 	mov	r18,r9
  813c4c:	8009883a 	mov	r4,r16
  813c50:	900b883a 	mov	r5,r18
  813c54:	01800284 	movi	r6,10
  813c58:	000f883a 	mov	r7,zero
  813c5c:	0814f580 	call	814f58 <__umoddi3>
  813c60:	10800c04 	addi	r2,r2,48
  813c64:	8c7fffc4 	addi	r17,r17,-1
  813c68:	8009883a 	mov	r4,r16
  813c6c:	900b883a 	mov	r5,r18
  813c70:	88800005 	stb	r2,0(r17)
  813c74:	01800284 	movi	r6,10
  813c78:	000f883a 	mov	r7,zero
  813c7c:	08149e00 	call	8149e0 <__udivdi3>
  813c80:	1021883a 	mov	r16,r2
  813c84:	10c4b03a 	or	r2,r2,r3
  813c88:	1825883a 	mov	r18,r3
  813c8c:	103fef1e 	bne	r2,zero,813c4c <__alt_data_end+0xff813c4c>
  813c90:	dc802017 	ldw	r18,128(sp)
  813c94:	dc002117 	ldw	r16,132(sp)
  813c98:	da002217 	ldw	r8,136(sp)
  813c9c:	e015883a 	mov	r10,fp
  813ca0:	d8c01e17 	ldw	r3,120(sp)
  813ca4:	1c47c83a 	sub	r3,r3,r17
  813ca8:	d8c02115 	stw	r3,132(sp)
  813cac:	003f2a06 	br	813958 <__alt_data_end+0xff813958>
  813cb0:	dac02317 	ldw	r11,140(sp)
  813cb4:	d8001d85 	stb	zero,118(sp)
  813cb8:	5c400017 	ldw	r17,0(r11)
  813cbc:	5f000104 	addi	fp,r11,4
  813cc0:	88022f26 	beq	r17,zero,814580 <___svfiprintf_internal_r+0x1098>
  813cc4:	80022516 	blt	r16,zero,81455c <___svfiprintf_internal_r+0x1074>
  813cc8:	800d883a 	mov	r6,r16
  813ccc:	000b883a 	mov	r5,zero
  813cd0:	8809883a 	mov	r4,r17
  813cd4:	da002c15 	stw	r8,176(sp)
  813cd8:	08094a80 	call	8094a8 <memchr>
  813cdc:	da002c17 	ldw	r8,176(sp)
  813ce0:	10026426 	beq	r2,zero,814674 <___svfiprintf_internal_r+0x118c>
  813ce4:	1445c83a 	sub	r2,r2,r17
  813ce8:	d8802115 	stw	r2,132(sp)
  813cec:	da801d83 	ldbu	r10,118(sp)
  813cf0:	df002315 	stw	fp,140(sp)
  813cf4:	0021883a 	mov	r16,zero
  813cf8:	003f1706 	br	813958 <__alt_data_end+0xff813958>
  813cfc:	94800814 	ori	r18,r18,32
  813d00:	98c00007 	ldb	r3,0(r19)
  813d04:	003e4706 	br	813624 <__alt_data_end+0xff813624>
  813d08:	21003fcc 	andi	r4,r4,255
  813d0c:	2002701e 	bne	r4,zero,8146d0 <___svfiprintf_internal_r+0x11e8>
  813d10:	94800414 	ori	r18,r18,16
  813d14:	9080080c 	andi	r2,r18,32
  813d18:	103fb71e 	bne	r2,zero,813bf8 <__alt_data_end+0xff813bf8>
  813d1c:	9080040c 	andi	r2,r18,16
  813d20:	1001ab26 	beq	r2,zero,8143d0 <___svfiprintf_internal_r+0xee8>
  813d24:	dac02317 	ldw	r11,140(sp)
  813d28:	5f000017 	ldw	fp,0(r11)
  813d2c:	5ac00104 	addi	r11,r11,4
  813d30:	dac02315 	stw	r11,140(sp)
  813d34:	e013d7fa 	srai	r9,fp,31
  813d38:	4805883a 	mov	r2,r9
  813d3c:	103fb50e 	bge	r2,zero,813c14 <__alt_data_end+0xff813c14>
  813d40:	0739c83a 	sub	fp,zero,fp
  813d44:	02800b44 	movi	r10,45
  813d48:	e004c03a 	cmpne	r2,fp,zero
  813d4c:	0253c83a 	sub	r9,zero,r9
  813d50:	da801d85 	stb	r10,118(sp)
  813d54:	4893c83a 	sub	r9,r9,r2
  813d58:	80023016 	blt	r16,zero,81461c <___svfiprintf_internal_r+0x1134>
  813d5c:	00bfdfc4 	movi	r2,-129
  813d60:	90a4703a 	and	r18,r18,r2
  813d64:	483fb21e 	bne	r9,zero,813c30 <__alt_data_end+0xff813c30>
  813d68:	00003d06 	br	813e60 <___svfiprintf_internal_r+0x978>
  813d6c:	9817883a 	mov	r11,r19
  813d70:	d8002415 	stw	zero,144(sp)
  813d74:	18bff404 	addi	r2,r3,-48
  813d78:	0019883a 	mov	r12,zero
  813d7c:	58c00007 	ldb	r3,0(r11)
  813d80:	630002a4 	muli	r12,r12,10
  813d84:	9cc00044 	addi	r19,r19,1
  813d88:	9817883a 	mov	r11,r19
  813d8c:	1319883a 	add	r12,r2,r12
  813d90:	18bff404 	addi	r2,r3,-48
  813d94:	30bff92e 	bgeu	r6,r2,813d7c <__alt_data_end+0xff813d7c>
  813d98:	db002415 	stw	r12,144(sp)
  813d9c:	18bff804 	addi	r2,r3,-32
  813da0:	28be232e 	bgeu	r5,r2,813630 <__alt_data_end+0xff813630>
  813da4:	21003fcc 	andi	r4,r4,255
  813da8:	20024b1e 	bne	r4,zero,8146d8 <___svfiprintf_internal_r+0x11f0>
  813dac:	1800d626 	beq	r3,zero,814108 <___svfiprintf_internal_r+0xc20>
  813db0:	02c00044 	movi	r11,1
  813db4:	dac02015 	stw	r11,128(sp)
  813db8:	d8c01005 	stb	r3,64(sp)
  813dbc:	d8001d85 	stb	zero,118(sp)
  813dc0:	dac02115 	stw	r11,132(sp)
  813dc4:	dc401004 	addi	r17,sp,64
  813dc8:	003f2606 	br	813a64 <__alt_data_end+0xff813a64>
  813dcc:	94802014 	ori	r18,r18,128
  813dd0:	98c00007 	ldb	r3,0(r19)
  813dd4:	003e1306 	br	813624 <__alt_data_end+0xff813624>
  813dd8:	98c00007 	ldb	r3,0(r19)
  813ddc:	9ac00044 	addi	r11,r19,1
  813de0:	1a822b26 	beq	r3,r10,814690 <___svfiprintf_internal_r+0x11a8>
  813de4:	18bff404 	addi	r2,r3,-48
  813de8:	0021883a 	mov	r16,zero
  813dec:	30821e36 	bltu	r6,r2,814668 <___svfiprintf_internal_r+0x1180>
  813df0:	58c00007 	ldb	r3,0(r11)
  813df4:	840002a4 	muli	r16,r16,10
  813df8:	5cc00044 	addi	r19,r11,1
  813dfc:	9817883a 	mov	r11,r19
  813e00:	80a1883a 	add	r16,r16,r2
  813e04:	18bff404 	addi	r2,r3,-48
  813e08:	30bff92e 	bgeu	r6,r2,813df0 <__alt_data_end+0xff813df0>
  813e0c:	803e060e 	bge	r16,zero,813628 <__alt_data_end+0xff813628>
  813e10:	043fffc4 	movi	r16,-1
  813e14:	003e0406 	br	813628 <__alt_data_end+0xff813628>
  813e18:	21003fcc 	andi	r4,r4,255
  813e1c:	2002371e 	bne	r4,zero,8146fc <___svfiprintf_internal_r+0x1214>
  813e20:	94800414 	ori	r18,r18,16
  813e24:	9080080c 	andi	r2,r18,32
  813e28:	103ebb1e 	bne	r2,zero,813918 <__alt_data_end+0xff813918>
  813e2c:	9080040c 	andi	r2,r18,16
  813e30:	10013b26 	beq	r2,zero,814320 <___svfiprintf_internal_r+0xe38>
  813e34:	dac02317 	ldw	r11,140(sp)
  813e38:	d8001d85 	stb	zero,118(sp)
  813e3c:	0013883a 	mov	r9,zero
  813e40:	58800104 	addi	r2,r11,4
  813e44:	5f000017 	ldw	fp,0(r11)
  813e48:	80013d16 	blt	r16,zero,814340 <___svfiprintf_internal_r+0xe58>
  813e4c:	00ffdfc4 	movi	r3,-129
  813e50:	d8802315 	stw	r2,140(sp)
  813e54:	90e4703a 	and	r18,r18,r3
  813e58:	0015883a 	mov	r10,zero
  813e5c:	e03eba26 	beq	fp,zero,813948 <__alt_data_end+0xff813948>
  813e60:	00800244 	movi	r2,9
  813e64:	173f7236 	bltu	r2,fp,813c30 <__alt_data_end+0xff813c30>
  813e68:	dac02b17 	ldw	r11,172(sp)
  813e6c:	e7000c04 	addi	fp,fp,48
  813e70:	df0019c5 	stb	fp,103(sp)
  813e74:	dac02115 	stw	r11,132(sp)
  813e78:	dc4019c4 	addi	r17,sp,103
  813e7c:	003eb606 	br	813958 <__alt_data_end+0xff813958>
  813e80:	21003fcc 	andi	r4,r4,255
  813e84:	20021f1e 	bne	r4,zero,814704 <___svfiprintf_internal_r+0x121c>
  813e88:	94800414 	ori	r18,r18,16
  813e8c:	9080080c 	andi	r2,r18,32
  813e90:	103ec51e 	bne	r2,zero,8139a8 <__alt_data_end+0xff8139a8>
  813e94:	9080040c 	andi	r2,r18,16
  813e98:	10016926 	beq	r2,zero,814440 <___svfiprintf_internal_r+0xf58>
  813e9c:	dac02317 	ldw	r11,140(sp)
  813ea0:	d8001d85 	stb	zero,118(sp)
  813ea4:	0013883a 	mov	r9,zero
  813ea8:	58800104 	addi	r2,r11,4
  813eac:	5f000017 	ldw	fp,0(r11)
  813eb0:	80016b16 	blt	r16,zero,814460 <___svfiprintf_internal_r+0xf78>
  813eb4:	00ffdfc4 	movi	r3,-129
  813eb8:	d8802315 	stw	r2,140(sp)
  813ebc:	90e4703a 	and	r18,r18,r3
  813ec0:	e03ec41e 	bne	fp,zero,8139d4 <__alt_data_end+0xff8139d4>
  813ec4:	0015883a 	mov	r10,zero
  813ec8:	8001c226 	beq	r16,zero,8145d4 <___svfiprintf_internal_r+0x10ec>
  813ecc:	0039883a 	mov	fp,zero
  813ed0:	0013883a 	mov	r9,zero
  813ed4:	003ec006 	br	8139d8 <__alt_data_end+0xff8139d8>
  813ed8:	d8c01c17 	ldw	r3,112(sp)
  813edc:	d8801b17 	ldw	r2,108(sp)
  813ee0:	d9001d87 	ldb	r4,118(sp)
  813ee4:	20000b26 	beq	r4,zero,813f14 <___svfiprintf_internal_r+0xa2c>
  813ee8:	d9001d84 	addi	r4,sp,118
  813eec:	18c00044 	addi	r3,r3,1
  813ef0:	10800044 	addi	r2,r2,1
  813ef4:	41000015 	stw	r4,0(r8)
  813ef8:	01000044 	movi	r4,1
  813efc:	41000115 	stw	r4,4(r8)
  813f00:	d8c01c15 	stw	r3,112(sp)
  813f04:	d8801b15 	stw	r2,108(sp)
  813f08:	010001c4 	movi	r4,7
  813f0c:	2080e116 	blt	r4,r2,814294 <___svfiprintf_internal_r+0xdac>
  813f10:	42000204 	addi	r8,r8,8
  813f14:	dac02217 	ldw	r11,136(sp)
  813f18:	58000b26 	beq	r11,zero,813f48 <___svfiprintf_internal_r+0xa60>
  813f1c:	d9001d04 	addi	r4,sp,116
  813f20:	18c00084 	addi	r3,r3,2
  813f24:	10800044 	addi	r2,r2,1
  813f28:	41000015 	stw	r4,0(r8)
  813f2c:	01000084 	movi	r4,2
  813f30:	41000115 	stw	r4,4(r8)
  813f34:	d8c01c15 	stw	r3,112(sp)
  813f38:	d8801b15 	stw	r2,108(sp)
  813f3c:	010001c4 	movi	r4,7
  813f40:	2080dd16 	blt	r4,r2,8142b8 <___svfiprintf_internal_r+0xdd0>
  813f44:	42000204 	addi	r8,r8,8
  813f48:	dac02617 	ldw	r11,152(sp)
  813f4c:	01002004 	movi	r4,128
  813f50:	59008426 	beq	r11,r4,814164 <___svfiprintf_internal_r+0xc7c>
  813f54:	dac02117 	ldw	r11,132(sp)
  813f58:	82e1c83a 	sub	r16,r16,r11
  813f5c:	0400270e 	bge	zero,r16,813ffc <___svfiprintf_internal_r+0xb14>
  813f60:	01c00404 	movi	r7,16
  813f64:	3c016a0e 	bge	r7,r16,814510 <___svfiprintf_internal_r+0x1028>
  813f68:	014020b4 	movhi	r5,130
  813f6c:	2972dd84 	addi	r5,r5,-13450
  813f70:	d9402215 	stw	r5,136(sp)
  813f74:	070001c4 	movi	fp,7
  813f78:	00000306 	br	813f88 <___svfiprintf_internal_r+0xaa0>
  813f7c:	843ffc04 	addi	r16,r16,-16
  813f80:	42000204 	addi	r8,r8,8
  813f84:	3c00130e 	bge	r7,r16,813fd4 <___svfiprintf_internal_r+0xaec>
  813f88:	18c00404 	addi	r3,r3,16
  813f8c:	10800044 	addi	r2,r2,1
  813f90:	45000015 	stw	r20,0(r8)
  813f94:	41c00115 	stw	r7,4(r8)
  813f98:	d8c01c15 	stw	r3,112(sp)
  813f9c:	d8801b15 	stw	r2,108(sp)
  813fa0:	e0bff60e 	bge	fp,r2,813f7c <__alt_data_end+0xff813f7c>
  813fa4:	d9801a04 	addi	r6,sp,104
  813fa8:	b80b883a 	mov	r5,r23
  813fac:	a809883a 	mov	r4,r21
  813fb0:	d9c02c15 	stw	r7,176(sp)
  813fb4:	08133180 	call	813318 <__ssprint_r>
  813fb8:	d9c02c17 	ldw	r7,176(sp)
  813fbc:	1000581e 	bne	r2,zero,814120 <___svfiprintf_internal_r+0xc38>
  813fc0:	843ffc04 	addi	r16,r16,-16
  813fc4:	d8c01c17 	ldw	r3,112(sp)
  813fc8:	d8801b17 	ldw	r2,108(sp)
  813fcc:	d811883a 	mov	r8,sp
  813fd0:	3c3fed16 	blt	r7,r16,813f88 <__alt_data_end+0xff813f88>
  813fd4:	dac02217 	ldw	r11,136(sp)
  813fd8:	1c07883a 	add	r3,r3,r16
  813fdc:	10800044 	addi	r2,r2,1
  813fe0:	42c00015 	stw	r11,0(r8)
  813fe4:	44000115 	stw	r16,4(r8)
  813fe8:	d8c01c15 	stw	r3,112(sp)
  813fec:	d8801b15 	stw	r2,108(sp)
  813ff0:	010001c4 	movi	r4,7
  813ff4:	20809e16 	blt	r4,r2,814270 <___svfiprintf_internal_r+0xd88>
  813ff8:	42000204 	addi	r8,r8,8
  813ffc:	dac02117 	ldw	r11,132(sp)
  814000:	10800044 	addi	r2,r2,1
  814004:	44400015 	stw	r17,0(r8)
  814008:	58c7883a 	add	r3,r11,r3
  81400c:	42c00115 	stw	r11,4(r8)
  814010:	d8c01c15 	stw	r3,112(sp)
  814014:	d8801b15 	stw	r2,108(sp)
  814018:	010001c4 	movi	r4,7
  81401c:	20807f16 	blt	r4,r2,81421c <___svfiprintf_internal_r+0xd34>
  814020:	42000204 	addi	r8,r8,8
  814024:	9480010c 	andi	r18,r18,4
  814028:	90002926 	beq	r18,zero,8140d0 <___svfiprintf_internal_r+0xbe8>
  81402c:	dac02417 	ldw	r11,144(sp)
  814030:	d8802017 	ldw	r2,128(sp)
  814034:	58a1c83a 	sub	r16,r11,r2
  814038:	0400250e 	bge	zero,r16,8140d0 <___svfiprintf_internal_r+0xbe8>
  81403c:	04400404 	movi	r17,16
  814040:	d8801b17 	ldw	r2,108(sp)
  814044:	8c017c0e 	bge	r17,r16,814638 <___svfiprintf_internal_r+0x1150>
  814048:	014020b4 	movhi	r5,130
  81404c:	2972e184 	addi	r5,r5,-13434
  814050:	d9402815 	stw	r5,160(sp)
  814054:	048001c4 	movi	r18,7
  814058:	00000306 	br	814068 <___svfiprintf_internal_r+0xb80>
  81405c:	843ffc04 	addi	r16,r16,-16
  814060:	42000204 	addi	r8,r8,8
  814064:	8c00110e 	bge	r17,r16,8140ac <___svfiprintf_internal_r+0xbc4>
  814068:	18c00404 	addi	r3,r3,16
  81406c:	10800044 	addi	r2,r2,1
  814070:	45800015 	stw	r22,0(r8)
  814074:	44400115 	stw	r17,4(r8)
  814078:	d8c01c15 	stw	r3,112(sp)
  81407c:	d8801b15 	stw	r2,108(sp)
  814080:	90bff60e 	bge	r18,r2,81405c <__alt_data_end+0xff81405c>
  814084:	d9801a04 	addi	r6,sp,104
  814088:	b80b883a 	mov	r5,r23
  81408c:	a809883a 	mov	r4,r21
  814090:	08133180 	call	813318 <__ssprint_r>
  814094:	1000221e 	bne	r2,zero,814120 <___svfiprintf_internal_r+0xc38>
  814098:	843ffc04 	addi	r16,r16,-16
  81409c:	d8c01c17 	ldw	r3,112(sp)
  8140a0:	d8801b17 	ldw	r2,108(sp)
  8140a4:	d811883a 	mov	r8,sp
  8140a8:	8c3fef16 	blt	r17,r16,814068 <__alt_data_end+0xff814068>
  8140ac:	dac02817 	ldw	r11,160(sp)
  8140b0:	1c07883a 	add	r3,r3,r16
  8140b4:	10800044 	addi	r2,r2,1
  8140b8:	42c00015 	stw	r11,0(r8)
  8140bc:	44000115 	stw	r16,4(r8)
  8140c0:	d8c01c15 	stw	r3,112(sp)
  8140c4:	d8801b15 	stw	r2,108(sp)
  8140c8:	010001c4 	movi	r4,7
  8140cc:	2080aa16 	blt	r4,r2,814378 <___svfiprintf_internal_r+0xe90>
  8140d0:	d8802417 	ldw	r2,144(sp)
  8140d4:	dac02017 	ldw	r11,128(sp)
  8140d8:	12c0010e 	bge	r2,r11,8140e0 <___svfiprintf_internal_r+0xbf8>
  8140dc:	5805883a 	mov	r2,r11
  8140e0:	dac02517 	ldw	r11,148(sp)
  8140e4:	5897883a 	add	r11,r11,r2
  8140e8:	dac02515 	stw	r11,148(sp)
  8140ec:	1800531e 	bne	r3,zero,81423c <___svfiprintf_internal_r+0xd54>
  8140f0:	98800007 	ldb	r2,0(r19)
  8140f4:	d8001b15 	stw	zero,108(sp)
  8140f8:	d811883a 	mov	r8,sp
  8140fc:	103d231e 	bne	r2,zero,81358c <__alt_data_end+0xff81358c>
  814100:	9823883a 	mov	r17,r19
  814104:	003d3906 	br	8135ec <__alt_data_end+0xff8135ec>
  814108:	d8801c17 	ldw	r2,112(sp)
  81410c:	10000426 	beq	r2,zero,814120 <___svfiprintf_internal_r+0xc38>
  814110:	d9402717 	ldw	r5,156(sp)
  814114:	d9002a17 	ldw	r4,168(sp)
  814118:	d9801a04 	addi	r6,sp,104
  81411c:	08133180 	call	813318 <__ssprint_r>
  814120:	dac02717 	ldw	r11,156(sp)
  814124:	d8802517 	ldw	r2,148(sp)
  814128:	58c0030b 	ldhu	r3,12(r11)
  81412c:	18c0100c 	andi	r3,r3,64
  814130:	1801381e 	bne	r3,zero,814614 <___svfiprintf_internal_r+0x112c>
  814134:	dfc03717 	ldw	ra,220(sp)
  814138:	df003617 	ldw	fp,216(sp)
  81413c:	ddc03517 	ldw	r23,212(sp)
  814140:	dd803417 	ldw	r22,208(sp)
  814144:	dd403317 	ldw	r21,204(sp)
  814148:	dd003217 	ldw	r20,200(sp)
  81414c:	dcc03117 	ldw	r19,196(sp)
  814150:	dc803017 	ldw	r18,192(sp)
  814154:	dc402f17 	ldw	r17,188(sp)
  814158:	dc002e17 	ldw	r16,184(sp)
  81415c:	dec03804 	addi	sp,sp,224
  814160:	f800283a 	ret
  814164:	dac02417 	ldw	r11,144(sp)
  814168:	d9002017 	ldw	r4,128(sp)
  81416c:	5939c83a 	sub	fp,r11,r4
  814170:	073f780e 	bge	zero,fp,813f54 <__alt_data_end+0xff813f54>
  814174:	02400404 	movi	r9,16
  814178:	4f01370e 	bge	r9,fp,814658 <___svfiprintf_internal_r+0x1170>
  81417c:	02c020b4 	movhi	r11,130
  814180:	5af2dd84 	addi	r11,r11,-13450
  814184:	dac02215 	stw	r11,136(sp)
  814188:	028001c4 	movi	r10,7
  81418c:	00000306 	br	81419c <___svfiprintf_internal_r+0xcb4>
  814190:	e73ffc04 	addi	fp,fp,-16
  814194:	42000204 	addi	r8,r8,8
  814198:	4f00150e 	bge	r9,fp,8141f0 <___svfiprintf_internal_r+0xd08>
  81419c:	18c00404 	addi	r3,r3,16
  8141a0:	10800044 	addi	r2,r2,1
  8141a4:	45000015 	stw	r20,0(r8)
  8141a8:	42400115 	stw	r9,4(r8)
  8141ac:	d8c01c15 	stw	r3,112(sp)
  8141b0:	d8801b15 	stw	r2,108(sp)
  8141b4:	50bff60e 	bge	r10,r2,814190 <__alt_data_end+0xff814190>
  8141b8:	d9801a04 	addi	r6,sp,104
  8141bc:	b80b883a 	mov	r5,r23
  8141c0:	a809883a 	mov	r4,r21
  8141c4:	da402c15 	stw	r9,176(sp)
  8141c8:	da802d15 	stw	r10,180(sp)
  8141cc:	08133180 	call	813318 <__ssprint_r>
  8141d0:	da402c17 	ldw	r9,176(sp)
  8141d4:	da802d17 	ldw	r10,180(sp)
  8141d8:	103fd11e 	bne	r2,zero,814120 <__alt_data_end+0xff814120>
  8141dc:	e73ffc04 	addi	fp,fp,-16
  8141e0:	d8c01c17 	ldw	r3,112(sp)
  8141e4:	d8801b17 	ldw	r2,108(sp)
  8141e8:	d811883a 	mov	r8,sp
  8141ec:	4f3feb16 	blt	r9,fp,81419c <__alt_data_end+0xff81419c>
  8141f0:	dac02217 	ldw	r11,136(sp)
  8141f4:	1f07883a 	add	r3,r3,fp
  8141f8:	10800044 	addi	r2,r2,1
  8141fc:	42c00015 	stw	r11,0(r8)
  814200:	47000115 	stw	fp,4(r8)
  814204:	d8c01c15 	stw	r3,112(sp)
  814208:	d8801b15 	stw	r2,108(sp)
  81420c:	010001c4 	movi	r4,7
  814210:	2080b616 	blt	r4,r2,8144ec <___svfiprintf_internal_r+0x1004>
  814214:	42000204 	addi	r8,r8,8
  814218:	003f4e06 	br	813f54 <__alt_data_end+0xff813f54>
  81421c:	d9801a04 	addi	r6,sp,104
  814220:	b80b883a 	mov	r5,r23
  814224:	a809883a 	mov	r4,r21
  814228:	08133180 	call	813318 <__ssprint_r>
  81422c:	103fbc1e 	bne	r2,zero,814120 <__alt_data_end+0xff814120>
  814230:	d8c01c17 	ldw	r3,112(sp)
  814234:	d811883a 	mov	r8,sp
  814238:	003f7a06 	br	814024 <__alt_data_end+0xff814024>
  81423c:	d9801a04 	addi	r6,sp,104
  814240:	b80b883a 	mov	r5,r23
  814244:	a809883a 	mov	r4,r21
  814248:	08133180 	call	813318 <__ssprint_r>
  81424c:	103fa826 	beq	r2,zero,8140f0 <__alt_data_end+0xff8140f0>
  814250:	003fb306 	br	814120 <__alt_data_end+0xff814120>
  814254:	d9801a04 	addi	r6,sp,104
  814258:	b80b883a 	mov	r5,r23
  81425c:	a809883a 	mov	r4,r21
  814260:	08133180 	call	813318 <__ssprint_r>
  814264:	103fae1e 	bne	r2,zero,814120 <__alt_data_end+0xff814120>
  814268:	d811883a 	mov	r8,sp
  81426c:	003cdc06 	br	8135e0 <__alt_data_end+0xff8135e0>
  814270:	d9801a04 	addi	r6,sp,104
  814274:	b80b883a 	mov	r5,r23
  814278:	a809883a 	mov	r4,r21
  81427c:	08133180 	call	813318 <__ssprint_r>
  814280:	103fa71e 	bne	r2,zero,814120 <__alt_data_end+0xff814120>
  814284:	d8c01c17 	ldw	r3,112(sp)
  814288:	d8801b17 	ldw	r2,108(sp)
  81428c:	d811883a 	mov	r8,sp
  814290:	003f5a06 	br	813ffc <__alt_data_end+0xff813ffc>
  814294:	d9801a04 	addi	r6,sp,104
  814298:	b80b883a 	mov	r5,r23
  81429c:	a809883a 	mov	r4,r21
  8142a0:	08133180 	call	813318 <__ssprint_r>
  8142a4:	103f9e1e 	bne	r2,zero,814120 <__alt_data_end+0xff814120>
  8142a8:	d8c01c17 	ldw	r3,112(sp)
  8142ac:	d8801b17 	ldw	r2,108(sp)
  8142b0:	d811883a 	mov	r8,sp
  8142b4:	003f1706 	br	813f14 <__alt_data_end+0xff813f14>
  8142b8:	d9801a04 	addi	r6,sp,104
  8142bc:	b80b883a 	mov	r5,r23
  8142c0:	a809883a 	mov	r4,r21
  8142c4:	08133180 	call	813318 <__ssprint_r>
  8142c8:	103f951e 	bne	r2,zero,814120 <__alt_data_end+0xff814120>
  8142cc:	d8c01c17 	ldw	r3,112(sp)
  8142d0:	d8801b17 	ldw	r2,108(sp)
  8142d4:	d811883a 	mov	r8,sp
  8142d8:	003f1b06 	br	813f48 <__alt_data_end+0xff813f48>
  8142dc:	d8001d85 	stb	zero,118(sp)
  8142e0:	80007b16 	blt	r16,zero,8144d0 <___svfiprintf_internal_r+0xfe8>
  8142e4:	00ffdfc4 	movi	r3,-129
  8142e8:	e244b03a 	or	r2,fp,r9
  8142ec:	90e4703a 	and	r18,r18,r3
  8142f0:	103d7026 	beq	r2,zero,8138b4 <__alt_data_end+0xff8138b4>
  8142f4:	0015883a 	mov	r10,zero
  8142f8:	003d7206 	br	8138c4 <__alt_data_end+0xff8138c4>
  8142fc:	d9801a04 	addi	r6,sp,104
  814300:	b80b883a 	mov	r5,r23
  814304:	a809883a 	mov	r4,r21
  814308:	08133180 	call	813318 <__ssprint_r>
  81430c:	103f841e 	bne	r2,zero,814120 <__alt_data_end+0xff814120>
  814310:	d8c01c17 	ldw	r3,112(sp)
  814314:	d8801b17 	ldw	r2,108(sp)
  814318:	d811883a 	mov	r8,sp
  81431c:	003ef006 	br	813ee0 <__alt_data_end+0xff813ee0>
  814320:	9080100c 	andi	r2,r18,64
  814324:	d8001d85 	stb	zero,118(sp)
  814328:	dac02317 	ldw	r11,140(sp)
  81432c:	10008126 	beq	r2,zero,814534 <___svfiprintf_internal_r+0x104c>
  814330:	58800104 	addi	r2,r11,4
  814334:	5f00000b 	ldhu	fp,0(r11)
  814338:	0013883a 	mov	r9,zero
  81433c:	803ec30e 	bge	r16,zero,813e4c <__alt_data_end+0xff813e4c>
  814340:	d8802315 	stw	r2,140(sp)
  814344:	0015883a 	mov	r10,zero
  814348:	e244b03a 	or	r2,fp,r9
  81434c:	103e371e 	bne	r2,zero,813c2c <__alt_data_end+0xff813c2c>
  814350:	00800044 	movi	r2,1
  814354:	10803fcc 	andi	r2,r2,255
  814358:	00c00044 	movi	r3,1
  81435c:	10c06126 	beq	r2,r3,8144e4 <___svfiprintf_internal_r+0xffc>
  814360:	00c00084 	movi	r3,2
  814364:	10fd5526 	beq	r2,r3,8138bc <__alt_data_end+0xff8138bc>
  814368:	003ed806 	br	813ecc <__alt_data_end+0xff813ecc>
  81436c:	d8802315 	stw	r2,140(sp)
  814370:	98c00007 	ldb	r3,0(r19)
  814374:	003cab06 	br	813624 <__alt_data_end+0xff813624>
  814378:	d9801a04 	addi	r6,sp,104
  81437c:	b80b883a 	mov	r5,r23
  814380:	a809883a 	mov	r4,r21
  814384:	08133180 	call	813318 <__ssprint_r>
  814388:	103f651e 	bne	r2,zero,814120 <__alt_data_end+0xff814120>
  81438c:	d8c01c17 	ldw	r3,112(sp)
  814390:	003f4f06 	br	8140d0 <__alt_data_end+0xff8140d0>
  814394:	008020b4 	movhi	r2,130
  814398:	10b16d04 	addi	r2,r2,-14924
  81439c:	d8802915 	stw	r2,164(sp)
  8143a0:	003d4406 	br	8138b4 <__alt_data_end+0xff8138b4>
  8143a4:	dac02317 	ldw	r11,140(sp)
  8143a8:	58800017 	ldw	r2,0(r11)
  8143ac:	dac02517 	ldw	r11,148(sp)
  8143b0:	5807d7fa 	srai	r3,r11,31
  8143b4:	dac02317 	ldw	r11,140(sp)
  8143b8:	10c00115 	stw	r3,4(r2)
  8143bc:	5ac00104 	addi	r11,r11,4
  8143c0:	dac02315 	stw	r11,140(sp)
  8143c4:	dac02517 	ldw	r11,148(sp)
  8143c8:	12c00015 	stw	r11,0(r2)
  8143cc:	003c6d06 	br	813584 <__alt_data_end+0xff813584>
  8143d0:	9080100c 	andi	r2,r18,64
  8143d4:	dac02317 	ldw	r11,140(sp)
  8143d8:	103e5326 	beq	r2,zero,813d28 <__alt_data_end+0xff813d28>
  8143dc:	5f00000f 	ldh	fp,0(r11)
  8143e0:	5ac00104 	addi	r11,r11,4
  8143e4:	dac02315 	stw	r11,140(sp)
  8143e8:	e013d7fa 	srai	r9,fp,31
  8143ec:	4805883a 	mov	r2,r9
  8143f0:	003e0706 	br	813c10 <__alt_data_end+0xff813c10>
  8143f4:	00800c04 	movi	r2,48
  8143f8:	d8801d05 	stb	r2,116(sp)
  8143fc:	d8c01d45 	stb	r3,117(sp)
  814400:	d8001d85 	stb	zero,118(sp)
  814404:	90800094 	ori	r2,r18,2
  814408:	80008f16 	blt	r16,zero,814648 <___svfiprintf_internal_r+0x1160>
  81440c:	00bfdfc4 	movi	r2,-129
  814410:	90a4703a 	and	r18,r18,r2
  814414:	94800094 	ori	r18,r18,2
  814418:	0015883a 	mov	r10,zero
  81441c:	003d2906 	br	8138c4 <__alt_data_end+0xff8138c4>
  814420:	98c00007 	ldb	r3,0(r19)
  814424:	003c7f06 	br	813624 <__alt_data_end+0xff813624>
  814428:	dac02317 	ldw	r11,140(sp)
  81442c:	0013883a 	mov	r9,zero
  814430:	5f000017 	ldw	fp,0(r11)
  814434:	5ac00104 	addi	r11,r11,4
  814438:	dac02315 	stw	r11,140(sp)
  81443c:	003d1506 	br	813894 <__alt_data_end+0xff813894>
  814440:	9080100c 	andi	r2,r18,64
  814444:	d8001d85 	stb	zero,118(sp)
  814448:	dac02317 	ldw	r11,140(sp)
  81444c:	10003426 	beq	r2,zero,814520 <___svfiprintf_internal_r+0x1038>
  814450:	58800104 	addi	r2,r11,4
  814454:	5f00000b 	ldhu	fp,0(r11)
  814458:	0013883a 	mov	r9,zero
  81445c:	803e950e 	bge	r16,zero,813eb4 <__alt_data_end+0xff813eb4>
  814460:	e246b03a 	or	r3,fp,r9
  814464:	d8802315 	stw	r2,140(sp)
  814468:	183d5a1e 	bne	r3,zero,8139d4 <__alt_data_end+0xff8139d4>
  81446c:	0015883a 	mov	r10,zero
  814470:	0005883a 	mov	r2,zero
  814474:	003fb706 	br	814354 <__alt_data_end+0xff814354>
  814478:	98c00043 	ldbu	r3,1(r19)
  81447c:	94800814 	ori	r18,r18,32
  814480:	9cc00044 	addi	r19,r19,1
  814484:	18c03fcc 	andi	r3,r3,255
  814488:	18c0201c 	xori	r3,r3,128
  81448c:	18ffe004 	addi	r3,r3,-128
  814490:	003c6406 	br	813624 <__alt_data_end+0xff813624>
  814494:	d8c02315 	stw	r3,140(sp)
  814498:	0015883a 	mov	r10,zero
  81449c:	003faa06 	br	814348 <__alt_data_end+0xff814348>
  8144a0:	dac02317 	ldw	r11,140(sp)
  8144a4:	58800017 	ldw	r2,0(r11)
  8144a8:	5ac00104 	addi	r11,r11,4
  8144ac:	dac02315 	stw	r11,140(sp)
  8144b0:	dac02517 	ldw	r11,148(sp)
  8144b4:	12c00015 	stw	r11,0(r2)
  8144b8:	003c3206 	br	813584 <__alt_data_end+0xff813584>
  8144bc:	010020b4 	movhi	r4,130
  8144c0:	21316d04 	addi	r4,r4,-14924
  8144c4:	d9002915 	stw	r4,164(sp)
  8144c8:	d8c02315 	stw	r3,140(sp)
  8144cc:	1025883a 	mov	r18,r2
  8144d0:	e244b03a 	or	r2,fp,r9
  8144d4:	103f871e 	bne	r2,zero,8142f4 <__alt_data_end+0xff8142f4>
  8144d8:	0015883a 	mov	r10,zero
  8144dc:	00800084 	movi	r2,2
  8144e0:	003f9c06 	br	814354 <__alt_data_end+0xff814354>
  8144e4:	0039883a 	mov	fp,zero
  8144e8:	003e5f06 	br	813e68 <__alt_data_end+0xff813e68>
  8144ec:	d9801a04 	addi	r6,sp,104
  8144f0:	b80b883a 	mov	r5,r23
  8144f4:	a809883a 	mov	r4,r21
  8144f8:	08133180 	call	813318 <__ssprint_r>
  8144fc:	103f081e 	bne	r2,zero,814120 <__alt_data_end+0xff814120>
  814500:	d8c01c17 	ldw	r3,112(sp)
  814504:	d8801b17 	ldw	r2,108(sp)
  814508:	d811883a 	mov	r8,sp
  81450c:	003e9106 	br	813f54 <__alt_data_end+0xff813f54>
  814510:	010020b4 	movhi	r4,130
  814514:	2132dd84 	addi	r4,r4,-13450
  814518:	d9002215 	stw	r4,136(sp)
  81451c:	003ead06 	br	813fd4 <__alt_data_end+0xff813fd4>
  814520:	58800104 	addi	r2,r11,4
  814524:	5f000017 	ldw	fp,0(r11)
  814528:	0013883a 	mov	r9,zero
  81452c:	803e610e 	bge	r16,zero,813eb4 <__alt_data_end+0xff813eb4>
  814530:	003fcb06 	br	814460 <__alt_data_end+0xff814460>
  814534:	58800104 	addi	r2,r11,4
  814538:	5f000017 	ldw	fp,0(r11)
  81453c:	0013883a 	mov	r9,zero
  814540:	803e420e 	bge	r16,zero,813e4c <__alt_data_end+0xff813e4c>
  814544:	003f7e06 	br	814340 <__alt_data_end+0xff814340>
  814548:	5f000017 	ldw	fp,0(r11)
  81454c:	5ac00104 	addi	r11,r11,4
  814550:	0013883a 	mov	r9,zero
  814554:	dac02315 	stw	r11,140(sp)
  814558:	003cce06 	br	813894 <__alt_data_end+0xff813894>
  81455c:	8809883a 	mov	r4,r17
  814560:	da002c15 	stw	r8,176(sp)
  814564:	08035a80 	call	8035a8 <strlen>
  814568:	d8802115 	stw	r2,132(sp)
  81456c:	da801d83 	ldbu	r10,118(sp)
  814570:	df002315 	stw	fp,140(sp)
  814574:	0021883a 	mov	r16,zero
  814578:	da002c17 	ldw	r8,176(sp)
  81457c:	003cf606 	br	813958 <__alt_data_end+0xff813958>
  814580:	00800184 	movi	r2,6
  814584:	1400012e 	bgeu	r2,r16,81458c <___svfiprintf_internal_r+0x10a4>
  814588:	1021883a 	mov	r16,r2
  81458c:	dc002115 	stw	r16,132(sp)
  814590:	8005883a 	mov	r2,r16
  814594:	80003c16 	blt	r16,zero,814688 <___svfiprintf_internal_r+0x11a0>
  814598:	044020b4 	movhi	r17,130
  81459c:	d8802015 	stw	r2,128(sp)
  8145a0:	df002315 	stw	fp,140(sp)
  8145a4:	8c717204 	addi	r17,r17,-14904
  8145a8:	003d2e06 	br	813a64 <__alt_data_end+0xff813a64>
  8145ac:	04001004 	movi	r16,64
  8145b0:	800b883a 	mov	r5,r16
  8145b4:	08025b80 	call	8025b8 <_malloc_r>
  8145b8:	dac02717 	ldw	r11,156(sp)
  8145bc:	58800015 	stw	r2,0(r11)
  8145c0:	58800415 	stw	r2,16(r11)
  8145c4:	10004826 	beq	r2,zero,8146e8 <___svfiprintf_internal_r+0x1200>
  8145c8:	dac02717 	ldw	r11,156(sp)
  8145cc:	5c000515 	stw	r16,20(r11)
  8145d0:	003bd906 	br	813538 <__alt_data_end+0xff813538>
  8145d4:	9080004c 	andi	r2,r18,1
  8145d8:	0015883a 	mov	r10,zero
  8145dc:	10000626 	beq	r2,zero,8145f8 <___svfiprintf_internal_r+0x1110>
  8145e0:	dac02b17 	ldw	r11,172(sp)
  8145e4:	00800c04 	movi	r2,48
  8145e8:	d88019c5 	stb	r2,103(sp)
  8145ec:	dac02115 	stw	r11,132(sp)
  8145f0:	dc4019c4 	addi	r17,sp,103
  8145f4:	003cd806 	br	813958 <__alt_data_end+0xff813958>
  8145f8:	d8002115 	stw	zero,132(sp)
  8145fc:	dc401a04 	addi	r17,sp,104
  814600:	003cd506 	br	813958 <__alt_data_end+0xff813958>
  814604:	010020b4 	movhi	r4,130
  814608:	2132e184 	addi	r4,r4,-13434
  81460c:	d9002815 	stw	r4,160(sp)
  814610:	003d4306 	br	813b20 <__alt_data_end+0xff813b20>
  814614:	00bfffc4 	movi	r2,-1
  814618:	003ec606 	br	814134 <__alt_data_end+0xff814134>
  81461c:	00800044 	movi	r2,1
  814620:	10803fcc 	andi	r2,r2,255
  814624:	00c00044 	movi	r3,1
  814628:	10fd8026 	beq	r2,r3,813c2c <__alt_data_end+0xff813c2c>
  81462c:	00c00084 	movi	r3,2
  814630:	10fca426 	beq	r2,r3,8138c4 <__alt_data_end+0xff8138c4>
  814634:	003ce806 	br	8139d8 <__alt_data_end+0xff8139d8>
  814638:	010020b4 	movhi	r4,130
  81463c:	2132e184 	addi	r4,r4,-13434
  814640:	d9002815 	stw	r4,160(sp)
  814644:	003e9906 	br	8140ac <__alt_data_end+0xff8140ac>
  814648:	1025883a 	mov	r18,r2
  81464c:	0015883a 	mov	r10,zero
  814650:	00800084 	movi	r2,2
  814654:	003ff206 	br	814620 <__alt_data_end+0xff814620>
  814658:	014020b4 	movhi	r5,130
  81465c:	2972dd84 	addi	r5,r5,-13450
  814660:	d9402215 	stw	r5,136(sp)
  814664:	003ee206 	br	8141f0 <__alt_data_end+0xff8141f0>
  814668:	5827883a 	mov	r19,r11
  81466c:	0021883a 	mov	r16,zero
  814670:	003bed06 	br	813628 <__alt_data_end+0xff813628>
  814674:	dc002115 	stw	r16,132(sp)
  814678:	da801d83 	ldbu	r10,118(sp)
  81467c:	df002315 	stw	fp,140(sp)
  814680:	0021883a 	mov	r16,zero
  814684:	003cb406 	br	813958 <__alt_data_end+0xff813958>
  814688:	0005883a 	mov	r2,zero
  81468c:	003fc206 	br	814598 <__alt_data_end+0xff814598>
  814690:	d8802317 	ldw	r2,140(sp)
  814694:	98c00043 	ldbu	r3,1(r19)
  814698:	5827883a 	mov	r19,r11
  81469c:	14000017 	ldw	r16,0(r2)
  8146a0:	10800104 	addi	r2,r2,4
  8146a4:	d8802315 	stw	r2,140(sp)
  8146a8:	803f760e 	bge	r16,zero,814484 <__alt_data_end+0xff814484>
  8146ac:	18c03fcc 	andi	r3,r3,255
  8146b0:	18c0201c 	xori	r3,r3,128
  8146b4:	043fffc4 	movi	r16,-1
  8146b8:	18ffe004 	addi	r3,r3,-128
  8146bc:	003bd906 	br	813624 <__alt_data_end+0xff813624>
  8146c0:	d9c01d85 	stb	r7,118(sp)
  8146c4:	003cb606 	br	8139a0 <__alt_data_end+0xff8139a0>
  8146c8:	d9c01d85 	stb	r7,118(sp)
  8146cc:	003d2106 	br	813b54 <__alt_data_end+0xff813b54>
  8146d0:	d9c01d85 	stb	r7,118(sp)
  8146d4:	003d8e06 	br	813d10 <__alt_data_end+0xff813d10>
  8146d8:	d9c01d85 	stb	r7,118(sp)
  8146dc:	003db306 	br	813dac <__alt_data_end+0xff813dac>
  8146e0:	d9c01d85 	stb	r7,118(sp)
  8146e4:	003c8a06 	br	813910 <__alt_data_end+0xff813910>
  8146e8:	dac02a17 	ldw	r11,168(sp)
  8146ec:	00800304 	movi	r2,12
  8146f0:	58800015 	stw	r2,0(r11)
  8146f4:	00bfffc4 	movi	r2,-1
  8146f8:	003e8e06 	br	814134 <__alt_data_end+0xff814134>
  8146fc:	d9c01d85 	stb	r7,118(sp)
  814700:	003dc706 	br	813e20 <__alt_data_end+0xff813e20>
  814704:	d9c01d85 	stb	r7,118(sp)
  814708:	003ddf06 	br	813e88 <__alt_data_end+0xff813e88>
  81470c:	d9c01d85 	stb	r7,118(sp)
  814710:	003d3706 	br	813bf0 <__alt_data_end+0xff813bf0>
  814714:	d9c01d85 	stb	r7,118(sp)
  814718:	003c5406 	br	81386c <__alt_data_end+0xff81386c>
  81471c:	d9c01d85 	stb	r7,118(sp)
  814720:	003d1d06 	br	813b98 <__alt_data_end+0xff813b98>

00814724 <_wcrtomb_r>:
  814724:	defff604 	addi	sp,sp,-40
  814728:	008020b4 	movhi	r2,130
  81472c:	dc800815 	stw	r18,32(sp)
  814730:	dc400715 	stw	r17,28(sp)
  814734:	dc000615 	stw	r16,24(sp)
  814738:	10ba8b04 	addi	r2,r2,-5588
  81473c:	dfc00915 	stw	ra,36(sp)
  814740:	2021883a 	mov	r16,r4
  814744:	3823883a 	mov	r17,r7
  814748:	14800017 	ldw	r18,0(r2)
  81474c:	28001426 	beq	r5,zero,8147a0 <_wcrtomb_r+0x7c>
  814750:	d9400415 	stw	r5,16(sp)
  814754:	d9800515 	stw	r6,20(sp)
  814758:	08091c40 	call	8091c4 <__locale_charset>
  81475c:	d9800517 	ldw	r6,20(sp)
  814760:	d9400417 	ldw	r5,16(sp)
  814764:	100f883a 	mov	r7,r2
  814768:	dc400015 	stw	r17,0(sp)
  81476c:	8009883a 	mov	r4,r16
  814770:	903ee83a 	callr	r18
  814774:	00ffffc4 	movi	r3,-1
  814778:	10c0031e 	bne	r2,r3,814788 <_wcrtomb_r+0x64>
  81477c:	88000015 	stw	zero,0(r17)
  814780:	00c02284 	movi	r3,138
  814784:	80c00015 	stw	r3,0(r16)
  814788:	dfc00917 	ldw	ra,36(sp)
  81478c:	dc800817 	ldw	r18,32(sp)
  814790:	dc400717 	ldw	r17,28(sp)
  814794:	dc000617 	ldw	r16,24(sp)
  814798:	dec00a04 	addi	sp,sp,40
  81479c:	f800283a 	ret
  8147a0:	08091c40 	call	8091c4 <__locale_charset>
  8147a4:	100f883a 	mov	r7,r2
  8147a8:	dc400015 	stw	r17,0(sp)
  8147ac:	000d883a 	mov	r6,zero
  8147b0:	d9400104 	addi	r5,sp,4
  8147b4:	8009883a 	mov	r4,r16
  8147b8:	903ee83a 	callr	r18
  8147bc:	003fed06 	br	814774 <__alt_data_end+0xff814774>

008147c0 <wcrtomb>:
  8147c0:	defff604 	addi	sp,sp,-40
  8147c4:	008020b4 	movhi	r2,130
  8147c8:	dc800615 	stw	r18,24(sp)
  8147cc:	dc400515 	stw	r17,20(sp)
  8147d0:	10ba8504 	addi	r2,r2,-5612
  8147d4:	dfc00915 	stw	ra,36(sp)
  8147d8:	dd000815 	stw	r20,32(sp)
  8147dc:	dcc00715 	stw	r19,28(sp)
  8147e0:	dc000415 	stw	r16,16(sp)
  8147e4:	3025883a 	mov	r18,r6
  8147e8:	14400017 	ldw	r17,0(r2)
  8147ec:	20001926 	beq	r4,zero,814854 <wcrtomb+0x94>
  8147f0:	008020b4 	movhi	r2,130
  8147f4:	10ba8b04 	addi	r2,r2,-5588
  8147f8:	15000017 	ldw	r20,0(r2)
  8147fc:	2021883a 	mov	r16,r4
  814800:	2827883a 	mov	r19,r5
  814804:	08091c40 	call	8091c4 <__locale_charset>
  814808:	100f883a 	mov	r7,r2
  81480c:	dc800015 	stw	r18,0(sp)
  814810:	980d883a 	mov	r6,r19
  814814:	800b883a 	mov	r5,r16
  814818:	8809883a 	mov	r4,r17
  81481c:	a03ee83a 	callr	r20
  814820:	00ffffc4 	movi	r3,-1
  814824:	10c0031e 	bne	r2,r3,814834 <wcrtomb+0x74>
  814828:	90000015 	stw	zero,0(r18)
  81482c:	00c02284 	movi	r3,138
  814830:	88c00015 	stw	r3,0(r17)
  814834:	dfc00917 	ldw	ra,36(sp)
  814838:	dd000817 	ldw	r20,32(sp)
  81483c:	dcc00717 	ldw	r19,28(sp)
  814840:	dc800617 	ldw	r18,24(sp)
  814844:	dc400517 	ldw	r17,20(sp)
  814848:	dc000417 	ldw	r16,16(sp)
  81484c:	dec00a04 	addi	sp,sp,40
  814850:	f800283a 	ret
  814854:	008020b4 	movhi	r2,130
  814858:	10ba8b04 	addi	r2,r2,-5588
  81485c:	14000017 	ldw	r16,0(r2)
  814860:	08091c40 	call	8091c4 <__locale_charset>
  814864:	100f883a 	mov	r7,r2
  814868:	dc800015 	stw	r18,0(sp)
  81486c:	000d883a 	mov	r6,zero
  814870:	d9400104 	addi	r5,sp,4
  814874:	8809883a 	mov	r4,r17
  814878:	803ee83a 	callr	r16
  81487c:	003fe806 	br	814820 <__alt_data_end+0xff814820>

00814880 <__ascii_wctomb>:
  814880:	28000526 	beq	r5,zero,814898 <__ascii_wctomb+0x18>
  814884:	00803fc4 	movi	r2,255
  814888:	11800536 	bltu	r2,r6,8148a0 <__ascii_wctomb+0x20>
  81488c:	29800005 	stb	r6,0(r5)
  814890:	00800044 	movi	r2,1
  814894:	f800283a 	ret
  814898:	0005883a 	mov	r2,zero
  81489c:	f800283a 	ret
  8148a0:	00802284 	movi	r2,138
  8148a4:	20800015 	stw	r2,0(r4)
  8148a8:	00bfffc4 	movi	r2,-1
  8148ac:	f800283a 	ret

008148b0 <_wctomb_r>:
  8148b0:	008020b4 	movhi	r2,130
  8148b4:	defff904 	addi	sp,sp,-28
  8148b8:	10ba8b04 	addi	r2,r2,-5588
  8148bc:	dfc00615 	stw	ra,24(sp)
  8148c0:	dc400515 	stw	r17,20(sp)
  8148c4:	dc000415 	stw	r16,16(sp)
  8148c8:	3823883a 	mov	r17,r7
  8148cc:	14000017 	ldw	r16,0(r2)
  8148d0:	d9000115 	stw	r4,4(sp)
  8148d4:	d9400215 	stw	r5,8(sp)
  8148d8:	d9800315 	stw	r6,12(sp)
  8148dc:	08091c40 	call	8091c4 <__locale_charset>
  8148e0:	d9800317 	ldw	r6,12(sp)
  8148e4:	d9400217 	ldw	r5,8(sp)
  8148e8:	d9000117 	ldw	r4,4(sp)
  8148ec:	100f883a 	mov	r7,r2
  8148f0:	dc400015 	stw	r17,0(sp)
  8148f4:	803ee83a 	callr	r16
  8148f8:	dfc00617 	ldw	ra,24(sp)
  8148fc:	dc400517 	ldw	r17,20(sp)
  814900:	dc000417 	ldw	r16,16(sp)
  814904:	dec00704 	addi	sp,sp,28
  814908:	f800283a 	ret

0081490c <__muldi3>:
  81490c:	223fffcc 	andi	r8,r4,65535
  814910:	2006d43a 	srli	r3,r4,16
  814914:	32bfffcc 	andi	r10,r6,65535
  814918:	3012d43a 	srli	r9,r6,16
  81491c:	4297383a 	mul	r11,r8,r10
  814920:	1a95383a 	mul	r10,r3,r10
  814924:	4251383a 	mul	r8,r8,r9
  814928:	5804d43a 	srli	r2,r11,16
  81492c:	4291883a 	add	r8,r8,r10
  814930:	1205883a 	add	r2,r2,r8
  814934:	1a51383a 	mul	r8,r3,r9
  814938:	1280022e 	bgeu	r2,r10,814944 <__muldi3+0x38>
  81493c:	00c00074 	movhi	r3,1
  814940:	40d1883a 	add	r8,r8,r3
  814944:	1006d43a 	srli	r3,r2,16
  814948:	21cf383a 	mul	r7,r4,r7
  81494c:	314b383a 	mul	r5,r6,r5
  814950:	1004943a 	slli	r2,r2,16
  814954:	1a11883a 	add	r8,r3,r8
  814958:	5affffcc 	andi	r11,r11,65535
  81495c:	3947883a 	add	r3,r7,r5
  814960:	12c5883a 	add	r2,r2,r11
  814964:	1a07883a 	add	r3,r3,r8
  814968:	f800283a 	ret

0081496c <__fixunsdfsi>:
  81496c:	defffd04 	addi	sp,sp,-12
  814970:	000d883a 	mov	r6,zero
  814974:	01d07834 	movhi	r7,16864
  814978:	dc400115 	stw	r17,4(sp)
  81497c:	dc000015 	stw	r16,0(sp)
  814980:	dfc00215 	stw	ra,8(sp)
  814984:	2023883a 	mov	r17,r4
  814988:	2821883a 	mov	r16,r5
  81498c:	0816a5c0 	call	816a5c <__gedf2>
  814990:	1000080e 	bge	r2,zero,8149b4 <__fixunsdfsi+0x48>
  814994:	8809883a 	mov	r4,r17
  814998:	800b883a 	mov	r5,r16
  81499c:	0817c400 	call	817c40 <__fixdfsi>
  8149a0:	dfc00217 	ldw	ra,8(sp)
  8149a4:	dc400117 	ldw	r17,4(sp)
  8149a8:	dc000017 	ldw	r16,0(sp)
  8149ac:	dec00304 	addi	sp,sp,12
  8149b0:	f800283a 	ret
  8149b4:	000d883a 	mov	r6,zero
  8149b8:	01d07834 	movhi	r7,16864
  8149bc:	8809883a 	mov	r4,r17
  8149c0:	800b883a 	mov	r5,r16
  8149c4:	08173440 	call	817344 <__subdf3>
  8149c8:	180b883a 	mov	r5,r3
  8149cc:	1009883a 	mov	r4,r2
  8149d0:	0817c400 	call	817c40 <__fixdfsi>
  8149d4:	00e00034 	movhi	r3,32768
  8149d8:	10c5883a 	add	r2,r2,r3
  8149dc:	003ff006 	br	8149a0 <__alt_data_end+0xff8149a0>

008149e0 <__udivdi3>:
  8149e0:	defff504 	addi	sp,sp,-44
  8149e4:	dcc00415 	stw	r19,16(sp)
  8149e8:	dc000115 	stw	r16,4(sp)
  8149ec:	dfc00a15 	stw	ra,40(sp)
  8149f0:	df000915 	stw	fp,36(sp)
  8149f4:	ddc00815 	stw	r23,32(sp)
  8149f8:	dd800715 	stw	r22,28(sp)
  8149fc:	dd400615 	stw	r21,24(sp)
  814a00:	dd000515 	stw	r20,20(sp)
  814a04:	dc800315 	stw	r18,12(sp)
  814a08:	dc400215 	stw	r17,8(sp)
  814a0c:	2027883a 	mov	r19,r4
  814a10:	2821883a 	mov	r16,r5
  814a14:	3800411e 	bne	r7,zero,814b1c <__udivdi3+0x13c>
  814a18:	3023883a 	mov	r17,r6
  814a1c:	2025883a 	mov	r18,r4
  814a20:	2980522e 	bgeu	r5,r6,814b6c <__udivdi3+0x18c>
  814a24:	00bfffd4 	movui	r2,65535
  814a28:	282d883a 	mov	r22,r5
  814a2c:	1180a836 	bltu	r2,r6,814cd0 <__udivdi3+0x2f0>
  814a30:	00803fc4 	movi	r2,255
  814a34:	1185803a 	cmpltu	r2,r2,r6
  814a38:	100490fa 	slli	r2,r2,3
  814a3c:	3086d83a 	srl	r3,r6,r2
  814a40:	010020b4 	movhi	r4,130
  814a44:	2132e584 	addi	r4,r4,-13418
  814a48:	20c7883a 	add	r3,r4,r3
  814a4c:	18c00003 	ldbu	r3,0(r3)
  814a50:	1885883a 	add	r2,r3,r2
  814a54:	00c00804 	movi	r3,32
  814a58:	1887c83a 	sub	r3,r3,r2
  814a5c:	18000526 	beq	r3,zero,814a74 <__udivdi3+0x94>
  814a60:	80e0983a 	sll	r16,r16,r3
  814a64:	9884d83a 	srl	r2,r19,r2
  814a68:	30e2983a 	sll	r17,r6,r3
  814a6c:	98e4983a 	sll	r18,r19,r3
  814a70:	142cb03a 	or	r22,r2,r16
  814a74:	882ad43a 	srli	r21,r17,16
  814a78:	b009883a 	mov	r4,r22
  814a7c:	8d3fffcc 	andi	r20,r17,65535
  814a80:	a80b883a 	mov	r5,r21
  814a84:	08155ec0 	call	8155ec <__umodsi3>
  814a88:	b009883a 	mov	r4,r22
  814a8c:	a80b883a 	mov	r5,r21
  814a90:	1027883a 	mov	r19,r2
  814a94:	08155880 	call	815588 <__udivsi3>
  814a98:	102d883a 	mov	r22,r2
  814a9c:	9826943a 	slli	r19,r19,16
  814aa0:	9004d43a 	srli	r2,r18,16
  814aa4:	a5a1383a 	mul	r16,r20,r22
  814aa8:	14c4b03a 	or	r2,r2,r19
  814aac:	1400052e 	bgeu	r2,r16,814ac4 <__udivdi3+0xe4>
  814ab0:	1445883a 	add	r2,r2,r17
  814ab4:	b0ffffc4 	addi	r3,r22,-1
  814ab8:	14400136 	bltu	r2,r17,814ac0 <__udivdi3+0xe0>
  814abc:	14012336 	bltu	r2,r16,814f4c <__udivdi3+0x56c>
  814ac0:	182d883a 	mov	r22,r3
  814ac4:	1421c83a 	sub	r16,r2,r16
  814ac8:	a80b883a 	mov	r5,r21
  814acc:	8009883a 	mov	r4,r16
  814ad0:	08155ec0 	call	8155ec <__umodsi3>
  814ad4:	1027883a 	mov	r19,r2
  814ad8:	a80b883a 	mov	r5,r21
  814adc:	8009883a 	mov	r4,r16
  814ae0:	08155880 	call	815588 <__udivsi3>
  814ae4:	9826943a 	slli	r19,r19,16
  814ae8:	a0a9383a 	mul	r20,r20,r2
  814aec:	94bfffcc 	andi	r18,r18,65535
  814af0:	94e4b03a 	or	r18,r18,r19
  814af4:	9500052e 	bgeu	r18,r20,814b0c <__udivdi3+0x12c>
  814af8:	8ca5883a 	add	r18,r17,r18
  814afc:	10ffffc4 	addi	r3,r2,-1
  814b00:	9440f136 	bltu	r18,r17,814ec8 <__udivdi3+0x4e8>
  814b04:	9500f02e 	bgeu	r18,r20,814ec8 <__udivdi3+0x4e8>
  814b08:	10bfff84 	addi	r2,r2,-2
  814b0c:	b00c943a 	slli	r6,r22,16
  814b10:	0007883a 	mov	r3,zero
  814b14:	3084b03a 	or	r2,r6,r2
  814b18:	00005906 	br	814c80 <__udivdi3+0x2a0>
  814b1c:	29c05636 	bltu	r5,r7,814c78 <__udivdi3+0x298>
  814b20:	00bfffd4 	movui	r2,65535
  814b24:	11c0622e 	bgeu	r2,r7,814cb0 <__udivdi3+0x2d0>
  814b28:	00804034 	movhi	r2,256
  814b2c:	10bfffc4 	addi	r2,r2,-1
  814b30:	11c0ee36 	bltu	r2,r7,814eec <__udivdi3+0x50c>
  814b34:	00800404 	movi	r2,16
  814b38:	3886d83a 	srl	r3,r7,r2
  814b3c:	010020b4 	movhi	r4,130
  814b40:	2132e584 	addi	r4,r4,-13418
  814b44:	20c7883a 	add	r3,r4,r3
  814b48:	18c00003 	ldbu	r3,0(r3)
  814b4c:	05400804 	movi	r21,32
  814b50:	1885883a 	add	r2,r3,r2
  814b54:	a8abc83a 	sub	r21,r21,r2
  814b58:	a800621e 	bne	r21,zero,814ce4 <__udivdi3+0x304>
  814b5c:	3c00e936 	bltu	r7,r16,814f04 <__udivdi3+0x524>
  814b60:	9985403a 	cmpgeu	r2,r19,r6
  814b64:	0007883a 	mov	r3,zero
  814b68:	00004506 	br	814c80 <__udivdi3+0x2a0>
  814b6c:	3000041e 	bne	r6,zero,814b80 <__udivdi3+0x1a0>
  814b70:	000b883a 	mov	r5,zero
  814b74:	01000044 	movi	r4,1
  814b78:	08155880 	call	815588 <__udivsi3>
  814b7c:	1023883a 	mov	r17,r2
  814b80:	00bfffd4 	movui	r2,65535
  814b84:	14404e2e 	bgeu	r2,r17,814cc0 <__udivdi3+0x2e0>
  814b88:	00804034 	movhi	r2,256
  814b8c:	10bfffc4 	addi	r2,r2,-1
  814b90:	1440d836 	bltu	r2,r17,814ef4 <__udivdi3+0x514>
  814b94:	00800404 	movi	r2,16
  814b98:	8886d83a 	srl	r3,r17,r2
  814b9c:	010020b4 	movhi	r4,130
  814ba0:	2132e584 	addi	r4,r4,-13418
  814ba4:	20c7883a 	add	r3,r4,r3
  814ba8:	18c00003 	ldbu	r3,0(r3)
  814bac:	1885883a 	add	r2,r3,r2
  814bb0:	00c00804 	movi	r3,32
  814bb4:	1887c83a 	sub	r3,r3,r2
  814bb8:	18008f1e 	bne	r3,zero,814df8 <__udivdi3+0x418>
  814bbc:	882ad43a 	srli	r21,r17,16
  814bc0:	8461c83a 	sub	r16,r16,r17
  814bc4:	8d3fffcc 	andi	r20,r17,65535
  814bc8:	00c00044 	movi	r3,1
  814bcc:	8009883a 	mov	r4,r16
  814bd0:	a80b883a 	mov	r5,r21
  814bd4:	d8c00015 	stw	r3,0(sp)
  814bd8:	08155ec0 	call	8155ec <__umodsi3>
  814bdc:	8009883a 	mov	r4,r16
  814be0:	a80b883a 	mov	r5,r21
  814be4:	1027883a 	mov	r19,r2
  814be8:	08155880 	call	815588 <__udivsi3>
  814bec:	9826943a 	slli	r19,r19,16
  814bf0:	9008d43a 	srli	r4,r18,16
  814bf4:	1521383a 	mul	r16,r2,r20
  814bf8:	102d883a 	mov	r22,r2
  814bfc:	24c8b03a 	or	r4,r4,r19
  814c00:	d8c00017 	ldw	r3,0(sp)
  814c04:	2400052e 	bgeu	r4,r16,814c1c <__udivdi3+0x23c>
  814c08:	2449883a 	add	r4,r4,r17
  814c0c:	b0bfffc4 	addi	r2,r22,-1
  814c10:	24400136 	bltu	r4,r17,814c18 <__udivdi3+0x238>
  814c14:	2400ca36 	bltu	r4,r16,814f40 <__udivdi3+0x560>
  814c18:	102d883a 	mov	r22,r2
  814c1c:	2421c83a 	sub	r16,r4,r16
  814c20:	a80b883a 	mov	r5,r21
  814c24:	8009883a 	mov	r4,r16
  814c28:	d8c00015 	stw	r3,0(sp)
  814c2c:	08155ec0 	call	8155ec <__umodsi3>
  814c30:	1027883a 	mov	r19,r2
  814c34:	a80b883a 	mov	r5,r21
  814c38:	8009883a 	mov	r4,r16
  814c3c:	08155880 	call	815588 <__udivsi3>
  814c40:	9826943a 	slli	r19,r19,16
  814c44:	1529383a 	mul	r20,r2,r20
  814c48:	94bfffcc 	andi	r18,r18,65535
  814c4c:	94e4b03a 	or	r18,r18,r19
  814c50:	d8c00017 	ldw	r3,0(sp)
  814c54:	9500052e 	bgeu	r18,r20,814c6c <__udivdi3+0x28c>
  814c58:	8ca5883a 	add	r18,r17,r18
  814c5c:	113fffc4 	addi	r4,r2,-1
  814c60:	94409736 	bltu	r18,r17,814ec0 <__udivdi3+0x4e0>
  814c64:	9500962e 	bgeu	r18,r20,814ec0 <__udivdi3+0x4e0>
  814c68:	10bfff84 	addi	r2,r2,-2
  814c6c:	b00c943a 	slli	r6,r22,16
  814c70:	3084b03a 	or	r2,r6,r2
  814c74:	00000206 	br	814c80 <__udivdi3+0x2a0>
  814c78:	0007883a 	mov	r3,zero
  814c7c:	0005883a 	mov	r2,zero
  814c80:	dfc00a17 	ldw	ra,40(sp)
  814c84:	df000917 	ldw	fp,36(sp)
  814c88:	ddc00817 	ldw	r23,32(sp)
  814c8c:	dd800717 	ldw	r22,28(sp)
  814c90:	dd400617 	ldw	r21,24(sp)
  814c94:	dd000517 	ldw	r20,20(sp)
  814c98:	dcc00417 	ldw	r19,16(sp)
  814c9c:	dc800317 	ldw	r18,12(sp)
  814ca0:	dc400217 	ldw	r17,8(sp)
  814ca4:	dc000117 	ldw	r16,4(sp)
  814ca8:	dec00b04 	addi	sp,sp,44
  814cac:	f800283a 	ret
  814cb0:	00803fc4 	movi	r2,255
  814cb4:	11c5803a 	cmpltu	r2,r2,r7
  814cb8:	100490fa 	slli	r2,r2,3
  814cbc:	003f9e06 	br	814b38 <__alt_data_end+0xff814b38>
  814cc0:	00803fc4 	movi	r2,255
  814cc4:	1445803a 	cmpltu	r2,r2,r17
  814cc8:	100490fa 	slli	r2,r2,3
  814ccc:	003fb206 	br	814b98 <__alt_data_end+0xff814b98>
  814cd0:	00804034 	movhi	r2,256
  814cd4:	10bfffc4 	addi	r2,r2,-1
  814cd8:	11808836 	bltu	r2,r6,814efc <__udivdi3+0x51c>
  814cdc:	00800404 	movi	r2,16
  814ce0:	003f5606 	br	814a3c <__alt_data_end+0xff814a3c>
  814ce4:	30aed83a 	srl	r23,r6,r2
  814ce8:	3d4e983a 	sll	r7,r7,r21
  814cec:	80acd83a 	srl	r22,r16,r2
  814cf0:	9884d83a 	srl	r2,r19,r2
  814cf4:	3deeb03a 	or	r23,r7,r23
  814cf8:	b824d43a 	srli	r18,r23,16
  814cfc:	8560983a 	sll	r16,r16,r21
  814d00:	b009883a 	mov	r4,r22
  814d04:	900b883a 	mov	r5,r18
  814d08:	3568983a 	sll	r20,r6,r21
  814d0c:	1420b03a 	or	r16,r2,r16
  814d10:	08155ec0 	call	8155ec <__umodsi3>
  814d14:	b009883a 	mov	r4,r22
  814d18:	900b883a 	mov	r5,r18
  814d1c:	1023883a 	mov	r17,r2
  814d20:	08155880 	call	815588 <__udivsi3>
  814d24:	8808943a 	slli	r4,r17,16
  814d28:	bf3fffcc 	andi	fp,r23,65535
  814d2c:	8006d43a 	srli	r3,r16,16
  814d30:	e0a3383a 	mul	r17,fp,r2
  814d34:	100d883a 	mov	r6,r2
  814d38:	1906b03a 	or	r3,r3,r4
  814d3c:	1c40042e 	bgeu	r3,r17,814d50 <__udivdi3+0x370>
  814d40:	1dc7883a 	add	r3,r3,r23
  814d44:	10bfffc4 	addi	r2,r2,-1
  814d48:	1dc0752e 	bgeu	r3,r23,814f20 <__udivdi3+0x540>
  814d4c:	100d883a 	mov	r6,r2
  814d50:	1c63c83a 	sub	r17,r3,r17
  814d54:	900b883a 	mov	r5,r18
  814d58:	8809883a 	mov	r4,r17
  814d5c:	d9800015 	stw	r6,0(sp)
  814d60:	08155ec0 	call	8155ec <__umodsi3>
  814d64:	102d883a 	mov	r22,r2
  814d68:	8809883a 	mov	r4,r17
  814d6c:	900b883a 	mov	r5,r18
  814d70:	08155880 	call	815588 <__udivsi3>
  814d74:	b02c943a 	slli	r22,r22,16
  814d78:	e089383a 	mul	r4,fp,r2
  814d7c:	843fffcc 	andi	r16,r16,65535
  814d80:	85a0b03a 	or	r16,r16,r22
  814d84:	d9800017 	ldw	r6,0(sp)
  814d88:	8100042e 	bgeu	r16,r4,814d9c <__udivdi3+0x3bc>
  814d8c:	85e1883a 	add	r16,r16,r23
  814d90:	10ffffc4 	addi	r3,r2,-1
  814d94:	85c05e2e 	bgeu	r16,r23,814f10 <__udivdi3+0x530>
  814d98:	1805883a 	mov	r2,r3
  814d9c:	300c943a 	slli	r6,r6,16
  814da0:	a17fffcc 	andi	r5,r20,65535
  814da4:	a028d43a 	srli	r20,r20,16
  814da8:	3084b03a 	or	r2,r6,r2
  814dac:	10ffffcc 	andi	r3,r2,65535
  814db0:	100cd43a 	srli	r6,r2,16
  814db4:	194f383a 	mul	r7,r3,r5
  814db8:	1d07383a 	mul	r3,r3,r20
  814dbc:	314b383a 	mul	r5,r6,r5
  814dc0:	3810d43a 	srli	r8,r7,16
  814dc4:	8121c83a 	sub	r16,r16,r4
  814dc8:	1947883a 	add	r3,r3,r5
  814dcc:	40c7883a 	add	r3,r8,r3
  814dd0:	350d383a 	mul	r6,r6,r20
  814dd4:	1940022e 	bgeu	r3,r5,814de0 <__udivdi3+0x400>
  814dd8:	01000074 	movhi	r4,1
  814ddc:	310d883a 	add	r6,r6,r4
  814de0:	1828d43a 	srli	r20,r3,16
  814de4:	a18d883a 	add	r6,r20,r6
  814de8:	81803e36 	bltu	r16,r6,814ee4 <__udivdi3+0x504>
  814dec:	81803826 	beq	r16,r6,814ed0 <__udivdi3+0x4f0>
  814df0:	0007883a 	mov	r3,zero
  814df4:	003fa206 	br	814c80 <__alt_data_end+0xff814c80>
  814df8:	88e2983a 	sll	r17,r17,r3
  814dfc:	80a8d83a 	srl	r20,r16,r2
  814e00:	80e0983a 	sll	r16,r16,r3
  814e04:	882ad43a 	srli	r21,r17,16
  814e08:	9884d83a 	srl	r2,r19,r2
  814e0c:	a009883a 	mov	r4,r20
  814e10:	a80b883a 	mov	r5,r21
  814e14:	142eb03a 	or	r23,r2,r16
  814e18:	98e4983a 	sll	r18,r19,r3
  814e1c:	08155ec0 	call	8155ec <__umodsi3>
  814e20:	a009883a 	mov	r4,r20
  814e24:	a80b883a 	mov	r5,r21
  814e28:	1021883a 	mov	r16,r2
  814e2c:	08155880 	call	815588 <__udivsi3>
  814e30:	1039883a 	mov	fp,r2
  814e34:	8d3fffcc 	andi	r20,r17,65535
  814e38:	8020943a 	slli	r16,r16,16
  814e3c:	b804d43a 	srli	r2,r23,16
  814e40:	a72d383a 	mul	r22,r20,fp
  814e44:	1404b03a 	or	r2,r2,r16
  814e48:	1580062e 	bgeu	r2,r22,814e64 <__udivdi3+0x484>
  814e4c:	1445883a 	add	r2,r2,r17
  814e50:	e0ffffc4 	addi	r3,fp,-1
  814e54:	14403836 	bltu	r2,r17,814f38 <__udivdi3+0x558>
  814e58:	1580372e 	bgeu	r2,r22,814f38 <__udivdi3+0x558>
  814e5c:	e73fff84 	addi	fp,fp,-2
  814e60:	1445883a 	add	r2,r2,r17
  814e64:	15adc83a 	sub	r22,r2,r22
  814e68:	a80b883a 	mov	r5,r21
  814e6c:	b009883a 	mov	r4,r22
  814e70:	08155ec0 	call	8155ec <__umodsi3>
  814e74:	1027883a 	mov	r19,r2
  814e78:	b009883a 	mov	r4,r22
  814e7c:	a80b883a 	mov	r5,r21
  814e80:	08155880 	call	815588 <__udivsi3>
  814e84:	9826943a 	slli	r19,r19,16
  814e88:	a0a1383a 	mul	r16,r20,r2
  814e8c:	b93fffcc 	andi	r4,r23,65535
  814e90:	24c8b03a 	or	r4,r4,r19
  814e94:	2400062e 	bgeu	r4,r16,814eb0 <__udivdi3+0x4d0>
  814e98:	2449883a 	add	r4,r4,r17
  814e9c:	10ffffc4 	addi	r3,r2,-1
  814ea0:	24402336 	bltu	r4,r17,814f30 <__udivdi3+0x550>
  814ea4:	2400222e 	bgeu	r4,r16,814f30 <__udivdi3+0x550>
  814ea8:	10bfff84 	addi	r2,r2,-2
  814eac:	2449883a 	add	r4,r4,r17
  814eb0:	e038943a 	slli	fp,fp,16
  814eb4:	2421c83a 	sub	r16,r4,r16
  814eb8:	e086b03a 	or	r3,fp,r2
  814ebc:	003f4306 	br	814bcc <__alt_data_end+0xff814bcc>
  814ec0:	2005883a 	mov	r2,r4
  814ec4:	003f6906 	br	814c6c <__alt_data_end+0xff814c6c>
  814ec8:	1805883a 	mov	r2,r3
  814ecc:	003f0f06 	br	814b0c <__alt_data_end+0xff814b0c>
  814ed0:	1806943a 	slli	r3,r3,16
  814ed4:	9d66983a 	sll	r19,r19,r21
  814ed8:	39ffffcc 	andi	r7,r7,65535
  814edc:	19c7883a 	add	r3,r3,r7
  814ee0:	98ffc32e 	bgeu	r19,r3,814df0 <__alt_data_end+0xff814df0>
  814ee4:	10bfffc4 	addi	r2,r2,-1
  814ee8:	003fc106 	br	814df0 <__alt_data_end+0xff814df0>
  814eec:	00800604 	movi	r2,24
  814ef0:	003f1106 	br	814b38 <__alt_data_end+0xff814b38>
  814ef4:	00800604 	movi	r2,24
  814ef8:	003f2706 	br	814b98 <__alt_data_end+0xff814b98>
  814efc:	00800604 	movi	r2,24
  814f00:	003ece06 	br	814a3c <__alt_data_end+0xff814a3c>
  814f04:	0007883a 	mov	r3,zero
  814f08:	00800044 	movi	r2,1
  814f0c:	003f5c06 	br	814c80 <__alt_data_end+0xff814c80>
  814f10:	813fa12e 	bgeu	r16,r4,814d98 <__alt_data_end+0xff814d98>
  814f14:	10bfff84 	addi	r2,r2,-2
  814f18:	85e1883a 	add	r16,r16,r23
  814f1c:	003f9f06 	br	814d9c <__alt_data_end+0xff814d9c>
  814f20:	1c7f8a2e 	bgeu	r3,r17,814d4c <__alt_data_end+0xff814d4c>
  814f24:	31bfff84 	addi	r6,r6,-2
  814f28:	1dc7883a 	add	r3,r3,r23
  814f2c:	003f8806 	br	814d50 <__alt_data_end+0xff814d50>
  814f30:	1805883a 	mov	r2,r3
  814f34:	003fde06 	br	814eb0 <__alt_data_end+0xff814eb0>
  814f38:	1839883a 	mov	fp,r3
  814f3c:	003fc906 	br	814e64 <__alt_data_end+0xff814e64>
  814f40:	b5bfff84 	addi	r22,r22,-2
  814f44:	2449883a 	add	r4,r4,r17
  814f48:	003f3406 	br	814c1c <__alt_data_end+0xff814c1c>
  814f4c:	b5bfff84 	addi	r22,r22,-2
  814f50:	1445883a 	add	r2,r2,r17
  814f54:	003edb06 	br	814ac4 <__alt_data_end+0xff814ac4>

00814f58 <__umoddi3>:
  814f58:	defff404 	addi	sp,sp,-48
  814f5c:	df000a15 	stw	fp,40(sp)
  814f60:	dc400315 	stw	r17,12(sp)
  814f64:	dc000215 	stw	r16,8(sp)
  814f68:	dfc00b15 	stw	ra,44(sp)
  814f6c:	ddc00915 	stw	r23,36(sp)
  814f70:	dd800815 	stw	r22,32(sp)
  814f74:	dd400715 	stw	r21,28(sp)
  814f78:	dd000615 	stw	r20,24(sp)
  814f7c:	dcc00515 	stw	r19,20(sp)
  814f80:	dc800415 	stw	r18,16(sp)
  814f84:	2021883a 	mov	r16,r4
  814f88:	2823883a 	mov	r17,r5
  814f8c:	2839883a 	mov	fp,r5
  814f90:	38003c1e 	bne	r7,zero,815084 <__umoddi3+0x12c>
  814f94:	3027883a 	mov	r19,r6
  814f98:	2029883a 	mov	r20,r4
  814f9c:	2980512e 	bgeu	r5,r6,8150e4 <__umoddi3+0x18c>
  814fa0:	00bfffd4 	movui	r2,65535
  814fa4:	11809a36 	bltu	r2,r6,815210 <__umoddi3+0x2b8>
  814fa8:	01003fc4 	movi	r4,255
  814fac:	2189803a 	cmpltu	r4,r4,r6
  814fb0:	200890fa 	slli	r4,r4,3
  814fb4:	3104d83a 	srl	r2,r6,r4
  814fb8:	00c020b4 	movhi	r3,130
  814fbc:	18f2e584 	addi	r3,r3,-13418
  814fc0:	1885883a 	add	r2,r3,r2
  814fc4:	10c00003 	ldbu	r3,0(r2)
  814fc8:	00800804 	movi	r2,32
  814fcc:	1909883a 	add	r4,r3,r4
  814fd0:	1125c83a 	sub	r18,r2,r4
  814fd4:	90000526 	beq	r18,zero,814fec <__umoddi3+0x94>
  814fd8:	8ca2983a 	sll	r17,r17,r18
  814fdc:	8108d83a 	srl	r4,r16,r4
  814fe0:	34a6983a 	sll	r19,r6,r18
  814fe4:	84a8983a 	sll	r20,r16,r18
  814fe8:	2478b03a 	or	fp,r4,r17
  814fec:	982ed43a 	srli	r23,r19,16
  814ff0:	e009883a 	mov	r4,fp
  814ff4:	9dbfffcc 	andi	r22,r19,65535
  814ff8:	b80b883a 	mov	r5,r23
  814ffc:	08155ec0 	call	8155ec <__umodsi3>
  815000:	e009883a 	mov	r4,fp
  815004:	b80b883a 	mov	r5,r23
  815008:	102b883a 	mov	r21,r2
  81500c:	08155880 	call	815588 <__udivsi3>
  815010:	a806943a 	slli	r3,r21,16
  815014:	a008d43a 	srli	r4,r20,16
  815018:	b085383a 	mul	r2,r22,r2
  81501c:	20c8b03a 	or	r4,r4,r3
  815020:	2080032e 	bgeu	r4,r2,815030 <__umoddi3+0xd8>
  815024:	24c9883a 	add	r4,r4,r19
  815028:	24c00136 	bltu	r4,r19,815030 <__umoddi3+0xd8>
  81502c:	20811036 	bltu	r4,r2,815470 <__umoddi3+0x518>
  815030:	20abc83a 	sub	r21,r4,r2
  815034:	b80b883a 	mov	r5,r23
  815038:	a809883a 	mov	r4,r21
  81503c:	08155ec0 	call	8155ec <__umodsi3>
  815040:	1023883a 	mov	r17,r2
  815044:	b80b883a 	mov	r5,r23
  815048:	a809883a 	mov	r4,r21
  81504c:	08155880 	call	815588 <__udivsi3>
  815050:	8822943a 	slli	r17,r17,16
  815054:	b085383a 	mul	r2,r22,r2
  815058:	a0ffffcc 	andi	r3,r20,65535
  81505c:	1c46b03a 	or	r3,r3,r17
  815060:	1880042e 	bgeu	r3,r2,815074 <__umoddi3+0x11c>
  815064:	1cc7883a 	add	r3,r3,r19
  815068:	1cc00236 	bltu	r3,r19,815074 <__umoddi3+0x11c>
  81506c:	1880012e 	bgeu	r3,r2,815074 <__umoddi3+0x11c>
  815070:	1cc7883a 	add	r3,r3,r19
  815074:	1885c83a 	sub	r2,r3,r2
  815078:	1484d83a 	srl	r2,r2,r18
  81507c:	0007883a 	mov	r3,zero
  815080:	00004f06 	br	8151c0 <__umoddi3+0x268>
  815084:	29c04c36 	bltu	r5,r7,8151b8 <__umoddi3+0x260>
  815088:	00bfffd4 	movui	r2,65535
  81508c:	11c0582e 	bgeu	r2,r7,8151f0 <__umoddi3+0x298>
  815090:	00804034 	movhi	r2,256
  815094:	10bfffc4 	addi	r2,r2,-1
  815098:	11c0e736 	bltu	r2,r7,815438 <__umoddi3+0x4e0>
  81509c:	01000404 	movi	r4,16
  8150a0:	3904d83a 	srl	r2,r7,r4
  8150a4:	00c020b4 	movhi	r3,130
  8150a8:	18f2e584 	addi	r3,r3,-13418
  8150ac:	1885883a 	add	r2,r3,r2
  8150b0:	14c00003 	ldbu	r19,0(r2)
  8150b4:	00c00804 	movi	r3,32
  8150b8:	9927883a 	add	r19,r19,r4
  8150bc:	1ce9c83a 	sub	r20,r3,r19
  8150c0:	a000581e 	bne	r20,zero,815224 <__umoddi3+0x2cc>
  8150c4:	3c400136 	bltu	r7,r17,8150cc <__umoddi3+0x174>
  8150c8:	8180eb36 	bltu	r16,r6,815478 <__umoddi3+0x520>
  8150cc:	8185c83a 	sub	r2,r16,r6
  8150d0:	89e3c83a 	sub	r17,r17,r7
  8150d4:	8089803a 	cmpltu	r4,r16,r2
  8150d8:	8939c83a 	sub	fp,r17,r4
  8150dc:	e007883a 	mov	r3,fp
  8150e0:	00003706 	br	8151c0 <__umoddi3+0x268>
  8150e4:	3000041e 	bne	r6,zero,8150f8 <__umoddi3+0x1a0>
  8150e8:	000b883a 	mov	r5,zero
  8150ec:	01000044 	movi	r4,1
  8150f0:	08155880 	call	815588 <__udivsi3>
  8150f4:	1027883a 	mov	r19,r2
  8150f8:	00bfffd4 	movui	r2,65535
  8150fc:	14c0402e 	bgeu	r2,r19,815200 <__umoddi3+0x2a8>
  815100:	00804034 	movhi	r2,256
  815104:	10bfffc4 	addi	r2,r2,-1
  815108:	14c0cd36 	bltu	r2,r19,815440 <__umoddi3+0x4e8>
  81510c:	00800404 	movi	r2,16
  815110:	9886d83a 	srl	r3,r19,r2
  815114:	010020b4 	movhi	r4,130
  815118:	2132e584 	addi	r4,r4,-13418
  81511c:	20c7883a 	add	r3,r4,r3
  815120:	18c00003 	ldbu	r3,0(r3)
  815124:	1887883a 	add	r3,r3,r2
  815128:	00800804 	movi	r2,32
  81512c:	10e5c83a 	sub	r18,r2,r3
  815130:	9000901e 	bne	r18,zero,815374 <__umoddi3+0x41c>
  815134:	982cd43a 	srli	r22,r19,16
  815138:	8ce3c83a 	sub	r17,r17,r19
  81513c:	9d7fffcc 	andi	r21,r19,65535
  815140:	b00b883a 	mov	r5,r22
  815144:	8809883a 	mov	r4,r17
  815148:	08155ec0 	call	8155ec <__umodsi3>
  81514c:	8809883a 	mov	r4,r17
  815150:	b00b883a 	mov	r5,r22
  815154:	1021883a 	mov	r16,r2
  815158:	08155880 	call	815588 <__udivsi3>
  81515c:	8006943a 	slli	r3,r16,16
  815160:	a008d43a 	srli	r4,r20,16
  815164:	1545383a 	mul	r2,r2,r21
  815168:	20c8b03a 	or	r4,r4,r3
  81516c:	2080042e 	bgeu	r4,r2,815180 <__umoddi3+0x228>
  815170:	24c9883a 	add	r4,r4,r19
  815174:	24c00236 	bltu	r4,r19,815180 <__umoddi3+0x228>
  815178:	2080012e 	bgeu	r4,r2,815180 <__umoddi3+0x228>
  81517c:	24c9883a 	add	r4,r4,r19
  815180:	20a1c83a 	sub	r16,r4,r2
  815184:	b00b883a 	mov	r5,r22
  815188:	8009883a 	mov	r4,r16
  81518c:	08155ec0 	call	8155ec <__umodsi3>
  815190:	1023883a 	mov	r17,r2
  815194:	b00b883a 	mov	r5,r22
  815198:	8009883a 	mov	r4,r16
  81519c:	08155880 	call	815588 <__udivsi3>
  8151a0:	8822943a 	slli	r17,r17,16
  8151a4:	1545383a 	mul	r2,r2,r21
  8151a8:	a53fffcc 	andi	r20,r20,65535
  8151ac:	a446b03a 	or	r3,r20,r17
  8151b0:	18bfb02e 	bgeu	r3,r2,815074 <__alt_data_end+0xff815074>
  8151b4:	003fab06 	br	815064 <__alt_data_end+0xff815064>
  8151b8:	2005883a 	mov	r2,r4
  8151bc:	2807883a 	mov	r3,r5
  8151c0:	dfc00b17 	ldw	ra,44(sp)
  8151c4:	df000a17 	ldw	fp,40(sp)
  8151c8:	ddc00917 	ldw	r23,36(sp)
  8151cc:	dd800817 	ldw	r22,32(sp)
  8151d0:	dd400717 	ldw	r21,28(sp)
  8151d4:	dd000617 	ldw	r20,24(sp)
  8151d8:	dcc00517 	ldw	r19,20(sp)
  8151dc:	dc800417 	ldw	r18,16(sp)
  8151e0:	dc400317 	ldw	r17,12(sp)
  8151e4:	dc000217 	ldw	r16,8(sp)
  8151e8:	dec00c04 	addi	sp,sp,48
  8151ec:	f800283a 	ret
  8151f0:	04c03fc4 	movi	r19,255
  8151f4:	99c9803a 	cmpltu	r4,r19,r7
  8151f8:	200890fa 	slli	r4,r4,3
  8151fc:	003fa806 	br	8150a0 <__alt_data_end+0xff8150a0>
  815200:	00803fc4 	movi	r2,255
  815204:	14c5803a 	cmpltu	r2,r2,r19
  815208:	100490fa 	slli	r2,r2,3
  81520c:	003fc006 	br	815110 <__alt_data_end+0xff815110>
  815210:	00804034 	movhi	r2,256
  815214:	10bfffc4 	addi	r2,r2,-1
  815218:	11808b36 	bltu	r2,r6,815448 <__umoddi3+0x4f0>
  81521c:	01000404 	movi	r4,16
  815220:	003f6406 	br	814fb4 <__alt_data_end+0xff814fb4>
  815224:	34c4d83a 	srl	r2,r6,r19
  815228:	3d0e983a 	sll	r7,r7,r20
  81522c:	8cf8d83a 	srl	fp,r17,r19
  815230:	8d10983a 	sll	r8,r17,r20
  815234:	38aab03a 	or	r21,r7,r2
  815238:	a82cd43a 	srli	r22,r21,16
  81523c:	84e2d83a 	srl	r17,r16,r19
  815240:	e009883a 	mov	r4,fp
  815244:	b00b883a 	mov	r5,r22
  815248:	8a22b03a 	or	r17,r17,r8
  81524c:	3524983a 	sll	r18,r6,r20
  815250:	08155ec0 	call	8155ec <__umodsi3>
  815254:	e009883a 	mov	r4,fp
  815258:	b00b883a 	mov	r5,r22
  81525c:	102f883a 	mov	r23,r2
  815260:	08155880 	call	815588 <__udivsi3>
  815264:	100d883a 	mov	r6,r2
  815268:	b808943a 	slli	r4,r23,16
  81526c:	aa3fffcc 	andi	r8,r21,65535
  815270:	8804d43a 	srli	r2,r17,16
  815274:	41af383a 	mul	r23,r8,r6
  815278:	8520983a 	sll	r16,r16,r20
  81527c:	1104b03a 	or	r2,r2,r4
  815280:	15c0042e 	bgeu	r2,r23,815294 <__umoddi3+0x33c>
  815284:	1545883a 	add	r2,r2,r21
  815288:	30ffffc4 	addi	r3,r6,-1
  81528c:	1540742e 	bgeu	r2,r21,815460 <__umoddi3+0x508>
  815290:	180d883a 	mov	r6,r3
  815294:	15efc83a 	sub	r23,r2,r23
  815298:	b00b883a 	mov	r5,r22
  81529c:	b809883a 	mov	r4,r23
  8152a0:	d9800115 	stw	r6,4(sp)
  8152a4:	da000015 	stw	r8,0(sp)
  8152a8:	08155ec0 	call	8155ec <__umodsi3>
  8152ac:	b00b883a 	mov	r5,r22
  8152b0:	b809883a 	mov	r4,r23
  8152b4:	1039883a 	mov	fp,r2
  8152b8:	08155880 	call	815588 <__udivsi3>
  8152bc:	da000017 	ldw	r8,0(sp)
  8152c0:	e038943a 	slli	fp,fp,16
  8152c4:	100b883a 	mov	r5,r2
  8152c8:	4089383a 	mul	r4,r8,r2
  8152cc:	8a3fffcc 	andi	r8,r17,65535
  8152d0:	4710b03a 	or	r8,r8,fp
  8152d4:	d9800117 	ldw	r6,4(sp)
  8152d8:	4100042e 	bgeu	r8,r4,8152ec <__umoddi3+0x394>
  8152dc:	4551883a 	add	r8,r8,r21
  8152e0:	10bfffc4 	addi	r2,r2,-1
  8152e4:	45405a2e 	bgeu	r8,r21,815450 <__umoddi3+0x4f8>
  8152e8:	100b883a 	mov	r5,r2
  8152ec:	300c943a 	slli	r6,r6,16
  8152f0:	91ffffcc 	andi	r7,r18,65535
  8152f4:	9004d43a 	srli	r2,r18,16
  8152f8:	314cb03a 	or	r6,r6,r5
  8152fc:	317fffcc 	andi	r5,r6,65535
  815300:	300cd43a 	srli	r6,r6,16
  815304:	29d3383a 	mul	r9,r5,r7
  815308:	288b383a 	mul	r5,r5,r2
  81530c:	31cf383a 	mul	r7,r6,r7
  815310:	4806d43a 	srli	r3,r9,16
  815314:	4111c83a 	sub	r8,r8,r4
  815318:	29cb883a 	add	r5,r5,r7
  81531c:	194b883a 	add	r5,r3,r5
  815320:	3085383a 	mul	r2,r6,r2
  815324:	29c0022e 	bgeu	r5,r7,815330 <__umoddi3+0x3d8>
  815328:	00c00074 	movhi	r3,1
  81532c:	10c5883a 	add	r2,r2,r3
  815330:	2808d43a 	srli	r4,r5,16
  815334:	280a943a 	slli	r5,r5,16
  815338:	4a7fffcc 	andi	r9,r9,65535
  81533c:	2085883a 	add	r2,r4,r2
  815340:	2a4b883a 	add	r5,r5,r9
  815344:	40803636 	bltu	r8,r2,815420 <__umoddi3+0x4c8>
  815348:	40804d26 	beq	r8,r2,815480 <__umoddi3+0x528>
  81534c:	4089c83a 	sub	r4,r8,r2
  815350:	280f883a 	mov	r7,r5
  815354:	81cfc83a 	sub	r7,r16,r7
  815358:	81c7803a 	cmpltu	r3,r16,r7
  81535c:	20c7c83a 	sub	r3,r4,r3
  815360:	1cc4983a 	sll	r2,r3,r19
  815364:	3d0ed83a 	srl	r7,r7,r20
  815368:	1d06d83a 	srl	r3,r3,r20
  81536c:	11c4b03a 	or	r2,r2,r7
  815370:	003f9306 	br	8151c0 <__alt_data_end+0xff8151c0>
  815374:	9ca6983a 	sll	r19,r19,r18
  815378:	88e8d83a 	srl	r20,r17,r3
  81537c:	80c4d83a 	srl	r2,r16,r3
  815380:	982cd43a 	srli	r22,r19,16
  815384:	8ca2983a 	sll	r17,r17,r18
  815388:	a009883a 	mov	r4,r20
  81538c:	b00b883a 	mov	r5,r22
  815390:	1478b03a 	or	fp,r2,r17
  815394:	08155ec0 	call	8155ec <__umodsi3>
  815398:	a009883a 	mov	r4,r20
  81539c:	b00b883a 	mov	r5,r22
  8153a0:	1023883a 	mov	r17,r2
  8153a4:	08155880 	call	815588 <__udivsi3>
  8153a8:	9d7fffcc 	andi	r21,r19,65535
  8153ac:	880a943a 	slli	r5,r17,16
  8153b0:	e008d43a 	srli	r4,fp,16
  8153b4:	a885383a 	mul	r2,r21,r2
  8153b8:	84a8983a 	sll	r20,r16,r18
  8153bc:	2148b03a 	or	r4,r4,r5
  8153c0:	2080042e 	bgeu	r4,r2,8153d4 <__umoddi3+0x47c>
  8153c4:	24c9883a 	add	r4,r4,r19
  8153c8:	24c00236 	bltu	r4,r19,8153d4 <__umoddi3+0x47c>
  8153cc:	2080012e 	bgeu	r4,r2,8153d4 <__umoddi3+0x47c>
  8153d0:	24c9883a 	add	r4,r4,r19
  8153d4:	20a3c83a 	sub	r17,r4,r2
  8153d8:	b00b883a 	mov	r5,r22
  8153dc:	8809883a 	mov	r4,r17
  8153e0:	08155ec0 	call	8155ec <__umodsi3>
  8153e4:	102f883a 	mov	r23,r2
  8153e8:	8809883a 	mov	r4,r17
  8153ec:	b00b883a 	mov	r5,r22
  8153f0:	08155880 	call	815588 <__udivsi3>
  8153f4:	b82e943a 	slli	r23,r23,16
  8153f8:	a885383a 	mul	r2,r21,r2
  8153fc:	e13fffcc 	andi	r4,fp,65535
  815400:	25c8b03a 	or	r4,r4,r23
  815404:	2080042e 	bgeu	r4,r2,815418 <__umoddi3+0x4c0>
  815408:	24c9883a 	add	r4,r4,r19
  81540c:	24c00236 	bltu	r4,r19,815418 <__umoddi3+0x4c0>
  815410:	2080012e 	bgeu	r4,r2,815418 <__umoddi3+0x4c0>
  815414:	24c9883a 	add	r4,r4,r19
  815418:	20a3c83a 	sub	r17,r4,r2
  81541c:	003f4806 	br	815140 <__alt_data_end+0xff815140>
  815420:	2c8fc83a 	sub	r7,r5,r18
  815424:	1545c83a 	sub	r2,r2,r21
  815428:	29cb803a 	cmpltu	r5,r5,r7
  81542c:	1145c83a 	sub	r2,r2,r5
  815430:	4089c83a 	sub	r4,r8,r2
  815434:	003fc706 	br	815354 <__alt_data_end+0xff815354>
  815438:	01000604 	movi	r4,24
  81543c:	003f1806 	br	8150a0 <__alt_data_end+0xff8150a0>
  815440:	00800604 	movi	r2,24
  815444:	003f3206 	br	815110 <__alt_data_end+0xff815110>
  815448:	01000604 	movi	r4,24
  81544c:	003ed906 	br	814fb4 <__alt_data_end+0xff814fb4>
  815450:	413fa52e 	bgeu	r8,r4,8152e8 <__alt_data_end+0xff8152e8>
  815454:	297fff84 	addi	r5,r5,-2
  815458:	4551883a 	add	r8,r8,r21
  81545c:	003fa306 	br	8152ec <__alt_data_end+0xff8152ec>
  815460:	15ff8b2e 	bgeu	r2,r23,815290 <__alt_data_end+0xff815290>
  815464:	31bfff84 	addi	r6,r6,-2
  815468:	1545883a 	add	r2,r2,r21
  81546c:	003f8906 	br	815294 <__alt_data_end+0xff815294>
  815470:	24c9883a 	add	r4,r4,r19
  815474:	003eee06 	br	815030 <__alt_data_end+0xff815030>
  815478:	8005883a 	mov	r2,r16
  81547c:	003f1706 	br	8150dc <__alt_data_end+0xff8150dc>
  815480:	817fe736 	bltu	r16,r5,815420 <__alt_data_end+0xff815420>
  815484:	280f883a 	mov	r7,r5
  815488:	0009883a 	mov	r4,zero
  81548c:	003fb106 	br	815354 <__alt_data_end+0xff815354>

00815490 <__divsi3>:
  815490:	20001b16 	blt	r4,zero,815500 <__divsi3+0x70>
  815494:	000f883a 	mov	r7,zero
  815498:	28001616 	blt	r5,zero,8154f4 <__divsi3+0x64>
  81549c:	200d883a 	mov	r6,r4
  8154a0:	29001a2e 	bgeu	r5,r4,81550c <__divsi3+0x7c>
  8154a4:	00800804 	movi	r2,32
  8154a8:	00c00044 	movi	r3,1
  8154ac:	00000106 	br	8154b4 <__divsi3+0x24>
  8154b0:	10000d26 	beq	r2,zero,8154e8 <__divsi3+0x58>
  8154b4:	294b883a 	add	r5,r5,r5
  8154b8:	10bfffc4 	addi	r2,r2,-1
  8154bc:	18c7883a 	add	r3,r3,r3
  8154c0:	293ffb36 	bltu	r5,r4,8154b0 <__alt_data_end+0xff8154b0>
  8154c4:	0005883a 	mov	r2,zero
  8154c8:	18000726 	beq	r3,zero,8154e8 <__divsi3+0x58>
  8154cc:	0005883a 	mov	r2,zero
  8154d0:	31400236 	bltu	r6,r5,8154dc <__divsi3+0x4c>
  8154d4:	314dc83a 	sub	r6,r6,r5
  8154d8:	10c4b03a 	or	r2,r2,r3
  8154dc:	1806d07a 	srli	r3,r3,1
  8154e0:	280ad07a 	srli	r5,r5,1
  8154e4:	183ffa1e 	bne	r3,zero,8154d0 <__alt_data_end+0xff8154d0>
  8154e8:	38000126 	beq	r7,zero,8154f0 <__divsi3+0x60>
  8154ec:	0085c83a 	sub	r2,zero,r2
  8154f0:	f800283a 	ret
  8154f4:	014bc83a 	sub	r5,zero,r5
  8154f8:	39c0005c 	xori	r7,r7,1
  8154fc:	003fe706 	br	81549c <__alt_data_end+0xff81549c>
  815500:	0109c83a 	sub	r4,zero,r4
  815504:	01c00044 	movi	r7,1
  815508:	003fe306 	br	815498 <__alt_data_end+0xff815498>
  81550c:	00c00044 	movi	r3,1
  815510:	003fee06 	br	8154cc <__alt_data_end+0xff8154cc>

00815514 <__modsi3>:
  815514:	20001716 	blt	r4,zero,815574 <__modsi3+0x60>
  815518:	000f883a 	mov	r7,zero
  81551c:	2005883a 	mov	r2,r4
  815520:	28001216 	blt	r5,zero,81556c <__modsi3+0x58>
  815524:	2900162e 	bgeu	r5,r4,815580 <__modsi3+0x6c>
  815528:	01800804 	movi	r6,32
  81552c:	00c00044 	movi	r3,1
  815530:	00000106 	br	815538 <__modsi3+0x24>
  815534:	30000a26 	beq	r6,zero,815560 <__modsi3+0x4c>
  815538:	294b883a 	add	r5,r5,r5
  81553c:	31bfffc4 	addi	r6,r6,-1
  815540:	18c7883a 	add	r3,r3,r3
  815544:	293ffb36 	bltu	r5,r4,815534 <__alt_data_end+0xff815534>
  815548:	18000526 	beq	r3,zero,815560 <__modsi3+0x4c>
  81554c:	1806d07a 	srli	r3,r3,1
  815550:	11400136 	bltu	r2,r5,815558 <__modsi3+0x44>
  815554:	1145c83a 	sub	r2,r2,r5
  815558:	280ad07a 	srli	r5,r5,1
  81555c:	183ffb1e 	bne	r3,zero,81554c <__alt_data_end+0xff81554c>
  815560:	38000126 	beq	r7,zero,815568 <__modsi3+0x54>
  815564:	0085c83a 	sub	r2,zero,r2
  815568:	f800283a 	ret
  81556c:	014bc83a 	sub	r5,zero,r5
  815570:	003fec06 	br	815524 <__alt_data_end+0xff815524>
  815574:	0109c83a 	sub	r4,zero,r4
  815578:	01c00044 	movi	r7,1
  81557c:	003fe706 	br	81551c <__alt_data_end+0xff81551c>
  815580:	00c00044 	movi	r3,1
  815584:	003ff106 	br	81554c <__alt_data_end+0xff81554c>

00815588 <__udivsi3>:
  815588:	200d883a 	mov	r6,r4
  81558c:	2900152e 	bgeu	r5,r4,8155e4 <__udivsi3+0x5c>
  815590:	28001416 	blt	r5,zero,8155e4 <__udivsi3+0x5c>
  815594:	00800804 	movi	r2,32
  815598:	00c00044 	movi	r3,1
  81559c:	00000206 	br	8155a8 <__udivsi3+0x20>
  8155a0:	10000e26 	beq	r2,zero,8155dc <__udivsi3+0x54>
  8155a4:	28000516 	blt	r5,zero,8155bc <__udivsi3+0x34>
  8155a8:	294b883a 	add	r5,r5,r5
  8155ac:	10bfffc4 	addi	r2,r2,-1
  8155b0:	18c7883a 	add	r3,r3,r3
  8155b4:	293ffa36 	bltu	r5,r4,8155a0 <__alt_data_end+0xff8155a0>
  8155b8:	18000826 	beq	r3,zero,8155dc <__udivsi3+0x54>
  8155bc:	0005883a 	mov	r2,zero
  8155c0:	31400236 	bltu	r6,r5,8155cc <__udivsi3+0x44>
  8155c4:	314dc83a 	sub	r6,r6,r5
  8155c8:	10c4b03a 	or	r2,r2,r3
  8155cc:	1806d07a 	srli	r3,r3,1
  8155d0:	280ad07a 	srli	r5,r5,1
  8155d4:	183ffa1e 	bne	r3,zero,8155c0 <__alt_data_end+0xff8155c0>
  8155d8:	f800283a 	ret
  8155dc:	0005883a 	mov	r2,zero
  8155e0:	f800283a 	ret
  8155e4:	00c00044 	movi	r3,1
  8155e8:	003ff406 	br	8155bc <__alt_data_end+0xff8155bc>

008155ec <__umodsi3>:
  8155ec:	2005883a 	mov	r2,r4
  8155f0:	2900122e 	bgeu	r5,r4,81563c <__umodsi3+0x50>
  8155f4:	28001116 	blt	r5,zero,81563c <__umodsi3+0x50>
  8155f8:	01800804 	movi	r6,32
  8155fc:	00c00044 	movi	r3,1
  815600:	00000206 	br	81560c <__umodsi3+0x20>
  815604:	30000c26 	beq	r6,zero,815638 <__umodsi3+0x4c>
  815608:	28000516 	blt	r5,zero,815620 <__umodsi3+0x34>
  81560c:	294b883a 	add	r5,r5,r5
  815610:	31bfffc4 	addi	r6,r6,-1
  815614:	18c7883a 	add	r3,r3,r3
  815618:	293ffa36 	bltu	r5,r4,815604 <__alt_data_end+0xff815604>
  81561c:	18000626 	beq	r3,zero,815638 <__umodsi3+0x4c>
  815620:	1806d07a 	srli	r3,r3,1
  815624:	11400136 	bltu	r2,r5,81562c <__umodsi3+0x40>
  815628:	1145c83a 	sub	r2,r2,r5
  81562c:	280ad07a 	srli	r5,r5,1
  815630:	183ffb1e 	bne	r3,zero,815620 <__alt_data_end+0xff815620>
  815634:	f800283a 	ret
  815638:	f800283a 	ret
  81563c:	00c00044 	movi	r3,1
  815640:	003ff706 	br	815620 <__alt_data_end+0xff815620>

00815644 <__eqsf2>:
  815644:	2006d5fa 	srli	r3,r4,23
  815648:	280cd5fa 	srli	r6,r5,23
  81564c:	01c02034 	movhi	r7,128
  815650:	39ffffc4 	addi	r7,r7,-1
  815654:	18c03fcc 	andi	r3,r3,255
  815658:	02003fc4 	movi	r8,255
  81565c:	3904703a 	and	r2,r7,r4
  815660:	31803fcc 	andi	r6,r6,255
  815664:	394e703a 	and	r7,r7,r5
  815668:	2008d7fa 	srli	r4,r4,31
  81566c:	280ad7fa 	srli	r5,r5,31
  815670:	1a000d26 	beq	r3,r8,8156a8 <__eqsf2+0x64>
  815674:	02003fc4 	movi	r8,255
  815678:	32000826 	beq	r6,r8,81569c <__eqsf2+0x58>
  81567c:	19800226 	beq	r3,r6,815688 <__eqsf2+0x44>
  815680:	00800044 	movi	r2,1
  815684:	f800283a 	ret
  815688:	11fffd1e 	bne	r2,r7,815680 <__alt_data_end+0xff815680>
  81568c:	21400926 	beq	r4,r5,8156b4 <__eqsf2+0x70>
  815690:	183ffb1e 	bne	r3,zero,815680 <__alt_data_end+0xff815680>
  815694:	1004c03a 	cmpne	r2,r2,zero
  815698:	f800283a 	ret
  81569c:	383ff726 	beq	r7,zero,81567c <__alt_data_end+0xff81567c>
  8156a0:	00800044 	movi	r2,1
  8156a4:	f800283a 	ret
  8156a8:	103ff226 	beq	r2,zero,815674 <__alt_data_end+0xff815674>
  8156ac:	00800044 	movi	r2,1
  8156b0:	f800283a 	ret
  8156b4:	0005883a 	mov	r2,zero
  8156b8:	f800283a 	ret

008156bc <__gesf2>:
  8156bc:	2004d5fa 	srli	r2,r4,23
  8156c0:	2806d5fa 	srli	r3,r5,23
  8156c4:	01802034 	movhi	r6,128
  8156c8:	31bfffc4 	addi	r6,r6,-1
  8156cc:	10803fcc 	andi	r2,r2,255
  8156d0:	01c03fc4 	movi	r7,255
  8156d4:	3110703a 	and	r8,r6,r4
  8156d8:	18c03fcc 	andi	r3,r3,255
  8156dc:	314c703a 	and	r6,r6,r5
  8156e0:	2008d7fa 	srli	r4,r4,31
  8156e4:	280ad7fa 	srli	r5,r5,31
  8156e8:	11c01926 	beq	r2,r7,815750 <__gesf2+0x94>
  8156ec:	01c03fc4 	movi	r7,255
  8156f0:	19c00f26 	beq	r3,r7,815730 <__gesf2+0x74>
  8156f4:	1000061e 	bne	r2,zero,815710 <__gesf2+0x54>
  8156f8:	400f003a 	cmpeq	r7,r8,zero
  8156fc:	1800071e 	bne	r3,zero,81571c <__gesf2+0x60>
  815700:	3000061e 	bne	r6,zero,81571c <__gesf2+0x60>
  815704:	0005883a 	mov	r2,zero
  815708:	40000e1e 	bne	r8,zero,815744 <__gesf2+0x88>
  81570c:	f800283a 	ret
  815710:	18000a1e 	bne	r3,zero,81573c <__gesf2+0x80>
  815714:	30000b26 	beq	r6,zero,815744 <__gesf2+0x88>
  815718:	000f883a 	mov	r7,zero
  81571c:	29403fcc 	andi	r5,r5,255
  815720:	38000726 	beq	r7,zero,815740 <__gesf2+0x84>
  815724:	28000826 	beq	r5,zero,815748 <__gesf2+0x8c>
  815728:	00800044 	movi	r2,1
  81572c:	f800283a 	ret
  815730:	303ff026 	beq	r6,zero,8156f4 <__alt_data_end+0xff8156f4>
  815734:	00bfff84 	movi	r2,-2
  815738:	f800283a 	ret
  81573c:	29403fcc 	andi	r5,r5,255
  815740:	21400526 	beq	r4,r5,815758 <__gesf2+0x9c>
  815744:	203ff826 	beq	r4,zero,815728 <__alt_data_end+0xff815728>
  815748:	00bfffc4 	movi	r2,-1
  81574c:	f800283a 	ret
  815750:	403fe626 	beq	r8,zero,8156ec <__alt_data_end+0xff8156ec>
  815754:	003ff706 	br	815734 <__alt_data_end+0xff815734>
  815758:	18bffa16 	blt	r3,r2,815744 <__alt_data_end+0xff815744>
  81575c:	10c00216 	blt	r2,r3,815768 <__gesf2+0xac>
  815760:	323ff836 	bltu	r6,r8,815744 <__alt_data_end+0xff815744>
  815764:	4180022e 	bgeu	r8,r6,815770 <__gesf2+0xb4>
  815768:	203fef1e 	bne	r4,zero,815728 <__alt_data_end+0xff815728>
  81576c:	003ff606 	br	815748 <__alt_data_end+0xff815748>
  815770:	0005883a 	mov	r2,zero
  815774:	f800283a 	ret

00815778 <__lesf2>:
  815778:	2004d5fa 	srli	r2,r4,23
  81577c:	280cd5fa 	srli	r6,r5,23
  815780:	00c02034 	movhi	r3,128
  815784:	18ffffc4 	addi	r3,r3,-1
  815788:	10803fcc 	andi	r2,r2,255
  81578c:	01c03fc4 	movi	r7,255
  815790:	1910703a 	and	r8,r3,r4
  815794:	31803fcc 	andi	r6,r6,255
  815798:	1946703a 	and	r3,r3,r5
  81579c:	2008d7fa 	srli	r4,r4,31
  8157a0:	280ad7fa 	srli	r5,r5,31
  8157a4:	11c01b26 	beq	r2,r7,815814 <__lesf2+0x9c>
  8157a8:	01c03fc4 	movi	r7,255
  8157ac:	31c01126 	beq	r6,r7,8157f4 <__lesf2+0x7c>
  8157b0:	1000071e 	bne	r2,zero,8157d0 <__lesf2+0x58>
  8157b4:	400f003a 	cmpeq	r7,r8,zero
  8157b8:	21003fcc 	andi	r4,r4,255
  8157bc:	3000081e 	bne	r6,zero,8157e0 <__lesf2+0x68>
  8157c0:	1800071e 	bne	r3,zero,8157e0 <__lesf2+0x68>
  8157c4:	0005883a 	mov	r2,zero
  8157c8:	40000f1e 	bne	r8,zero,815808 <__lesf2+0x90>
  8157cc:	f800283a 	ret
  8157d0:	21003fcc 	andi	r4,r4,255
  8157d4:	30000a1e 	bne	r6,zero,815800 <__lesf2+0x88>
  8157d8:	18000b26 	beq	r3,zero,815808 <__lesf2+0x90>
  8157dc:	000f883a 	mov	r7,zero
  8157e0:	29403fcc 	andi	r5,r5,255
  8157e4:	38000726 	beq	r7,zero,815804 <__lesf2+0x8c>
  8157e8:	28000826 	beq	r5,zero,81580c <__lesf2+0x94>
  8157ec:	00800044 	movi	r2,1
  8157f0:	f800283a 	ret
  8157f4:	183fee26 	beq	r3,zero,8157b0 <__alt_data_end+0xff8157b0>
  8157f8:	00800084 	movi	r2,2
  8157fc:	f800283a 	ret
  815800:	29403fcc 	andi	r5,r5,255
  815804:	21400626 	beq	r4,r5,815820 <__lesf2+0xa8>
  815808:	203ff826 	beq	r4,zero,8157ec <__alt_data_end+0xff8157ec>
  81580c:	00bfffc4 	movi	r2,-1
  815810:	f800283a 	ret
  815814:	403fe426 	beq	r8,zero,8157a8 <__alt_data_end+0xff8157a8>
  815818:	00800084 	movi	r2,2
  81581c:	f800283a 	ret
  815820:	30bff916 	blt	r6,r2,815808 <__alt_data_end+0xff815808>
  815824:	11800216 	blt	r2,r6,815830 <__lesf2+0xb8>
  815828:	1a3ff736 	bltu	r3,r8,815808 <__alt_data_end+0xff815808>
  81582c:	40c0022e 	bgeu	r8,r3,815838 <__lesf2+0xc0>
  815830:	203fee1e 	bne	r4,zero,8157ec <__alt_data_end+0xff8157ec>
  815834:	003ff506 	br	81580c <__alt_data_end+0xff81580c>
  815838:	0005883a 	mov	r2,zero
  81583c:	f800283a 	ret

00815840 <__adddf3>:
  815840:	02c00434 	movhi	r11,16
  815844:	5affffc4 	addi	r11,r11,-1
  815848:	2806d7fa 	srli	r3,r5,31
  81584c:	2ad4703a 	and	r10,r5,r11
  815850:	3ad2703a 	and	r9,r7,r11
  815854:	3804d53a 	srli	r2,r7,20
  815858:	3018d77a 	srli	r12,r6,29
  81585c:	280ad53a 	srli	r5,r5,20
  815860:	501490fa 	slli	r10,r10,3
  815864:	2010d77a 	srli	r8,r4,29
  815868:	481290fa 	slli	r9,r9,3
  81586c:	380ed7fa 	srli	r7,r7,31
  815870:	defffb04 	addi	sp,sp,-20
  815874:	dc800215 	stw	r18,8(sp)
  815878:	dc400115 	stw	r17,4(sp)
  81587c:	dc000015 	stw	r16,0(sp)
  815880:	dfc00415 	stw	ra,16(sp)
  815884:	dcc00315 	stw	r19,12(sp)
  815888:	1c803fcc 	andi	r18,r3,255
  81588c:	2c01ffcc 	andi	r16,r5,2047
  815890:	5210b03a 	or	r8,r10,r8
  815894:	202290fa 	slli	r17,r4,3
  815898:	1081ffcc 	andi	r2,r2,2047
  81589c:	4b12b03a 	or	r9,r9,r12
  8158a0:	300c90fa 	slli	r6,r6,3
  8158a4:	91c07526 	beq	r18,r7,815a7c <__adddf3+0x23c>
  8158a8:	8087c83a 	sub	r3,r16,r2
  8158ac:	00c0ab0e 	bge	zero,r3,815b5c <__adddf3+0x31c>
  8158b0:	10002a1e 	bne	r2,zero,81595c <__adddf3+0x11c>
  8158b4:	4984b03a 	or	r2,r9,r6
  8158b8:	1000961e 	bne	r2,zero,815b14 <__adddf3+0x2d4>
  8158bc:	888001cc 	andi	r2,r17,7
  8158c0:	10000726 	beq	r2,zero,8158e0 <__adddf3+0xa0>
  8158c4:	888003cc 	andi	r2,r17,15
  8158c8:	00c00104 	movi	r3,4
  8158cc:	10c00426 	beq	r2,r3,8158e0 <__adddf3+0xa0>
  8158d0:	88c7883a 	add	r3,r17,r3
  8158d4:	1c63803a 	cmpltu	r17,r3,r17
  8158d8:	4451883a 	add	r8,r8,r17
  8158dc:	1823883a 	mov	r17,r3
  8158e0:	4080202c 	andhi	r2,r8,128
  8158e4:	10005926 	beq	r2,zero,815a4c <__adddf3+0x20c>
  8158e8:	84000044 	addi	r16,r16,1
  8158ec:	0081ffc4 	movi	r2,2047
  8158f0:	8080ba26 	beq	r16,r2,815bdc <__adddf3+0x39c>
  8158f4:	00bfe034 	movhi	r2,65408
  8158f8:	10bfffc4 	addi	r2,r2,-1
  8158fc:	4090703a 	and	r8,r8,r2
  815900:	4004977a 	slli	r2,r8,29
  815904:	4010927a 	slli	r8,r8,9
  815908:	8822d0fa 	srli	r17,r17,3
  81590c:	8401ffcc 	andi	r16,r16,2047
  815910:	4010d33a 	srli	r8,r8,12
  815914:	9007883a 	mov	r3,r18
  815918:	1444b03a 	or	r2,r2,r17
  81591c:	8401ffcc 	andi	r16,r16,2047
  815920:	8020953a 	slli	r16,r16,20
  815924:	18c03fcc 	andi	r3,r3,255
  815928:	01000434 	movhi	r4,16
  81592c:	213fffc4 	addi	r4,r4,-1
  815930:	180697fa 	slli	r3,r3,31
  815934:	4110703a 	and	r8,r8,r4
  815938:	4410b03a 	or	r8,r8,r16
  81593c:	40c6b03a 	or	r3,r8,r3
  815940:	dfc00417 	ldw	ra,16(sp)
  815944:	dcc00317 	ldw	r19,12(sp)
  815948:	dc800217 	ldw	r18,8(sp)
  81594c:	dc400117 	ldw	r17,4(sp)
  815950:	dc000017 	ldw	r16,0(sp)
  815954:	dec00504 	addi	sp,sp,20
  815958:	f800283a 	ret
  81595c:	0081ffc4 	movi	r2,2047
  815960:	80bfd626 	beq	r16,r2,8158bc <__alt_data_end+0xff8158bc>
  815964:	4a402034 	orhi	r9,r9,128
  815968:	00800e04 	movi	r2,56
  81596c:	10c09f16 	blt	r2,r3,815bec <__adddf3+0x3ac>
  815970:	008007c4 	movi	r2,31
  815974:	10c0c216 	blt	r2,r3,815c80 <__adddf3+0x440>
  815978:	00800804 	movi	r2,32
  81597c:	10c5c83a 	sub	r2,r2,r3
  815980:	488a983a 	sll	r5,r9,r2
  815984:	30c8d83a 	srl	r4,r6,r3
  815988:	3084983a 	sll	r2,r6,r2
  81598c:	48c6d83a 	srl	r3,r9,r3
  815990:	290cb03a 	or	r6,r5,r4
  815994:	1004c03a 	cmpne	r2,r2,zero
  815998:	308cb03a 	or	r6,r6,r2
  81599c:	898dc83a 	sub	r6,r17,r6
  8159a0:	89a3803a 	cmpltu	r17,r17,r6
  8159a4:	40d1c83a 	sub	r8,r8,r3
  8159a8:	4451c83a 	sub	r8,r8,r17
  8159ac:	3023883a 	mov	r17,r6
  8159b0:	4080202c 	andhi	r2,r8,128
  8159b4:	10002326 	beq	r2,zero,815a44 <__adddf3+0x204>
  8159b8:	04c02034 	movhi	r19,128
  8159bc:	9cffffc4 	addi	r19,r19,-1
  8159c0:	44e6703a 	and	r19,r8,r19
  8159c4:	98007626 	beq	r19,zero,815ba0 <__adddf3+0x360>
  8159c8:	9809883a 	mov	r4,r19
  8159cc:	0817fec0 	call	817fec <__clzsi2>
  8159d0:	10fffe04 	addi	r3,r2,-8
  8159d4:	010007c4 	movi	r4,31
  8159d8:	20c07716 	blt	r4,r3,815bb8 <__adddf3+0x378>
  8159dc:	00800804 	movi	r2,32
  8159e0:	10c5c83a 	sub	r2,r2,r3
  8159e4:	8884d83a 	srl	r2,r17,r2
  8159e8:	98d0983a 	sll	r8,r19,r3
  8159ec:	88e2983a 	sll	r17,r17,r3
  8159f0:	1204b03a 	or	r2,r2,r8
  8159f4:	1c007416 	blt	r3,r16,815bc8 <__adddf3+0x388>
  8159f8:	1c21c83a 	sub	r16,r3,r16
  8159fc:	82000044 	addi	r8,r16,1
  815a00:	00c007c4 	movi	r3,31
  815a04:	1a009116 	blt	r3,r8,815c4c <__adddf3+0x40c>
  815a08:	00c00804 	movi	r3,32
  815a0c:	1a07c83a 	sub	r3,r3,r8
  815a10:	8a08d83a 	srl	r4,r17,r8
  815a14:	88e2983a 	sll	r17,r17,r3
  815a18:	10c6983a 	sll	r3,r2,r3
  815a1c:	1210d83a 	srl	r8,r2,r8
  815a20:	8804c03a 	cmpne	r2,r17,zero
  815a24:	1906b03a 	or	r3,r3,r4
  815a28:	18a2b03a 	or	r17,r3,r2
  815a2c:	0021883a 	mov	r16,zero
  815a30:	003fa206 	br	8158bc <__alt_data_end+0xff8158bc>
  815a34:	1890b03a 	or	r8,r3,r2
  815a38:	40017d26 	beq	r8,zero,816030 <__adddf3+0x7f0>
  815a3c:	1011883a 	mov	r8,r2
  815a40:	1823883a 	mov	r17,r3
  815a44:	888001cc 	andi	r2,r17,7
  815a48:	103f9e1e 	bne	r2,zero,8158c4 <__alt_data_end+0xff8158c4>
  815a4c:	4004977a 	slli	r2,r8,29
  815a50:	8822d0fa 	srli	r17,r17,3
  815a54:	4010d0fa 	srli	r8,r8,3
  815a58:	9007883a 	mov	r3,r18
  815a5c:	1444b03a 	or	r2,r2,r17
  815a60:	0101ffc4 	movi	r4,2047
  815a64:	81002426 	beq	r16,r4,815af8 <__adddf3+0x2b8>
  815a68:	8120703a 	and	r16,r16,r4
  815a6c:	01000434 	movhi	r4,16
  815a70:	213fffc4 	addi	r4,r4,-1
  815a74:	4110703a 	and	r8,r8,r4
  815a78:	003fa806 	br	81591c <__alt_data_end+0xff81591c>
  815a7c:	8089c83a 	sub	r4,r16,r2
  815a80:	01005e0e 	bge	zero,r4,815bfc <__adddf3+0x3bc>
  815a84:	10002b26 	beq	r2,zero,815b34 <__adddf3+0x2f4>
  815a88:	0081ffc4 	movi	r2,2047
  815a8c:	80bf8b26 	beq	r16,r2,8158bc <__alt_data_end+0xff8158bc>
  815a90:	4a402034 	orhi	r9,r9,128
  815a94:	00800e04 	movi	r2,56
  815a98:	1100a40e 	bge	r2,r4,815d2c <__adddf3+0x4ec>
  815a9c:	498cb03a 	or	r6,r9,r6
  815aa0:	300ac03a 	cmpne	r5,r6,zero
  815aa4:	0013883a 	mov	r9,zero
  815aa8:	2c4b883a 	add	r5,r5,r17
  815aac:	2c63803a 	cmpltu	r17,r5,r17
  815ab0:	4a11883a 	add	r8,r9,r8
  815ab4:	8a11883a 	add	r8,r17,r8
  815ab8:	2823883a 	mov	r17,r5
  815abc:	4080202c 	andhi	r2,r8,128
  815ac0:	103fe026 	beq	r2,zero,815a44 <__alt_data_end+0xff815a44>
  815ac4:	84000044 	addi	r16,r16,1
  815ac8:	0081ffc4 	movi	r2,2047
  815acc:	8080d226 	beq	r16,r2,815e18 <__adddf3+0x5d8>
  815ad0:	00bfe034 	movhi	r2,65408
  815ad4:	10bfffc4 	addi	r2,r2,-1
  815ad8:	4090703a 	and	r8,r8,r2
  815adc:	880ad07a 	srli	r5,r17,1
  815ae0:	400897fa 	slli	r4,r8,31
  815ae4:	88c0004c 	andi	r3,r17,1
  815ae8:	28e2b03a 	or	r17,r5,r3
  815aec:	4010d07a 	srli	r8,r8,1
  815af0:	2462b03a 	or	r17,r4,r17
  815af4:	003f7106 	br	8158bc <__alt_data_end+0xff8158bc>
  815af8:	4088b03a 	or	r4,r8,r2
  815afc:	20014526 	beq	r4,zero,816014 <__adddf3+0x7d4>
  815b00:	01000434 	movhi	r4,16
  815b04:	42000234 	orhi	r8,r8,8
  815b08:	213fffc4 	addi	r4,r4,-1
  815b0c:	4110703a 	and	r8,r8,r4
  815b10:	003f8206 	br	81591c <__alt_data_end+0xff81591c>
  815b14:	18ffffc4 	addi	r3,r3,-1
  815b18:	1800491e 	bne	r3,zero,815c40 <__adddf3+0x400>
  815b1c:	898bc83a 	sub	r5,r17,r6
  815b20:	8963803a 	cmpltu	r17,r17,r5
  815b24:	4251c83a 	sub	r8,r8,r9
  815b28:	4451c83a 	sub	r8,r8,r17
  815b2c:	2823883a 	mov	r17,r5
  815b30:	003f9f06 	br	8159b0 <__alt_data_end+0xff8159b0>
  815b34:	4984b03a 	or	r2,r9,r6
  815b38:	103f6026 	beq	r2,zero,8158bc <__alt_data_end+0xff8158bc>
  815b3c:	213fffc4 	addi	r4,r4,-1
  815b40:	2000931e 	bne	r4,zero,815d90 <__adddf3+0x550>
  815b44:	898d883a 	add	r6,r17,r6
  815b48:	3463803a 	cmpltu	r17,r6,r17
  815b4c:	4251883a 	add	r8,r8,r9
  815b50:	8a11883a 	add	r8,r17,r8
  815b54:	3023883a 	mov	r17,r6
  815b58:	003fd806 	br	815abc <__alt_data_end+0xff815abc>
  815b5c:	1800541e 	bne	r3,zero,815cb0 <__adddf3+0x470>
  815b60:	80800044 	addi	r2,r16,1
  815b64:	1081ffcc 	andi	r2,r2,2047
  815b68:	00c00044 	movi	r3,1
  815b6c:	1880a00e 	bge	r3,r2,815df0 <__adddf3+0x5b0>
  815b70:	8989c83a 	sub	r4,r17,r6
  815b74:	8905803a 	cmpltu	r2,r17,r4
  815b78:	4267c83a 	sub	r19,r8,r9
  815b7c:	98a7c83a 	sub	r19,r19,r2
  815b80:	9880202c 	andhi	r2,r19,128
  815b84:	10006326 	beq	r2,zero,815d14 <__adddf3+0x4d4>
  815b88:	3463c83a 	sub	r17,r6,r17
  815b8c:	4a07c83a 	sub	r3,r9,r8
  815b90:	344d803a 	cmpltu	r6,r6,r17
  815b94:	19a7c83a 	sub	r19,r3,r6
  815b98:	3825883a 	mov	r18,r7
  815b9c:	983f8a1e 	bne	r19,zero,8159c8 <__alt_data_end+0xff8159c8>
  815ba0:	8809883a 	mov	r4,r17
  815ba4:	0817fec0 	call	817fec <__clzsi2>
  815ba8:	10800804 	addi	r2,r2,32
  815bac:	10fffe04 	addi	r3,r2,-8
  815bb0:	010007c4 	movi	r4,31
  815bb4:	20ff890e 	bge	r4,r3,8159dc <__alt_data_end+0xff8159dc>
  815bb8:	10bff604 	addi	r2,r2,-40
  815bbc:	8884983a 	sll	r2,r17,r2
  815bc0:	0023883a 	mov	r17,zero
  815bc4:	1c3f8c0e 	bge	r3,r16,8159f8 <__alt_data_end+0xff8159f8>
  815bc8:	023fe034 	movhi	r8,65408
  815bcc:	423fffc4 	addi	r8,r8,-1
  815bd0:	80e1c83a 	sub	r16,r16,r3
  815bd4:	1210703a 	and	r8,r2,r8
  815bd8:	003f3806 	br	8158bc <__alt_data_end+0xff8158bc>
  815bdc:	9007883a 	mov	r3,r18
  815be0:	0011883a 	mov	r8,zero
  815be4:	0005883a 	mov	r2,zero
  815be8:	003f4c06 	br	81591c <__alt_data_end+0xff81591c>
  815bec:	498cb03a 	or	r6,r9,r6
  815bf0:	300cc03a 	cmpne	r6,r6,zero
  815bf4:	0007883a 	mov	r3,zero
  815bf8:	003f6806 	br	81599c <__alt_data_end+0xff81599c>
  815bfc:	20009c1e 	bne	r4,zero,815e70 <__adddf3+0x630>
  815c00:	80800044 	addi	r2,r16,1
  815c04:	1141ffcc 	andi	r5,r2,2047
  815c08:	01000044 	movi	r4,1
  815c0c:	2140670e 	bge	r4,r5,815dac <__adddf3+0x56c>
  815c10:	0101ffc4 	movi	r4,2047
  815c14:	11007f26 	beq	r2,r4,815e14 <__adddf3+0x5d4>
  815c18:	898d883a 	add	r6,r17,r6
  815c1c:	4247883a 	add	r3,r8,r9
  815c20:	3451803a 	cmpltu	r8,r6,r17
  815c24:	40d1883a 	add	r8,r8,r3
  815c28:	402297fa 	slli	r17,r8,31
  815c2c:	300cd07a 	srli	r6,r6,1
  815c30:	4010d07a 	srli	r8,r8,1
  815c34:	1021883a 	mov	r16,r2
  815c38:	89a2b03a 	or	r17,r17,r6
  815c3c:	003f1f06 	br	8158bc <__alt_data_end+0xff8158bc>
  815c40:	0081ffc4 	movi	r2,2047
  815c44:	80bf481e 	bne	r16,r2,815968 <__alt_data_end+0xff815968>
  815c48:	003f1c06 	br	8158bc <__alt_data_end+0xff8158bc>
  815c4c:	843ff844 	addi	r16,r16,-31
  815c50:	01000804 	movi	r4,32
  815c54:	1406d83a 	srl	r3,r2,r16
  815c58:	41005026 	beq	r8,r4,815d9c <__adddf3+0x55c>
  815c5c:	01001004 	movi	r4,64
  815c60:	2211c83a 	sub	r8,r4,r8
  815c64:	1204983a 	sll	r2,r2,r8
  815c68:	88a2b03a 	or	r17,r17,r2
  815c6c:	8822c03a 	cmpne	r17,r17,zero
  815c70:	1c62b03a 	or	r17,r3,r17
  815c74:	0011883a 	mov	r8,zero
  815c78:	0021883a 	mov	r16,zero
  815c7c:	003f7106 	br	815a44 <__alt_data_end+0xff815a44>
  815c80:	193ff804 	addi	r4,r3,-32
  815c84:	00800804 	movi	r2,32
  815c88:	4908d83a 	srl	r4,r9,r4
  815c8c:	18804526 	beq	r3,r2,815da4 <__adddf3+0x564>
  815c90:	00801004 	movi	r2,64
  815c94:	10c5c83a 	sub	r2,r2,r3
  815c98:	4886983a 	sll	r3,r9,r2
  815c9c:	198cb03a 	or	r6,r3,r6
  815ca0:	300cc03a 	cmpne	r6,r6,zero
  815ca4:	218cb03a 	or	r6,r4,r6
  815ca8:	0007883a 	mov	r3,zero
  815cac:	003f3b06 	br	81599c <__alt_data_end+0xff81599c>
  815cb0:	80002a26 	beq	r16,zero,815d5c <__adddf3+0x51c>
  815cb4:	0101ffc4 	movi	r4,2047
  815cb8:	11006826 	beq	r2,r4,815e5c <__adddf3+0x61c>
  815cbc:	00c7c83a 	sub	r3,zero,r3
  815cc0:	42002034 	orhi	r8,r8,128
  815cc4:	01000e04 	movi	r4,56
  815cc8:	20c07c16 	blt	r4,r3,815ebc <__adddf3+0x67c>
  815ccc:	010007c4 	movi	r4,31
  815cd0:	20c0da16 	blt	r4,r3,81603c <__adddf3+0x7fc>
  815cd4:	01000804 	movi	r4,32
  815cd8:	20c9c83a 	sub	r4,r4,r3
  815cdc:	4114983a 	sll	r10,r8,r4
  815ce0:	88cad83a 	srl	r5,r17,r3
  815ce4:	8908983a 	sll	r4,r17,r4
  815ce8:	40c6d83a 	srl	r3,r8,r3
  815cec:	5162b03a 	or	r17,r10,r5
  815cf0:	2008c03a 	cmpne	r4,r4,zero
  815cf4:	8922b03a 	or	r17,r17,r4
  815cf8:	3463c83a 	sub	r17,r6,r17
  815cfc:	48c7c83a 	sub	r3,r9,r3
  815d00:	344d803a 	cmpltu	r6,r6,r17
  815d04:	1991c83a 	sub	r8,r3,r6
  815d08:	1021883a 	mov	r16,r2
  815d0c:	3825883a 	mov	r18,r7
  815d10:	003f2706 	br	8159b0 <__alt_data_end+0xff8159b0>
  815d14:	24d0b03a 	or	r8,r4,r19
  815d18:	40001b1e 	bne	r8,zero,815d88 <__adddf3+0x548>
  815d1c:	0005883a 	mov	r2,zero
  815d20:	0007883a 	mov	r3,zero
  815d24:	0021883a 	mov	r16,zero
  815d28:	003f4d06 	br	815a60 <__alt_data_end+0xff815a60>
  815d2c:	008007c4 	movi	r2,31
  815d30:	11003c16 	blt	r2,r4,815e24 <__adddf3+0x5e4>
  815d34:	00800804 	movi	r2,32
  815d38:	1105c83a 	sub	r2,r2,r4
  815d3c:	488e983a 	sll	r7,r9,r2
  815d40:	310ad83a 	srl	r5,r6,r4
  815d44:	3084983a 	sll	r2,r6,r2
  815d48:	4912d83a 	srl	r9,r9,r4
  815d4c:	394ab03a 	or	r5,r7,r5
  815d50:	1004c03a 	cmpne	r2,r2,zero
  815d54:	288ab03a 	or	r5,r5,r2
  815d58:	003f5306 	br	815aa8 <__alt_data_end+0xff815aa8>
  815d5c:	4448b03a 	or	r4,r8,r17
  815d60:	20003e26 	beq	r4,zero,815e5c <__adddf3+0x61c>
  815d64:	00c6303a 	nor	r3,zero,r3
  815d68:	18003a1e 	bne	r3,zero,815e54 <__adddf3+0x614>
  815d6c:	3463c83a 	sub	r17,r6,r17
  815d70:	4a07c83a 	sub	r3,r9,r8
  815d74:	344d803a 	cmpltu	r6,r6,r17
  815d78:	1991c83a 	sub	r8,r3,r6
  815d7c:	1021883a 	mov	r16,r2
  815d80:	3825883a 	mov	r18,r7
  815d84:	003f0a06 	br	8159b0 <__alt_data_end+0xff8159b0>
  815d88:	2023883a 	mov	r17,r4
  815d8c:	003f0d06 	br	8159c4 <__alt_data_end+0xff8159c4>
  815d90:	0081ffc4 	movi	r2,2047
  815d94:	80bf3f1e 	bne	r16,r2,815a94 <__alt_data_end+0xff815a94>
  815d98:	003ec806 	br	8158bc <__alt_data_end+0xff8158bc>
  815d9c:	0005883a 	mov	r2,zero
  815da0:	003fb106 	br	815c68 <__alt_data_end+0xff815c68>
  815da4:	0007883a 	mov	r3,zero
  815da8:	003fbc06 	br	815c9c <__alt_data_end+0xff815c9c>
  815dac:	4444b03a 	or	r2,r8,r17
  815db0:	8000871e 	bne	r16,zero,815fd0 <__adddf3+0x790>
  815db4:	1000ba26 	beq	r2,zero,8160a0 <__adddf3+0x860>
  815db8:	4984b03a 	or	r2,r9,r6
  815dbc:	103ebf26 	beq	r2,zero,8158bc <__alt_data_end+0xff8158bc>
  815dc0:	8985883a 	add	r2,r17,r6
  815dc4:	4247883a 	add	r3,r8,r9
  815dc8:	1451803a 	cmpltu	r8,r2,r17
  815dcc:	40d1883a 	add	r8,r8,r3
  815dd0:	40c0202c 	andhi	r3,r8,128
  815dd4:	1023883a 	mov	r17,r2
  815dd8:	183f1a26 	beq	r3,zero,815a44 <__alt_data_end+0xff815a44>
  815ddc:	00bfe034 	movhi	r2,65408
  815de0:	10bfffc4 	addi	r2,r2,-1
  815de4:	2021883a 	mov	r16,r4
  815de8:	4090703a 	and	r8,r8,r2
  815dec:	003eb306 	br	8158bc <__alt_data_end+0xff8158bc>
  815df0:	4444b03a 	or	r2,r8,r17
  815df4:	8000291e 	bne	r16,zero,815e9c <__adddf3+0x65c>
  815df8:	10004b1e 	bne	r2,zero,815f28 <__adddf3+0x6e8>
  815dfc:	4990b03a 	or	r8,r9,r6
  815e00:	40008b26 	beq	r8,zero,816030 <__adddf3+0x7f0>
  815e04:	4811883a 	mov	r8,r9
  815e08:	3023883a 	mov	r17,r6
  815e0c:	3825883a 	mov	r18,r7
  815e10:	003eaa06 	br	8158bc <__alt_data_end+0xff8158bc>
  815e14:	1021883a 	mov	r16,r2
  815e18:	0011883a 	mov	r8,zero
  815e1c:	0005883a 	mov	r2,zero
  815e20:	003f0f06 	br	815a60 <__alt_data_end+0xff815a60>
  815e24:	217ff804 	addi	r5,r4,-32
  815e28:	00800804 	movi	r2,32
  815e2c:	494ad83a 	srl	r5,r9,r5
  815e30:	20807d26 	beq	r4,r2,816028 <__adddf3+0x7e8>
  815e34:	00801004 	movi	r2,64
  815e38:	1109c83a 	sub	r4,r2,r4
  815e3c:	4912983a 	sll	r9,r9,r4
  815e40:	498cb03a 	or	r6,r9,r6
  815e44:	300cc03a 	cmpne	r6,r6,zero
  815e48:	298ab03a 	or	r5,r5,r6
  815e4c:	0013883a 	mov	r9,zero
  815e50:	003f1506 	br	815aa8 <__alt_data_end+0xff815aa8>
  815e54:	0101ffc4 	movi	r4,2047
  815e58:	113f9a1e 	bne	r2,r4,815cc4 <__alt_data_end+0xff815cc4>
  815e5c:	4811883a 	mov	r8,r9
  815e60:	3023883a 	mov	r17,r6
  815e64:	1021883a 	mov	r16,r2
  815e68:	3825883a 	mov	r18,r7
  815e6c:	003e9306 	br	8158bc <__alt_data_end+0xff8158bc>
  815e70:	8000161e 	bne	r16,zero,815ecc <__adddf3+0x68c>
  815e74:	444ab03a 	or	r5,r8,r17
  815e78:	28005126 	beq	r5,zero,815fc0 <__adddf3+0x780>
  815e7c:	0108303a 	nor	r4,zero,r4
  815e80:	20004d1e 	bne	r4,zero,815fb8 <__adddf3+0x778>
  815e84:	89a3883a 	add	r17,r17,r6
  815e88:	4253883a 	add	r9,r8,r9
  815e8c:	898d803a 	cmpltu	r6,r17,r6
  815e90:	3251883a 	add	r8,r6,r9
  815e94:	1021883a 	mov	r16,r2
  815e98:	003f0806 	br	815abc <__alt_data_end+0xff815abc>
  815e9c:	1000301e 	bne	r2,zero,815f60 <__adddf3+0x720>
  815ea0:	4984b03a 	or	r2,r9,r6
  815ea4:	10007126 	beq	r2,zero,81606c <__adddf3+0x82c>
  815ea8:	4811883a 	mov	r8,r9
  815eac:	3023883a 	mov	r17,r6
  815eb0:	3825883a 	mov	r18,r7
  815eb4:	0401ffc4 	movi	r16,2047
  815eb8:	003e8006 	br	8158bc <__alt_data_end+0xff8158bc>
  815ebc:	4462b03a 	or	r17,r8,r17
  815ec0:	8822c03a 	cmpne	r17,r17,zero
  815ec4:	0007883a 	mov	r3,zero
  815ec8:	003f8b06 	br	815cf8 <__alt_data_end+0xff815cf8>
  815ecc:	0141ffc4 	movi	r5,2047
  815ed0:	11403b26 	beq	r2,r5,815fc0 <__adddf3+0x780>
  815ed4:	0109c83a 	sub	r4,zero,r4
  815ed8:	42002034 	orhi	r8,r8,128
  815edc:	01400e04 	movi	r5,56
  815ee0:	29006716 	blt	r5,r4,816080 <__adddf3+0x840>
  815ee4:	014007c4 	movi	r5,31
  815ee8:	29007016 	blt	r5,r4,8160ac <__adddf3+0x86c>
  815eec:	01400804 	movi	r5,32
  815ef0:	290bc83a 	sub	r5,r5,r4
  815ef4:	4154983a 	sll	r10,r8,r5
  815ef8:	890ed83a 	srl	r7,r17,r4
  815efc:	894a983a 	sll	r5,r17,r5
  815f00:	4108d83a 	srl	r4,r8,r4
  815f04:	51e2b03a 	or	r17,r10,r7
  815f08:	280ac03a 	cmpne	r5,r5,zero
  815f0c:	8962b03a 	or	r17,r17,r5
  815f10:	89a3883a 	add	r17,r17,r6
  815f14:	2253883a 	add	r9,r4,r9
  815f18:	898d803a 	cmpltu	r6,r17,r6
  815f1c:	3251883a 	add	r8,r6,r9
  815f20:	1021883a 	mov	r16,r2
  815f24:	003ee506 	br	815abc <__alt_data_end+0xff815abc>
  815f28:	4984b03a 	or	r2,r9,r6
  815f2c:	103e6326 	beq	r2,zero,8158bc <__alt_data_end+0xff8158bc>
  815f30:	8987c83a 	sub	r3,r17,r6
  815f34:	88c9803a 	cmpltu	r4,r17,r3
  815f38:	4245c83a 	sub	r2,r8,r9
  815f3c:	1105c83a 	sub	r2,r2,r4
  815f40:	1100202c 	andhi	r4,r2,128
  815f44:	203ebb26 	beq	r4,zero,815a34 <__alt_data_end+0xff815a34>
  815f48:	3463c83a 	sub	r17,r6,r17
  815f4c:	4a07c83a 	sub	r3,r9,r8
  815f50:	344d803a 	cmpltu	r6,r6,r17
  815f54:	1991c83a 	sub	r8,r3,r6
  815f58:	3825883a 	mov	r18,r7
  815f5c:	003e5706 	br	8158bc <__alt_data_end+0xff8158bc>
  815f60:	4984b03a 	or	r2,r9,r6
  815f64:	10002e26 	beq	r2,zero,816020 <__adddf3+0x7e0>
  815f68:	4004d0fa 	srli	r2,r8,3
  815f6c:	8822d0fa 	srli	r17,r17,3
  815f70:	4010977a 	slli	r8,r8,29
  815f74:	10c0022c 	andhi	r3,r2,8
  815f78:	4462b03a 	or	r17,r8,r17
  815f7c:	18000826 	beq	r3,zero,815fa0 <__adddf3+0x760>
  815f80:	4808d0fa 	srli	r4,r9,3
  815f84:	20c0022c 	andhi	r3,r4,8
  815f88:	1800051e 	bne	r3,zero,815fa0 <__adddf3+0x760>
  815f8c:	300cd0fa 	srli	r6,r6,3
  815f90:	4806977a 	slli	r3,r9,29
  815f94:	2005883a 	mov	r2,r4
  815f98:	3825883a 	mov	r18,r7
  815f9c:	19a2b03a 	or	r17,r3,r6
  815fa0:	8810d77a 	srli	r8,r17,29
  815fa4:	100490fa 	slli	r2,r2,3
  815fa8:	882290fa 	slli	r17,r17,3
  815fac:	0401ffc4 	movi	r16,2047
  815fb0:	4090b03a 	or	r8,r8,r2
  815fb4:	003e4106 	br	8158bc <__alt_data_end+0xff8158bc>
  815fb8:	0141ffc4 	movi	r5,2047
  815fbc:	117fc71e 	bne	r2,r5,815edc <__alt_data_end+0xff815edc>
  815fc0:	4811883a 	mov	r8,r9
  815fc4:	3023883a 	mov	r17,r6
  815fc8:	1021883a 	mov	r16,r2
  815fcc:	003e3b06 	br	8158bc <__alt_data_end+0xff8158bc>
  815fd0:	10002f26 	beq	r2,zero,816090 <__adddf3+0x850>
  815fd4:	4984b03a 	or	r2,r9,r6
  815fd8:	10001126 	beq	r2,zero,816020 <__adddf3+0x7e0>
  815fdc:	4004d0fa 	srli	r2,r8,3
  815fe0:	8822d0fa 	srli	r17,r17,3
  815fe4:	4010977a 	slli	r8,r8,29
  815fe8:	10c0022c 	andhi	r3,r2,8
  815fec:	4462b03a 	or	r17,r8,r17
  815ff0:	183feb26 	beq	r3,zero,815fa0 <__alt_data_end+0xff815fa0>
  815ff4:	4808d0fa 	srli	r4,r9,3
  815ff8:	20c0022c 	andhi	r3,r4,8
  815ffc:	183fe81e 	bne	r3,zero,815fa0 <__alt_data_end+0xff815fa0>
  816000:	300cd0fa 	srli	r6,r6,3
  816004:	4806977a 	slli	r3,r9,29
  816008:	2005883a 	mov	r2,r4
  81600c:	19a2b03a 	or	r17,r3,r6
  816010:	003fe306 	br	815fa0 <__alt_data_end+0xff815fa0>
  816014:	0011883a 	mov	r8,zero
  816018:	0005883a 	mov	r2,zero
  81601c:	003e3f06 	br	81591c <__alt_data_end+0xff81591c>
  816020:	0401ffc4 	movi	r16,2047
  816024:	003e2506 	br	8158bc <__alt_data_end+0xff8158bc>
  816028:	0013883a 	mov	r9,zero
  81602c:	003f8406 	br	815e40 <__alt_data_end+0xff815e40>
  816030:	0005883a 	mov	r2,zero
  816034:	0007883a 	mov	r3,zero
  816038:	003e8906 	br	815a60 <__alt_data_end+0xff815a60>
  81603c:	197ff804 	addi	r5,r3,-32
  816040:	01000804 	movi	r4,32
  816044:	414ad83a 	srl	r5,r8,r5
  816048:	19002426 	beq	r3,r4,8160dc <__adddf3+0x89c>
  81604c:	01001004 	movi	r4,64
  816050:	20c7c83a 	sub	r3,r4,r3
  816054:	40c6983a 	sll	r3,r8,r3
  816058:	1c46b03a 	or	r3,r3,r17
  81605c:	1806c03a 	cmpne	r3,r3,zero
  816060:	28e2b03a 	or	r17,r5,r3
  816064:	0007883a 	mov	r3,zero
  816068:	003f2306 	br	815cf8 <__alt_data_end+0xff815cf8>
  81606c:	0007883a 	mov	r3,zero
  816070:	5811883a 	mov	r8,r11
  816074:	00bfffc4 	movi	r2,-1
  816078:	0401ffc4 	movi	r16,2047
  81607c:	003e7806 	br	815a60 <__alt_data_end+0xff815a60>
  816080:	4462b03a 	or	r17,r8,r17
  816084:	8822c03a 	cmpne	r17,r17,zero
  816088:	0009883a 	mov	r4,zero
  81608c:	003fa006 	br	815f10 <__alt_data_end+0xff815f10>
  816090:	4811883a 	mov	r8,r9
  816094:	3023883a 	mov	r17,r6
  816098:	0401ffc4 	movi	r16,2047
  81609c:	003e0706 	br	8158bc <__alt_data_end+0xff8158bc>
  8160a0:	4811883a 	mov	r8,r9
  8160a4:	3023883a 	mov	r17,r6
  8160a8:	003e0406 	br	8158bc <__alt_data_end+0xff8158bc>
  8160ac:	21fff804 	addi	r7,r4,-32
  8160b0:	01400804 	movi	r5,32
  8160b4:	41ced83a 	srl	r7,r8,r7
  8160b8:	21400a26 	beq	r4,r5,8160e4 <__adddf3+0x8a4>
  8160bc:	01401004 	movi	r5,64
  8160c0:	2909c83a 	sub	r4,r5,r4
  8160c4:	4108983a 	sll	r4,r8,r4
  8160c8:	2448b03a 	or	r4,r4,r17
  8160cc:	2008c03a 	cmpne	r4,r4,zero
  8160d0:	3922b03a 	or	r17,r7,r4
  8160d4:	0009883a 	mov	r4,zero
  8160d8:	003f8d06 	br	815f10 <__alt_data_end+0xff815f10>
  8160dc:	0007883a 	mov	r3,zero
  8160e0:	003fdd06 	br	816058 <__alt_data_end+0xff816058>
  8160e4:	0009883a 	mov	r4,zero
  8160e8:	003ff706 	br	8160c8 <__alt_data_end+0xff8160c8>

008160ec <__divdf3>:
  8160ec:	defff204 	addi	sp,sp,-56
  8160f0:	dd400915 	stw	r21,36(sp)
  8160f4:	282ad53a 	srli	r21,r5,20
  8160f8:	dd000815 	stw	r20,32(sp)
  8160fc:	2828d7fa 	srli	r20,r5,31
  816100:	dc000415 	stw	r16,16(sp)
  816104:	04000434 	movhi	r16,16
  816108:	df000c15 	stw	fp,48(sp)
  81610c:	843fffc4 	addi	r16,r16,-1
  816110:	dfc00d15 	stw	ra,52(sp)
  816114:	ddc00b15 	stw	r23,44(sp)
  816118:	dd800a15 	stw	r22,40(sp)
  81611c:	dcc00715 	stw	r19,28(sp)
  816120:	dc800615 	stw	r18,24(sp)
  816124:	dc400515 	stw	r17,20(sp)
  816128:	ad41ffcc 	andi	r21,r21,2047
  81612c:	2c20703a 	and	r16,r5,r16
  816130:	a7003fcc 	andi	fp,r20,255
  816134:	a8006126 	beq	r21,zero,8162bc <__divdf3+0x1d0>
  816138:	0081ffc4 	movi	r2,2047
  81613c:	2025883a 	mov	r18,r4
  816140:	a8803726 	beq	r21,r2,816220 <__divdf3+0x134>
  816144:	80800434 	orhi	r2,r16,16
  816148:	100490fa 	slli	r2,r2,3
  81614c:	2020d77a 	srli	r16,r4,29
  816150:	202490fa 	slli	r18,r4,3
  816154:	ad7f0044 	addi	r21,r21,-1023
  816158:	80a0b03a 	or	r16,r16,r2
  81615c:	0027883a 	mov	r19,zero
  816160:	0013883a 	mov	r9,zero
  816164:	3804d53a 	srli	r2,r7,20
  816168:	382cd7fa 	srli	r22,r7,31
  81616c:	04400434 	movhi	r17,16
  816170:	8c7fffc4 	addi	r17,r17,-1
  816174:	1081ffcc 	andi	r2,r2,2047
  816178:	3011883a 	mov	r8,r6
  81617c:	3c62703a 	and	r17,r7,r17
  816180:	b5c03fcc 	andi	r23,r22,255
  816184:	10006c26 	beq	r2,zero,816338 <__divdf3+0x24c>
  816188:	00c1ffc4 	movi	r3,2047
  81618c:	10c06426 	beq	r2,r3,816320 <__divdf3+0x234>
  816190:	88c00434 	orhi	r3,r17,16
  816194:	180690fa 	slli	r3,r3,3
  816198:	3022d77a 	srli	r17,r6,29
  81619c:	301090fa 	slli	r8,r6,3
  8161a0:	10bf0044 	addi	r2,r2,-1023
  8161a4:	88e2b03a 	or	r17,r17,r3
  8161a8:	000f883a 	mov	r7,zero
  8161ac:	a58cf03a 	xor	r6,r20,r22
  8161b0:	3cc8b03a 	or	r4,r7,r19
  8161b4:	a8abc83a 	sub	r21,r21,r2
  8161b8:	008003c4 	movi	r2,15
  8161bc:	3007883a 	mov	r3,r6
  8161c0:	34c03fcc 	andi	r19,r6,255
  8161c4:	11009036 	bltu	r2,r4,816408 <__divdf3+0x31c>
  8161c8:	200890ba 	slli	r4,r4,2
  8161cc:	00802074 	movhi	r2,129
  8161d0:	10987804 	addi	r2,r2,25056
  8161d4:	2089883a 	add	r4,r4,r2
  8161d8:	20800017 	ldw	r2,0(r4)
  8161dc:	1000683a 	jmp	r2
  8161e0:	00816408 	cmpgei	r2,zero,1424
  8161e4:	00816258 	cmpnei	r2,zero,1417
  8161e8:	008163f8 	rdprs	r2,zero,1423
  8161ec:	0081624c 	andi	r2,zero,1417
  8161f0:	008163f8 	rdprs	r2,zero,1423
  8161f4:	008163cc 	andi	r2,zero,1423
  8161f8:	008163f8 	rdprs	r2,zero,1423
  8161fc:	0081624c 	andi	r2,zero,1417
  816200:	00816258 	cmpnei	r2,zero,1417
  816204:	00816258 	cmpnei	r2,zero,1417
  816208:	008163cc 	andi	r2,zero,1423
  81620c:	0081624c 	andi	r2,zero,1417
  816210:	0081623c 	xorhi	r2,zero,1416
  816214:	0081623c 	xorhi	r2,zero,1416
  816218:	0081623c 	xorhi	r2,zero,1416
  81621c:	008166ec 	andhi	r2,zero,1435
  816220:	2404b03a 	or	r2,r4,r16
  816224:	1000661e 	bne	r2,zero,8163c0 <__divdf3+0x2d4>
  816228:	04c00204 	movi	r19,8
  81622c:	0021883a 	mov	r16,zero
  816230:	0025883a 	mov	r18,zero
  816234:	02400084 	movi	r9,2
  816238:	003fca06 	br	816164 <__alt_data_end+0xff816164>
  81623c:	8023883a 	mov	r17,r16
  816240:	9011883a 	mov	r8,r18
  816244:	e02f883a 	mov	r23,fp
  816248:	480f883a 	mov	r7,r9
  81624c:	00800084 	movi	r2,2
  816250:	3881311e 	bne	r7,r2,816718 <__divdf3+0x62c>
  816254:	b827883a 	mov	r19,r23
  816258:	98c0004c 	andi	r3,r19,1
  81625c:	0081ffc4 	movi	r2,2047
  816260:	000b883a 	mov	r5,zero
  816264:	0025883a 	mov	r18,zero
  816268:	1004953a 	slli	r2,r2,20
  81626c:	18c03fcc 	andi	r3,r3,255
  816270:	04400434 	movhi	r17,16
  816274:	8c7fffc4 	addi	r17,r17,-1
  816278:	180697fa 	slli	r3,r3,31
  81627c:	2c4a703a 	and	r5,r5,r17
  816280:	288ab03a 	or	r5,r5,r2
  816284:	28c6b03a 	or	r3,r5,r3
  816288:	9005883a 	mov	r2,r18
  81628c:	dfc00d17 	ldw	ra,52(sp)
  816290:	df000c17 	ldw	fp,48(sp)
  816294:	ddc00b17 	ldw	r23,44(sp)
  816298:	dd800a17 	ldw	r22,40(sp)
  81629c:	dd400917 	ldw	r21,36(sp)
  8162a0:	dd000817 	ldw	r20,32(sp)
  8162a4:	dcc00717 	ldw	r19,28(sp)
  8162a8:	dc800617 	ldw	r18,24(sp)
  8162ac:	dc400517 	ldw	r17,20(sp)
  8162b0:	dc000417 	ldw	r16,16(sp)
  8162b4:	dec00e04 	addi	sp,sp,56
  8162b8:	f800283a 	ret
  8162bc:	2404b03a 	or	r2,r4,r16
  8162c0:	2027883a 	mov	r19,r4
  8162c4:	10003926 	beq	r2,zero,8163ac <__divdf3+0x2c0>
  8162c8:	80012e26 	beq	r16,zero,816784 <__divdf3+0x698>
  8162cc:	8009883a 	mov	r4,r16
  8162d0:	d9800315 	stw	r6,12(sp)
  8162d4:	d9c00215 	stw	r7,8(sp)
  8162d8:	0817fec0 	call	817fec <__clzsi2>
  8162dc:	d9800317 	ldw	r6,12(sp)
  8162e0:	d9c00217 	ldw	r7,8(sp)
  8162e4:	113ffd44 	addi	r4,r2,-11
  8162e8:	00c00704 	movi	r3,28
  8162ec:	19012116 	blt	r3,r4,816774 <__divdf3+0x688>
  8162f0:	00c00744 	movi	r3,29
  8162f4:	147ffe04 	addi	r17,r2,-8
  8162f8:	1907c83a 	sub	r3,r3,r4
  8162fc:	8460983a 	sll	r16,r16,r17
  816300:	98c6d83a 	srl	r3,r19,r3
  816304:	9c64983a 	sll	r18,r19,r17
  816308:	1c20b03a 	or	r16,r3,r16
  81630c:	1080fcc4 	addi	r2,r2,1011
  816310:	00abc83a 	sub	r21,zero,r2
  816314:	0027883a 	mov	r19,zero
  816318:	0013883a 	mov	r9,zero
  81631c:	003f9106 	br	816164 <__alt_data_end+0xff816164>
  816320:	3446b03a 	or	r3,r6,r17
  816324:	18001f1e 	bne	r3,zero,8163a4 <__divdf3+0x2b8>
  816328:	0023883a 	mov	r17,zero
  81632c:	0011883a 	mov	r8,zero
  816330:	01c00084 	movi	r7,2
  816334:	003f9d06 	br	8161ac <__alt_data_end+0xff8161ac>
  816338:	3446b03a 	or	r3,r6,r17
  81633c:	18001526 	beq	r3,zero,816394 <__divdf3+0x2a8>
  816340:	88011b26 	beq	r17,zero,8167b0 <__divdf3+0x6c4>
  816344:	8809883a 	mov	r4,r17
  816348:	d9800315 	stw	r6,12(sp)
  81634c:	da400115 	stw	r9,4(sp)
  816350:	0817fec0 	call	817fec <__clzsi2>
  816354:	d9800317 	ldw	r6,12(sp)
  816358:	da400117 	ldw	r9,4(sp)
  81635c:	113ffd44 	addi	r4,r2,-11
  816360:	00c00704 	movi	r3,28
  816364:	19010e16 	blt	r3,r4,8167a0 <__divdf3+0x6b4>
  816368:	00c00744 	movi	r3,29
  81636c:	123ffe04 	addi	r8,r2,-8
  816370:	1907c83a 	sub	r3,r3,r4
  816374:	8a22983a 	sll	r17,r17,r8
  816378:	30c6d83a 	srl	r3,r6,r3
  81637c:	3210983a 	sll	r8,r6,r8
  816380:	1c62b03a 	or	r17,r3,r17
  816384:	1080fcc4 	addi	r2,r2,1011
  816388:	0085c83a 	sub	r2,zero,r2
  81638c:	000f883a 	mov	r7,zero
  816390:	003f8606 	br	8161ac <__alt_data_end+0xff8161ac>
  816394:	0023883a 	mov	r17,zero
  816398:	0011883a 	mov	r8,zero
  81639c:	01c00044 	movi	r7,1
  8163a0:	003f8206 	br	8161ac <__alt_data_end+0xff8161ac>
  8163a4:	01c000c4 	movi	r7,3
  8163a8:	003f8006 	br	8161ac <__alt_data_end+0xff8161ac>
  8163ac:	04c00104 	movi	r19,4
  8163b0:	0021883a 	mov	r16,zero
  8163b4:	0025883a 	mov	r18,zero
  8163b8:	02400044 	movi	r9,1
  8163bc:	003f6906 	br	816164 <__alt_data_end+0xff816164>
  8163c0:	04c00304 	movi	r19,12
  8163c4:	024000c4 	movi	r9,3
  8163c8:	003f6606 	br	816164 <__alt_data_end+0xff816164>
  8163cc:	01400434 	movhi	r5,16
  8163d0:	0007883a 	mov	r3,zero
  8163d4:	297fffc4 	addi	r5,r5,-1
  8163d8:	04bfffc4 	movi	r18,-1
  8163dc:	0081ffc4 	movi	r2,2047
  8163e0:	003fa106 	br	816268 <__alt_data_end+0xff816268>
  8163e4:	00c00044 	movi	r3,1
  8163e8:	1887c83a 	sub	r3,r3,r2
  8163ec:	01000e04 	movi	r4,56
  8163f0:	20c1210e 	bge	r4,r3,816878 <__divdf3+0x78c>
  8163f4:	98c0004c 	andi	r3,r19,1
  8163f8:	0005883a 	mov	r2,zero
  8163fc:	000b883a 	mov	r5,zero
  816400:	0025883a 	mov	r18,zero
  816404:	003f9806 	br	816268 <__alt_data_end+0xff816268>
  816408:	8c00fd36 	bltu	r17,r16,816800 <__divdf3+0x714>
  81640c:	8440fb26 	beq	r16,r17,8167fc <__divdf3+0x710>
  816410:	8007883a 	mov	r3,r16
  816414:	ad7fffc4 	addi	r21,r21,-1
  816418:	0021883a 	mov	r16,zero
  81641c:	4004d63a 	srli	r2,r8,24
  816420:	8822923a 	slli	r17,r17,8
  816424:	1809883a 	mov	r4,r3
  816428:	402c923a 	slli	r22,r8,8
  81642c:	88b8b03a 	or	fp,r17,r2
  816430:	e028d43a 	srli	r20,fp,16
  816434:	d8c00015 	stw	r3,0(sp)
  816438:	e5ffffcc 	andi	r23,fp,65535
  81643c:	a00b883a 	mov	r5,r20
  816440:	08155880 	call	815588 <__udivsi3>
  816444:	d8c00017 	ldw	r3,0(sp)
  816448:	a00b883a 	mov	r5,r20
  81644c:	d8800315 	stw	r2,12(sp)
  816450:	1809883a 	mov	r4,r3
  816454:	08155ec0 	call	8155ec <__umodsi3>
  816458:	d9800317 	ldw	r6,12(sp)
  81645c:	1006943a 	slli	r3,r2,16
  816460:	9004d43a 	srli	r2,r18,16
  816464:	b9a3383a 	mul	r17,r23,r6
  816468:	10c4b03a 	or	r2,r2,r3
  81646c:	1440062e 	bgeu	r2,r17,816488 <__divdf3+0x39c>
  816470:	1705883a 	add	r2,r2,fp
  816474:	30ffffc4 	addi	r3,r6,-1
  816478:	1700ee36 	bltu	r2,fp,816834 <__divdf3+0x748>
  81647c:	1440ed2e 	bgeu	r2,r17,816834 <__divdf3+0x748>
  816480:	31bfff84 	addi	r6,r6,-2
  816484:	1705883a 	add	r2,r2,fp
  816488:	1463c83a 	sub	r17,r2,r17
  81648c:	a00b883a 	mov	r5,r20
  816490:	8809883a 	mov	r4,r17
  816494:	d9800315 	stw	r6,12(sp)
  816498:	08155880 	call	815588 <__udivsi3>
  81649c:	a00b883a 	mov	r5,r20
  8164a0:	8809883a 	mov	r4,r17
  8164a4:	d8800215 	stw	r2,8(sp)
  8164a8:	08155ec0 	call	8155ec <__umodsi3>
  8164ac:	d9c00217 	ldw	r7,8(sp)
  8164b0:	1004943a 	slli	r2,r2,16
  8164b4:	94bfffcc 	andi	r18,r18,65535
  8164b8:	b9d1383a 	mul	r8,r23,r7
  8164bc:	90a4b03a 	or	r18,r18,r2
  8164c0:	d9800317 	ldw	r6,12(sp)
  8164c4:	9200062e 	bgeu	r18,r8,8164e0 <__divdf3+0x3f4>
  8164c8:	9725883a 	add	r18,r18,fp
  8164cc:	38bfffc4 	addi	r2,r7,-1
  8164d0:	9700d636 	bltu	r18,fp,81682c <__divdf3+0x740>
  8164d4:	9200d52e 	bgeu	r18,r8,81682c <__divdf3+0x740>
  8164d8:	39ffff84 	addi	r7,r7,-2
  8164dc:	9725883a 	add	r18,r18,fp
  8164e0:	3004943a 	slli	r2,r6,16
  8164e4:	b012d43a 	srli	r9,r22,16
  8164e8:	b1bfffcc 	andi	r6,r22,65535
  8164ec:	11e2b03a 	or	r17,r2,r7
  8164f0:	8806d43a 	srli	r3,r17,16
  8164f4:	893fffcc 	andi	r4,r17,65535
  8164f8:	218b383a 	mul	r5,r4,r6
  8164fc:	30c5383a 	mul	r2,r6,r3
  816500:	2249383a 	mul	r4,r4,r9
  816504:	280ed43a 	srli	r7,r5,16
  816508:	9225c83a 	sub	r18,r18,r8
  81650c:	2089883a 	add	r4,r4,r2
  816510:	3909883a 	add	r4,r7,r4
  816514:	1a47383a 	mul	r3,r3,r9
  816518:	2080022e 	bgeu	r4,r2,816524 <__divdf3+0x438>
  81651c:	00800074 	movhi	r2,1
  816520:	1887883a 	add	r3,r3,r2
  816524:	2004d43a 	srli	r2,r4,16
  816528:	2008943a 	slli	r4,r4,16
  81652c:	297fffcc 	andi	r5,r5,65535
  816530:	10c7883a 	add	r3,r2,r3
  816534:	2149883a 	add	r4,r4,r5
  816538:	90c0a536 	bltu	r18,r3,8167d0 <__divdf3+0x6e4>
  81653c:	90c0bf26 	beq	r18,r3,81683c <__divdf3+0x750>
  816540:	90c7c83a 	sub	r3,r18,r3
  816544:	810fc83a 	sub	r7,r16,r4
  816548:	81e5803a 	cmpltu	r18,r16,r7
  81654c:	1ca5c83a 	sub	r18,r3,r18
  816550:	e480c126 	beq	fp,r18,816858 <__divdf3+0x76c>
  816554:	a00b883a 	mov	r5,r20
  816558:	9009883a 	mov	r4,r18
  81655c:	d9800315 	stw	r6,12(sp)
  816560:	d9c00215 	stw	r7,8(sp)
  816564:	da400115 	stw	r9,4(sp)
  816568:	08155880 	call	815588 <__udivsi3>
  81656c:	a00b883a 	mov	r5,r20
  816570:	9009883a 	mov	r4,r18
  816574:	d8800015 	stw	r2,0(sp)
  816578:	08155ec0 	call	8155ec <__umodsi3>
  81657c:	d9c00217 	ldw	r7,8(sp)
  816580:	da000017 	ldw	r8,0(sp)
  816584:	1006943a 	slli	r3,r2,16
  816588:	3804d43a 	srli	r2,r7,16
  81658c:	ba21383a 	mul	r16,r23,r8
  816590:	d9800317 	ldw	r6,12(sp)
  816594:	10c4b03a 	or	r2,r2,r3
  816598:	da400117 	ldw	r9,4(sp)
  81659c:	1400062e 	bgeu	r2,r16,8165b8 <__divdf3+0x4cc>
  8165a0:	1705883a 	add	r2,r2,fp
  8165a4:	40ffffc4 	addi	r3,r8,-1
  8165a8:	1700ad36 	bltu	r2,fp,816860 <__divdf3+0x774>
  8165ac:	1400ac2e 	bgeu	r2,r16,816860 <__divdf3+0x774>
  8165b0:	423fff84 	addi	r8,r8,-2
  8165b4:	1705883a 	add	r2,r2,fp
  8165b8:	1421c83a 	sub	r16,r2,r16
  8165bc:	a00b883a 	mov	r5,r20
  8165c0:	8009883a 	mov	r4,r16
  8165c4:	d9800315 	stw	r6,12(sp)
  8165c8:	d9c00215 	stw	r7,8(sp)
  8165cc:	da000015 	stw	r8,0(sp)
  8165d0:	da400115 	stw	r9,4(sp)
  8165d4:	08155880 	call	815588 <__udivsi3>
  8165d8:	8009883a 	mov	r4,r16
  8165dc:	a00b883a 	mov	r5,r20
  8165e0:	1025883a 	mov	r18,r2
  8165e4:	08155ec0 	call	8155ec <__umodsi3>
  8165e8:	d9c00217 	ldw	r7,8(sp)
  8165ec:	1004943a 	slli	r2,r2,16
  8165f0:	bcaf383a 	mul	r23,r23,r18
  8165f4:	393fffcc 	andi	r4,r7,65535
  8165f8:	2088b03a 	or	r4,r4,r2
  8165fc:	d9800317 	ldw	r6,12(sp)
  816600:	da000017 	ldw	r8,0(sp)
  816604:	da400117 	ldw	r9,4(sp)
  816608:	25c0062e 	bgeu	r4,r23,816624 <__divdf3+0x538>
  81660c:	2709883a 	add	r4,r4,fp
  816610:	90bfffc4 	addi	r2,r18,-1
  816614:	27009436 	bltu	r4,fp,816868 <__divdf3+0x77c>
  816618:	25c0932e 	bgeu	r4,r23,816868 <__divdf3+0x77c>
  81661c:	94bfff84 	addi	r18,r18,-2
  816620:	2709883a 	add	r4,r4,fp
  816624:	4004943a 	slli	r2,r8,16
  816628:	25efc83a 	sub	r23,r4,r23
  81662c:	1490b03a 	or	r8,r2,r18
  816630:	4008d43a 	srli	r4,r8,16
  816634:	40ffffcc 	andi	r3,r8,65535
  816638:	30c5383a 	mul	r2,r6,r3
  81663c:	1a47383a 	mul	r3,r3,r9
  816640:	310d383a 	mul	r6,r6,r4
  816644:	100ad43a 	srli	r5,r2,16
  816648:	4913383a 	mul	r9,r9,r4
  81664c:	1987883a 	add	r3,r3,r6
  816650:	28c7883a 	add	r3,r5,r3
  816654:	1980022e 	bgeu	r3,r6,816660 <__divdf3+0x574>
  816658:	01000074 	movhi	r4,1
  81665c:	4913883a 	add	r9,r9,r4
  816660:	1808d43a 	srli	r4,r3,16
  816664:	1806943a 	slli	r3,r3,16
  816668:	10bfffcc 	andi	r2,r2,65535
  81666c:	2253883a 	add	r9,r4,r9
  816670:	1887883a 	add	r3,r3,r2
  816674:	ba403836 	bltu	r23,r9,816758 <__divdf3+0x66c>
  816678:	ba403626 	beq	r23,r9,816754 <__divdf3+0x668>
  81667c:	42000054 	ori	r8,r8,1
  816680:	a880ffc4 	addi	r2,r21,1023
  816684:	00bf570e 	bge	zero,r2,8163e4 <__alt_data_end+0xff8163e4>
  816688:	40c001cc 	andi	r3,r8,7
  81668c:	18000726 	beq	r3,zero,8166ac <__divdf3+0x5c0>
  816690:	40c003cc 	andi	r3,r8,15
  816694:	01000104 	movi	r4,4
  816698:	19000426 	beq	r3,r4,8166ac <__divdf3+0x5c0>
  81669c:	4107883a 	add	r3,r8,r4
  8166a0:	1a11803a 	cmpltu	r8,r3,r8
  8166a4:	8a23883a 	add	r17,r17,r8
  8166a8:	1811883a 	mov	r8,r3
  8166ac:	88c0402c 	andhi	r3,r17,256
  8166b0:	18000426 	beq	r3,zero,8166c4 <__divdf3+0x5d8>
  8166b4:	00ffc034 	movhi	r3,65280
  8166b8:	18ffffc4 	addi	r3,r3,-1
  8166bc:	a8810004 	addi	r2,r21,1024
  8166c0:	88e2703a 	and	r17,r17,r3
  8166c4:	00c1ff84 	movi	r3,2046
  8166c8:	18bee316 	blt	r3,r2,816258 <__alt_data_end+0xff816258>
  8166cc:	8824977a 	slli	r18,r17,29
  8166d0:	4010d0fa 	srli	r8,r8,3
  8166d4:	8822927a 	slli	r17,r17,9
  8166d8:	1081ffcc 	andi	r2,r2,2047
  8166dc:	9224b03a 	or	r18,r18,r8
  8166e0:	880ad33a 	srli	r5,r17,12
  8166e4:	98c0004c 	andi	r3,r19,1
  8166e8:	003edf06 	br	816268 <__alt_data_end+0xff816268>
  8166ec:	8080022c 	andhi	r2,r16,8
  8166f0:	10001226 	beq	r2,zero,81673c <__divdf3+0x650>
  8166f4:	8880022c 	andhi	r2,r17,8
  8166f8:	1000101e 	bne	r2,zero,81673c <__divdf3+0x650>
  8166fc:	00800434 	movhi	r2,16
  816700:	89400234 	orhi	r5,r17,8
  816704:	10bfffc4 	addi	r2,r2,-1
  816708:	b007883a 	mov	r3,r22
  81670c:	288a703a 	and	r5,r5,r2
  816710:	4025883a 	mov	r18,r8
  816714:	003f3106 	br	8163dc <__alt_data_end+0xff8163dc>
  816718:	008000c4 	movi	r2,3
  81671c:	3880a626 	beq	r7,r2,8169b8 <__divdf3+0x8cc>
  816720:	00800044 	movi	r2,1
  816724:	3880521e 	bne	r7,r2,816870 <__divdf3+0x784>
  816728:	b807883a 	mov	r3,r23
  81672c:	0005883a 	mov	r2,zero
  816730:	000b883a 	mov	r5,zero
  816734:	0025883a 	mov	r18,zero
  816738:	003ecb06 	br	816268 <__alt_data_end+0xff816268>
  81673c:	00800434 	movhi	r2,16
  816740:	81400234 	orhi	r5,r16,8
  816744:	10bfffc4 	addi	r2,r2,-1
  816748:	a007883a 	mov	r3,r20
  81674c:	288a703a 	and	r5,r5,r2
  816750:	003f2206 	br	8163dc <__alt_data_end+0xff8163dc>
  816754:	183fca26 	beq	r3,zero,816680 <__alt_data_end+0xff816680>
  816758:	e5ef883a 	add	r23,fp,r23
  81675c:	40bfffc4 	addi	r2,r8,-1
  816760:	bf00392e 	bgeu	r23,fp,816848 <__divdf3+0x75c>
  816764:	1011883a 	mov	r8,r2
  816768:	ba7fc41e 	bne	r23,r9,81667c <__alt_data_end+0xff81667c>
  81676c:	b0ffc31e 	bne	r22,r3,81667c <__alt_data_end+0xff81667c>
  816770:	003fc306 	br	816680 <__alt_data_end+0xff816680>
  816774:	143ff604 	addi	r16,r2,-40
  816778:	9c20983a 	sll	r16,r19,r16
  81677c:	0025883a 	mov	r18,zero
  816780:	003ee206 	br	81630c <__alt_data_end+0xff81630c>
  816784:	d9800315 	stw	r6,12(sp)
  816788:	d9c00215 	stw	r7,8(sp)
  81678c:	0817fec0 	call	817fec <__clzsi2>
  816790:	10800804 	addi	r2,r2,32
  816794:	d9c00217 	ldw	r7,8(sp)
  816798:	d9800317 	ldw	r6,12(sp)
  81679c:	003ed106 	br	8162e4 <__alt_data_end+0xff8162e4>
  8167a0:	147ff604 	addi	r17,r2,-40
  8167a4:	3462983a 	sll	r17,r6,r17
  8167a8:	0011883a 	mov	r8,zero
  8167ac:	003ef506 	br	816384 <__alt_data_end+0xff816384>
  8167b0:	3009883a 	mov	r4,r6
  8167b4:	d9800315 	stw	r6,12(sp)
  8167b8:	da400115 	stw	r9,4(sp)
  8167bc:	0817fec0 	call	817fec <__clzsi2>
  8167c0:	10800804 	addi	r2,r2,32
  8167c4:	da400117 	ldw	r9,4(sp)
  8167c8:	d9800317 	ldw	r6,12(sp)
  8167cc:	003ee306 	br	81635c <__alt_data_end+0xff81635c>
  8167d0:	85a1883a 	add	r16,r16,r22
  8167d4:	8585803a 	cmpltu	r2,r16,r22
  8167d8:	1705883a 	add	r2,r2,fp
  8167dc:	14a5883a 	add	r18,r2,r18
  8167e0:	88bfffc4 	addi	r2,r17,-1
  8167e4:	e4800c2e 	bgeu	fp,r18,816818 <__divdf3+0x72c>
  8167e8:	90c03e36 	bltu	r18,r3,8168e4 <__divdf3+0x7f8>
  8167ec:	1c806926 	beq	r3,r18,816994 <__divdf3+0x8a8>
  8167f0:	90c7c83a 	sub	r3,r18,r3
  8167f4:	1023883a 	mov	r17,r2
  8167f8:	003f5206 	br	816544 <__alt_data_end+0xff816544>
  8167fc:	923f0436 	bltu	r18,r8,816410 <__alt_data_end+0xff816410>
  816800:	800897fa 	slli	r4,r16,31
  816804:	9004d07a 	srli	r2,r18,1
  816808:	8006d07a 	srli	r3,r16,1
  81680c:	902097fa 	slli	r16,r18,31
  816810:	20a4b03a 	or	r18,r4,r2
  816814:	003f0106 	br	81641c <__alt_data_end+0xff81641c>
  816818:	e4bff51e 	bne	fp,r18,8167f0 <__alt_data_end+0xff8167f0>
  81681c:	85bff22e 	bgeu	r16,r22,8167e8 <__alt_data_end+0xff8167e8>
  816820:	e0c7c83a 	sub	r3,fp,r3
  816824:	1023883a 	mov	r17,r2
  816828:	003f4606 	br	816544 <__alt_data_end+0xff816544>
  81682c:	100f883a 	mov	r7,r2
  816830:	003f2b06 	br	8164e0 <__alt_data_end+0xff8164e0>
  816834:	180d883a 	mov	r6,r3
  816838:	003f1306 	br	816488 <__alt_data_end+0xff816488>
  81683c:	813fe436 	bltu	r16,r4,8167d0 <__alt_data_end+0xff8167d0>
  816840:	0007883a 	mov	r3,zero
  816844:	003f3f06 	br	816544 <__alt_data_end+0xff816544>
  816848:	ba402c36 	bltu	r23,r9,8168fc <__divdf3+0x810>
  81684c:	4dc05426 	beq	r9,r23,8169a0 <__divdf3+0x8b4>
  816850:	1011883a 	mov	r8,r2
  816854:	003f8906 	br	81667c <__alt_data_end+0xff81667c>
  816858:	023fffc4 	movi	r8,-1
  81685c:	003f8806 	br	816680 <__alt_data_end+0xff816680>
  816860:	1811883a 	mov	r8,r3
  816864:	003f5406 	br	8165b8 <__alt_data_end+0xff8165b8>
  816868:	1025883a 	mov	r18,r2
  81686c:	003f6d06 	br	816624 <__alt_data_end+0xff816624>
  816870:	b827883a 	mov	r19,r23
  816874:	003f8206 	br	816680 <__alt_data_end+0xff816680>
  816878:	010007c4 	movi	r4,31
  81687c:	20c02616 	blt	r4,r3,816918 <__divdf3+0x82c>
  816880:	00800804 	movi	r2,32
  816884:	10c5c83a 	sub	r2,r2,r3
  816888:	888a983a 	sll	r5,r17,r2
  81688c:	40c8d83a 	srl	r4,r8,r3
  816890:	4084983a 	sll	r2,r8,r2
  816894:	88e2d83a 	srl	r17,r17,r3
  816898:	2906b03a 	or	r3,r5,r4
  81689c:	1004c03a 	cmpne	r2,r2,zero
  8168a0:	1886b03a 	or	r3,r3,r2
  8168a4:	188001cc 	andi	r2,r3,7
  8168a8:	10000726 	beq	r2,zero,8168c8 <__divdf3+0x7dc>
  8168ac:	188003cc 	andi	r2,r3,15
  8168b0:	01000104 	movi	r4,4
  8168b4:	11000426 	beq	r2,r4,8168c8 <__divdf3+0x7dc>
  8168b8:	1805883a 	mov	r2,r3
  8168bc:	10c00104 	addi	r3,r2,4
  8168c0:	1885803a 	cmpltu	r2,r3,r2
  8168c4:	88a3883a 	add	r17,r17,r2
  8168c8:	8880202c 	andhi	r2,r17,128
  8168cc:	10002726 	beq	r2,zero,81696c <__divdf3+0x880>
  8168d0:	98c0004c 	andi	r3,r19,1
  8168d4:	00800044 	movi	r2,1
  8168d8:	000b883a 	mov	r5,zero
  8168dc:	0025883a 	mov	r18,zero
  8168e0:	003e6106 	br	816268 <__alt_data_end+0xff816268>
  8168e4:	85a1883a 	add	r16,r16,r22
  8168e8:	8585803a 	cmpltu	r2,r16,r22
  8168ec:	1705883a 	add	r2,r2,fp
  8168f0:	14a5883a 	add	r18,r2,r18
  8168f4:	8c7fff84 	addi	r17,r17,-2
  8168f8:	003f1106 	br	816540 <__alt_data_end+0xff816540>
  8168fc:	b589883a 	add	r4,r22,r22
  816900:	25ad803a 	cmpltu	r22,r4,r22
  816904:	b739883a 	add	fp,r22,fp
  816908:	40bfff84 	addi	r2,r8,-2
  81690c:	bf2f883a 	add	r23,r23,fp
  816910:	202d883a 	mov	r22,r4
  816914:	003f9306 	br	816764 <__alt_data_end+0xff816764>
  816918:	013ff844 	movi	r4,-31
  81691c:	2085c83a 	sub	r2,r4,r2
  816920:	8888d83a 	srl	r4,r17,r2
  816924:	00800804 	movi	r2,32
  816928:	18802126 	beq	r3,r2,8169b0 <__divdf3+0x8c4>
  81692c:	00801004 	movi	r2,64
  816930:	10c5c83a 	sub	r2,r2,r3
  816934:	8884983a 	sll	r2,r17,r2
  816938:	1204b03a 	or	r2,r2,r8
  81693c:	1004c03a 	cmpne	r2,r2,zero
  816940:	2084b03a 	or	r2,r4,r2
  816944:	144001cc 	andi	r17,r2,7
  816948:	88000d1e 	bne	r17,zero,816980 <__divdf3+0x894>
  81694c:	000b883a 	mov	r5,zero
  816950:	1024d0fa 	srli	r18,r2,3
  816954:	98c0004c 	andi	r3,r19,1
  816958:	0005883a 	mov	r2,zero
  81695c:	9464b03a 	or	r18,r18,r17
  816960:	003e4106 	br	816268 <__alt_data_end+0xff816268>
  816964:	1007883a 	mov	r3,r2
  816968:	0023883a 	mov	r17,zero
  81696c:	880a927a 	slli	r5,r17,9
  816970:	1805883a 	mov	r2,r3
  816974:	8822977a 	slli	r17,r17,29
  816978:	280ad33a 	srli	r5,r5,12
  81697c:	003ff406 	br	816950 <__alt_data_end+0xff816950>
  816980:	10c003cc 	andi	r3,r2,15
  816984:	01000104 	movi	r4,4
  816988:	193ff626 	beq	r3,r4,816964 <__alt_data_end+0xff816964>
  81698c:	0023883a 	mov	r17,zero
  816990:	003fca06 	br	8168bc <__alt_data_end+0xff8168bc>
  816994:	813fd336 	bltu	r16,r4,8168e4 <__alt_data_end+0xff8168e4>
  816998:	1023883a 	mov	r17,r2
  81699c:	003fa806 	br	816840 <__alt_data_end+0xff816840>
  8169a0:	b0ffd636 	bltu	r22,r3,8168fc <__alt_data_end+0xff8168fc>
  8169a4:	1011883a 	mov	r8,r2
  8169a8:	b0ff341e 	bne	r22,r3,81667c <__alt_data_end+0xff81667c>
  8169ac:	003f3406 	br	816680 <__alt_data_end+0xff816680>
  8169b0:	0005883a 	mov	r2,zero
  8169b4:	003fe006 	br	816938 <__alt_data_end+0xff816938>
  8169b8:	00800434 	movhi	r2,16
  8169bc:	89400234 	orhi	r5,r17,8
  8169c0:	10bfffc4 	addi	r2,r2,-1
  8169c4:	b807883a 	mov	r3,r23
  8169c8:	288a703a 	and	r5,r5,r2
  8169cc:	4025883a 	mov	r18,r8
  8169d0:	003e8206 	br	8163dc <__alt_data_end+0xff8163dc>

008169d4 <__eqdf2>:
  8169d4:	2804d53a 	srli	r2,r5,20
  8169d8:	3806d53a 	srli	r3,r7,20
  8169dc:	02000434 	movhi	r8,16
  8169e0:	423fffc4 	addi	r8,r8,-1
  8169e4:	1081ffcc 	andi	r2,r2,2047
  8169e8:	0281ffc4 	movi	r10,2047
  8169ec:	2a12703a 	and	r9,r5,r8
  8169f0:	18c1ffcc 	andi	r3,r3,2047
  8169f4:	3a10703a 	and	r8,r7,r8
  8169f8:	280ad7fa 	srli	r5,r5,31
  8169fc:	380ed7fa 	srli	r7,r7,31
  816a00:	12801026 	beq	r2,r10,816a44 <__eqdf2+0x70>
  816a04:	0281ffc4 	movi	r10,2047
  816a08:	1a800a26 	beq	r3,r10,816a34 <__eqdf2+0x60>
  816a0c:	10c00226 	beq	r2,r3,816a18 <__eqdf2+0x44>
  816a10:	00800044 	movi	r2,1
  816a14:	f800283a 	ret
  816a18:	4a3ffd1e 	bne	r9,r8,816a10 <__alt_data_end+0xff816a10>
  816a1c:	21bffc1e 	bne	r4,r6,816a10 <__alt_data_end+0xff816a10>
  816a20:	29c00c26 	beq	r5,r7,816a54 <__eqdf2+0x80>
  816a24:	103ffa1e 	bne	r2,zero,816a10 <__alt_data_end+0xff816a10>
  816a28:	2244b03a 	or	r2,r4,r9
  816a2c:	1004c03a 	cmpne	r2,r2,zero
  816a30:	f800283a 	ret
  816a34:	3214b03a 	or	r10,r6,r8
  816a38:	503ff426 	beq	r10,zero,816a0c <__alt_data_end+0xff816a0c>
  816a3c:	00800044 	movi	r2,1
  816a40:	f800283a 	ret
  816a44:	2254b03a 	or	r10,r4,r9
  816a48:	503fee26 	beq	r10,zero,816a04 <__alt_data_end+0xff816a04>
  816a4c:	00800044 	movi	r2,1
  816a50:	f800283a 	ret
  816a54:	0005883a 	mov	r2,zero
  816a58:	f800283a 	ret

00816a5c <__gedf2>:
  816a5c:	2804d53a 	srli	r2,r5,20
  816a60:	3806d53a 	srli	r3,r7,20
  816a64:	02000434 	movhi	r8,16
  816a68:	423fffc4 	addi	r8,r8,-1
  816a6c:	1081ffcc 	andi	r2,r2,2047
  816a70:	0241ffc4 	movi	r9,2047
  816a74:	2a14703a 	and	r10,r5,r8
  816a78:	18c1ffcc 	andi	r3,r3,2047
  816a7c:	3a10703a 	and	r8,r7,r8
  816a80:	280ad7fa 	srli	r5,r5,31
  816a84:	380ed7fa 	srli	r7,r7,31
  816a88:	12401d26 	beq	r2,r9,816b00 <__gedf2+0xa4>
  816a8c:	0241ffc4 	movi	r9,2047
  816a90:	1a401226 	beq	r3,r9,816adc <__gedf2+0x80>
  816a94:	1000081e 	bne	r2,zero,816ab8 <__gedf2+0x5c>
  816a98:	2296b03a 	or	r11,r4,r10
  816a9c:	5813003a 	cmpeq	r9,r11,zero
  816aa0:	1800091e 	bne	r3,zero,816ac8 <__gedf2+0x6c>
  816aa4:	3218b03a 	or	r12,r6,r8
  816aa8:	6000071e 	bne	r12,zero,816ac8 <__gedf2+0x6c>
  816aac:	0005883a 	mov	r2,zero
  816ab0:	5800101e 	bne	r11,zero,816af4 <__gedf2+0x98>
  816ab4:	f800283a 	ret
  816ab8:	18000c1e 	bne	r3,zero,816aec <__gedf2+0x90>
  816abc:	3212b03a 	or	r9,r6,r8
  816ac0:	48000c26 	beq	r9,zero,816af4 <__gedf2+0x98>
  816ac4:	0013883a 	mov	r9,zero
  816ac8:	39c03fcc 	andi	r7,r7,255
  816acc:	48000826 	beq	r9,zero,816af0 <__gedf2+0x94>
  816ad0:	38000926 	beq	r7,zero,816af8 <__gedf2+0x9c>
  816ad4:	00800044 	movi	r2,1
  816ad8:	f800283a 	ret
  816adc:	3212b03a 	or	r9,r6,r8
  816ae0:	483fec26 	beq	r9,zero,816a94 <__alt_data_end+0xff816a94>
  816ae4:	00bfff84 	movi	r2,-2
  816ae8:	f800283a 	ret
  816aec:	39c03fcc 	andi	r7,r7,255
  816af0:	29c00626 	beq	r5,r7,816b0c <__gedf2+0xb0>
  816af4:	283ff726 	beq	r5,zero,816ad4 <__alt_data_end+0xff816ad4>
  816af8:	00bfffc4 	movi	r2,-1
  816afc:	f800283a 	ret
  816b00:	2292b03a 	or	r9,r4,r10
  816b04:	483fe126 	beq	r9,zero,816a8c <__alt_data_end+0xff816a8c>
  816b08:	003ff606 	br	816ae4 <__alt_data_end+0xff816ae4>
  816b0c:	18bff916 	blt	r3,r2,816af4 <__alt_data_end+0xff816af4>
  816b10:	10c00316 	blt	r2,r3,816b20 <__gedf2+0xc4>
  816b14:	42bff736 	bltu	r8,r10,816af4 <__alt_data_end+0xff816af4>
  816b18:	52000326 	beq	r10,r8,816b28 <__gedf2+0xcc>
  816b1c:	5200042e 	bgeu	r10,r8,816b30 <__gedf2+0xd4>
  816b20:	283fec1e 	bne	r5,zero,816ad4 <__alt_data_end+0xff816ad4>
  816b24:	003ff406 	br	816af8 <__alt_data_end+0xff816af8>
  816b28:	313ff236 	bltu	r6,r4,816af4 <__alt_data_end+0xff816af4>
  816b2c:	21bffc36 	bltu	r4,r6,816b20 <__alt_data_end+0xff816b20>
  816b30:	0005883a 	mov	r2,zero
  816b34:	f800283a 	ret

00816b38 <__ledf2>:
  816b38:	2804d53a 	srli	r2,r5,20
  816b3c:	3810d53a 	srli	r8,r7,20
  816b40:	00c00434 	movhi	r3,16
  816b44:	18ffffc4 	addi	r3,r3,-1
  816b48:	1081ffcc 	andi	r2,r2,2047
  816b4c:	0241ffc4 	movi	r9,2047
  816b50:	28d4703a 	and	r10,r5,r3
  816b54:	4201ffcc 	andi	r8,r8,2047
  816b58:	38c6703a 	and	r3,r7,r3
  816b5c:	280ad7fa 	srli	r5,r5,31
  816b60:	380ed7fa 	srli	r7,r7,31
  816b64:	12401f26 	beq	r2,r9,816be4 <__ledf2+0xac>
  816b68:	0241ffc4 	movi	r9,2047
  816b6c:	42401426 	beq	r8,r9,816bc0 <__ledf2+0x88>
  816b70:	1000091e 	bne	r2,zero,816b98 <__ledf2+0x60>
  816b74:	2296b03a 	or	r11,r4,r10
  816b78:	5813003a 	cmpeq	r9,r11,zero
  816b7c:	29403fcc 	andi	r5,r5,255
  816b80:	40000a1e 	bne	r8,zero,816bac <__ledf2+0x74>
  816b84:	30d8b03a 	or	r12,r6,r3
  816b88:	6000081e 	bne	r12,zero,816bac <__ledf2+0x74>
  816b8c:	0005883a 	mov	r2,zero
  816b90:	5800111e 	bne	r11,zero,816bd8 <__ledf2+0xa0>
  816b94:	f800283a 	ret
  816b98:	29403fcc 	andi	r5,r5,255
  816b9c:	40000c1e 	bne	r8,zero,816bd0 <__ledf2+0x98>
  816ba0:	30d2b03a 	or	r9,r6,r3
  816ba4:	48000c26 	beq	r9,zero,816bd8 <__ledf2+0xa0>
  816ba8:	0013883a 	mov	r9,zero
  816bac:	39c03fcc 	andi	r7,r7,255
  816bb0:	48000826 	beq	r9,zero,816bd4 <__ledf2+0x9c>
  816bb4:	38001126 	beq	r7,zero,816bfc <__ledf2+0xc4>
  816bb8:	00800044 	movi	r2,1
  816bbc:	f800283a 	ret
  816bc0:	30d2b03a 	or	r9,r6,r3
  816bc4:	483fea26 	beq	r9,zero,816b70 <__alt_data_end+0xff816b70>
  816bc8:	00800084 	movi	r2,2
  816bcc:	f800283a 	ret
  816bd0:	39c03fcc 	andi	r7,r7,255
  816bd4:	39400726 	beq	r7,r5,816bf4 <__ledf2+0xbc>
  816bd8:	2800081e 	bne	r5,zero,816bfc <__ledf2+0xc4>
  816bdc:	00800044 	movi	r2,1
  816be0:	f800283a 	ret
  816be4:	2292b03a 	or	r9,r4,r10
  816be8:	483fdf26 	beq	r9,zero,816b68 <__alt_data_end+0xff816b68>
  816bec:	00800084 	movi	r2,2
  816bf0:	f800283a 	ret
  816bf4:	4080030e 	bge	r8,r2,816c04 <__ledf2+0xcc>
  816bf8:	383fef26 	beq	r7,zero,816bb8 <__alt_data_end+0xff816bb8>
  816bfc:	00bfffc4 	movi	r2,-1
  816c00:	f800283a 	ret
  816c04:	123feb16 	blt	r2,r8,816bb4 <__alt_data_end+0xff816bb4>
  816c08:	1abff336 	bltu	r3,r10,816bd8 <__alt_data_end+0xff816bd8>
  816c0c:	50c00326 	beq	r10,r3,816c1c <__ledf2+0xe4>
  816c10:	50c0042e 	bgeu	r10,r3,816c24 <__ledf2+0xec>
  816c14:	283fe81e 	bne	r5,zero,816bb8 <__alt_data_end+0xff816bb8>
  816c18:	003ff806 	br	816bfc <__alt_data_end+0xff816bfc>
  816c1c:	313fee36 	bltu	r6,r4,816bd8 <__alt_data_end+0xff816bd8>
  816c20:	21bffc36 	bltu	r4,r6,816c14 <__alt_data_end+0xff816c14>
  816c24:	0005883a 	mov	r2,zero
  816c28:	f800283a 	ret

00816c2c <__muldf3>:
  816c2c:	defff304 	addi	sp,sp,-52
  816c30:	2804d53a 	srli	r2,r5,20
  816c34:	dd800915 	stw	r22,36(sp)
  816c38:	282cd7fa 	srli	r22,r5,31
  816c3c:	dc000315 	stw	r16,12(sp)
  816c40:	04000434 	movhi	r16,16
  816c44:	dd400815 	stw	r21,32(sp)
  816c48:	dc800515 	stw	r18,20(sp)
  816c4c:	843fffc4 	addi	r16,r16,-1
  816c50:	dfc00c15 	stw	ra,48(sp)
  816c54:	df000b15 	stw	fp,44(sp)
  816c58:	ddc00a15 	stw	r23,40(sp)
  816c5c:	dd000715 	stw	r20,28(sp)
  816c60:	dcc00615 	stw	r19,24(sp)
  816c64:	dc400415 	stw	r17,16(sp)
  816c68:	1481ffcc 	andi	r18,r2,2047
  816c6c:	2c20703a 	and	r16,r5,r16
  816c70:	b02b883a 	mov	r21,r22
  816c74:	b2403fcc 	andi	r9,r22,255
  816c78:	90006026 	beq	r18,zero,816dfc <__muldf3+0x1d0>
  816c7c:	0081ffc4 	movi	r2,2047
  816c80:	2029883a 	mov	r20,r4
  816c84:	90803626 	beq	r18,r2,816d60 <__muldf3+0x134>
  816c88:	80800434 	orhi	r2,r16,16
  816c8c:	100490fa 	slli	r2,r2,3
  816c90:	2020d77a 	srli	r16,r4,29
  816c94:	202890fa 	slli	r20,r4,3
  816c98:	94bf0044 	addi	r18,r18,-1023
  816c9c:	80a0b03a 	or	r16,r16,r2
  816ca0:	0027883a 	mov	r19,zero
  816ca4:	0039883a 	mov	fp,zero
  816ca8:	3804d53a 	srli	r2,r7,20
  816cac:	382ed7fa 	srli	r23,r7,31
  816cb0:	04400434 	movhi	r17,16
  816cb4:	8c7fffc4 	addi	r17,r17,-1
  816cb8:	1081ffcc 	andi	r2,r2,2047
  816cbc:	3011883a 	mov	r8,r6
  816cc0:	3c62703a 	and	r17,r7,r17
  816cc4:	ba803fcc 	andi	r10,r23,255
  816cc8:	10006d26 	beq	r2,zero,816e80 <__muldf3+0x254>
  816ccc:	00c1ffc4 	movi	r3,2047
  816cd0:	10c06526 	beq	r2,r3,816e68 <__muldf3+0x23c>
  816cd4:	88c00434 	orhi	r3,r17,16
  816cd8:	180690fa 	slli	r3,r3,3
  816cdc:	3022d77a 	srli	r17,r6,29
  816ce0:	301090fa 	slli	r8,r6,3
  816ce4:	10bf0044 	addi	r2,r2,-1023
  816ce8:	88e2b03a 	or	r17,r17,r3
  816cec:	000b883a 	mov	r5,zero
  816cf0:	9085883a 	add	r2,r18,r2
  816cf4:	2cc8b03a 	or	r4,r5,r19
  816cf8:	00c003c4 	movi	r3,15
  816cfc:	bdacf03a 	xor	r22,r23,r22
  816d00:	12c00044 	addi	r11,r2,1
  816d04:	19009936 	bltu	r3,r4,816f6c <__muldf3+0x340>
  816d08:	200890ba 	slli	r4,r4,2
  816d0c:	00c02074 	movhi	r3,129
  816d10:	18db4804 	addi	r3,r3,27936
  816d14:	20c9883a 	add	r4,r4,r3
  816d18:	20c00017 	ldw	r3,0(r4)
  816d1c:	1800683a 	jmp	r3
  816d20:	00816f6c 	andhi	r2,zero,1469
  816d24:	00816d80 	call	816d8 <__alt_mem_sdram_0-0x77e928>
  816d28:	00816d80 	call	816d8 <__alt_mem_sdram_0-0x77e928>
  816d2c:	00816d7c 	xorhi	r2,zero,1461
  816d30:	00816f48 	cmpgei	r2,zero,1469
  816d34:	00816f48 	cmpgei	r2,zero,1469
  816d38:	00816f30 	cmpltui	r2,zero,1468
  816d3c:	00816d7c 	xorhi	r2,zero,1461
  816d40:	00816f48 	cmpgei	r2,zero,1469
  816d44:	00816f30 	cmpltui	r2,zero,1468
  816d48:	00816f48 	cmpgei	r2,zero,1469
  816d4c:	00816d7c 	xorhi	r2,zero,1461
  816d50:	00816f58 	cmpnei	r2,zero,1469
  816d54:	00816f58 	cmpnei	r2,zero,1469
  816d58:	00816f58 	cmpnei	r2,zero,1469
  816d5c:	00817174 	movhi	r2,1477
  816d60:	2404b03a 	or	r2,r4,r16
  816d64:	10006f1e 	bne	r2,zero,816f24 <__muldf3+0x2f8>
  816d68:	04c00204 	movi	r19,8
  816d6c:	0021883a 	mov	r16,zero
  816d70:	0029883a 	mov	r20,zero
  816d74:	07000084 	movi	fp,2
  816d78:	003fcb06 	br	816ca8 <__alt_data_end+0xff816ca8>
  816d7c:	502d883a 	mov	r22,r10
  816d80:	00800084 	movi	r2,2
  816d84:	28805726 	beq	r5,r2,816ee4 <__muldf3+0x2b8>
  816d88:	008000c4 	movi	r2,3
  816d8c:	28816626 	beq	r5,r2,817328 <__muldf3+0x6fc>
  816d90:	00800044 	movi	r2,1
  816d94:	2881411e 	bne	r5,r2,81729c <__muldf3+0x670>
  816d98:	b02b883a 	mov	r21,r22
  816d9c:	0005883a 	mov	r2,zero
  816da0:	000b883a 	mov	r5,zero
  816da4:	0029883a 	mov	r20,zero
  816da8:	1004953a 	slli	r2,r2,20
  816dac:	a8c03fcc 	andi	r3,r21,255
  816db0:	04400434 	movhi	r17,16
  816db4:	8c7fffc4 	addi	r17,r17,-1
  816db8:	180697fa 	slli	r3,r3,31
  816dbc:	2c4a703a 	and	r5,r5,r17
  816dc0:	288ab03a 	or	r5,r5,r2
  816dc4:	28c6b03a 	or	r3,r5,r3
  816dc8:	a005883a 	mov	r2,r20
  816dcc:	dfc00c17 	ldw	ra,48(sp)
  816dd0:	df000b17 	ldw	fp,44(sp)
  816dd4:	ddc00a17 	ldw	r23,40(sp)
  816dd8:	dd800917 	ldw	r22,36(sp)
  816ddc:	dd400817 	ldw	r21,32(sp)
  816de0:	dd000717 	ldw	r20,28(sp)
  816de4:	dcc00617 	ldw	r19,24(sp)
  816de8:	dc800517 	ldw	r18,20(sp)
  816dec:	dc400417 	ldw	r17,16(sp)
  816df0:	dc000317 	ldw	r16,12(sp)
  816df4:	dec00d04 	addi	sp,sp,52
  816df8:	f800283a 	ret
  816dfc:	2404b03a 	or	r2,r4,r16
  816e00:	2027883a 	mov	r19,r4
  816e04:	10004226 	beq	r2,zero,816f10 <__muldf3+0x2e4>
  816e08:	8000fc26 	beq	r16,zero,8171fc <__muldf3+0x5d0>
  816e0c:	8009883a 	mov	r4,r16
  816e10:	d9800215 	stw	r6,8(sp)
  816e14:	d9c00015 	stw	r7,0(sp)
  816e18:	da400115 	stw	r9,4(sp)
  816e1c:	0817fec0 	call	817fec <__clzsi2>
  816e20:	d9800217 	ldw	r6,8(sp)
  816e24:	d9c00017 	ldw	r7,0(sp)
  816e28:	da400117 	ldw	r9,4(sp)
  816e2c:	113ffd44 	addi	r4,r2,-11
  816e30:	00c00704 	movi	r3,28
  816e34:	1900ed16 	blt	r3,r4,8171ec <__muldf3+0x5c0>
  816e38:	00c00744 	movi	r3,29
  816e3c:	147ffe04 	addi	r17,r2,-8
  816e40:	1907c83a 	sub	r3,r3,r4
  816e44:	8460983a 	sll	r16,r16,r17
  816e48:	98c6d83a 	srl	r3,r19,r3
  816e4c:	9c68983a 	sll	r20,r19,r17
  816e50:	1c20b03a 	or	r16,r3,r16
  816e54:	1080fcc4 	addi	r2,r2,1011
  816e58:	00a5c83a 	sub	r18,zero,r2
  816e5c:	0027883a 	mov	r19,zero
  816e60:	0039883a 	mov	fp,zero
  816e64:	003f9006 	br	816ca8 <__alt_data_end+0xff816ca8>
  816e68:	3446b03a 	or	r3,r6,r17
  816e6c:	1800261e 	bne	r3,zero,816f08 <__muldf3+0x2dc>
  816e70:	0023883a 	mov	r17,zero
  816e74:	0011883a 	mov	r8,zero
  816e78:	01400084 	movi	r5,2
  816e7c:	003f9c06 	br	816cf0 <__alt_data_end+0xff816cf0>
  816e80:	3446b03a 	or	r3,r6,r17
  816e84:	18001c26 	beq	r3,zero,816ef8 <__muldf3+0x2cc>
  816e88:	8800ce26 	beq	r17,zero,8171c4 <__muldf3+0x598>
  816e8c:	8809883a 	mov	r4,r17
  816e90:	d9800215 	stw	r6,8(sp)
  816e94:	da400115 	stw	r9,4(sp)
  816e98:	da800015 	stw	r10,0(sp)
  816e9c:	0817fec0 	call	817fec <__clzsi2>
  816ea0:	d9800217 	ldw	r6,8(sp)
  816ea4:	da400117 	ldw	r9,4(sp)
  816ea8:	da800017 	ldw	r10,0(sp)
  816eac:	113ffd44 	addi	r4,r2,-11
  816eb0:	00c00704 	movi	r3,28
  816eb4:	1900bf16 	blt	r3,r4,8171b4 <__muldf3+0x588>
  816eb8:	00c00744 	movi	r3,29
  816ebc:	123ffe04 	addi	r8,r2,-8
  816ec0:	1907c83a 	sub	r3,r3,r4
  816ec4:	8a22983a 	sll	r17,r17,r8
  816ec8:	30c6d83a 	srl	r3,r6,r3
  816ecc:	3210983a 	sll	r8,r6,r8
  816ed0:	1c62b03a 	or	r17,r3,r17
  816ed4:	1080fcc4 	addi	r2,r2,1011
  816ed8:	0085c83a 	sub	r2,zero,r2
  816edc:	000b883a 	mov	r5,zero
  816ee0:	003f8306 	br	816cf0 <__alt_data_end+0xff816cf0>
  816ee4:	b02b883a 	mov	r21,r22
  816ee8:	0081ffc4 	movi	r2,2047
  816eec:	000b883a 	mov	r5,zero
  816ef0:	0029883a 	mov	r20,zero
  816ef4:	003fac06 	br	816da8 <__alt_data_end+0xff816da8>
  816ef8:	0023883a 	mov	r17,zero
  816efc:	0011883a 	mov	r8,zero
  816f00:	01400044 	movi	r5,1
  816f04:	003f7a06 	br	816cf0 <__alt_data_end+0xff816cf0>
  816f08:	014000c4 	movi	r5,3
  816f0c:	003f7806 	br	816cf0 <__alt_data_end+0xff816cf0>
  816f10:	04c00104 	movi	r19,4
  816f14:	0021883a 	mov	r16,zero
  816f18:	0029883a 	mov	r20,zero
  816f1c:	07000044 	movi	fp,1
  816f20:	003f6106 	br	816ca8 <__alt_data_end+0xff816ca8>
  816f24:	04c00304 	movi	r19,12
  816f28:	070000c4 	movi	fp,3
  816f2c:	003f5e06 	br	816ca8 <__alt_data_end+0xff816ca8>
  816f30:	01400434 	movhi	r5,16
  816f34:	002b883a 	mov	r21,zero
  816f38:	297fffc4 	addi	r5,r5,-1
  816f3c:	053fffc4 	movi	r20,-1
  816f40:	0081ffc4 	movi	r2,2047
  816f44:	003f9806 	br	816da8 <__alt_data_end+0xff816da8>
  816f48:	8023883a 	mov	r17,r16
  816f4c:	a011883a 	mov	r8,r20
  816f50:	e00b883a 	mov	r5,fp
  816f54:	003f8a06 	br	816d80 <__alt_data_end+0xff816d80>
  816f58:	8023883a 	mov	r17,r16
  816f5c:	a011883a 	mov	r8,r20
  816f60:	482d883a 	mov	r22,r9
  816f64:	e00b883a 	mov	r5,fp
  816f68:	003f8506 	br	816d80 <__alt_data_end+0xff816d80>
  816f6c:	a00ad43a 	srli	r5,r20,16
  816f70:	401ad43a 	srli	r13,r8,16
  816f74:	a53fffcc 	andi	r20,r20,65535
  816f78:	423fffcc 	andi	r8,r8,65535
  816f7c:	4519383a 	mul	r12,r8,r20
  816f80:	4147383a 	mul	r3,r8,r5
  816f84:	6d09383a 	mul	r4,r13,r20
  816f88:	600cd43a 	srli	r6,r12,16
  816f8c:	2b5d383a 	mul	r14,r5,r13
  816f90:	20c9883a 	add	r4,r4,r3
  816f94:	310d883a 	add	r6,r6,r4
  816f98:	30c0022e 	bgeu	r6,r3,816fa4 <__muldf3+0x378>
  816f9c:	00c00074 	movhi	r3,1
  816fa0:	70dd883a 	add	r14,r14,r3
  816fa4:	8826d43a 	srli	r19,r17,16
  816fa8:	8bffffcc 	andi	r15,r17,65535
  816fac:	7d23383a 	mul	r17,r15,r20
  816fb0:	7949383a 	mul	r4,r15,r5
  816fb4:	9d29383a 	mul	r20,r19,r20
  816fb8:	8814d43a 	srli	r10,r17,16
  816fbc:	3012943a 	slli	r9,r6,16
  816fc0:	a129883a 	add	r20,r20,r4
  816fc4:	633fffcc 	andi	r12,r12,65535
  816fc8:	5515883a 	add	r10,r10,r20
  816fcc:	3006d43a 	srli	r3,r6,16
  816fd0:	4b13883a 	add	r9,r9,r12
  816fd4:	2ccb383a 	mul	r5,r5,r19
  816fd8:	5100022e 	bgeu	r10,r4,816fe4 <__muldf3+0x3b8>
  816fdc:	01000074 	movhi	r4,1
  816fe0:	290b883a 	add	r5,r5,r4
  816fe4:	802ad43a 	srli	r21,r16,16
  816fe8:	843fffcc 	andi	r16,r16,65535
  816fec:	440d383a 	mul	r6,r8,r16
  816ff0:	4565383a 	mul	r18,r8,r21
  816ff4:	8349383a 	mul	r4,r16,r13
  816ff8:	500e943a 	slli	r7,r10,16
  816ffc:	3010d43a 	srli	r8,r6,16
  817000:	5028d43a 	srli	r20,r10,16
  817004:	2489883a 	add	r4,r4,r18
  817008:	8abfffcc 	andi	r10,r17,65535
  81700c:	3a95883a 	add	r10,r7,r10
  817010:	4119883a 	add	r12,r8,r4
  817014:	a169883a 	add	r20,r20,r5
  817018:	1a87883a 	add	r3,r3,r10
  81701c:	6d5b383a 	mul	r13,r13,r21
  817020:	6480022e 	bgeu	r12,r18,81702c <__muldf3+0x400>
  817024:	01000074 	movhi	r4,1
  817028:	691b883a 	add	r13,r13,r4
  81702c:	7c25383a 	mul	r18,r15,r16
  817030:	7d4b383a 	mul	r5,r15,r21
  817034:	84cf383a 	mul	r7,r16,r19
  817038:	901ed43a 	srli	r15,r18,16
  81703c:	6008d43a 	srli	r4,r12,16
  817040:	6010943a 	slli	r8,r12,16
  817044:	394f883a 	add	r7,r7,r5
  817048:	333fffcc 	andi	r12,r6,65535
  81704c:	79df883a 	add	r15,r15,r7
  817050:	235b883a 	add	r13,r4,r13
  817054:	9d63383a 	mul	r17,r19,r21
  817058:	4309883a 	add	r4,r8,r12
  81705c:	7940022e 	bgeu	r15,r5,817068 <__muldf3+0x43c>
  817060:	01400074 	movhi	r5,1
  817064:	8963883a 	add	r17,r17,r5
  817068:	780a943a 	slli	r5,r15,16
  81706c:	91bfffcc 	andi	r6,r18,65535
  817070:	70c7883a 	add	r3,r14,r3
  817074:	298d883a 	add	r6,r5,r6
  817078:	1a8f803a 	cmpltu	r7,r3,r10
  81707c:	350b883a 	add	r5,r6,r20
  817080:	20c7883a 	add	r3,r4,r3
  817084:	3955883a 	add	r10,r7,r5
  817088:	1909803a 	cmpltu	r4,r3,r4
  81708c:	6a91883a 	add	r8,r13,r10
  817090:	780cd43a 	srli	r6,r15,16
  817094:	2219883a 	add	r12,r4,r8
  817098:	2d0b803a 	cmpltu	r5,r5,r20
  81709c:	51cf803a 	cmpltu	r7,r10,r7
  8170a0:	29ceb03a 	or	r7,r5,r7
  8170a4:	4351803a 	cmpltu	r8,r8,r13
  8170a8:	610b803a 	cmpltu	r5,r12,r4
  8170ac:	4148b03a 	or	r4,r8,r5
  8170b0:	398f883a 	add	r7,r7,r6
  8170b4:	3909883a 	add	r4,r7,r4
  8170b8:	1810927a 	slli	r8,r3,9
  8170bc:	2449883a 	add	r4,r4,r17
  8170c0:	2008927a 	slli	r4,r4,9
  8170c4:	6022d5fa 	srli	r17,r12,23
  8170c8:	1806d5fa 	srli	r3,r3,23
  8170cc:	4252b03a 	or	r9,r8,r9
  8170d0:	600a927a 	slli	r5,r12,9
  8170d4:	4810c03a 	cmpne	r8,r9,zero
  8170d8:	2462b03a 	or	r17,r4,r17
  8170dc:	40c6b03a 	or	r3,r8,r3
  8170e0:	8900402c 	andhi	r4,r17,256
  8170e4:	1950b03a 	or	r8,r3,r5
  8170e8:	20000726 	beq	r4,zero,817108 <__muldf3+0x4dc>
  8170ec:	4006d07a 	srli	r3,r8,1
  8170f0:	880497fa 	slli	r2,r17,31
  8170f4:	4200004c 	andi	r8,r8,1
  8170f8:	8822d07a 	srli	r17,r17,1
  8170fc:	1a10b03a 	or	r8,r3,r8
  817100:	1210b03a 	or	r8,r2,r8
  817104:	5805883a 	mov	r2,r11
  817108:	1140ffc4 	addi	r5,r2,1023
  81710c:	0140440e 	bge	zero,r5,817220 <__muldf3+0x5f4>
  817110:	40c001cc 	andi	r3,r8,7
  817114:	18000726 	beq	r3,zero,817134 <__muldf3+0x508>
  817118:	40c003cc 	andi	r3,r8,15
  81711c:	01000104 	movi	r4,4
  817120:	19000426 	beq	r3,r4,817134 <__muldf3+0x508>
  817124:	4107883a 	add	r3,r8,r4
  817128:	1a11803a 	cmpltu	r8,r3,r8
  81712c:	8a23883a 	add	r17,r17,r8
  817130:	1811883a 	mov	r8,r3
  817134:	88c0402c 	andhi	r3,r17,256
  817138:	18000426 	beq	r3,zero,81714c <__muldf3+0x520>
  81713c:	11410004 	addi	r5,r2,1024
  817140:	00bfc034 	movhi	r2,65280
  817144:	10bfffc4 	addi	r2,r2,-1
  817148:	88a2703a 	and	r17,r17,r2
  81714c:	0081ff84 	movi	r2,2046
  817150:	117f6416 	blt	r2,r5,816ee4 <__alt_data_end+0xff816ee4>
  817154:	8828977a 	slli	r20,r17,29
  817158:	4010d0fa 	srli	r8,r8,3
  81715c:	8822927a 	slli	r17,r17,9
  817160:	2881ffcc 	andi	r2,r5,2047
  817164:	a228b03a 	or	r20,r20,r8
  817168:	880ad33a 	srli	r5,r17,12
  81716c:	b02b883a 	mov	r21,r22
  817170:	003f0d06 	br	816da8 <__alt_data_end+0xff816da8>
  817174:	8080022c 	andhi	r2,r16,8
  817178:	10000926 	beq	r2,zero,8171a0 <__muldf3+0x574>
  81717c:	8880022c 	andhi	r2,r17,8
  817180:	1000071e 	bne	r2,zero,8171a0 <__muldf3+0x574>
  817184:	00800434 	movhi	r2,16
  817188:	89400234 	orhi	r5,r17,8
  81718c:	10bfffc4 	addi	r2,r2,-1
  817190:	b82b883a 	mov	r21,r23
  817194:	288a703a 	and	r5,r5,r2
  817198:	4029883a 	mov	r20,r8
  81719c:	003f6806 	br	816f40 <__alt_data_end+0xff816f40>
  8171a0:	00800434 	movhi	r2,16
  8171a4:	81400234 	orhi	r5,r16,8
  8171a8:	10bfffc4 	addi	r2,r2,-1
  8171ac:	288a703a 	and	r5,r5,r2
  8171b0:	003f6306 	br	816f40 <__alt_data_end+0xff816f40>
  8171b4:	147ff604 	addi	r17,r2,-40
  8171b8:	3462983a 	sll	r17,r6,r17
  8171bc:	0011883a 	mov	r8,zero
  8171c0:	003f4406 	br	816ed4 <__alt_data_end+0xff816ed4>
  8171c4:	3009883a 	mov	r4,r6
  8171c8:	d9800215 	stw	r6,8(sp)
  8171cc:	da400115 	stw	r9,4(sp)
  8171d0:	da800015 	stw	r10,0(sp)
  8171d4:	0817fec0 	call	817fec <__clzsi2>
  8171d8:	10800804 	addi	r2,r2,32
  8171dc:	da800017 	ldw	r10,0(sp)
  8171e0:	da400117 	ldw	r9,4(sp)
  8171e4:	d9800217 	ldw	r6,8(sp)
  8171e8:	003f3006 	br	816eac <__alt_data_end+0xff816eac>
  8171ec:	143ff604 	addi	r16,r2,-40
  8171f0:	9c20983a 	sll	r16,r19,r16
  8171f4:	0029883a 	mov	r20,zero
  8171f8:	003f1606 	br	816e54 <__alt_data_end+0xff816e54>
  8171fc:	d9800215 	stw	r6,8(sp)
  817200:	d9c00015 	stw	r7,0(sp)
  817204:	da400115 	stw	r9,4(sp)
  817208:	0817fec0 	call	817fec <__clzsi2>
  81720c:	10800804 	addi	r2,r2,32
  817210:	da400117 	ldw	r9,4(sp)
  817214:	d9c00017 	ldw	r7,0(sp)
  817218:	d9800217 	ldw	r6,8(sp)
  81721c:	003f0306 	br	816e2c <__alt_data_end+0xff816e2c>
  817220:	00c00044 	movi	r3,1
  817224:	1947c83a 	sub	r3,r3,r5
  817228:	00800e04 	movi	r2,56
  81722c:	10feda16 	blt	r2,r3,816d98 <__alt_data_end+0xff816d98>
  817230:	008007c4 	movi	r2,31
  817234:	10c01b16 	blt	r2,r3,8172a4 <__muldf3+0x678>
  817238:	00800804 	movi	r2,32
  81723c:	10c5c83a 	sub	r2,r2,r3
  817240:	888a983a 	sll	r5,r17,r2
  817244:	40c8d83a 	srl	r4,r8,r3
  817248:	4084983a 	sll	r2,r8,r2
  81724c:	88e2d83a 	srl	r17,r17,r3
  817250:	2906b03a 	or	r3,r5,r4
  817254:	1004c03a 	cmpne	r2,r2,zero
  817258:	1886b03a 	or	r3,r3,r2
  81725c:	188001cc 	andi	r2,r3,7
  817260:	10000726 	beq	r2,zero,817280 <__muldf3+0x654>
  817264:	188003cc 	andi	r2,r3,15
  817268:	01000104 	movi	r4,4
  81726c:	11000426 	beq	r2,r4,817280 <__muldf3+0x654>
  817270:	1805883a 	mov	r2,r3
  817274:	10c00104 	addi	r3,r2,4
  817278:	1885803a 	cmpltu	r2,r3,r2
  81727c:	88a3883a 	add	r17,r17,r2
  817280:	8880202c 	andhi	r2,r17,128
  817284:	10001c26 	beq	r2,zero,8172f8 <__muldf3+0x6cc>
  817288:	b02b883a 	mov	r21,r22
  81728c:	00800044 	movi	r2,1
  817290:	000b883a 	mov	r5,zero
  817294:	0029883a 	mov	r20,zero
  817298:	003ec306 	br	816da8 <__alt_data_end+0xff816da8>
  81729c:	5805883a 	mov	r2,r11
  8172a0:	003f9906 	br	817108 <__alt_data_end+0xff817108>
  8172a4:	00bff844 	movi	r2,-31
  8172a8:	1145c83a 	sub	r2,r2,r5
  8172ac:	8888d83a 	srl	r4,r17,r2
  8172b0:	00800804 	movi	r2,32
  8172b4:	18801a26 	beq	r3,r2,817320 <__muldf3+0x6f4>
  8172b8:	00801004 	movi	r2,64
  8172bc:	10c5c83a 	sub	r2,r2,r3
  8172c0:	8884983a 	sll	r2,r17,r2
  8172c4:	1204b03a 	or	r2,r2,r8
  8172c8:	1004c03a 	cmpne	r2,r2,zero
  8172cc:	2084b03a 	or	r2,r4,r2
  8172d0:	144001cc 	andi	r17,r2,7
  8172d4:	88000d1e 	bne	r17,zero,81730c <__muldf3+0x6e0>
  8172d8:	000b883a 	mov	r5,zero
  8172dc:	1028d0fa 	srli	r20,r2,3
  8172e0:	b02b883a 	mov	r21,r22
  8172e4:	0005883a 	mov	r2,zero
  8172e8:	a468b03a 	or	r20,r20,r17
  8172ec:	003eae06 	br	816da8 <__alt_data_end+0xff816da8>
  8172f0:	1007883a 	mov	r3,r2
  8172f4:	0023883a 	mov	r17,zero
  8172f8:	880a927a 	slli	r5,r17,9
  8172fc:	1805883a 	mov	r2,r3
  817300:	8822977a 	slli	r17,r17,29
  817304:	280ad33a 	srli	r5,r5,12
  817308:	003ff406 	br	8172dc <__alt_data_end+0xff8172dc>
  81730c:	10c003cc 	andi	r3,r2,15
  817310:	01000104 	movi	r4,4
  817314:	193ff626 	beq	r3,r4,8172f0 <__alt_data_end+0xff8172f0>
  817318:	0023883a 	mov	r17,zero
  81731c:	003fd506 	br	817274 <__alt_data_end+0xff817274>
  817320:	0005883a 	mov	r2,zero
  817324:	003fe706 	br	8172c4 <__alt_data_end+0xff8172c4>
  817328:	00800434 	movhi	r2,16
  81732c:	89400234 	orhi	r5,r17,8
  817330:	10bfffc4 	addi	r2,r2,-1
  817334:	b02b883a 	mov	r21,r22
  817338:	288a703a 	and	r5,r5,r2
  81733c:	4029883a 	mov	r20,r8
  817340:	003eff06 	br	816f40 <__alt_data_end+0xff816f40>

00817344 <__subdf3>:
  817344:	02000434 	movhi	r8,16
  817348:	423fffc4 	addi	r8,r8,-1
  81734c:	defffb04 	addi	sp,sp,-20
  817350:	2a14703a 	and	r10,r5,r8
  817354:	3812d53a 	srli	r9,r7,20
  817358:	3a10703a 	and	r8,r7,r8
  81735c:	2006d77a 	srli	r3,r4,29
  817360:	3004d77a 	srli	r2,r6,29
  817364:	dc000015 	stw	r16,0(sp)
  817368:	501490fa 	slli	r10,r10,3
  81736c:	2820d53a 	srli	r16,r5,20
  817370:	401090fa 	slli	r8,r8,3
  817374:	dc800215 	stw	r18,8(sp)
  817378:	dc400115 	stw	r17,4(sp)
  81737c:	dfc00415 	stw	ra,16(sp)
  817380:	202290fa 	slli	r17,r4,3
  817384:	dcc00315 	stw	r19,12(sp)
  817388:	4a41ffcc 	andi	r9,r9,2047
  81738c:	0101ffc4 	movi	r4,2047
  817390:	2824d7fa 	srli	r18,r5,31
  817394:	8401ffcc 	andi	r16,r16,2047
  817398:	50c6b03a 	or	r3,r10,r3
  81739c:	380ed7fa 	srli	r7,r7,31
  8173a0:	408ab03a 	or	r5,r8,r2
  8173a4:	300c90fa 	slli	r6,r6,3
  8173a8:	49009626 	beq	r9,r4,817604 <__subdf3+0x2c0>
  8173ac:	39c0005c 	xori	r7,r7,1
  8173b0:	8245c83a 	sub	r2,r16,r9
  8173b4:	3c807426 	beq	r7,r18,817588 <__subdf3+0x244>
  8173b8:	0080af0e 	bge	zero,r2,817678 <__subdf3+0x334>
  8173bc:	48002a1e 	bne	r9,zero,817468 <__subdf3+0x124>
  8173c0:	2988b03a 	or	r4,r5,r6
  8173c4:	20009a1e 	bne	r4,zero,817630 <__subdf3+0x2ec>
  8173c8:	888001cc 	andi	r2,r17,7
  8173cc:	10000726 	beq	r2,zero,8173ec <__subdf3+0xa8>
  8173d0:	888003cc 	andi	r2,r17,15
  8173d4:	01000104 	movi	r4,4
  8173d8:	11000426 	beq	r2,r4,8173ec <__subdf3+0xa8>
  8173dc:	890b883a 	add	r5,r17,r4
  8173e0:	2c63803a 	cmpltu	r17,r5,r17
  8173e4:	1c47883a 	add	r3,r3,r17
  8173e8:	2823883a 	mov	r17,r5
  8173ec:	1880202c 	andhi	r2,r3,128
  8173f0:	10005926 	beq	r2,zero,817558 <__subdf3+0x214>
  8173f4:	84000044 	addi	r16,r16,1
  8173f8:	0081ffc4 	movi	r2,2047
  8173fc:	8080be26 	beq	r16,r2,8176f8 <__subdf3+0x3b4>
  817400:	017fe034 	movhi	r5,65408
  817404:	297fffc4 	addi	r5,r5,-1
  817408:	1946703a 	and	r3,r3,r5
  81740c:	1804977a 	slli	r2,r3,29
  817410:	1806927a 	slli	r3,r3,9
  817414:	8822d0fa 	srli	r17,r17,3
  817418:	8401ffcc 	andi	r16,r16,2047
  81741c:	180ad33a 	srli	r5,r3,12
  817420:	9100004c 	andi	r4,r18,1
  817424:	1444b03a 	or	r2,r2,r17
  817428:	80c1ffcc 	andi	r3,r16,2047
  81742c:	1820953a 	slli	r16,r3,20
  817430:	20c03fcc 	andi	r3,r4,255
  817434:	180897fa 	slli	r4,r3,31
  817438:	00c00434 	movhi	r3,16
  81743c:	18ffffc4 	addi	r3,r3,-1
  817440:	28c6703a 	and	r3,r5,r3
  817444:	1c06b03a 	or	r3,r3,r16
  817448:	1906b03a 	or	r3,r3,r4
  81744c:	dfc00417 	ldw	ra,16(sp)
  817450:	dcc00317 	ldw	r19,12(sp)
  817454:	dc800217 	ldw	r18,8(sp)
  817458:	dc400117 	ldw	r17,4(sp)
  81745c:	dc000017 	ldw	r16,0(sp)
  817460:	dec00504 	addi	sp,sp,20
  817464:	f800283a 	ret
  817468:	0101ffc4 	movi	r4,2047
  81746c:	813fd626 	beq	r16,r4,8173c8 <__alt_data_end+0xff8173c8>
  817470:	29402034 	orhi	r5,r5,128
  817474:	01000e04 	movi	r4,56
  817478:	2080a316 	blt	r4,r2,817708 <__subdf3+0x3c4>
  81747c:	010007c4 	movi	r4,31
  817480:	2080c616 	blt	r4,r2,81779c <__subdf3+0x458>
  817484:	01000804 	movi	r4,32
  817488:	2089c83a 	sub	r4,r4,r2
  81748c:	2910983a 	sll	r8,r5,r4
  817490:	308ed83a 	srl	r7,r6,r2
  817494:	3108983a 	sll	r4,r6,r4
  817498:	2884d83a 	srl	r2,r5,r2
  81749c:	41ccb03a 	or	r6,r8,r7
  8174a0:	2008c03a 	cmpne	r4,r4,zero
  8174a4:	310cb03a 	or	r6,r6,r4
  8174a8:	898dc83a 	sub	r6,r17,r6
  8174ac:	89a3803a 	cmpltu	r17,r17,r6
  8174b0:	1887c83a 	sub	r3,r3,r2
  8174b4:	1c47c83a 	sub	r3,r3,r17
  8174b8:	3023883a 	mov	r17,r6
  8174bc:	1880202c 	andhi	r2,r3,128
  8174c0:	10002326 	beq	r2,zero,817550 <__subdf3+0x20c>
  8174c4:	04c02034 	movhi	r19,128
  8174c8:	9cffffc4 	addi	r19,r19,-1
  8174cc:	1ce6703a 	and	r19,r3,r19
  8174d0:	98007a26 	beq	r19,zero,8176bc <__subdf3+0x378>
  8174d4:	9809883a 	mov	r4,r19
  8174d8:	0817fec0 	call	817fec <__clzsi2>
  8174dc:	113ffe04 	addi	r4,r2,-8
  8174e0:	00c007c4 	movi	r3,31
  8174e4:	19007b16 	blt	r3,r4,8176d4 <__subdf3+0x390>
  8174e8:	00800804 	movi	r2,32
  8174ec:	1105c83a 	sub	r2,r2,r4
  8174f0:	8884d83a 	srl	r2,r17,r2
  8174f4:	9906983a 	sll	r3,r19,r4
  8174f8:	8922983a 	sll	r17,r17,r4
  8174fc:	10c4b03a 	or	r2,r2,r3
  817500:	24007816 	blt	r4,r16,8176e4 <__subdf3+0x3a0>
  817504:	2421c83a 	sub	r16,r4,r16
  817508:	80c00044 	addi	r3,r16,1
  81750c:	010007c4 	movi	r4,31
  817510:	20c09516 	blt	r4,r3,817768 <__subdf3+0x424>
  817514:	01400804 	movi	r5,32
  817518:	28cbc83a 	sub	r5,r5,r3
  81751c:	88c8d83a 	srl	r4,r17,r3
  817520:	8962983a 	sll	r17,r17,r5
  817524:	114a983a 	sll	r5,r2,r5
  817528:	10c6d83a 	srl	r3,r2,r3
  81752c:	8804c03a 	cmpne	r2,r17,zero
  817530:	290ab03a 	or	r5,r5,r4
  817534:	28a2b03a 	or	r17,r5,r2
  817538:	0021883a 	mov	r16,zero
  81753c:	003fa206 	br	8173c8 <__alt_data_end+0xff8173c8>
  817540:	2090b03a 	or	r8,r4,r2
  817544:	40018e26 	beq	r8,zero,817b80 <__subdf3+0x83c>
  817548:	1007883a 	mov	r3,r2
  81754c:	2023883a 	mov	r17,r4
  817550:	888001cc 	andi	r2,r17,7
  817554:	103f9e1e 	bne	r2,zero,8173d0 <__alt_data_end+0xff8173d0>
  817558:	1804977a 	slli	r2,r3,29
  81755c:	8822d0fa 	srli	r17,r17,3
  817560:	1810d0fa 	srli	r8,r3,3
  817564:	9100004c 	andi	r4,r18,1
  817568:	1444b03a 	or	r2,r2,r17
  81756c:	00c1ffc4 	movi	r3,2047
  817570:	80c02826 	beq	r16,r3,817614 <__subdf3+0x2d0>
  817574:	01400434 	movhi	r5,16
  817578:	297fffc4 	addi	r5,r5,-1
  81757c:	80e0703a 	and	r16,r16,r3
  817580:	414a703a 	and	r5,r8,r5
  817584:	003fa806 	br	817428 <__alt_data_end+0xff817428>
  817588:	0080630e 	bge	zero,r2,817718 <__subdf3+0x3d4>
  81758c:	48003026 	beq	r9,zero,817650 <__subdf3+0x30c>
  817590:	0101ffc4 	movi	r4,2047
  817594:	813f8c26 	beq	r16,r4,8173c8 <__alt_data_end+0xff8173c8>
  817598:	29402034 	orhi	r5,r5,128
  81759c:	01000e04 	movi	r4,56
  8175a0:	2080a90e 	bge	r4,r2,817848 <__subdf3+0x504>
  8175a4:	298cb03a 	or	r6,r5,r6
  8175a8:	3012c03a 	cmpne	r9,r6,zero
  8175ac:	0005883a 	mov	r2,zero
  8175b0:	4c53883a 	add	r9,r9,r17
  8175b4:	4c63803a 	cmpltu	r17,r9,r17
  8175b8:	10c7883a 	add	r3,r2,r3
  8175bc:	88c7883a 	add	r3,r17,r3
  8175c0:	4823883a 	mov	r17,r9
  8175c4:	1880202c 	andhi	r2,r3,128
  8175c8:	1000d026 	beq	r2,zero,81790c <__subdf3+0x5c8>
  8175cc:	84000044 	addi	r16,r16,1
  8175d0:	0081ffc4 	movi	r2,2047
  8175d4:	8080fe26 	beq	r16,r2,8179d0 <__subdf3+0x68c>
  8175d8:	00bfe034 	movhi	r2,65408
  8175dc:	10bfffc4 	addi	r2,r2,-1
  8175e0:	1886703a 	and	r3,r3,r2
  8175e4:	880ad07a 	srli	r5,r17,1
  8175e8:	180497fa 	slli	r2,r3,31
  8175ec:	8900004c 	andi	r4,r17,1
  8175f0:	2922b03a 	or	r17,r5,r4
  8175f4:	1806d07a 	srli	r3,r3,1
  8175f8:	1462b03a 	or	r17,r2,r17
  8175fc:	3825883a 	mov	r18,r7
  817600:	003f7106 	br	8173c8 <__alt_data_end+0xff8173c8>
  817604:	2984b03a 	or	r2,r5,r6
  817608:	103f6826 	beq	r2,zero,8173ac <__alt_data_end+0xff8173ac>
  81760c:	39c03fcc 	andi	r7,r7,255
  817610:	003f6706 	br	8173b0 <__alt_data_end+0xff8173b0>
  817614:	4086b03a 	or	r3,r8,r2
  817618:	18015226 	beq	r3,zero,817b64 <__subdf3+0x820>
  81761c:	00c00434 	movhi	r3,16
  817620:	41400234 	orhi	r5,r8,8
  817624:	18ffffc4 	addi	r3,r3,-1
  817628:	28ca703a 	and	r5,r5,r3
  81762c:	003f7e06 	br	817428 <__alt_data_end+0xff817428>
  817630:	10bfffc4 	addi	r2,r2,-1
  817634:	1000491e 	bne	r2,zero,81775c <__subdf3+0x418>
  817638:	898fc83a 	sub	r7,r17,r6
  81763c:	89e3803a 	cmpltu	r17,r17,r7
  817640:	1947c83a 	sub	r3,r3,r5
  817644:	1c47c83a 	sub	r3,r3,r17
  817648:	3823883a 	mov	r17,r7
  81764c:	003f9b06 	br	8174bc <__alt_data_end+0xff8174bc>
  817650:	2988b03a 	or	r4,r5,r6
  817654:	203f5c26 	beq	r4,zero,8173c8 <__alt_data_end+0xff8173c8>
  817658:	10bfffc4 	addi	r2,r2,-1
  81765c:	1000931e 	bne	r2,zero,8178ac <__subdf3+0x568>
  817660:	898d883a 	add	r6,r17,r6
  817664:	3463803a 	cmpltu	r17,r6,r17
  817668:	1947883a 	add	r3,r3,r5
  81766c:	88c7883a 	add	r3,r17,r3
  817670:	3023883a 	mov	r17,r6
  817674:	003fd306 	br	8175c4 <__alt_data_end+0xff8175c4>
  817678:	1000541e 	bne	r2,zero,8177cc <__subdf3+0x488>
  81767c:	80800044 	addi	r2,r16,1
  817680:	1081ffcc 	andi	r2,r2,2047
  817684:	01000044 	movi	r4,1
  817688:	2080a20e 	bge	r4,r2,817914 <__subdf3+0x5d0>
  81768c:	8989c83a 	sub	r4,r17,r6
  817690:	8905803a 	cmpltu	r2,r17,r4
  817694:	1967c83a 	sub	r19,r3,r5
  817698:	98a7c83a 	sub	r19,r19,r2
  81769c:	9880202c 	andhi	r2,r19,128
  8176a0:	10006326 	beq	r2,zero,817830 <__subdf3+0x4ec>
  8176a4:	3463c83a 	sub	r17,r6,r17
  8176a8:	28c7c83a 	sub	r3,r5,r3
  8176ac:	344d803a 	cmpltu	r6,r6,r17
  8176b0:	19a7c83a 	sub	r19,r3,r6
  8176b4:	3825883a 	mov	r18,r7
  8176b8:	983f861e 	bne	r19,zero,8174d4 <__alt_data_end+0xff8174d4>
  8176bc:	8809883a 	mov	r4,r17
  8176c0:	0817fec0 	call	817fec <__clzsi2>
  8176c4:	10800804 	addi	r2,r2,32
  8176c8:	113ffe04 	addi	r4,r2,-8
  8176cc:	00c007c4 	movi	r3,31
  8176d0:	193f850e 	bge	r3,r4,8174e8 <__alt_data_end+0xff8174e8>
  8176d4:	10bff604 	addi	r2,r2,-40
  8176d8:	8884983a 	sll	r2,r17,r2
  8176dc:	0023883a 	mov	r17,zero
  8176e0:	243f880e 	bge	r4,r16,817504 <__alt_data_end+0xff817504>
  8176e4:	00ffe034 	movhi	r3,65408
  8176e8:	18ffffc4 	addi	r3,r3,-1
  8176ec:	8121c83a 	sub	r16,r16,r4
  8176f0:	10c6703a 	and	r3,r2,r3
  8176f4:	003f3406 	br	8173c8 <__alt_data_end+0xff8173c8>
  8176f8:	9100004c 	andi	r4,r18,1
  8176fc:	000b883a 	mov	r5,zero
  817700:	0005883a 	mov	r2,zero
  817704:	003f4806 	br	817428 <__alt_data_end+0xff817428>
  817708:	298cb03a 	or	r6,r5,r6
  81770c:	300cc03a 	cmpne	r6,r6,zero
  817710:	0005883a 	mov	r2,zero
  817714:	003f6406 	br	8174a8 <__alt_data_end+0xff8174a8>
  817718:	10009a1e 	bne	r2,zero,817984 <__subdf3+0x640>
  81771c:	82400044 	addi	r9,r16,1
  817720:	4881ffcc 	andi	r2,r9,2047
  817724:	02800044 	movi	r10,1
  817728:	5080670e 	bge	r10,r2,8178c8 <__subdf3+0x584>
  81772c:	0081ffc4 	movi	r2,2047
  817730:	4880af26 	beq	r9,r2,8179f0 <__subdf3+0x6ac>
  817734:	898d883a 	add	r6,r17,r6
  817738:	1945883a 	add	r2,r3,r5
  81773c:	3447803a 	cmpltu	r3,r6,r17
  817740:	1887883a 	add	r3,r3,r2
  817744:	182297fa 	slli	r17,r3,31
  817748:	300cd07a 	srli	r6,r6,1
  81774c:	1806d07a 	srli	r3,r3,1
  817750:	4821883a 	mov	r16,r9
  817754:	89a2b03a 	or	r17,r17,r6
  817758:	003f1b06 	br	8173c8 <__alt_data_end+0xff8173c8>
  81775c:	0101ffc4 	movi	r4,2047
  817760:	813f441e 	bne	r16,r4,817474 <__alt_data_end+0xff817474>
  817764:	003f1806 	br	8173c8 <__alt_data_end+0xff8173c8>
  817768:	843ff844 	addi	r16,r16,-31
  81776c:	01400804 	movi	r5,32
  817770:	1408d83a 	srl	r4,r2,r16
  817774:	19405026 	beq	r3,r5,8178b8 <__subdf3+0x574>
  817778:	01401004 	movi	r5,64
  81777c:	28c7c83a 	sub	r3,r5,r3
  817780:	10c4983a 	sll	r2,r2,r3
  817784:	88a2b03a 	or	r17,r17,r2
  817788:	8822c03a 	cmpne	r17,r17,zero
  81778c:	2462b03a 	or	r17,r4,r17
  817790:	0007883a 	mov	r3,zero
  817794:	0021883a 	mov	r16,zero
  817798:	003f6d06 	br	817550 <__alt_data_end+0xff817550>
  81779c:	11fff804 	addi	r7,r2,-32
  8177a0:	01000804 	movi	r4,32
  8177a4:	29ced83a 	srl	r7,r5,r7
  8177a8:	11004526 	beq	r2,r4,8178c0 <__subdf3+0x57c>
  8177ac:	01001004 	movi	r4,64
  8177b0:	2089c83a 	sub	r4,r4,r2
  8177b4:	2904983a 	sll	r2,r5,r4
  8177b8:	118cb03a 	or	r6,r2,r6
  8177bc:	300cc03a 	cmpne	r6,r6,zero
  8177c0:	398cb03a 	or	r6,r7,r6
  8177c4:	0005883a 	mov	r2,zero
  8177c8:	003f3706 	br	8174a8 <__alt_data_end+0xff8174a8>
  8177cc:	80002a26 	beq	r16,zero,817878 <__subdf3+0x534>
  8177d0:	0101ffc4 	movi	r4,2047
  8177d4:	49006626 	beq	r9,r4,817970 <__subdf3+0x62c>
  8177d8:	0085c83a 	sub	r2,zero,r2
  8177dc:	18c02034 	orhi	r3,r3,128
  8177e0:	01000e04 	movi	r4,56
  8177e4:	20807e16 	blt	r4,r2,8179e0 <__subdf3+0x69c>
  8177e8:	010007c4 	movi	r4,31
  8177ec:	2080e716 	blt	r4,r2,817b8c <__subdf3+0x848>
  8177f0:	01000804 	movi	r4,32
  8177f4:	2089c83a 	sub	r4,r4,r2
  8177f8:	1914983a 	sll	r10,r3,r4
  8177fc:	8890d83a 	srl	r8,r17,r2
  817800:	8908983a 	sll	r4,r17,r4
  817804:	1884d83a 	srl	r2,r3,r2
  817808:	5222b03a 	or	r17,r10,r8
  81780c:	2006c03a 	cmpne	r3,r4,zero
  817810:	88e2b03a 	or	r17,r17,r3
  817814:	3463c83a 	sub	r17,r6,r17
  817818:	2885c83a 	sub	r2,r5,r2
  81781c:	344d803a 	cmpltu	r6,r6,r17
  817820:	1187c83a 	sub	r3,r2,r6
  817824:	4821883a 	mov	r16,r9
  817828:	3825883a 	mov	r18,r7
  81782c:	003f2306 	br	8174bc <__alt_data_end+0xff8174bc>
  817830:	24d0b03a 	or	r8,r4,r19
  817834:	40001b1e 	bne	r8,zero,8178a4 <__subdf3+0x560>
  817838:	0005883a 	mov	r2,zero
  81783c:	0009883a 	mov	r4,zero
  817840:	0021883a 	mov	r16,zero
  817844:	003f4906 	br	81756c <__alt_data_end+0xff81756c>
  817848:	010007c4 	movi	r4,31
  81784c:	20803a16 	blt	r4,r2,817938 <__subdf3+0x5f4>
  817850:	01000804 	movi	r4,32
  817854:	2089c83a 	sub	r4,r4,r2
  817858:	2912983a 	sll	r9,r5,r4
  81785c:	3090d83a 	srl	r8,r6,r2
  817860:	3108983a 	sll	r4,r6,r4
  817864:	2884d83a 	srl	r2,r5,r2
  817868:	4a12b03a 	or	r9,r9,r8
  81786c:	2008c03a 	cmpne	r4,r4,zero
  817870:	4912b03a 	or	r9,r9,r4
  817874:	003f4e06 	br	8175b0 <__alt_data_end+0xff8175b0>
  817878:	1c48b03a 	or	r4,r3,r17
  81787c:	20003c26 	beq	r4,zero,817970 <__subdf3+0x62c>
  817880:	0084303a 	nor	r2,zero,r2
  817884:	1000381e 	bne	r2,zero,817968 <__subdf3+0x624>
  817888:	3463c83a 	sub	r17,r6,r17
  81788c:	28c5c83a 	sub	r2,r5,r3
  817890:	344d803a 	cmpltu	r6,r6,r17
  817894:	1187c83a 	sub	r3,r2,r6
  817898:	4821883a 	mov	r16,r9
  81789c:	3825883a 	mov	r18,r7
  8178a0:	003f0606 	br	8174bc <__alt_data_end+0xff8174bc>
  8178a4:	2023883a 	mov	r17,r4
  8178a8:	003f0906 	br	8174d0 <__alt_data_end+0xff8174d0>
  8178ac:	0101ffc4 	movi	r4,2047
  8178b0:	813f3a1e 	bne	r16,r4,81759c <__alt_data_end+0xff81759c>
  8178b4:	003ec406 	br	8173c8 <__alt_data_end+0xff8173c8>
  8178b8:	0005883a 	mov	r2,zero
  8178bc:	003fb106 	br	817784 <__alt_data_end+0xff817784>
  8178c0:	0005883a 	mov	r2,zero
  8178c4:	003fbc06 	br	8177b8 <__alt_data_end+0xff8177b8>
  8178c8:	1c44b03a 	or	r2,r3,r17
  8178cc:	80008e1e 	bne	r16,zero,817b08 <__subdf3+0x7c4>
  8178d0:	1000c826 	beq	r2,zero,817bf4 <__subdf3+0x8b0>
  8178d4:	2984b03a 	or	r2,r5,r6
  8178d8:	103ebb26 	beq	r2,zero,8173c8 <__alt_data_end+0xff8173c8>
  8178dc:	8989883a 	add	r4,r17,r6
  8178e0:	1945883a 	add	r2,r3,r5
  8178e4:	2447803a 	cmpltu	r3,r4,r17
  8178e8:	1887883a 	add	r3,r3,r2
  8178ec:	1880202c 	andhi	r2,r3,128
  8178f0:	2023883a 	mov	r17,r4
  8178f4:	103f1626 	beq	r2,zero,817550 <__alt_data_end+0xff817550>
  8178f8:	00bfe034 	movhi	r2,65408
  8178fc:	10bfffc4 	addi	r2,r2,-1
  817900:	5021883a 	mov	r16,r10
  817904:	1886703a 	and	r3,r3,r2
  817908:	003eaf06 	br	8173c8 <__alt_data_end+0xff8173c8>
  81790c:	3825883a 	mov	r18,r7
  817910:	003f0f06 	br	817550 <__alt_data_end+0xff817550>
  817914:	1c44b03a 	or	r2,r3,r17
  817918:	8000251e 	bne	r16,zero,8179b0 <__subdf3+0x66c>
  81791c:	1000661e 	bne	r2,zero,817ab8 <__subdf3+0x774>
  817920:	2990b03a 	or	r8,r5,r6
  817924:	40009626 	beq	r8,zero,817b80 <__subdf3+0x83c>
  817928:	2807883a 	mov	r3,r5
  81792c:	3023883a 	mov	r17,r6
  817930:	3825883a 	mov	r18,r7
  817934:	003ea406 	br	8173c8 <__alt_data_end+0xff8173c8>
  817938:	127ff804 	addi	r9,r2,-32
  81793c:	01000804 	movi	r4,32
  817940:	2a52d83a 	srl	r9,r5,r9
  817944:	11008c26 	beq	r2,r4,817b78 <__subdf3+0x834>
  817948:	01001004 	movi	r4,64
  81794c:	2085c83a 	sub	r2,r4,r2
  817950:	2884983a 	sll	r2,r5,r2
  817954:	118cb03a 	or	r6,r2,r6
  817958:	300cc03a 	cmpne	r6,r6,zero
  81795c:	4992b03a 	or	r9,r9,r6
  817960:	0005883a 	mov	r2,zero
  817964:	003f1206 	br	8175b0 <__alt_data_end+0xff8175b0>
  817968:	0101ffc4 	movi	r4,2047
  81796c:	493f9c1e 	bne	r9,r4,8177e0 <__alt_data_end+0xff8177e0>
  817970:	2807883a 	mov	r3,r5
  817974:	3023883a 	mov	r17,r6
  817978:	4821883a 	mov	r16,r9
  81797c:	3825883a 	mov	r18,r7
  817980:	003e9106 	br	8173c8 <__alt_data_end+0xff8173c8>
  817984:	80001f1e 	bne	r16,zero,817a04 <__subdf3+0x6c0>
  817988:	1c48b03a 	or	r4,r3,r17
  81798c:	20005a26 	beq	r4,zero,817af8 <__subdf3+0x7b4>
  817990:	0084303a 	nor	r2,zero,r2
  817994:	1000561e 	bne	r2,zero,817af0 <__subdf3+0x7ac>
  817998:	89a3883a 	add	r17,r17,r6
  81799c:	1945883a 	add	r2,r3,r5
  8179a0:	898d803a 	cmpltu	r6,r17,r6
  8179a4:	3087883a 	add	r3,r6,r2
  8179a8:	4821883a 	mov	r16,r9
  8179ac:	003f0506 	br	8175c4 <__alt_data_end+0xff8175c4>
  8179b0:	10002b1e 	bne	r2,zero,817a60 <__subdf3+0x71c>
  8179b4:	2984b03a 	or	r2,r5,r6
  8179b8:	10008026 	beq	r2,zero,817bbc <__subdf3+0x878>
  8179bc:	2807883a 	mov	r3,r5
  8179c0:	3023883a 	mov	r17,r6
  8179c4:	3825883a 	mov	r18,r7
  8179c8:	0401ffc4 	movi	r16,2047
  8179cc:	003e7e06 	br	8173c8 <__alt_data_end+0xff8173c8>
  8179d0:	3809883a 	mov	r4,r7
  8179d4:	0011883a 	mov	r8,zero
  8179d8:	0005883a 	mov	r2,zero
  8179dc:	003ee306 	br	81756c <__alt_data_end+0xff81756c>
  8179e0:	1c62b03a 	or	r17,r3,r17
  8179e4:	8822c03a 	cmpne	r17,r17,zero
  8179e8:	0005883a 	mov	r2,zero
  8179ec:	003f8906 	br	817814 <__alt_data_end+0xff817814>
  8179f0:	3809883a 	mov	r4,r7
  8179f4:	4821883a 	mov	r16,r9
  8179f8:	0011883a 	mov	r8,zero
  8179fc:	0005883a 	mov	r2,zero
  817a00:	003eda06 	br	81756c <__alt_data_end+0xff81756c>
  817a04:	0101ffc4 	movi	r4,2047
  817a08:	49003b26 	beq	r9,r4,817af8 <__subdf3+0x7b4>
  817a0c:	0085c83a 	sub	r2,zero,r2
  817a10:	18c02034 	orhi	r3,r3,128
  817a14:	01000e04 	movi	r4,56
  817a18:	20806e16 	blt	r4,r2,817bd4 <__subdf3+0x890>
  817a1c:	010007c4 	movi	r4,31
  817a20:	20807716 	blt	r4,r2,817c00 <__subdf3+0x8bc>
  817a24:	01000804 	movi	r4,32
  817a28:	2089c83a 	sub	r4,r4,r2
  817a2c:	1914983a 	sll	r10,r3,r4
  817a30:	8890d83a 	srl	r8,r17,r2
  817a34:	8908983a 	sll	r4,r17,r4
  817a38:	1884d83a 	srl	r2,r3,r2
  817a3c:	5222b03a 	or	r17,r10,r8
  817a40:	2006c03a 	cmpne	r3,r4,zero
  817a44:	88e2b03a 	or	r17,r17,r3
  817a48:	89a3883a 	add	r17,r17,r6
  817a4c:	1145883a 	add	r2,r2,r5
  817a50:	898d803a 	cmpltu	r6,r17,r6
  817a54:	3087883a 	add	r3,r6,r2
  817a58:	4821883a 	mov	r16,r9
  817a5c:	003ed906 	br	8175c4 <__alt_data_end+0xff8175c4>
  817a60:	2984b03a 	or	r2,r5,r6
  817a64:	10004226 	beq	r2,zero,817b70 <__subdf3+0x82c>
  817a68:	1808d0fa 	srli	r4,r3,3
  817a6c:	8822d0fa 	srli	r17,r17,3
  817a70:	1806977a 	slli	r3,r3,29
  817a74:	2080022c 	andhi	r2,r4,8
  817a78:	1c62b03a 	or	r17,r3,r17
  817a7c:	10000826 	beq	r2,zero,817aa0 <__subdf3+0x75c>
  817a80:	2812d0fa 	srli	r9,r5,3
  817a84:	4880022c 	andhi	r2,r9,8
  817a88:	1000051e 	bne	r2,zero,817aa0 <__subdf3+0x75c>
  817a8c:	300cd0fa 	srli	r6,r6,3
  817a90:	2804977a 	slli	r2,r5,29
  817a94:	4809883a 	mov	r4,r9
  817a98:	3825883a 	mov	r18,r7
  817a9c:	11a2b03a 	or	r17,r2,r6
  817aa0:	8806d77a 	srli	r3,r17,29
  817aa4:	200890fa 	slli	r4,r4,3
  817aa8:	882290fa 	slli	r17,r17,3
  817aac:	0401ffc4 	movi	r16,2047
  817ab0:	1906b03a 	or	r3,r3,r4
  817ab4:	003e4406 	br	8173c8 <__alt_data_end+0xff8173c8>
  817ab8:	2984b03a 	or	r2,r5,r6
  817abc:	103e4226 	beq	r2,zero,8173c8 <__alt_data_end+0xff8173c8>
  817ac0:	8989c83a 	sub	r4,r17,r6
  817ac4:	8911803a 	cmpltu	r8,r17,r4
  817ac8:	1945c83a 	sub	r2,r3,r5
  817acc:	1205c83a 	sub	r2,r2,r8
  817ad0:	1200202c 	andhi	r8,r2,128
  817ad4:	403e9a26 	beq	r8,zero,817540 <__alt_data_end+0xff817540>
  817ad8:	3463c83a 	sub	r17,r6,r17
  817adc:	28c5c83a 	sub	r2,r5,r3
  817ae0:	344d803a 	cmpltu	r6,r6,r17
  817ae4:	1187c83a 	sub	r3,r2,r6
  817ae8:	3825883a 	mov	r18,r7
  817aec:	003e3606 	br	8173c8 <__alt_data_end+0xff8173c8>
  817af0:	0101ffc4 	movi	r4,2047
  817af4:	493fc71e 	bne	r9,r4,817a14 <__alt_data_end+0xff817a14>
  817af8:	2807883a 	mov	r3,r5
  817afc:	3023883a 	mov	r17,r6
  817b00:	4821883a 	mov	r16,r9
  817b04:	003e3006 	br	8173c8 <__alt_data_end+0xff8173c8>
  817b08:	10003626 	beq	r2,zero,817be4 <__subdf3+0x8a0>
  817b0c:	2984b03a 	or	r2,r5,r6
  817b10:	10001726 	beq	r2,zero,817b70 <__subdf3+0x82c>
  817b14:	1808d0fa 	srli	r4,r3,3
  817b18:	8822d0fa 	srli	r17,r17,3
  817b1c:	1806977a 	slli	r3,r3,29
  817b20:	2080022c 	andhi	r2,r4,8
  817b24:	1c62b03a 	or	r17,r3,r17
  817b28:	10000726 	beq	r2,zero,817b48 <__subdf3+0x804>
  817b2c:	2812d0fa 	srli	r9,r5,3
  817b30:	4880022c 	andhi	r2,r9,8
  817b34:	1000041e 	bne	r2,zero,817b48 <__subdf3+0x804>
  817b38:	300cd0fa 	srli	r6,r6,3
  817b3c:	2804977a 	slli	r2,r5,29
  817b40:	4809883a 	mov	r4,r9
  817b44:	11a2b03a 	or	r17,r2,r6
  817b48:	8806d77a 	srli	r3,r17,29
  817b4c:	200890fa 	slli	r4,r4,3
  817b50:	882290fa 	slli	r17,r17,3
  817b54:	3825883a 	mov	r18,r7
  817b58:	1906b03a 	or	r3,r3,r4
  817b5c:	0401ffc4 	movi	r16,2047
  817b60:	003e1906 	br	8173c8 <__alt_data_end+0xff8173c8>
  817b64:	000b883a 	mov	r5,zero
  817b68:	0005883a 	mov	r2,zero
  817b6c:	003e2e06 	br	817428 <__alt_data_end+0xff817428>
  817b70:	0401ffc4 	movi	r16,2047
  817b74:	003e1406 	br	8173c8 <__alt_data_end+0xff8173c8>
  817b78:	0005883a 	mov	r2,zero
  817b7c:	003f7506 	br	817954 <__alt_data_end+0xff817954>
  817b80:	0005883a 	mov	r2,zero
  817b84:	0009883a 	mov	r4,zero
  817b88:	003e7806 	br	81756c <__alt_data_end+0xff81756c>
  817b8c:	123ff804 	addi	r8,r2,-32
  817b90:	01000804 	movi	r4,32
  817b94:	1a10d83a 	srl	r8,r3,r8
  817b98:	11002526 	beq	r2,r4,817c30 <__subdf3+0x8ec>
  817b9c:	01001004 	movi	r4,64
  817ba0:	2085c83a 	sub	r2,r4,r2
  817ba4:	1884983a 	sll	r2,r3,r2
  817ba8:	1444b03a 	or	r2,r2,r17
  817bac:	1004c03a 	cmpne	r2,r2,zero
  817bb0:	40a2b03a 	or	r17,r8,r2
  817bb4:	0005883a 	mov	r2,zero
  817bb8:	003f1606 	br	817814 <__alt_data_end+0xff817814>
  817bbc:	02000434 	movhi	r8,16
  817bc0:	0009883a 	mov	r4,zero
  817bc4:	423fffc4 	addi	r8,r8,-1
  817bc8:	00bfffc4 	movi	r2,-1
  817bcc:	0401ffc4 	movi	r16,2047
  817bd0:	003e6606 	br	81756c <__alt_data_end+0xff81756c>
  817bd4:	1c62b03a 	or	r17,r3,r17
  817bd8:	8822c03a 	cmpne	r17,r17,zero
  817bdc:	0005883a 	mov	r2,zero
  817be0:	003f9906 	br	817a48 <__alt_data_end+0xff817a48>
  817be4:	2807883a 	mov	r3,r5
  817be8:	3023883a 	mov	r17,r6
  817bec:	0401ffc4 	movi	r16,2047
  817bf0:	003df506 	br	8173c8 <__alt_data_end+0xff8173c8>
  817bf4:	2807883a 	mov	r3,r5
  817bf8:	3023883a 	mov	r17,r6
  817bfc:	003df206 	br	8173c8 <__alt_data_end+0xff8173c8>
  817c00:	123ff804 	addi	r8,r2,-32
  817c04:	01000804 	movi	r4,32
  817c08:	1a10d83a 	srl	r8,r3,r8
  817c0c:	11000a26 	beq	r2,r4,817c38 <__subdf3+0x8f4>
  817c10:	01001004 	movi	r4,64
  817c14:	2085c83a 	sub	r2,r4,r2
  817c18:	1884983a 	sll	r2,r3,r2
  817c1c:	1444b03a 	or	r2,r2,r17
  817c20:	1004c03a 	cmpne	r2,r2,zero
  817c24:	40a2b03a 	or	r17,r8,r2
  817c28:	0005883a 	mov	r2,zero
  817c2c:	003f8606 	br	817a48 <__alt_data_end+0xff817a48>
  817c30:	0005883a 	mov	r2,zero
  817c34:	003fdc06 	br	817ba8 <__alt_data_end+0xff817ba8>
  817c38:	0005883a 	mov	r2,zero
  817c3c:	003ff706 	br	817c1c <__alt_data_end+0xff817c1c>

00817c40 <__fixdfsi>:
  817c40:	280cd53a 	srli	r6,r5,20
  817c44:	00c00434 	movhi	r3,16
  817c48:	18ffffc4 	addi	r3,r3,-1
  817c4c:	3181ffcc 	andi	r6,r6,2047
  817c50:	01c0ff84 	movi	r7,1022
  817c54:	28c6703a 	and	r3,r5,r3
  817c58:	280ad7fa 	srli	r5,r5,31
  817c5c:	3980120e 	bge	r7,r6,817ca8 <__fixdfsi+0x68>
  817c60:	00810744 	movi	r2,1053
  817c64:	11800c16 	blt	r2,r6,817c98 <__fixdfsi+0x58>
  817c68:	00810cc4 	movi	r2,1075
  817c6c:	1185c83a 	sub	r2,r2,r6
  817c70:	01c007c4 	movi	r7,31
  817c74:	18c00434 	orhi	r3,r3,16
  817c78:	38800d16 	blt	r7,r2,817cb0 <__fixdfsi+0x70>
  817c7c:	31befb44 	addi	r6,r6,-1043
  817c80:	2084d83a 	srl	r2,r4,r2
  817c84:	1986983a 	sll	r3,r3,r6
  817c88:	1884b03a 	or	r2,r3,r2
  817c8c:	28000726 	beq	r5,zero,817cac <__fixdfsi+0x6c>
  817c90:	0085c83a 	sub	r2,zero,r2
  817c94:	f800283a 	ret
  817c98:	00a00034 	movhi	r2,32768
  817c9c:	10bfffc4 	addi	r2,r2,-1
  817ca0:	2885883a 	add	r2,r5,r2
  817ca4:	f800283a 	ret
  817ca8:	0005883a 	mov	r2,zero
  817cac:	f800283a 	ret
  817cb0:	008104c4 	movi	r2,1043
  817cb4:	1185c83a 	sub	r2,r2,r6
  817cb8:	1884d83a 	srl	r2,r3,r2
  817cbc:	003ff306 	br	817c8c <__alt_data_end+0xff817c8c>

00817cc0 <__floatsidf>:
  817cc0:	defffd04 	addi	sp,sp,-12
  817cc4:	dfc00215 	stw	ra,8(sp)
  817cc8:	dc400115 	stw	r17,4(sp)
  817ccc:	dc000015 	stw	r16,0(sp)
  817cd0:	20002b26 	beq	r4,zero,817d80 <__floatsidf+0xc0>
  817cd4:	2023883a 	mov	r17,r4
  817cd8:	2020d7fa 	srli	r16,r4,31
  817cdc:	20002d16 	blt	r4,zero,817d94 <__floatsidf+0xd4>
  817ce0:	8809883a 	mov	r4,r17
  817ce4:	0817fec0 	call	817fec <__clzsi2>
  817ce8:	01410784 	movi	r5,1054
  817cec:	288bc83a 	sub	r5,r5,r2
  817cf0:	01010cc4 	movi	r4,1075
  817cf4:	2149c83a 	sub	r4,r4,r5
  817cf8:	00c007c4 	movi	r3,31
  817cfc:	1900160e 	bge	r3,r4,817d58 <__floatsidf+0x98>
  817d00:	00c104c4 	movi	r3,1043
  817d04:	1947c83a 	sub	r3,r3,r5
  817d08:	88c6983a 	sll	r3,r17,r3
  817d0c:	00800434 	movhi	r2,16
  817d10:	10bfffc4 	addi	r2,r2,-1
  817d14:	1886703a 	and	r3,r3,r2
  817d18:	2941ffcc 	andi	r5,r5,2047
  817d1c:	800d883a 	mov	r6,r16
  817d20:	0005883a 	mov	r2,zero
  817d24:	280a953a 	slli	r5,r5,20
  817d28:	31803fcc 	andi	r6,r6,255
  817d2c:	01000434 	movhi	r4,16
  817d30:	300c97fa 	slli	r6,r6,31
  817d34:	213fffc4 	addi	r4,r4,-1
  817d38:	1906703a 	and	r3,r3,r4
  817d3c:	1946b03a 	or	r3,r3,r5
  817d40:	1986b03a 	or	r3,r3,r6
  817d44:	dfc00217 	ldw	ra,8(sp)
  817d48:	dc400117 	ldw	r17,4(sp)
  817d4c:	dc000017 	ldw	r16,0(sp)
  817d50:	dec00304 	addi	sp,sp,12
  817d54:	f800283a 	ret
  817d58:	00c002c4 	movi	r3,11
  817d5c:	1887c83a 	sub	r3,r3,r2
  817d60:	88c6d83a 	srl	r3,r17,r3
  817d64:	8904983a 	sll	r2,r17,r4
  817d68:	01000434 	movhi	r4,16
  817d6c:	213fffc4 	addi	r4,r4,-1
  817d70:	2941ffcc 	andi	r5,r5,2047
  817d74:	1906703a 	and	r3,r3,r4
  817d78:	800d883a 	mov	r6,r16
  817d7c:	003fe906 	br	817d24 <__alt_data_end+0xff817d24>
  817d80:	000d883a 	mov	r6,zero
  817d84:	000b883a 	mov	r5,zero
  817d88:	0007883a 	mov	r3,zero
  817d8c:	0005883a 	mov	r2,zero
  817d90:	003fe406 	br	817d24 <__alt_data_end+0xff817d24>
  817d94:	0123c83a 	sub	r17,zero,r4
  817d98:	003fd106 	br	817ce0 <__alt_data_end+0xff817ce0>

00817d9c <__floatunsidf>:
  817d9c:	defffe04 	addi	sp,sp,-8
  817da0:	dc000015 	stw	r16,0(sp)
  817da4:	dfc00115 	stw	ra,4(sp)
  817da8:	2021883a 	mov	r16,r4
  817dac:	20002226 	beq	r4,zero,817e38 <__floatunsidf+0x9c>
  817db0:	0817fec0 	call	817fec <__clzsi2>
  817db4:	01010784 	movi	r4,1054
  817db8:	2089c83a 	sub	r4,r4,r2
  817dbc:	01810cc4 	movi	r6,1075
  817dc0:	310dc83a 	sub	r6,r6,r4
  817dc4:	00c007c4 	movi	r3,31
  817dc8:	1980120e 	bge	r3,r6,817e14 <__floatunsidf+0x78>
  817dcc:	00c104c4 	movi	r3,1043
  817dd0:	1907c83a 	sub	r3,r3,r4
  817dd4:	80ca983a 	sll	r5,r16,r3
  817dd8:	00800434 	movhi	r2,16
  817ddc:	10bfffc4 	addi	r2,r2,-1
  817de0:	2101ffcc 	andi	r4,r4,2047
  817de4:	0021883a 	mov	r16,zero
  817de8:	288a703a 	and	r5,r5,r2
  817dec:	2008953a 	slli	r4,r4,20
  817df0:	00c00434 	movhi	r3,16
  817df4:	18ffffc4 	addi	r3,r3,-1
  817df8:	28c6703a 	and	r3,r5,r3
  817dfc:	8005883a 	mov	r2,r16
  817e00:	1906b03a 	or	r3,r3,r4
  817e04:	dfc00117 	ldw	ra,4(sp)
  817e08:	dc000017 	ldw	r16,0(sp)
  817e0c:	dec00204 	addi	sp,sp,8
  817e10:	f800283a 	ret
  817e14:	00c002c4 	movi	r3,11
  817e18:	188bc83a 	sub	r5,r3,r2
  817e1c:	814ad83a 	srl	r5,r16,r5
  817e20:	00c00434 	movhi	r3,16
  817e24:	18ffffc4 	addi	r3,r3,-1
  817e28:	81a0983a 	sll	r16,r16,r6
  817e2c:	2101ffcc 	andi	r4,r4,2047
  817e30:	28ca703a 	and	r5,r5,r3
  817e34:	003fed06 	br	817dec <__alt_data_end+0xff817dec>
  817e38:	0009883a 	mov	r4,zero
  817e3c:	000b883a 	mov	r5,zero
  817e40:	003fea06 	br	817dec <__alt_data_end+0xff817dec>

00817e44 <__truncdfsf2>:
  817e44:	2810d53a 	srli	r8,r5,20
  817e48:	01c00434 	movhi	r7,16
  817e4c:	39ffffc4 	addi	r7,r7,-1
  817e50:	29ce703a 	and	r7,r5,r7
  817e54:	4201ffcc 	andi	r8,r8,2047
  817e58:	380e90fa 	slli	r7,r7,3
  817e5c:	200cd77a 	srli	r6,r4,29
  817e60:	42400044 	addi	r9,r8,1
  817e64:	4a41ffcc 	andi	r9,r9,2047
  817e68:	00c00044 	movi	r3,1
  817e6c:	280ad7fa 	srli	r5,r5,31
  817e70:	31ceb03a 	or	r7,r6,r7
  817e74:	200490fa 	slli	r2,r4,3
  817e78:	1a40230e 	bge	r3,r9,817f08 <__truncdfsf2+0xc4>
  817e7c:	40ff2004 	addi	r3,r8,-896
  817e80:	01803f84 	movi	r6,254
  817e84:	30c01516 	blt	r6,r3,817edc <__truncdfsf2+0x98>
  817e88:	00c0380e 	bge	zero,r3,817f6c <__truncdfsf2+0x128>
  817e8c:	200c91ba 	slli	r6,r4,6
  817e90:	380e90fa 	slli	r7,r7,3
  817e94:	1004d77a 	srli	r2,r2,29
  817e98:	300cc03a 	cmpne	r6,r6,zero
  817e9c:	31ccb03a 	or	r6,r6,r7
  817ea0:	308cb03a 	or	r6,r6,r2
  817ea4:	308001cc 	andi	r2,r6,7
  817ea8:	10000426 	beq	r2,zero,817ebc <__truncdfsf2+0x78>
  817eac:	308003cc 	andi	r2,r6,15
  817eb0:	01000104 	movi	r4,4
  817eb4:	11000126 	beq	r2,r4,817ebc <__truncdfsf2+0x78>
  817eb8:	31800104 	addi	r6,r6,4
  817ebc:	3081002c 	andhi	r2,r6,1024
  817ec0:	10001626 	beq	r2,zero,817f1c <__truncdfsf2+0xd8>
  817ec4:	18c00044 	addi	r3,r3,1
  817ec8:	00803fc4 	movi	r2,255
  817ecc:	18800326 	beq	r3,r2,817edc <__truncdfsf2+0x98>
  817ed0:	300c91ba 	slli	r6,r6,6
  817ed4:	300cd27a 	srli	r6,r6,9
  817ed8:	00000206 	br	817ee4 <__truncdfsf2+0xa0>
  817edc:	00ffffc4 	movi	r3,-1
  817ee0:	000d883a 	mov	r6,zero
  817ee4:	18c03fcc 	andi	r3,r3,255
  817ee8:	180895fa 	slli	r4,r3,23
  817eec:	00c02034 	movhi	r3,128
  817ef0:	280a97fa 	slli	r5,r5,31
  817ef4:	18ffffc4 	addi	r3,r3,-1
  817ef8:	30c6703a 	and	r3,r6,r3
  817efc:	1906b03a 	or	r3,r3,r4
  817f00:	1944b03a 	or	r2,r3,r5
  817f04:	f800283a 	ret
  817f08:	40000b1e 	bne	r8,zero,817f38 <__truncdfsf2+0xf4>
  817f0c:	388cb03a 	or	r6,r7,r2
  817f10:	0007883a 	mov	r3,zero
  817f14:	30000426 	beq	r6,zero,817f28 <__truncdfsf2+0xe4>
  817f18:	01800144 	movi	r6,5
  817f1c:	00803fc4 	movi	r2,255
  817f20:	300cd0fa 	srli	r6,r6,3
  817f24:	18800a26 	beq	r3,r2,817f50 <__truncdfsf2+0x10c>
  817f28:	00802034 	movhi	r2,128
  817f2c:	10bfffc4 	addi	r2,r2,-1
  817f30:	308c703a 	and	r6,r6,r2
  817f34:	003feb06 	br	817ee4 <__alt_data_end+0xff817ee4>
  817f38:	3888b03a 	or	r4,r7,r2
  817f3c:	203fe726 	beq	r4,zero,817edc <__alt_data_end+0xff817edc>
  817f40:	380c90fa 	slli	r6,r7,3
  817f44:	00c03fc4 	movi	r3,255
  817f48:	31808034 	orhi	r6,r6,512
  817f4c:	003fd506 	br	817ea4 <__alt_data_end+0xff817ea4>
  817f50:	303fe226 	beq	r6,zero,817edc <__alt_data_end+0xff817edc>
  817f54:	00802034 	movhi	r2,128
  817f58:	31801034 	orhi	r6,r6,64
  817f5c:	10bfffc4 	addi	r2,r2,-1
  817f60:	00ffffc4 	movi	r3,-1
  817f64:	308c703a 	and	r6,r6,r2
  817f68:	003fde06 	br	817ee4 <__alt_data_end+0xff817ee4>
  817f6c:	013ffa44 	movi	r4,-23
  817f70:	19000e16 	blt	r3,r4,817fac <__truncdfsf2+0x168>
  817f74:	01000784 	movi	r4,30
  817f78:	20c9c83a 	sub	r4,r4,r3
  817f7c:	018007c4 	movi	r6,31
  817f80:	39c02034 	orhi	r7,r7,128
  817f84:	31000b16 	blt	r6,r4,817fb4 <__truncdfsf2+0x170>
  817f88:	423f2084 	addi	r8,r8,-894
  817f8c:	120c983a 	sll	r6,r2,r8
  817f90:	3a0e983a 	sll	r7,r7,r8
  817f94:	1104d83a 	srl	r2,r2,r4
  817f98:	300cc03a 	cmpne	r6,r6,zero
  817f9c:	31ceb03a 	or	r7,r6,r7
  817fa0:	388cb03a 	or	r6,r7,r2
  817fa4:	0007883a 	mov	r3,zero
  817fa8:	003fbe06 	br	817ea4 <__alt_data_end+0xff817ea4>
  817fac:	0007883a 	mov	r3,zero
  817fb0:	003fd906 	br	817f18 <__alt_data_end+0xff817f18>
  817fb4:	01bfff84 	movi	r6,-2
  817fb8:	30cdc83a 	sub	r6,r6,r3
  817fbc:	00c00804 	movi	r3,32
  817fc0:	398cd83a 	srl	r6,r7,r6
  817fc4:	20c00726 	beq	r4,r3,817fe4 <__truncdfsf2+0x1a0>
  817fc8:	423f2884 	addi	r8,r8,-862
  817fcc:	3a0e983a 	sll	r7,r7,r8
  817fd0:	3884b03a 	or	r2,r7,r2
  817fd4:	1004c03a 	cmpne	r2,r2,zero
  817fd8:	118cb03a 	or	r6,r2,r6
  817fdc:	0007883a 	mov	r3,zero
  817fe0:	003fb006 	br	817ea4 <__alt_data_end+0xff817ea4>
  817fe4:	000f883a 	mov	r7,zero
  817fe8:	003ff906 	br	817fd0 <__alt_data_end+0xff817fd0>

00817fec <__clzsi2>:
  817fec:	00bfffd4 	movui	r2,65535
  817ff0:	11000536 	bltu	r2,r4,818008 <__clzsi2+0x1c>
  817ff4:	00803fc4 	movi	r2,255
  817ff8:	11000f36 	bltu	r2,r4,818038 <__clzsi2+0x4c>
  817ffc:	00800804 	movi	r2,32
  818000:	0007883a 	mov	r3,zero
  818004:	00000506 	br	81801c <__clzsi2+0x30>
  818008:	00804034 	movhi	r2,256
  81800c:	10bfffc4 	addi	r2,r2,-1
  818010:	11000c2e 	bgeu	r2,r4,818044 <__clzsi2+0x58>
  818014:	00800204 	movi	r2,8
  818018:	00c00604 	movi	r3,24
  81801c:	20c8d83a 	srl	r4,r4,r3
  818020:	00c020b4 	movhi	r3,130
  818024:	18f2e584 	addi	r3,r3,-13418
  818028:	1909883a 	add	r4,r3,r4
  81802c:	20c00003 	ldbu	r3,0(r4)
  818030:	10c5c83a 	sub	r2,r2,r3
  818034:	f800283a 	ret
  818038:	00800604 	movi	r2,24
  81803c:	00c00204 	movi	r3,8
  818040:	003ff606 	br	81801c <__alt_data_end+0xff81801c>
  818044:	00800404 	movi	r2,16
  818048:	1007883a 	mov	r3,r2
  81804c:	003ff306 	br	81801c <__alt_data_end+0xff81801c>

00818050 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  818050:	defffe04 	addi	sp,sp,-8
  818054:	dfc00115 	stw	ra,4(sp)
  818058:	df000015 	stw	fp,0(sp)
  81805c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  818060:	d0a00d17 	ldw	r2,-32716(gp)
  818064:	10000326 	beq	r2,zero,818074 <alt_get_errno+0x24>
  818068:	d0a00d17 	ldw	r2,-32716(gp)
  81806c:	103ee83a 	callr	r2
  818070:	00000106 	br	818078 <alt_get_errno+0x28>
  818074:	d0a76c04 	addi	r2,gp,-25168
}
  818078:	e037883a 	mov	sp,fp
  81807c:	dfc00117 	ldw	ra,4(sp)
  818080:	df000017 	ldw	fp,0(sp)
  818084:	dec00204 	addi	sp,sp,8
  818088:	f800283a 	ret

0081808c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  81808c:	defffb04 	addi	sp,sp,-20
  818090:	dfc00415 	stw	ra,16(sp)
  818094:	df000315 	stw	fp,12(sp)
  818098:	df000304 	addi	fp,sp,12
  81809c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  8180a0:	e0bfff17 	ldw	r2,-4(fp)
  8180a4:	10000616 	blt	r2,zero,8180c0 <close+0x34>
  8180a8:	e0bfff17 	ldw	r2,-4(fp)
  8180ac:	10c00324 	muli	r3,r2,12
  8180b0:	008020b4 	movhi	r2,130
  8180b4:	10b57b04 	addi	r2,r2,-10772
  8180b8:	1885883a 	add	r2,r3,r2
  8180bc:	00000106 	br	8180c4 <close+0x38>
  8180c0:	0005883a 	mov	r2,zero
  8180c4:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
  8180c8:	e0bffd17 	ldw	r2,-12(fp)
  8180cc:	10001926 	beq	r2,zero,818134 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  8180d0:	e0bffd17 	ldw	r2,-12(fp)
  8180d4:	10800017 	ldw	r2,0(r2)
  8180d8:	10800417 	ldw	r2,16(r2)
  8180dc:	10000626 	beq	r2,zero,8180f8 <close+0x6c>
  8180e0:	e0bffd17 	ldw	r2,-12(fp)
  8180e4:	10800017 	ldw	r2,0(r2)
  8180e8:	10800417 	ldw	r2,16(r2)
  8180ec:	e13ffd17 	ldw	r4,-12(fp)
  8180f0:	103ee83a 	callr	r2
  8180f4:	00000106 	br	8180fc <close+0x70>
  8180f8:	0005883a 	mov	r2,zero
  8180fc:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  818100:	e13fff17 	ldw	r4,-4(fp)
  818104:	0818b200 	call	818b20 <alt_release_fd>
    if (rval < 0)
  818108:	e0bffe17 	ldw	r2,-8(fp)
  81810c:	1000070e 	bge	r2,zero,81812c <close+0xa0>
    {
      ALT_ERRNO = -rval;
  818110:	08180500 	call	818050 <alt_get_errno>
  818114:	1007883a 	mov	r3,r2
  818118:	e0bffe17 	ldw	r2,-8(fp)
  81811c:	0085c83a 	sub	r2,zero,r2
  818120:	18800015 	stw	r2,0(r3)
      return -1;
  818124:	00bfffc4 	movi	r2,-1
  818128:	00000706 	br	818148 <close+0xbc>
    }
    return 0;
  81812c:	0005883a 	mov	r2,zero
  818130:	00000506 	br	818148 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  818134:	08180500 	call	818050 <alt_get_errno>
  818138:	1007883a 	mov	r3,r2
  81813c:	00801444 	movi	r2,81
  818140:	18800015 	stw	r2,0(r3)
    return -1;
  818144:	00bfffc4 	movi	r2,-1
  }
}
  818148:	e037883a 	mov	sp,fp
  81814c:	dfc00117 	ldw	ra,4(sp)
  818150:	df000017 	ldw	fp,0(sp)
  818154:	dec00204 	addi	sp,sp,8
  818158:	f800283a 	ret

0081815c <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  81815c:	defffc04 	addi	sp,sp,-16
  818160:	df000315 	stw	fp,12(sp)
  818164:	df000304 	addi	fp,sp,12
  818168:	e13ffd15 	stw	r4,-12(fp)
  81816c:	e17ffe15 	stw	r5,-8(fp)
  818170:	e1bfff15 	stw	r6,-4(fp)
  return len;
  818174:	e0bfff17 	ldw	r2,-4(fp)
}
  818178:	e037883a 	mov	sp,fp
  81817c:	df000017 	ldw	fp,0(sp)
  818180:	dec00104 	addi	sp,sp,4
  818184:	f800283a 	ret

00818188 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  818188:	defffe04 	addi	sp,sp,-8
  81818c:	dfc00115 	stw	ra,4(sp)
  818190:	df000015 	stw	fp,0(sp)
  818194:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  818198:	d0a00d17 	ldw	r2,-32716(gp)
  81819c:	10000326 	beq	r2,zero,8181ac <alt_get_errno+0x24>
  8181a0:	d0a00d17 	ldw	r2,-32716(gp)
  8181a4:	103ee83a 	callr	r2
  8181a8:	00000106 	br	8181b0 <alt_get_errno+0x28>
  8181ac:	d0a76c04 	addi	r2,gp,-25168
}
  8181b0:	e037883a 	mov	sp,fp
  8181b4:	dfc00117 	ldw	ra,4(sp)
  8181b8:	df000017 	ldw	fp,0(sp)
  8181bc:	dec00204 	addi	sp,sp,8
  8181c0:	f800283a 	ret

008181c4 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  8181c4:	defffb04 	addi	sp,sp,-20
  8181c8:	dfc00415 	stw	ra,16(sp)
  8181cc:	df000315 	stw	fp,12(sp)
  8181d0:	df000304 	addi	fp,sp,12
  8181d4:	e13ffe15 	stw	r4,-8(fp)
  8181d8:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  8181dc:	e0bffe17 	ldw	r2,-8(fp)
  8181e0:	10000616 	blt	r2,zero,8181fc <fstat+0x38>
  8181e4:	e0bffe17 	ldw	r2,-8(fp)
  8181e8:	10c00324 	muli	r3,r2,12
  8181ec:	008020b4 	movhi	r2,130
  8181f0:	10b57b04 	addi	r2,r2,-10772
  8181f4:	1885883a 	add	r2,r3,r2
  8181f8:	00000106 	br	818200 <fstat+0x3c>
  8181fc:	0005883a 	mov	r2,zero
  818200:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
  818204:	e0bffd17 	ldw	r2,-12(fp)
  818208:	10001026 	beq	r2,zero,81824c <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  81820c:	e0bffd17 	ldw	r2,-12(fp)
  818210:	10800017 	ldw	r2,0(r2)
  818214:	10800817 	ldw	r2,32(r2)
  818218:	10000726 	beq	r2,zero,818238 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
  81821c:	e0bffd17 	ldw	r2,-12(fp)
  818220:	10800017 	ldw	r2,0(r2)
  818224:	10800817 	ldw	r2,32(r2)
  818228:	e17fff17 	ldw	r5,-4(fp)
  81822c:	e13ffd17 	ldw	r4,-12(fp)
  818230:	103ee83a 	callr	r2
  818234:	00000a06 	br	818260 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  818238:	e0bfff17 	ldw	r2,-4(fp)
  81823c:	00c80004 	movi	r3,8192
  818240:	10c00115 	stw	r3,4(r2)
      return 0;
  818244:	0005883a 	mov	r2,zero
  818248:	00000506 	br	818260 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  81824c:	08181880 	call	818188 <alt_get_errno>
  818250:	1007883a 	mov	r3,r2
  818254:	00801444 	movi	r2,81
  818258:	18800015 	stw	r2,0(r3)
    return -1;
  81825c:	00bfffc4 	movi	r2,-1
  }
}
  818260:	e037883a 	mov	sp,fp
  818264:	dfc00117 	ldw	ra,4(sp)
  818268:	df000017 	ldw	fp,0(sp)
  81826c:	dec00204 	addi	sp,sp,8
  818270:	f800283a 	ret

00818274 <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
  818274:	defff004 	addi	sp,sp,-64
  818278:	df000f15 	stw	fp,60(sp)
  81827c:	df000f04 	addi	fp,sp,60
  818280:	e13ffd15 	stw	r4,-12(fp)
  818284:	e17ffe15 	stw	r5,-8(fp)
  818288:	e1bfff15 	stw	r6,-4(fp)
  int rc = -EINVAL;  
  81828c:	00bffa84 	movi	r2,-22
  818290:	e0bff115 	stw	r2,-60(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  818294:	e0bffd17 	ldw	r2,-12(fp)
  818298:	10800828 	cmpgeui	r2,r2,32
  81829c:	1000501e 	bne	r2,zero,8183e0 <alt_irq_register+0x16c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8182a0:	0005303a 	rdctl	r2,status
  8182a4:	e0bff615 	stw	r2,-40(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8182a8:	e0fff617 	ldw	r3,-40(fp)
  8182ac:	00bfff84 	movi	r2,-2
  8182b0:	1884703a 	and	r2,r3,r2
  8182b4:	1001703a 	wrctl	status,r2
  
  return context;
  8182b8:	e0bff617 	ldw	r2,-40(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
  8182bc:	e0bff315 	stw	r2,-52(fp)

    alt_irq[id].handler = handler;
  8182c0:	008020b4 	movhi	r2,130
  8182c4:	10820804 	addi	r2,r2,2080
  8182c8:	e0fffd17 	ldw	r3,-12(fp)
  8182cc:	180690fa 	slli	r3,r3,3
  8182d0:	10c5883a 	add	r2,r2,r3
  8182d4:	e0ffff17 	ldw	r3,-4(fp)
  8182d8:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = context;
  8182dc:	008020b4 	movhi	r2,130
  8182e0:	10820804 	addi	r2,r2,2080
  8182e4:	e0fffd17 	ldw	r3,-12(fp)
  8182e8:	180690fa 	slli	r3,r3,3
  8182ec:	10c5883a 	add	r2,r2,r3
  8182f0:	10800104 	addi	r2,r2,4
  8182f4:	e0fffe17 	ldw	r3,-8(fp)
  8182f8:	10c00015 	stw	r3,0(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
  8182fc:	e0bfff17 	ldw	r2,-4(fp)
  818300:	10001926 	beq	r2,zero,818368 <alt_irq_register+0xf4>
  818304:	e0bffd17 	ldw	r2,-12(fp)
  818308:	e0bff215 	stw	r2,-56(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81830c:	0005303a 	rdctl	r2,status
  818310:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  818314:	e0fff717 	ldw	r3,-36(fp)
  818318:	00bfff84 	movi	r2,-2
  81831c:	1884703a 	and	r2,r3,r2
  818320:	1001703a 	wrctl	status,r2
  
  return context;
  818324:	e0bff717 	ldw	r2,-36(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  818328:	e0bff815 	stw	r2,-32(fp)

  alt_irq_active |= (1 << id);
  81832c:	00c00044 	movi	r3,1
  818330:	e0bff217 	ldw	r2,-56(fp)
  818334:	1884983a 	sll	r2,r3,r2
  818338:	1007883a 	mov	r3,r2
  81833c:	d0a77317 	ldw	r2,-25140(gp)
  818340:	1884b03a 	or	r2,r3,r2
  818344:	d0a77315 	stw	r2,-25140(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  818348:	d0a77317 	ldw	r2,-25140(gp)
  81834c:	100170fa 	wrctl	ienable,r2
  818350:	e0bff817 	ldw	r2,-32(fp)
  818354:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  818358:	e0bff917 	ldw	r2,-28(fp)
  81835c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  818360:	0005883a 	mov	r2,zero
  818364:	00001906 	br	8183cc <alt_irq_register+0x158>
  818368:	e0bffd17 	ldw	r2,-12(fp)
  81836c:	e0bff415 	stw	r2,-48(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  818370:	0005303a 	rdctl	r2,status
  818374:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  818378:	e0fffa17 	ldw	r3,-24(fp)
  81837c:	00bfff84 	movi	r2,-2
  818380:	1884703a 	and	r2,r3,r2
  818384:	1001703a 	wrctl	status,r2
  
  return context;
  818388:	e0bffa17 	ldw	r2,-24(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  81838c:	e0bffb15 	stw	r2,-20(fp)

  alt_irq_active &= ~(1 << id);
  818390:	00c00044 	movi	r3,1
  818394:	e0bff417 	ldw	r2,-48(fp)
  818398:	1884983a 	sll	r2,r3,r2
  81839c:	0084303a 	nor	r2,zero,r2
  8183a0:	1007883a 	mov	r3,r2
  8183a4:	d0a77317 	ldw	r2,-25140(gp)
  8183a8:	1884703a 	and	r2,r3,r2
  8183ac:	d0a77315 	stw	r2,-25140(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  8183b0:	d0a77317 	ldw	r2,-25140(gp)
  8183b4:	100170fa 	wrctl	ienable,r2
  8183b8:	e0bffb17 	ldw	r2,-20(fp)
  8183bc:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  8183c0:	e0bffc17 	ldw	r2,-16(fp)
  8183c4:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  8183c8:	0005883a 	mov	r2,zero
  8183cc:	e0bff115 	stw	r2,-60(fp)
  8183d0:	e0bff317 	ldw	r2,-52(fp)
  8183d4:	e0bff515 	stw	r2,-44(fp)
  8183d8:	e0bff517 	ldw	r2,-44(fp)
  8183dc:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }
  return rc; 
  8183e0:	e0bff117 	ldw	r2,-60(fp)
}
  8183e4:	e037883a 	mov	sp,fp
  8183e8:	df000017 	ldw	fp,0(sp)
  8183ec:	dec00104 	addi	sp,sp,4
  8183f0:	f800283a 	ret

008183f4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  8183f4:	defffe04 	addi	sp,sp,-8
  8183f8:	dfc00115 	stw	ra,4(sp)
  8183fc:	df000015 	stw	fp,0(sp)
  818400:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  818404:	d0a00d17 	ldw	r2,-32716(gp)
  818408:	10000326 	beq	r2,zero,818418 <alt_get_errno+0x24>
  81840c:	d0a00d17 	ldw	r2,-32716(gp)
  818410:	103ee83a 	callr	r2
  818414:	00000106 	br	81841c <alt_get_errno+0x28>
  818418:	d0a76c04 	addi	r2,gp,-25168
}
  81841c:	e037883a 	mov	sp,fp
  818420:	dfc00117 	ldw	ra,4(sp)
  818424:	df000017 	ldw	fp,0(sp)
  818428:	dec00204 	addi	sp,sp,8
  81842c:	f800283a 	ret

00818430 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  818430:	deffed04 	addi	sp,sp,-76
  818434:	dfc01215 	stw	ra,72(sp)
  818438:	df001115 	stw	fp,68(sp)
  81843c:	df001104 	addi	fp,sp,68
  818440:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  818444:	e0bfff17 	ldw	r2,-4(fp)
  818448:	10000616 	blt	r2,zero,818464 <isatty+0x34>
  81844c:	e0bfff17 	ldw	r2,-4(fp)
  818450:	10c00324 	muli	r3,r2,12
  818454:	008020b4 	movhi	r2,130
  818458:	10b57b04 	addi	r2,r2,-10772
  81845c:	1885883a 	add	r2,r3,r2
  818460:	00000106 	br	818468 <isatty+0x38>
  818464:	0005883a 	mov	r2,zero
  818468:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
  81846c:	e0bfef17 	ldw	r2,-68(fp)
  818470:	10000e26 	beq	r2,zero,8184ac <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  818474:	e0bfef17 	ldw	r2,-68(fp)
  818478:	10800017 	ldw	r2,0(r2)
  81847c:	10800817 	ldw	r2,32(r2)
  818480:	1000021e 	bne	r2,zero,81848c <isatty+0x5c>
    {
      return 1;
  818484:	00800044 	movi	r2,1
  818488:	00000d06 	br	8184c0 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  81848c:	e0bff004 	addi	r2,fp,-64
  818490:	100b883a 	mov	r5,r2
  818494:	e13fff17 	ldw	r4,-4(fp)
  818498:	08181c40 	call	8181c4 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  81849c:	e0bff117 	ldw	r2,-60(fp)
  8184a0:	10880020 	cmpeqi	r2,r2,8192
  8184a4:	10803fcc 	andi	r2,r2,255
  8184a8:	00000506 	br	8184c0 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  8184ac:	08183f40 	call	8183f4 <alt_get_errno>
  8184b0:	1007883a 	mov	r3,r2
  8184b4:	00801444 	movi	r2,81
  8184b8:	18800015 	stw	r2,0(r3)
    return 0;
  8184bc:	0005883a 	mov	r2,zero
  }
}
  8184c0:	e037883a 	mov	sp,fp
  8184c4:	dfc00117 	ldw	ra,4(sp)
  8184c8:	df000017 	ldw	fp,0(sp)
  8184cc:	dec00204 	addi	sp,sp,8
  8184d0:	f800283a 	ret

008184d4 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  8184d4:	defffc04 	addi	sp,sp,-16
  8184d8:	df000315 	stw	fp,12(sp)
  8184dc:	df000304 	addi	fp,sp,12
  8184e0:	e13ffd15 	stw	r4,-12(fp)
  8184e4:	e17ffe15 	stw	r5,-8(fp)
  8184e8:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
  8184ec:	e0fffe17 	ldw	r3,-8(fp)
  8184f0:	e0bffd17 	ldw	r2,-12(fp)
  8184f4:	18800c26 	beq	r3,r2,818528 <alt_load_section+0x54>
  {
    while( to != end )
  8184f8:	00000806 	br	81851c <alt_load_section+0x48>
    {
      *to++ = *from++;
  8184fc:	e0bffe17 	ldw	r2,-8(fp)
  818500:	10c00104 	addi	r3,r2,4
  818504:	e0fffe15 	stw	r3,-8(fp)
  818508:	e0fffd17 	ldw	r3,-12(fp)
  81850c:	19000104 	addi	r4,r3,4
  818510:	e13ffd15 	stw	r4,-12(fp)
  818514:	18c00017 	ldw	r3,0(r3)
  818518:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
  81851c:	e0fffe17 	ldw	r3,-8(fp)
  818520:	e0bfff17 	ldw	r2,-4(fp)
  818524:	18bff51e 	bne	r3,r2,8184fc <__alt_data_end+0xff8184fc>
    {
      *to++ = *from++;
    }
  }
}
  818528:	0001883a 	nop
  81852c:	e037883a 	mov	sp,fp
  818530:	df000017 	ldw	fp,0(sp)
  818534:	dec00104 	addi	sp,sp,4
  818538:	f800283a 	ret

0081853c <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
  81853c:	defffe04 	addi	sp,sp,-8
  818540:	dfc00115 	stw	ra,4(sp)
  818544:	df000015 	stw	fp,0(sp)
  818548:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
  81854c:	018020b4 	movhi	r6,130
  818550:	31ba9704 	addi	r6,r6,-5540
  818554:	014020b4 	movhi	r5,130
  818558:	29734404 	addi	r5,r5,-13040
  81855c:	010020b4 	movhi	r4,130
  818560:	213a9704 	addi	r4,r4,-5540
  818564:	08184d40 	call	8184d4 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
  818568:	01802034 	movhi	r6,128
  81856c:	31809204 	addi	r6,r6,584
  818570:	01402034 	movhi	r5,128
  818574:	29400804 	addi	r5,r5,32
  818578:	01002034 	movhi	r4,128
  81857c:	21000804 	addi	r4,r4,32
  818580:	08184d40 	call	8184d4 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
  818584:	018020b4 	movhi	r6,130
  818588:	31b34404 	addi	r6,r6,-13040
  81858c:	014020b4 	movhi	r5,130
  818590:	29701704 	addi	r5,r5,-16292
  818594:	010020b4 	movhi	r4,130
  818598:	21301704 	addi	r4,r4,-16292
  81859c:	08184d40 	call	8184d4 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  8185a0:	081b43c0 	call	81b43c <alt_dcache_flush_all>
  alt_icache_flush_all();
  8185a4:	081b8600 	call	81b860 <alt_icache_flush_all>
}
  8185a8:	0001883a 	nop
  8185ac:	e037883a 	mov	sp,fp
  8185b0:	dfc00117 	ldw	ra,4(sp)
  8185b4:	df000017 	ldw	fp,0(sp)
  8185b8:	dec00204 	addi	sp,sp,8
  8185bc:	f800283a 	ret

008185c0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  8185c0:	defffe04 	addi	sp,sp,-8
  8185c4:	dfc00115 	stw	ra,4(sp)
  8185c8:	df000015 	stw	fp,0(sp)
  8185cc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  8185d0:	d0a00d17 	ldw	r2,-32716(gp)
  8185d4:	10000326 	beq	r2,zero,8185e4 <alt_get_errno+0x24>
  8185d8:	d0a00d17 	ldw	r2,-32716(gp)
  8185dc:	103ee83a 	callr	r2
  8185e0:	00000106 	br	8185e8 <alt_get_errno+0x28>
  8185e4:	d0a76c04 	addi	r2,gp,-25168
}
  8185e8:	e037883a 	mov	sp,fp
  8185ec:	dfc00117 	ldw	ra,4(sp)
  8185f0:	df000017 	ldw	fp,0(sp)
  8185f4:	dec00204 	addi	sp,sp,8
  8185f8:	f800283a 	ret

008185fc <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  8185fc:	defff904 	addi	sp,sp,-28
  818600:	dfc00615 	stw	ra,24(sp)
  818604:	df000515 	stw	fp,20(sp)
  818608:	df000504 	addi	fp,sp,20
  81860c:	e13ffd15 	stw	r4,-12(fp)
  818610:	e17ffe15 	stw	r5,-8(fp)
  818614:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  818618:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  81861c:	e0bffd17 	ldw	r2,-12(fp)
  818620:	10000616 	blt	r2,zero,81863c <lseek+0x40>
  818624:	e0bffd17 	ldw	r2,-12(fp)
  818628:	10c00324 	muli	r3,r2,12
  81862c:	008020b4 	movhi	r2,130
  818630:	10b57b04 	addi	r2,r2,-10772
  818634:	1885883a 	add	r2,r3,r2
  818638:	00000106 	br	818640 <lseek+0x44>
  81863c:	0005883a 	mov	r2,zero
  818640:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
  818644:	e0bffc17 	ldw	r2,-16(fp)
  818648:	10001026 	beq	r2,zero,81868c <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  81864c:	e0bffc17 	ldw	r2,-16(fp)
  818650:	10800017 	ldw	r2,0(r2)
  818654:	10800717 	ldw	r2,28(r2)
  818658:	10000926 	beq	r2,zero,818680 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  81865c:	e0bffc17 	ldw	r2,-16(fp)
  818660:	10800017 	ldw	r2,0(r2)
  818664:	10800717 	ldw	r2,28(r2)
  818668:	e1bfff17 	ldw	r6,-4(fp)
  81866c:	e17ffe17 	ldw	r5,-8(fp)
  818670:	e13ffc17 	ldw	r4,-16(fp)
  818674:	103ee83a 	callr	r2
  818678:	e0bffb15 	stw	r2,-20(fp)
  81867c:	00000506 	br	818694 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  818680:	00bfde84 	movi	r2,-134
  818684:	e0bffb15 	stw	r2,-20(fp)
  818688:	00000206 	br	818694 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
  81868c:	00bfebc4 	movi	r2,-81
  818690:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
  818694:	e0bffb17 	ldw	r2,-20(fp)
  818698:	1000070e 	bge	r2,zero,8186b8 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
  81869c:	08185c00 	call	8185c0 <alt_get_errno>
  8186a0:	1007883a 	mov	r3,r2
  8186a4:	e0bffb17 	ldw	r2,-20(fp)
  8186a8:	0085c83a 	sub	r2,zero,r2
  8186ac:	18800015 	stw	r2,0(r3)
    rc = -1;
  8186b0:	00bfffc4 	movi	r2,-1
  8186b4:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
  8186b8:	e0bffb17 	ldw	r2,-20(fp)
}
  8186bc:	e037883a 	mov	sp,fp
  8186c0:	dfc00117 	ldw	ra,4(sp)
  8186c4:	df000017 	ldw	fp,0(sp)
  8186c8:	dec00204 	addi	sp,sp,8
  8186cc:	f800283a 	ret

008186d0 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  8186d0:	defffd04 	addi	sp,sp,-12
  8186d4:	dfc00215 	stw	ra,8(sp)
  8186d8:	df000115 	stw	fp,4(sp)
  8186dc:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  8186e0:	0009883a 	mov	r4,zero
  8186e4:	0818dcc0 	call	818dcc <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
  8186e8:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  8186ec:	0818e040 	call	818e04 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  8186f0:	018020b4 	movhi	r6,130
  8186f4:	31b32904 	addi	r6,r6,-13148
  8186f8:	014020b4 	movhi	r5,130
  8186fc:	29732904 	addi	r5,r5,-13148
  818700:	010020b4 	movhi	r4,130
  818704:	21332904 	addi	r4,r4,-13148
  818708:	081b9580 	call	81b958 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  81870c:	081b5640 	call	81b564 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  818710:	010020b4 	movhi	r4,130
  818714:	212d7104 	addi	r4,r4,-19004
  818718:	081bcc80 	call	81bcc8 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  81871c:	d0a77417 	ldw	r2,-25136(gp)
  818720:	d0e77517 	ldw	r3,-25132(gp)
  818724:	d1277617 	ldw	r4,-25128(gp)
  818728:	200d883a 	mov	r6,r4
  81872c:	180b883a 	mov	r5,r3
  818730:	1009883a 	mov	r4,r2
  818734:	0800e680 	call	800e68 <main>
  818738:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  81873c:	01000044 	movi	r4,1
  818740:	081808c0 	call	81808c <close>
  exit (result);
  818744:	e13fff17 	ldw	r4,-4(fp)
  818748:	081bcdc0 	call	81bcdc <exit>

0081874c <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
  81874c:	defffe04 	addi	sp,sp,-8
  818750:	df000115 	stw	fp,4(sp)
  818754:	df000104 	addi	fp,sp,4
  818758:	e13fff15 	stw	r4,-4(fp)
}
  81875c:	0001883a 	nop
  818760:	e037883a 	mov	sp,fp
  818764:	df000017 	ldw	fp,0(sp)
  818768:	dec00104 	addi	sp,sp,4
  81876c:	f800283a 	ret

00818770 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
  818770:	defffe04 	addi	sp,sp,-8
  818774:	df000115 	stw	fp,4(sp)
  818778:	df000104 	addi	fp,sp,4
  81877c:	e13fff15 	stw	r4,-4(fp)
}
  818780:	0001883a 	nop
  818784:	e037883a 	mov	sp,fp
  818788:	df000017 	ldw	fp,0(sp)
  81878c:	dec00104 	addi	sp,sp,4
  818790:	f800283a 	ret

00818794 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  818794:	defffe04 	addi	sp,sp,-8
  818798:	dfc00115 	stw	ra,4(sp)
  81879c:	df000015 	stw	fp,0(sp)
  8187a0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  8187a4:	d0a00d17 	ldw	r2,-32716(gp)
  8187a8:	10000326 	beq	r2,zero,8187b8 <alt_get_errno+0x24>
  8187ac:	d0a00d17 	ldw	r2,-32716(gp)
  8187b0:	103ee83a 	callr	r2
  8187b4:	00000106 	br	8187bc <alt_get_errno+0x28>
  8187b8:	d0a76c04 	addi	r2,gp,-25168
}
  8187bc:	e037883a 	mov	sp,fp
  8187c0:	dfc00117 	ldw	ra,4(sp)
  8187c4:	df000017 	ldw	fp,0(sp)
  8187c8:	dec00204 	addi	sp,sp,8
  8187cc:	f800283a 	ret

008187d0 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  8187d0:	defffd04 	addi	sp,sp,-12
  8187d4:	df000215 	stw	fp,8(sp)
  8187d8:	df000204 	addi	fp,sp,8
  8187dc:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  8187e0:	e0bfff17 	ldw	r2,-4(fp)
  8187e4:	10800217 	ldw	r2,8(r2)
  8187e8:	10d00034 	orhi	r3,r2,16384
  8187ec:	e0bfff17 	ldw	r2,-4(fp)
  8187f0:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  8187f4:	e03ffe15 	stw	zero,-8(fp)
  8187f8:	00001d06 	br	818870 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  8187fc:	008020b4 	movhi	r2,130
  818800:	10b57b04 	addi	r2,r2,-10772
  818804:	e0fffe17 	ldw	r3,-8(fp)
  818808:	18c00324 	muli	r3,r3,12
  81880c:	10c5883a 	add	r2,r2,r3
  818810:	10c00017 	ldw	r3,0(r2)
  818814:	e0bfff17 	ldw	r2,-4(fp)
  818818:	10800017 	ldw	r2,0(r2)
  81881c:	1880111e 	bne	r3,r2,818864 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  818820:	008020b4 	movhi	r2,130
  818824:	10b57b04 	addi	r2,r2,-10772
  818828:	e0fffe17 	ldw	r3,-8(fp)
  81882c:	18c00324 	muli	r3,r3,12
  818830:	10c5883a 	add	r2,r2,r3
  818834:	10800204 	addi	r2,r2,8
  818838:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  81883c:	1000090e 	bge	r2,zero,818864 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
  818840:	e0bffe17 	ldw	r2,-8(fp)
  818844:	10c00324 	muli	r3,r2,12
  818848:	008020b4 	movhi	r2,130
  81884c:	10b57b04 	addi	r2,r2,-10772
  818850:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  818854:	e0bfff17 	ldw	r2,-4(fp)
  818858:	18800226 	beq	r3,r2,818864 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
  81885c:	00bffcc4 	movi	r2,-13
  818860:	00000806 	br	818884 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  818864:	e0bffe17 	ldw	r2,-8(fp)
  818868:	10800044 	addi	r2,r2,1
  81886c:	e0bffe15 	stw	r2,-8(fp)
  818870:	d0a00c17 	ldw	r2,-32720(gp)
  818874:	1007883a 	mov	r3,r2
  818878:	e0bffe17 	ldw	r2,-8(fp)
  81887c:	18bfdf2e 	bgeu	r3,r2,8187fc <__alt_data_end+0xff8187fc>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  818880:	0005883a 	mov	r2,zero
}
  818884:	e037883a 	mov	sp,fp
  818888:	df000017 	ldw	fp,0(sp)
  81888c:	dec00104 	addi	sp,sp,4
  818890:	f800283a 	ret

00818894 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  818894:	defff604 	addi	sp,sp,-40
  818898:	dfc00915 	stw	ra,36(sp)
  81889c:	df000815 	stw	fp,32(sp)
  8188a0:	df000804 	addi	fp,sp,32
  8188a4:	e13ffd15 	stw	r4,-12(fp)
  8188a8:	e17ffe15 	stw	r5,-8(fp)
  8188ac:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  8188b0:	00bfffc4 	movi	r2,-1
  8188b4:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
  8188b8:	00bffb44 	movi	r2,-19
  8188bc:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
  8188c0:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  8188c4:	d1600a04 	addi	r5,gp,-32728
  8188c8:	e13ffd17 	ldw	r4,-12(fp)
  8188cc:	081b6240 	call	81b624 <alt_find_dev>
  8188d0:	e0bff815 	stw	r2,-32(fp)
  8188d4:	e0bff817 	ldw	r2,-32(fp)
  8188d8:	1000051e 	bne	r2,zero,8188f0 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  8188dc:	e13ffd17 	ldw	r4,-12(fp)
  8188e0:	081b6b40 	call	81b6b4 <alt_find_file>
  8188e4:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
  8188e8:	00800044 	movi	r2,1
  8188ec:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  8188f0:	e0bff817 	ldw	r2,-32(fp)
  8188f4:	10002926 	beq	r2,zero,81899c <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
  8188f8:	e13ff817 	ldw	r4,-32(fp)
  8188fc:	081b7bc0 	call	81b7bc <alt_get_fd>
  818900:	e0bff915 	stw	r2,-28(fp)
  818904:	e0bff917 	ldw	r2,-28(fp)
  818908:	1000030e 	bge	r2,zero,818918 <open+0x84>
    {
      status = index;
  81890c:	e0bff917 	ldw	r2,-28(fp)
  818910:	e0bffa15 	stw	r2,-24(fp)
  818914:	00002306 	br	8189a4 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
  818918:	e0bff917 	ldw	r2,-28(fp)
  81891c:	10c00324 	muli	r3,r2,12
  818920:	008020b4 	movhi	r2,130
  818924:	10b57b04 	addi	r2,r2,-10772
  818928:	1885883a 	add	r2,r3,r2
  81892c:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  818930:	e0fffe17 	ldw	r3,-8(fp)
  818934:	00900034 	movhi	r2,16384
  818938:	10bfffc4 	addi	r2,r2,-1
  81893c:	1886703a 	and	r3,r3,r2
  818940:	e0bffc17 	ldw	r2,-16(fp)
  818944:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  818948:	e0bffb17 	ldw	r2,-20(fp)
  81894c:	1000051e 	bne	r2,zero,818964 <open+0xd0>
  818950:	e13ffc17 	ldw	r4,-16(fp)
  818954:	08187d00 	call	8187d0 <alt_file_locked>
  818958:	e0bffa15 	stw	r2,-24(fp)
  81895c:	e0bffa17 	ldw	r2,-24(fp)
  818960:	10001016 	blt	r2,zero,8189a4 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  818964:	e0bff817 	ldw	r2,-32(fp)
  818968:	10800317 	ldw	r2,12(r2)
  81896c:	10000826 	beq	r2,zero,818990 <open+0xfc>
  818970:	e0bff817 	ldw	r2,-32(fp)
  818974:	10800317 	ldw	r2,12(r2)
  818978:	e1ffff17 	ldw	r7,-4(fp)
  81897c:	e1bffe17 	ldw	r6,-8(fp)
  818980:	e17ffd17 	ldw	r5,-12(fp)
  818984:	e13ffc17 	ldw	r4,-16(fp)
  818988:	103ee83a 	callr	r2
  81898c:	00000106 	br	818994 <open+0x100>
  818990:	0005883a 	mov	r2,zero
  818994:	e0bffa15 	stw	r2,-24(fp)
  818998:	00000206 	br	8189a4 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
  81899c:	00bffb44 	movi	r2,-19
  8189a0:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  8189a4:	e0bffa17 	ldw	r2,-24(fp)
  8189a8:	1000090e 	bge	r2,zero,8189d0 <open+0x13c>
  {
    alt_release_fd (index);  
  8189ac:	e13ff917 	ldw	r4,-28(fp)
  8189b0:	0818b200 	call	818b20 <alt_release_fd>
    ALT_ERRNO = -status;
  8189b4:	08187940 	call	818794 <alt_get_errno>
  8189b8:	1007883a 	mov	r3,r2
  8189bc:	e0bffa17 	ldw	r2,-24(fp)
  8189c0:	0085c83a 	sub	r2,zero,r2
  8189c4:	18800015 	stw	r2,0(r3)
    return -1;
  8189c8:	00bfffc4 	movi	r2,-1
  8189cc:	00000106 	br	8189d4 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
  8189d0:	e0bff917 	ldw	r2,-28(fp)
}
  8189d4:	e037883a 	mov	sp,fp
  8189d8:	dfc00117 	ldw	ra,4(sp)
  8189dc:	df000017 	ldw	fp,0(sp)
  8189e0:	dec00204 	addi	sp,sp,8
  8189e4:	f800283a 	ret

008189e8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  8189e8:	defffe04 	addi	sp,sp,-8
  8189ec:	dfc00115 	stw	ra,4(sp)
  8189f0:	df000015 	stw	fp,0(sp)
  8189f4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  8189f8:	d0a00d17 	ldw	r2,-32716(gp)
  8189fc:	10000326 	beq	r2,zero,818a0c <alt_get_errno+0x24>
  818a00:	d0a00d17 	ldw	r2,-32716(gp)
  818a04:	103ee83a 	callr	r2
  818a08:	00000106 	br	818a10 <alt_get_errno+0x28>
  818a0c:	d0a76c04 	addi	r2,gp,-25168
}
  818a10:	e037883a 	mov	sp,fp
  818a14:	dfc00117 	ldw	ra,4(sp)
  818a18:	df000017 	ldw	fp,0(sp)
  818a1c:	dec00204 	addi	sp,sp,8
  818a20:	f800283a 	ret

00818a24 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  818a24:	defff904 	addi	sp,sp,-28
  818a28:	dfc00615 	stw	ra,24(sp)
  818a2c:	df000515 	stw	fp,20(sp)
  818a30:	df000504 	addi	fp,sp,20
  818a34:	e13ffd15 	stw	r4,-12(fp)
  818a38:	e17ffe15 	stw	r5,-8(fp)
  818a3c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  818a40:	e0bffd17 	ldw	r2,-12(fp)
  818a44:	10000616 	blt	r2,zero,818a60 <read+0x3c>
  818a48:	e0bffd17 	ldw	r2,-12(fp)
  818a4c:	10c00324 	muli	r3,r2,12
  818a50:	008020b4 	movhi	r2,130
  818a54:	10b57b04 	addi	r2,r2,-10772
  818a58:	1885883a 	add	r2,r3,r2
  818a5c:	00000106 	br	818a64 <read+0x40>
  818a60:	0005883a 	mov	r2,zero
  818a64:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  818a68:	e0bffb17 	ldw	r2,-20(fp)
  818a6c:	10002226 	beq	r2,zero,818af8 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  818a70:	e0bffb17 	ldw	r2,-20(fp)
  818a74:	10800217 	ldw	r2,8(r2)
  818a78:	108000cc 	andi	r2,r2,3
  818a7c:	10800060 	cmpeqi	r2,r2,1
  818a80:	1000181e 	bne	r2,zero,818ae4 <read+0xc0>
        (fd->dev->read))
  818a84:	e0bffb17 	ldw	r2,-20(fp)
  818a88:	10800017 	ldw	r2,0(r2)
  818a8c:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  818a90:	10001426 	beq	r2,zero,818ae4 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  818a94:	e0bffb17 	ldw	r2,-20(fp)
  818a98:	10800017 	ldw	r2,0(r2)
  818a9c:	10800517 	ldw	r2,20(r2)
  818aa0:	e0ffff17 	ldw	r3,-4(fp)
  818aa4:	180d883a 	mov	r6,r3
  818aa8:	e17ffe17 	ldw	r5,-8(fp)
  818aac:	e13ffb17 	ldw	r4,-20(fp)
  818ab0:	103ee83a 	callr	r2
  818ab4:	e0bffc15 	stw	r2,-16(fp)
  818ab8:	e0bffc17 	ldw	r2,-16(fp)
  818abc:	1000070e 	bge	r2,zero,818adc <read+0xb8>
        {
          ALT_ERRNO = -rval;
  818ac0:	08189e80 	call	8189e8 <alt_get_errno>
  818ac4:	1007883a 	mov	r3,r2
  818ac8:	e0bffc17 	ldw	r2,-16(fp)
  818acc:	0085c83a 	sub	r2,zero,r2
  818ad0:	18800015 	stw	r2,0(r3)
          return -1;
  818ad4:	00bfffc4 	movi	r2,-1
  818ad8:	00000c06 	br	818b0c <read+0xe8>
        }
        return rval;
  818adc:	e0bffc17 	ldw	r2,-16(fp)
  818ae0:	00000a06 	br	818b0c <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
  818ae4:	08189e80 	call	8189e8 <alt_get_errno>
  818ae8:	1007883a 	mov	r3,r2
  818aec:	00800344 	movi	r2,13
  818af0:	18800015 	stw	r2,0(r3)
  818af4:	00000406 	br	818b08 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  818af8:	08189e80 	call	8189e8 <alt_get_errno>
  818afc:	1007883a 	mov	r3,r2
  818b00:	00801444 	movi	r2,81
  818b04:	18800015 	stw	r2,0(r3)
  }
  return -1;
  818b08:	00bfffc4 	movi	r2,-1
}
  818b0c:	e037883a 	mov	sp,fp
  818b10:	dfc00117 	ldw	ra,4(sp)
  818b14:	df000017 	ldw	fp,0(sp)
  818b18:	dec00204 	addi	sp,sp,8
  818b1c:	f800283a 	ret

00818b20 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  818b20:	defffe04 	addi	sp,sp,-8
  818b24:	df000115 	stw	fp,4(sp)
  818b28:	df000104 	addi	fp,sp,4
  818b2c:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
  818b30:	e0bfff17 	ldw	r2,-4(fp)
  818b34:	108000d0 	cmplti	r2,r2,3
  818b38:	10000d1e 	bne	r2,zero,818b70 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
  818b3c:	008020b4 	movhi	r2,130
  818b40:	10b57b04 	addi	r2,r2,-10772
  818b44:	e0ffff17 	ldw	r3,-4(fp)
  818b48:	18c00324 	muli	r3,r3,12
  818b4c:	10c5883a 	add	r2,r2,r3
  818b50:	10800204 	addi	r2,r2,8
  818b54:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
  818b58:	008020b4 	movhi	r2,130
  818b5c:	10b57b04 	addi	r2,r2,-10772
  818b60:	e0ffff17 	ldw	r3,-4(fp)
  818b64:	18c00324 	muli	r3,r3,12
  818b68:	10c5883a 	add	r2,r2,r3
  818b6c:	10000015 	stw	zero,0(r2)
  }
}
  818b70:	0001883a 	nop
  818b74:	e037883a 	mov	sp,fp
  818b78:	df000017 	ldw	fp,0(sp)
  818b7c:	dec00104 	addi	sp,sp,4
  818b80:	f800283a 	ret

00818b84 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  818b84:	defff904 	addi	sp,sp,-28
  818b88:	df000615 	stw	fp,24(sp)
  818b8c:	df000604 	addi	fp,sp,24
  818b90:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  818b94:	0005303a 	rdctl	r2,status
  818b98:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  818b9c:	e0fffe17 	ldw	r3,-8(fp)
  818ba0:	00bfff84 	movi	r2,-2
  818ba4:	1884703a 	and	r2,r3,r2
  818ba8:	1001703a 	wrctl	status,r2
  
  return context;
  818bac:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  818bb0:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  818bb4:	d0a00f17 	ldw	r2,-32708(gp)
  818bb8:	10c000c4 	addi	r3,r2,3
  818bbc:	00bfff04 	movi	r2,-4
  818bc0:	1884703a 	and	r2,r3,r2
  818bc4:	d0a00f15 	stw	r2,-32708(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  818bc8:	d0e00f17 	ldw	r3,-32708(gp)
  818bcc:	e0bfff17 	ldw	r2,-4(fp)
  818bd0:	1887883a 	add	r3,r3,r2
  818bd4:	00804034 	movhi	r2,256
  818bd8:	10800004 	addi	r2,r2,0
  818bdc:	10c0062e 	bgeu	r2,r3,818bf8 <sbrk+0x74>
  818be0:	e0bffb17 	ldw	r2,-20(fp)
  818be4:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  818be8:	e0bffa17 	ldw	r2,-24(fp)
  818bec:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  818bf0:	00bfffc4 	movi	r2,-1
  818bf4:	00000b06 	br	818c24 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
  818bf8:	d0a00f17 	ldw	r2,-32708(gp)
  818bfc:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
  818c00:	d0e00f17 	ldw	r3,-32708(gp)
  818c04:	e0bfff17 	ldw	r2,-4(fp)
  818c08:	1885883a 	add	r2,r3,r2
  818c0c:	d0a00f15 	stw	r2,-32708(gp)
  818c10:	e0bffb17 	ldw	r2,-20(fp)
  818c14:	e0bffc15 	stw	r2,-16(fp)
  818c18:	e0bffc17 	ldw	r2,-16(fp)
  818c1c:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  818c20:	e0bffd17 	ldw	r2,-12(fp)
} 
  818c24:	e037883a 	mov	sp,fp
  818c28:	df000017 	ldw	fp,0(sp)
  818c2c:	dec00104 	addi	sp,sp,4
  818c30:	f800283a 	ret

00818c34 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
  818c34:	defffd04 	addi	sp,sp,-12
  818c38:	dfc00215 	stw	ra,8(sp)
  818c3c:	df000115 	stw	fp,4(sp)
  818c40:	df000104 	addi	fp,sp,4
  818c44:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
  818c48:	e13fff17 	ldw	r4,-4(fp)
  818c4c:	081b2e40 	call	81b2e4 <alt_busy_sleep>
}
  818c50:	e037883a 	mov	sp,fp
  818c54:	dfc00117 	ldw	ra,4(sp)
  818c58:	df000017 	ldw	fp,0(sp)
  818c5c:	dec00204 	addi	sp,sp,8
  818c60:	f800283a 	ret

00818c64 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  818c64:	defffe04 	addi	sp,sp,-8
  818c68:	dfc00115 	stw	ra,4(sp)
  818c6c:	df000015 	stw	fp,0(sp)
  818c70:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  818c74:	d0a00d17 	ldw	r2,-32716(gp)
  818c78:	10000326 	beq	r2,zero,818c88 <alt_get_errno+0x24>
  818c7c:	d0a00d17 	ldw	r2,-32716(gp)
  818c80:	103ee83a 	callr	r2
  818c84:	00000106 	br	818c8c <alt_get_errno+0x28>
  818c88:	d0a76c04 	addi	r2,gp,-25168
}
  818c8c:	e037883a 	mov	sp,fp
  818c90:	dfc00117 	ldw	ra,4(sp)
  818c94:	df000017 	ldw	fp,0(sp)
  818c98:	dec00204 	addi	sp,sp,8
  818c9c:	f800283a 	ret

00818ca0 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  818ca0:	defff904 	addi	sp,sp,-28
  818ca4:	dfc00615 	stw	ra,24(sp)
  818ca8:	df000515 	stw	fp,20(sp)
  818cac:	df000504 	addi	fp,sp,20
  818cb0:	e13ffd15 	stw	r4,-12(fp)
  818cb4:	e17ffe15 	stw	r5,-8(fp)
  818cb8:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  818cbc:	e0bffd17 	ldw	r2,-12(fp)
  818cc0:	10000616 	blt	r2,zero,818cdc <write+0x3c>
  818cc4:	e0bffd17 	ldw	r2,-12(fp)
  818cc8:	10c00324 	muli	r3,r2,12
  818ccc:	008020b4 	movhi	r2,130
  818cd0:	10b57b04 	addi	r2,r2,-10772
  818cd4:	1885883a 	add	r2,r3,r2
  818cd8:	00000106 	br	818ce0 <write+0x40>
  818cdc:	0005883a 	mov	r2,zero
  818ce0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  818ce4:	e0bffb17 	ldw	r2,-20(fp)
  818ce8:	10002126 	beq	r2,zero,818d70 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  818cec:	e0bffb17 	ldw	r2,-20(fp)
  818cf0:	10800217 	ldw	r2,8(r2)
  818cf4:	108000cc 	andi	r2,r2,3
  818cf8:	10001826 	beq	r2,zero,818d5c <write+0xbc>
  818cfc:	e0bffb17 	ldw	r2,-20(fp)
  818d00:	10800017 	ldw	r2,0(r2)
  818d04:	10800617 	ldw	r2,24(r2)
  818d08:	10001426 	beq	r2,zero,818d5c <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  818d0c:	e0bffb17 	ldw	r2,-20(fp)
  818d10:	10800017 	ldw	r2,0(r2)
  818d14:	10800617 	ldw	r2,24(r2)
  818d18:	e0ffff17 	ldw	r3,-4(fp)
  818d1c:	180d883a 	mov	r6,r3
  818d20:	e17ffe17 	ldw	r5,-8(fp)
  818d24:	e13ffb17 	ldw	r4,-20(fp)
  818d28:	103ee83a 	callr	r2
  818d2c:	e0bffc15 	stw	r2,-16(fp)
  818d30:	e0bffc17 	ldw	r2,-16(fp)
  818d34:	1000070e 	bge	r2,zero,818d54 <write+0xb4>
      {
        ALT_ERRNO = -rval;
  818d38:	0818c640 	call	818c64 <alt_get_errno>
  818d3c:	1007883a 	mov	r3,r2
  818d40:	e0bffc17 	ldw	r2,-16(fp)
  818d44:	0085c83a 	sub	r2,zero,r2
  818d48:	18800015 	stw	r2,0(r3)
        return -1;
  818d4c:	00bfffc4 	movi	r2,-1
  818d50:	00000c06 	br	818d84 <write+0xe4>
      }
      return rval;
  818d54:	e0bffc17 	ldw	r2,-16(fp)
  818d58:	00000a06 	br	818d84 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
  818d5c:	0818c640 	call	818c64 <alt_get_errno>
  818d60:	1007883a 	mov	r3,r2
  818d64:	00800344 	movi	r2,13
  818d68:	18800015 	stw	r2,0(r3)
  818d6c:	00000406 	br	818d80 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  818d70:	0818c640 	call	818c64 <alt_get_errno>
  818d74:	1007883a 	mov	r3,r2
  818d78:	00801444 	movi	r2,81
  818d7c:	18800015 	stw	r2,0(r3)
  }
  return -1;
  818d80:	00bfffc4 	movi	r2,-1
}
  818d84:	e037883a 	mov	sp,fp
  818d88:	dfc00117 	ldw	ra,4(sp)
  818d8c:	df000017 	ldw	fp,0(sp)
  818d90:	dec00204 	addi	sp,sp,8
  818d94:	f800283a 	ret

00818d98 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  818d98:	defffd04 	addi	sp,sp,-12
  818d9c:	dfc00215 	stw	ra,8(sp)
  818da0:	df000115 	stw	fp,4(sp)
  818da4:	df000104 	addi	fp,sp,4
  818da8:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  818dac:	d1600a04 	addi	r5,gp,-32728
  818db0:	e13fff17 	ldw	r4,-4(fp)
  818db4:	081b4c00 	call	81b4c0 <alt_dev_llist_insert>
}
  818db8:	e037883a 	mov	sp,fp
  818dbc:	dfc00117 	ldw	ra,4(sp)
  818dc0:	df000017 	ldw	fp,0(sp)
  818dc4:	dec00204 	addi	sp,sp,8
  818dc8:	f800283a 	ret

00818dcc <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  818dcc:	defffd04 	addi	sp,sp,-12
  818dd0:	dfc00215 	stw	ra,8(sp)
  818dd4:	df000115 	stw	fp,4(sp)
  818dd8:	df000104 	addi	fp,sp,4
  818ddc:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
  818de0:	081bb780 	call	81bb78 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  818de4:	00800044 	movi	r2,1
  818de8:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
  818dec:	0001883a 	nop
  818df0:	e037883a 	mov	sp,fp
  818df4:	dfc00117 	ldw	ra,4(sp)
  818df8:	df000017 	ldw	fp,0(sp)
  818dfc:	dec00204 	addi	sp,sp,8
  818e00:	f800283a 	ret

00818e04 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  818e04:	defffe04 	addi	sp,sp,-8
  818e08:	dfc00115 	stw	ra,4(sp)
  818e0c:	df000015 	stw	fp,0(sp)
  818e10:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( SYSTEM_TIMER, system_timer);
  818e14:	01c0fa04 	movi	r7,1000
  818e18:	01800104 	movi	r6,4
  818e1c:	000b883a 	mov	r5,zero
  818e20:	01004034 	movhi	r4,256
  818e24:	21042004 	addi	r4,r4,4224
  818e28:	081a8700 	call	81a870 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
  818e2c:	000d883a 	mov	r6,zero
  818e30:	000b883a 	mov	r5,zero
  818e34:	010020b4 	movhi	r4,130
  818e38:	2135e504 	addi	r4,r4,-10348
  818e3c:	081901c0 	call	81901c <altera_avalon_jtag_uart_init>
  818e40:	010020b4 	movhi	r4,130
  818e44:	2135db04 	addi	r4,r4,-10388
  818e48:	0818d980 	call	818d98 <alt_dev_reg>
    ALTERA_AVALON_LCD_16207_INIT ( LCD_DISPLAY, lcd_display);
  818e4c:	010020b4 	movhi	r4,130
  818e50:	2139fd04 	addi	r4,r4,-6156
  818e54:	081a6600 	call	81a660 <altera_avalon_lcd_16207_init>
  818e58:	010020b4 	movhi	r4,130
  818e5c:	2139f304 	addi	r4,r4,-6196
  818e60:	0818d980 	call	818d98 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
  818e64:	0001883a 	nop
    ALTERA_AVALON_UART_INIT ( UART, uart);
  818e68:	018000c4 	movi	r6,3
  818e6c:	000b883a 	mov	r5,zero
  818e70:	010020b4 	movhi	r4,130
  818e74:	213a4504 	addi	r4,r4,-5868
  818e78:	081a9f40 	call	81a9f4 <altera_avalon_uart_init>
  818e7c:	010020b4 	movhi	r4,130
  818e80:	213a3b04 	addi	r4,r4,-5908
  818e84:	0818d980 	call	818d98 <alt_dev_reg>
    ALTERA_UP_AVALON_AUDIO_AND_VIDEO_CONFIG_INIT ( AUDIO_I2C_CONFIG, audio_i2c_config);
  818e88:	010020b4 	movhi	r4,130
  818e8c:	213a6c04 	addi	r4,r4,-5712
  818e90:	0818d980 	call	818d98 <alt_dev_reg>
    ALTERA_UP_AVALON_AUDIO_INIT ( AUDIO, Audio);
  818e94:	010020b4 	movhi	r4,130
  818e98:	213a7804 	addi	r4,r4,-5664
  818e9c:	0818d980 	call	818d98 <alt_dev_reg>
}
  818ea0:	0001883a 	nop
  818ea4:	e037883a 	mov	sp,fp
  818ea8:	dfc00117 	ldw	ra,4(sp)
  818eac:	df000017 	ldw	fp,0(sp)
  818eb0:	dec00204 	addi	sp,sp,8
  818eb4:	f800283a 	ret

00818eb8 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  818eb8:	defffa04 	addi	sp,sp,-24
  818ebc:	dfc00515 	stw	ra,20(sp)
  818ec0:	df000415 	stw	fp,16(sp)
  818ec4:	df000404 	addi	fp,sp,16
  818ec8:	e13ffd15 	stw	r4,-12(fp)
  818ecc:	e17ffe15 	stw	r5,-8(fp)
  818ed0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  818ed4:	e0bffd17 	ldw	r2,-12(fp)
  818ed8:	10800017 	ldw	r2,0(r2)
  818edc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  818ee0:	e0bffc17 	ldw	r2,-16(fp)
  818ee4:	10c00a04 	addi	r3,r2,40
  818ee8:	e0bffd17 	ldw	r2,-12(fp)
  818eec:	10800217 	ldw	r2,8(r2)
  818ef0:	100f883a 	mov	r7,r2
  818ef4:	e1bfff17 	ldw	r6,-4(fp)
  818ef8:	e17ffe17 	ldw	r5,-8(fp)
  818efc:	1809883a 	mov	r4,r3
  818f00:	08194d80 	call	8194d8 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  818f04:	e037883a 	mov	sp,fp
  818f08:	dfc00117 	ldw	ra,4(sp)
  818f0c:	df000017 	ldw	fp,0(sp)
  818f10:	dec00204 	addi	sp,sp,8
  818f14:	f800283a 	ret

00818f18 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  818f18:	defffa04 	addi	sp,sp,-24
  818f1c:	dfc00515 	stw	ra,20(sp)
  818f20:	df000415 	stw	fp,16(sp)
  818f24:	df000404 	addi	fp,sp,16
  818f28:	e13ffd15 	stw	r4,-12(fp)
  818f2c:	e17ffe15 	stw	r5,-8(fp)
  818f30:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  818f34:	e0bffd17 	ldw	r2,-12(fp)
  818f38:	10800017 	ldw	r2,0(r2)
  818f3c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  818f40:	e0bffc17 	ldw	r2,-16(fp)
  818f44:	10c00a04 	addi	r3,r2,40
  818f48:	e0bffd17 	ldw	r2,-12(fp)
  818f4c:	10800217 	ldw	r2,8(r2)
  818f50:	100f883a 	mov	r7,r2
  818f54:	e1bfff17 	ldw	r6,-4(fp)
  818f58:	e17ffe17 	ldw	r5,-8(fp)
  818f5c:	1809883a 	mov	r4,r3
  818f60:	08196f40 	call	8196f4 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  818f64:	e037883a 	mov	sp,fp
  818f68:	dfc00117 	ldw	ra,4(sp)
  818f6c:	df000017 	ldw	fp,0(sp)
  818f70:	dec00204 	addi	sp,sp,8
  818f74:	f800283a 	ret

00818f78 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
  818f78:	defffc04 	addi	sp,sp,-16
  818f7c:	dfc00315 	stw	ra,12(sp)
  818f80:	df000215 	stw	fp,8(sp)
  818f84:	df000204 	addi	fp,sp,8
  818f88:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  818f8c:	e0bfff17 	ldw	r2,-4(fp)
  818f90:	10800017 	ldw	r2,0(r2)
  818f94:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
  818f98:	e0bffe17 	ldw	r2,-8(fp)
  818f9c:	10c00a04 	addi	r3,r2,40
  818fa0:	e0bfff17 	ldw	r2,-4(fp)
  818fa4:	10800217 	ldw	r2,8(r2)
  818fa8:	100b883a 	mov	r5,r2
  818fac:	1809883a 	mov	r4,r3
  818fb0:	08193800 	call	819380 <altera_avalon_jtag_uart_close>
}
  818fb4:	e037883a 	mov	sp,fp
  818fb8:	dfc00117 	ldw	ra,4(sp)
  818fbc:	df000017 	ldw	fp,0(sp)
  818fc0:	dec00204 	addi	sp,sp,8
  818fc4:	f800283a 	ret

00818fc8 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
  818fc8:	defffa04 	addi	sp,sp,-24
  818fcc:	dfc00515 	stw	ra,20(sp)
  818fd0:	df000415 	stw	fp,16(sp)
  818fd4:	df000404 	addi	fp,sp,16
  818fd8:	e13ffd15 	stw	r4,-12(fp)
  818fdc:	e17ffe15 	stw	r5,-8(fp)
  818fe0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
  818fe4:	e0bffd17 	ldw	r2,-12(fp)
  818fe8:	10800017 	ldw	r2,0(r2)
  818fec:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
  818ff0:	e0bffc17 	ldw	r2,-16(fp)
  818ff4:	10800a04 	addi	r2,r2,40
  818ff8:	e1bfff17 	ldw	r6,-4(fp)
  818ffc:	e17ffe17 	ldw	r5,-8(fp)
  819000:	1009883a 	mov	r4,r2
  819004:	08193e80 	call	8193e8 <altera_avalon_jtag_uart_ioctl>
}
  819008:	e037883a 	mov	sp,fp
  81900c:	dfc00117 	ldw	ra,4(sp)
  819010:	df000017 	ldw	fp,0(sp)
  819014:	dec00204 	addi	sp,sp,8
  819018:	f800283a 	ret

0081901c <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
  81901c:	defffb04 	addi	sp,sp,-20
  819020:	dfc00415 	stw	ra,16(sp)
  819024:	df000315 	stw	fp,12(sp)
  819028:	df000304 	addi	fp,sp,12
  81902c:	e13ffd15 	stw	r4,-12(fp)
  819030:	e17ffe15 	stw	r5,-8(fp)
  819034:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  819038:	e0bffd17 	ldw	r2,-12(fp)
  81903c:	00c00044 	movi	r3,1
  819040:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
  819044:	e0bffd17 	ldw	r2,-12(fp)
  819048:	10800017 	ldw	r2,0(r2)
  81904c:	10800104 	addi	r2,r2,4
  819050:	1007883a 	mov	r3,r2
  819054:	e0bffd17 	ldw	r2,-12(fp)
  819058:	10800817 	ldw	r2,32(r2)
  81905c:	18800035 	stwio	r2,0(r3)
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
                      sp, NULL);
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
  819060:	e0bfff17 	ldw	r2,-4(fp)
  819064:	018020b4 	movhi	r6,130
  819068:	31a43404 	addi	r6,r6,-28464
  81906c:	e17ffd17 	ldw	r5,-12(fp)
  819070:	1009883a 	mov	r4,r2
  819074:	08182740 	call	818274 <alt_irq_register>
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
  819078:	e0bffd17 	ldw	r2,-12(fp)
  81907c:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
  819080:	e0bffd17 	ldw	r2,-12(fp)
  819084:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  819088:	d0e77717 	ldw	r3,-25124(gp)
  81908c:	e1fffd17 	ldw	r7,-12(fp)
  819090:	018020b4 	movhi	r6,130
  819094:	31a4b804 	addi	r6,r6,-27936
  819098:	180b883a 	mov	r5,r3
  81909c:	1009883a 	mov	r4,r2
  8190a0:	081b1b80 	call	81b1b8 <alt_alarm_start>
  8190a4:	1000040e 	bge	r2,zero,8190b8 <altera_avalon_jtag_uart_init+0x9c>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
  8190a8:	e0fffd17 	ldw	r3,-12(fp)
  8190ac:	00a00034 	movhi	r2,32768
  8190b0:	10bfffc4 	addi	r2,r2,-1
  8190b4:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
  8190b8:	0001883a 	nop
  8190bc:	e037883a 	mov	sp,fp
  8190c0:	dfc00117 	ldw	ra,4(sp)
  8190c4:	df000017 	ldw	fp,0(sp)
  8190c8:	dec00204 	addi	sp,sp,8
  8190cc:	f800283a 	ret

008190d0 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  8190d0:	defff704 	addi	sp,sp,-36
  8190d4:	df000815 	stw	fp,32(sp)
  8190d8:	df000804 	addi	fp,sp,32
  8190dc:	e13ffe15 	stw	r4,-8(fp)
  8190e0:	e17fff15 	stw	r5,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  8190e4:	e0bffe17 	ldw	r2,-8(fp)
  8190e8:	e0bffa15 	stw	r2,-24(fp)
  unsigned int base = sp->base;
  8190ec:	e0bffa17 	ldw	r2,-24(fp)
  8190f0:	10800017 	ldw	r2,0(r2)
  8190f4:	e0bffb15 	stw	r2,-20(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  8190f8:	e0bffb17 	ldw	r2,-20(fp)
  8190fc:	10800104 	addi	r2,r2,4
  819100:	10800037 	ldwio	r2,0(r2)
  819104:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
  819108:	e0bffc17 	ldw	r2,-16(fp)
  81910c:	1080c00c 	andi	r2,r2,768
  819110:	10006d26 	beq	r2,zero,8192c8 <altera_avalon_jtag_uart_irq+0x1f8>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
  819114:	e0bffc17 	ldw	r2,-16(fp)
  819118:	1080400c 	andi	r2,r2,256
  81911c:	10003526 	beq	r2,zero,8191f4 <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
  819120:	00800074 	movhi	r2,1
  819124:	e0bff815 	stw	r2,-32(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  819128:	e0bffa17 	ldw	r2,-24(fp)
  81912c:	10800a17 	ldw	r2,40(r2)
  819130:	10800044 	addi	r2,r2,1
  819134:	1081ffcc 	andi	r2,r2,2047
  819138:	e0bffd15 	stw	r2,-12(fp)
        if (next == sp->rx_out)
  81913c:	e0bffa17 	ldw	r2,-24(fp)
  819140:	10c00b17 	ldw	r3,44(r2)
  819144:	e0bffd17 	ldw	r2,-12(fp)
  819148:	18801526 	beq	r3,r2,8191a0 <altera_avalon_jtag_uart_irq+0xd0>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  81914c:	e0bffb17 	ldw	r2,-20(fp)
  819150:	10800037 	ldwio	r2,0(r2)
  819154:	e0bff815 	stw	r2,-32(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
  819158:	e0bff817 	ldw	r2,-32(fp)
  81915c:	10a0000c 	andi	r2,r2,32768
  819160:	10001126 	beq	r2,zero,8191a8 <altera_avalon_jtag_uart_irq+0xd8>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  819164:	e0bffa17 	ldw	r2,-24(fp)
  819168:	10800a17 	ldw	r2,40(r2)
  81916c:	e0fff817 	ldw	r3,-32(fp)
  819170:	1809883a 	mov	r4,r3
  819174:	e0fffa17 	ldw	r3,-24(fp)
  819178:	1885883a 	add	r2,r3,r2
  81917c:	10800e04 	addi	r2,r2,56
  819180:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  819184:	e0bffa17 	ldw	r2,-24(fp)
  819188:	10800a17 	ldw	r2,40(r2)
  81918c:	10800044 	addi	r2,r2,1
  819190:	10c1ffcc 	andi	r3,r2,2047
  819194:	e0bffa17 	ldw	r2,-24(fp)
  819198:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
  81919c:	003fe206 	br	819128 <__alt_data_end+0xff819128>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
  8191a0:	0001883a 	nop
  8191a4:	00000106 	br	8191ac <altera_avalon_jtag_uart_irq+0xdc>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
  8191a8:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
  8191ac:	e0bff817 	ldw	r2,-32(fp)
  8191b0:	10bfffec 	andhi	r2,r2,65535
  8191b4:	10000f26 	beq	r2,zero,8191f4 <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  8191b8:	e0bffa17 	ldw	r2,-24(fp)
  8191bc:	10c00817 	ldw	r3,32(r2)
  8191c0:	00bfff84 	movi	r2,-2
  8191c4:	1886703a 	and	r3,r3,r2
  8191c8:	e0bffa17 	ldw	r2,-24(fp)
  8191cc:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
  8191d0:	e0bffb17 	ldw	r2,-20(fp)
  8191d4:	10800104 	addi	r2,r2,4
  8191d8:	1007883a 	mov	r3,r2
  8191dc:	e0bffa17 	ldw	r2,-24(fp)
  8191e0:	10800817 	ldw	r2,32(r2)
  8191e4:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  8191e8:	e0bffb17 	ldw	r2,-20(fp)
  8191ec:	10800104 	addi	r2,r2,4
  8191f0:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
  8191f4:	e0bffc17 	ldw	r2,-16(fp)
  8191f8:	1080800c 	andi	r2,r2,512
  8191fc:	103fbe26 	beq	r2,zero,8190f8 <__alt_data_end+0xff8190f8>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
  819200:	e0bffc17 	ldw	r2,-16(fp)
  819204:	1004d43a 	srli	r2,r2,16
  819208:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
  81920c:	00001406 	br	819260 <altera_avalon_jtag_uart_irq+0x190>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
  819210:	e0bffb17 	ldw	r2,-20(fp)
  819214:	e0fffa17 	ldw	r3,-24(fp)
  819218:	18c00d17 	ldw	r3,52(r3)
  81921c:	e13ffa17 	ldw	r4,-24(fp)
  819220:	20c7883a 	add	r3,r4,r3
  819224:	18c20e04 	addi	r3,r3,2104
  819228:	18c00003 	ldbu	r3,0(r3)
  81922c:	18c03fcc 	andi	r3,r3,255
  819230:	18c0201c 	xori	r3,r3,128
  819234:	18ffe004 	addi	r3,r3,-128
  819238:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  81923c:	e0bffa17 	ldw	r2,-24(fp)
  819240:	10800d17 	ldw	r2,52(r2)
  819244:	10800044 	addi	r2,r2,1
  819248:	10c1ffcc 	andi	r3,r2,2047
  81924c:	e0bffa17 	ldw	r2,-24(fp)
  819250:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
  819254:	e0bff917 	ldw	r2,-28(fp)
  819258:	10bfffc4 	addi	r2,r2,-1
  81925c:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
  819260:	e0bff917 	ldw	r2,-28(fp)
  819264:	10000526 	beq	r2,zero,81927c <altera_avalon_jtag_uart_irq+0x1ac>
  819268:	e0bffa17 	ldw	r2,-24(fp)
  81926c:	10c00d17 	ldw	r3,52(r2)
  819270:	e0bffa17 	ldw	r2,-24(fp)
  819274:	10800c17 	ldw	r2,48(r2)
  819278:	18bfe51e 	bne	r3,r2,819210 <__alt_data_end+0xff819210>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
  81927c:	e0bff917 	ldw	r2,-28(fp)
  819280:	103f9d26 	beq	r2,zero,8190f8 <__alt_data_end+0xff8190f8>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  819284:	e0bffa17 	ldw	r2,-24(fp)
  819288:	10c00817 	ldw	r3,32(r2)
  81928c:	00bfff44 	movi	r2,-3
  819290:	1886703a 	and	r3,r3,r2
  819294:	e0bffa17 	ldw	r2,-24(fp)
  819298:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  81929c:	e0bffa17 	ldw	r2,-24(fp)
  8192a0:	10800017 	ldw	r2,0(r2)
  8192a4:	10800104 	addi	r2,r2,4
  8192a8:	1007883a 	mov	r3,r2
  8192ac:	e0bffa17 	ldw	r2,-24(fp)
  8192b0:	10800817 	ldw	r2,32(r2)
  8192b4:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  8192b8:	e0bffb17 	ldw	r2,-20(fp)
  8192bc:	10800104 	addi	r2,r2,4
  8192c0:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
  8192c4:	003f8c06 	br	8190f8 <__alt_data_end+0xff8190f8>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
  8192c8:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
  8192cc:	0001883a 	nop
  8192d0:	e037883a 	mov	sp,fp
  8192d4:	df000017 	ldw	fp,0(sp)
  8192d8:	dec00104 	addi	sp,sp,4
  8192dc:	f800283a 	ret

008192e0 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  8192e0:	defff804 	addi	sp,sp,-32
  8192e4:	df000715 	stw	fp,28(sp)
  8192e8:	df000704 	addi	fp,sp,28
  8192ec:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
  8192f0:	e0bffb17 	ldw	r2,-20(fp)
  8192f4:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
  8192f8:	e0bff917 	ldw	r2,-28(fp)
  8192fc:	10800017 	ldw	r2,0(r2)
  819300:	10800104 	addi	r2,r2,4
  819304:	10800037 	ldwio	r2,0(r2)
  819308:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
  81930c:	e0bffa17 	ldw	r2,-24(fp)
  819310:	1081000c 	andi	r2,r2,1024
  819314:	10000b26 	beq	r2,zero,819344 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
  819318:	e0bff917 	ldw	r2,-28(fp)
  81931c:	10800017 	ldw	r2,0(r2)
  819320:	10800104 	addi	r2,r2,4
  819324:	1007883a 	mov	r3,r2
  819328:	e0bff917 	ldw	r2,-28(fp)
  81932c:	10800817 	ldw	r2,32(r2)
  819330:	10810014 	ori	r2,r2,1024
  819334:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
  819338:	e0bff917 	ldw	r2,-28(fp)
  81933c:	10000915 	stw	zero,36(r2)
  819340:	00000a06 	br	81936c <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
  819344:	e0bff917 	ldw	r2,-28(fp)
  819348:	10c00917 	ldw	r3,36(r2)
  81934c:	00a00034 	movhi	r2,32768
  819350:	10bfff04 	addi	r2,r2,-4
  819354:	10c00536 	bltu	r2,r3,81936c <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
  819358:	e0bff917 	ldw	r2,-28(fp)
  81935c:	10800917 	ldw	r2,36(r2)
  819360:	10c00044 	addi	r3,r2,1
  819364:	e0bff917 	ldw	r2,-28(fp)
  819368:	10c00915 	stw	r3,36(r2)
  81936c:	d0a77717 	ldw	r2,-25124(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
  819370:	e037883a 	mov	sp,fp
  819374:	df000017 	ldw	fp,0(sp)
  819378:	dec00104 	addi	sp,sp,4
  81937c:	f800283a 	ret

00819380 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
  819380:	defffd04 	addi	sp,sp,-12
  819384:	df000215 	stw	fp,8(sp)
  819388:	df000204 	addi	fp,sp,8
  81938c:	e13ffe15 	stw	r4,-8(fp)
  819390:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  819394:	00000506 	br	8193ac <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  819398:	e0bfff17 	ldw	r2,-4(fp)
  81939c:	1090000c 	andi	r2,r2,16384
  8193a0:	10000226 	beq	r2,zero,8193ac <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
  8193a4:	00bffd44 	movi	r2,-11
  8193a8:	00000b06 	br	8193d8 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  8193ac:	e0bffe17 	ldw	r2,-8(fp)
  8193b0:	10c00d17 	ldw	r3,52(r2)
  8193b4:	e0bffe17 	ldw	r2,-8(fp)
  8193b8:	10800c17 	ldw	r2,48(r2)
  8193bc:	18800526 	beq	r3,r2,8193d4 <altera_avalon_jtag_uart_close+0x54>
  8193c0:	e0bffe17 	ldw	r2,-8(fp)
  8193c4:	10c00917 	ldw	r3,36(r2)
  8193c8:	e0bffe17 	ldw	r2,-8(fp)
  8193cc:	10800117 	ldw	r2,4(r2)
  8193d0:	18bff136 	bltu	r3,r2,819398 <__alt_data_end+0xff819398>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
  8193d4:	0005883a 	mov	r2,zero
}
  8193d8:	e037883a 	mov	sp,fp
  8193dc:	df000017 	ldw	fp,0(sp)
  8193e0:	dec00104 	addi	sp,sp,4
  8193e4:	f800283a 	ret

008193e8 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  8193e8:	defffa04 	addi	sp,sp,-24
  8193ec:	df000515 	stw	fp,20(sp)
  8193f0:	df000504 	addi	fp,sp,20
  8193f4:	e13ffd15 	stw	r4,-12(fp)
  8193f8:	e17ffe15 	stw	r5,-8(fp)
  8193fc:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
  819400:	00bff9c4 	movi	r2,-25
  819404:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
  819408:	e0bffe17 	ldw	r2,-8(fp)
  81940c:	10da8060 	cmpeqi	r3,r2,27137
  819410:	1800031e 	bne	r3,zero,819420 <altera_avalon_jtag_uart_ioctl+0x38>
  819414:	109a80a0 	cmpeqi	r2,r2,27138
  819418:	1000181e 	bne	r2,zero,81947c <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
  81941c:	00002906 	br	8194c4 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
  819420:	e0bffd17 	ldw	r2,-12(fp)
  819424:	10c00117 	ldw	r3,4(r2)
  819428:	00a00034 	movhi	r2,32768
  81942c:	10bfffc4 	addi	r2,r2,-1
  819430:	18802126 	beq	r3,r2,8194b8 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
  819434:	e0bfff17 	ldw	r2,-4(fp)
  819438:	10800017 	ldw	r2,0(r2)
  81943c:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
  819440:	e0bffc17 	ldw	r2,-16(fp)
  819444:	10800090 	cmplti	r2,r2,2
  819448:	1000061e 	bne	r2,zero,819464 <altera_avalon_jtag_uart_ioctl+0x7c>
  81944c:	e0fffc17 	ldw	r3,-16(fp)
  819450:	00a00034 	movhi	r2,32768
  819454:	10bfffc4 	addi	r2,r2,-1
  819458:	18800226 	beq	r3,r2,819464 <altera_avalon_jtag_uart_ioctl+0x7c>
  81945c:	e0bffc17 	ldw	r2,-16(fp)
  819460:	00000206 	br	81946c <altera_avalon_jtag_uart_ioctl+0x84>
  819464:	00a00034 	movhi	r2,32768
  819468:	10bfff84 	addi	r2,r2,-2
  81946c:	e0fffd17 	ldw	r3,-12(fp)
  819470:	18800115 	stw	r2,4(r3)
      rc = 0;
  819474:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  819478:	00000f06 	br	8194b8 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
  81947c:	e0bffd17 	ldw	r2,-12(fp)
  819480:	10c00117 	ldw	r3,4(r2)
  819484:	00a00034 	movhi	r2,32768
  819488:	10bfffc4 	addi	r2,r2,-1
  81948c:	18800c26 	beq	r3,r2,8194c0 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
  819490:	e0bffd17 	ldw	r2,-12(fp)
  819494:	10c00917 	ldw	r3,36(r2)
  819498:	e0bffd17 	ldw	r2,-12(fp)
  81949c:	10800117 	ldw	r2,4(r2)
  8194a0:	1885803a 	cmpltu	r2,r3,r2
  8194a4:	10c03fcc 	andi	r3,r2,255
  8194a8:	e0bfff17 	ldw	r2,-4(fp)
  8194ac:	10c00015 	stw	r3,0(r2)
      rc = 0;
  8194b0:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  8194b4:	00000206 	br	8194c0 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
  8194b8:	0001883a 	nop
  8194bc:	00000106 	br	8194c4 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
  8194c0:	0001883a 	nop

  default:
    break;
  }

  return rc;
  8194c4:	e0bffb17 	ldw	r2,-20(fp)
}
  8194c8:	e037883a 	mov	sp,fp
  8194cc:	df000017 	ldw	fp,0(sp)
  8194d0:	dec00104 	addi	sp,sp,4
  8194d4:	f800283a 	ret

008194d8 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
  8194d8:	defff304 	addi	sp,sp,-52
  8194dc:	dfc00c15 	stw	ra,48(sp)
  8194e0:	df000b15 	stw	fp,44(sp)
  8194e4:	df000b04 	addi	fp,sp,44
  8194e8:	e13ffc15 	stw	r4,-16(fp)
  8194ec:	e17ffd15 	stw	r5,-12(fp)
  8194f0:	e1bffe15 	stw	r6,-8(fp)
  8194f4:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
  8194f8:	e0bffd17 	ldw	r2,-12(fp)
  8194fc:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  819500:	00004706 	br	819620 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
  819504:	e0bffc17 	ldw	r2,-16(fp)
  819508:	10800a17 	ldw	r2,40(r2)
  81950c:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
  819510:	e0bffc17 	ldw	r2,-16(fp)
  819514:	10800b17 	ldw	r2,44(r2)
  819518:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
  81951c:	e0fff717 	ldw	r3,-36(fp)
  819520:	e0bff817 	ldw	r2,-32(fp)
  819524:	18800536 	bltu	r3,r2,81953c <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
  819528:	e0fff717 	ldw	r3,-36(fp)
  81952c:	e0bff817 	ldw	r2,-32(fp)
  819530:	1885c83a 	sub	r2,r3,r2
  819534:	e0bff615 	stw	r2,-40(fp)
  819538:	00000406 	br	81954c <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
  81953c:	00c20004 	movi	r3,2048
  819540:	e0bff817 	ldw	r2,-32(fp)
  819544:	1885c83a 	sub	r2,r3,r2
  819548:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  81954c:	e0bff617 	ldw	r2,-40(fp)
  819550:	10001e26 	beq	r2,zero,8195cc <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
  819554:	e0fffe17 	ldw	r3,-8(fp)
  819558:	e0bff617 	ldw	r2,-40(fp)
  81955c:	1880022e 	bgeu	r3,r2,819568 <altera_avalon_jtag_uart_read+0x90>
        n = space;
  819560:	e0bffe17 	ldw	r2,-8(fp)
  819564:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
  819568:	e0bffc17 	ldw	r2,-16(fp)
  81956c:	10c00e04 	addi	r3,r2,56
  819570:	e0bff817 	ldw	r2,-32(fp)
  819574:	1885883a 	add	r2,r3,r2
  819578:	e1bff617 	ldw	r6,-40(fp)
  81957c:	100b883a 	mov	r5,r2
  819580:	e13ff517 	ldw	r4,-44(fp)
  819584:	080958c0 	call	80958c <memcpy>
      ptr   += n;
  819588:	e0fff517 	ldw	r3,-44(fp)
  81958c:	e0bff617 	ldw	r2,-40(fp)
  819590:	1885883a 	add	r2,r3,r2
  819594:	e0bff515 	stw	r2,-44(fp)
      space -= n;
  819598:	e0fffe17 	ldw	r3,-8(fp)
  81959c:	e0bff617 	ldw	r2,-40(fp)
  8195a0:	1885c83a 	sub	r2,r3,r2
  8195a4:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  8195a8:	e0fff817 	ldw	r3,-32(fp)
  8195ac:	e0bff617 	ldw	r2,-40(fp)
  8195b0:	1885883a 	add	r2,r3,r2
  8195b4:	10c1ffcc 	andi	r3,r2,2047
  8195b8:	e0bffc17 	ldw	r2,-16(fp)
  8195bc:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
  8195c0:	e0bffe17 	ldw	r2,-8(fp)
  8195c4:	00bfcf16 	blt	zero,r2,819504 <__alt_data_end+0xff819504>
  8195c8:	00000106 	br	8195d0 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
  8195cc:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
  8195d0:	e0fff517 	ldw	r3,-44(fp)
  8195d4:	e0bffd17 	ldw	r2,-12(fp)
  8195d8:	1880141e 	bne	r3,r2,81962c <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
  8195dc:	e0bfff17 	ldw	r2,-4(fp)
  8195e0:	1090000c 	andi	r2,r2,16384
  8195e4:	1000131e 	bne	r2,zero,819634 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
  8195e8:	0001883a 	nop
  8195ec:	e0bffc17 	ldw	r2,-16(fp)
  8195f0:	10c00a17 	ldw	r3,40(r2)
  8195f4:	e0bff717 	ldw	r2,-36(fp)
  8195f8:	1880051e 	bne	r3,r2,819610 <altera_avalon_jtag_uart_read+0x138>
  8195fc:	e0bffc17 	ldw	r2,-16(fp)
  819600:	10c00917 	ldw	r3,36(r2)
  819604:	e0bffc17 	ldw	r2,-16(fp)
  819608:	10800117 	ldw	r2,4(r2)
  81960c:	18bff736 	bltu	r3,r2,8195ec <__alt_data_end+0xff8195ec>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
  819610:	e0bffc17 	ldw	r2,-16(fp)
  819614:	10c00a17 	ldw	r3,40(r2)
  819618:	e0bff717 	ldw	r2,-36(fp)
  81961c:	18800726 	beq	r3,r2,81963c <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  819620:	e0bffe17 	ldw	r2,-8(fp)
  819624:	00bfb716 	blt	zero,r2,819504 <__alt_data_end+0xff819504>
  819628:	00000506 	br	819640 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
  81962c:	0001883a 	nop
  819630:	00000306 	br	819640 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
  819634:	0001883a 	nop
  819638:	00000106 	br	819640 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
  81963c:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
  819640:	e0fff517 	ldw	r3,-44(fp)
  819644:	e0bffd17 	ldw	r2,-12(fp)
  819648:	18801826 	beq	r3,r2,8196ac <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81964c:	0005303a 	rdctl	r2,status
  819650:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  819654:	e0fffb17 	ldw	r3,-20(fp)
  819658:	00bfff84 	movi	r2,-2
  81965c:	1884703a 	and	r2,r3,r2
  819660:	1001703a 	wrctl	status,r2
  
  return context;
  819664:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
  819668:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  81966c:	e0bffc17 	ldw	r2,-16(fp)
  819670:	10800817 	ldw	r2,32(r2)
  819674:	10c00054 	ori	r3,r2,1
  819678:	e0bffc17 	ldw	r2,-16(fp)
  81967c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  819680:	e0bffc17 	ldw	r2,-16(fp)
  819684:	10800017 	ldw	r2,0(r2)
  819688:	10800104 	addi	r2,r2,4
  81968c:	1007883a 	mov	r3,r2
  819690:	e0bffc17 	ldw	r2,-16(fp)
  819694:	10800817 	ldw	r2,32(r2)
  819698:	18800035 	stwio	r2,0(r3)
  81969c:	e0bffa17 	ldw	r2,-24(fp)
  8196a0:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  8196a4:	e0bff917 	ldw	r2,-28(fp)
  8196a8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
  8196ac:	e0fff517 	ldw	r3,-44(fp)
  8196b0:	e0bffd17 	ldw	r2,-12(fp)
  8196b4:	18800426 	beq	r3,r2,8196c8 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
  8196b8:	e0fff517 	ldw	r3,-44(fp)
  8196bc:	e0bffd17 	ldw	r2,-12(fp)
  8196c0:	1885c83a 	sub	r2,r3,r2
  8196c4:	00000606 	br	8196e0 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
  8196c8:	e0bfff17 	ldw	r2,-4(fp)
  8196cc:	1090000c 	andi	r2,r2,16384
  8196d0:	10000226 	beq	r2,zero,8196dc <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
  8196d4:	00bffd44 	movi	r2,-11
  8196d8:	00000106 	br	8196e0 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
  8196dc:	00bffec4 	movi	r2,-5
}
  8196e0:	e037883a 	mov	sp,fp
  8196e4:	dfc00117 	ldw	ra,4(sp)
  8196e8:	df000017 	ldw	fp,0(sp)
  8196ec:	dec00204 	addi	sp,sp,8
  8196f0:	f800283a 	ret

008196f4 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  8196f4:	defff304 	addi	sp,sp,-52
  8196f8:	dfc00c15 	stw	ra,48(sp)
  8196fc:	df000b15 	stw	fp,44(sp)
  819700:	df000b04 	addi	fp,sp,44
  819704:	e13ffc15 	stw	r4,-16(fp)
  819708:	e17ffd15 	stw	r5,-12(fp)
  81970c:	e1bffe15 	stw	r6,-8(fp)
  819710:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
  819714:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
  819718:	e0bffd17 	ldw	r2,-12(fp)
  81971c:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  819720:	00003706 	br	819800 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
  819724:	e0bffc17 	ldw	r2,-16(fp)
  819728:	10800c17 	ldw	r2,48(r2)
  81972c:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
  819730:	e0bffc17 	ldw	r2,-16(fp)
  819734:	10800d17 	ldw	r2,52(r2)
  819738:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
  81973c:	e0fff917 	ldw	r3,-28(fp)
  819740:	e0bff517 	ldw	r2,-44(fp)
  819744:	1880062e 	bgeu	r3,r2,819760 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
  819748:	e0fff517 	ldw	r3,-44(fp)
  81974c:	e0bff917 	ldw	r2,-28(fp)
  819750:	1885c83a 	sub	r2,r3,r2
  819754:	10bfffc4 	addi	r2,r2,-1
  819758:	e0bff615 	stw	r2,-40(fp)
  81975c:	00000b06 	br	81978c <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
  819760:	e0bff517 	ldw	r2,-44(fp)
  819764:	10000526 	beq	r2,zero,81977c <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
  819768:	00c20004 	movi	r3,2048
  81976c:	e0bff917 	ldw	r2,-28(fp)
  819770:	1885c83a 	sub	r2,r3,r2
  819774:	e0bff615 	stw	r2,-40(fp)
  819778:	00000406 	br	81978c <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
  81977c:	00c1ffc4 	movi	r3,2047
  819780:	e0bff917 	ldw	r2,-28(fp)
  819784:	1885c83a 	sub	r2,r3,r2
  819788:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  81978c:	e0bff617 	ldw	r2,-40(fp)
  819790:	10001e26 	beq	r2,zero,81980c <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
  819794:	e0fffe17 	ldw	r3,-8(fp)
  819798:	e0bff617 	ldw	r2,-40(fp)
  81979c:	1880022e 	bgeu	r3,r2,8197a8 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
  8197a0:	e0bffe17 	ldw	r2,-8(fp)
  8197a4:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
  8197a8:	e0bffc17 	ldw	r2,-16(fp)
  8197ac:	10c20e04 	addi	r3,r2,2104
  8197b0:	e0bff917 	ldw	r2,-28(fp)
  8197b4:	1885883a 	add	r2,r3,r2
  8197b8:	e1bff617 	ldw	r6,-40(fp)
  8197bc:	e17ffd17 	ldw	r5,-12(fp)
  8197c0:	1009883a 	mov	r4,r2
  8197c4:	080958c0 	call	80958c <memcpy>
      ptr   += n;
  8197c8:	e0fffd17 	ldw	r3,-12(fp)
  8197cc:	e0bff617 	ldw	r2,-40(fp)
  8197d0:	1885883a 	add	r2,r3,r2
  8197d4:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
  8197d8:	e0fffe17 	ldw	r3,-8(fp)
  8197dc:	e0bff617 	ldw	r2,-40(fp)
  8197e0:	1885c83a 	sub	r2,r3,r2
  8197e4:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  8197e8:	e0fff917 	ldw	r3,-28(fp)
  8197ec:	e0bff617 	ldw	r2,-40(fp)
  8197f0:	1885883a 	add	r2,r3,r2
  8197f4:	10c1ffcc 	andi	r3,r2,2047
  8197f8:	e0bffc17 	ldw	r2,-16(fp)
  8197fc:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  819800:	e0bffe17 	ldw	r2,-8(fp)
  819804:	00bfc716 	blt	zero,r2,819724 <__alt_data_end+0xff819724>
  819808:	00000106 	br	819810 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
  81980c:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  819810:	0005303a 	rdctl	r2,status
  819814:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  819818:	e0fffb17 	ldw	r3,-20(fp)
  81981c:	00bfff84 	movi	r2,-2
  819820:	1884703a 	and	r2,r3,r2
  819824:	1001703a 	wrctl	status,r2
  
  return context;
  819828:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
  81982c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  819830:	e0bffc17 	ldw	r2,-16(fp)
  819834:	10800817 	ldw	r2,32(r2)
  819838:	10c00094 	ori	r3,r2,2
  81983c:	e0bffc17 	ldw	r2,-16(fp)
  819840:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  819844:	e0bffc17 	ldw	r2,-16(fp)
  819848:	10800017 	ldw	r2,0(r2)
  81984c:	10800104 	addi	r2,r2,4
  819850:	1007883a 	mov	r3,r2
  819854:	e0bffc17 	ldw	r2,-16(fp)
  819858:	10800817 	ldw	r2,32(r2)
  81985c:	18800035 	stwio	r2,0(r3)
  819860:	e0bffa17 	ldw	r2,-24(fp)
  819864:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  819868:	e0bff817 	ldw	r2,-32(fp)
  81986c:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
  819870:	e0bffe17 	ldw	r2,-8(fp)
  819874:	0080100e 	bge	zero,r2,8198b8 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
  819878:	e0bfff17 	ldw	r2,-4(fp)
  81987c:	1090000c 	andi	r2,r2,16384
  819880:	1000101e 	bne	r2,zero,8198c4 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
  819884:	0001883a 	nop
  819888:	e0bffc17 	ldw	r2,-16(fp)
  81988c:	10c00d17 	ldw	r3,52(r2)
  819890:	e0bff517 	ldw	r2,-44(fp)
  819894:	1880051e 	bne	r3,r2,8198ac <altera_avalon_jtag_uart_write+0x1b8>
  819898:	e0bffc17 	ldw	r2,-16(fp)
  81989c:	10c00917 	ldw	r3,36(r2)
  8198a0:	e0bffc17 	ldw	r2,-16(fp)
  8198a4:	10800117 	ldw	r2,4(r2)
  8198a8:	18bff736 	bltu	r3,r2,819888 <__alt_data_end+0xff819888>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
  8198ac:	e0bffc17 	ldw	r2,-16(fp)
  8198b0:	10800917 	ldw	r2,36(r2)
  8198b4:	1000051e 	bne	r2,zero,8198cc <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
  8198b8:	e0bffe17 	ldw	r2,-8(fp)
  8198bc:	00bfd016 	blt	zero,r2,819800 <__alt_data_end+0xff819800>
  8198c0:	00000306 	br	8198d0 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
  8198c4:	0001883a 	nop
  8198c8:	00000106 	br	8198d0 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
  8198cc:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
  8198d0:	e0fffd17 	ldw	r3,-12(fp)
  8198d4:	e0bff717 	ldw	r2,-36(fp)
  8198d8:	18800426 	beq	r3,r2,8198ec <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
  8198dc:	e0fffd17 	ldw	r3,-12(fp)
  8198e0:	e0bff717 	ldw	r2,-36(fp)
  8198e4:	1885c83a 	sub	r2,r3,r2
  8198e8:	00000606 	br	819904 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
  8198ec:	e0bfff17 	ldw	r2,-4(fp)
  8198f0:	1090000c 	andi	r2,r2,16384
  8198f4:	10000226 	beq	r2,zero,819900 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
  8198f8:	00bffd44 	movi	r2,-11
  8198fc:	00000106 	br	819904 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
  819900:	00bffec4 	movi	r2,-5
}
  819904:	e037883a 	mov	sp,fp
  819908:	dfc00117 	ldw	ra,4(sp)
  81990c:	df000017 	ldw	fp,0(sp)
  819910:	dec00204 	addi	sp,sp,8
  819914:	f800283a 	ret

00819918 <lcd_write_command>:

/* --------------------------------------------------------------------- */

static void lcd_write_command(altera_avalon_lcd_16207_state* sp, 
  unsigned char command)
{
  819918:	defffa04 	addi	sp,sp,-24
  81991c:	dfc00515 	stw	ra,20(sp)
  819920:	df000415 	stw	fp,16(sp)
  819924:	df000404 	addi	fp,sp,16
  819928:	e13ffe15 	stw	r4,-8(fp)
  81992c:	2805883a 	mov	r2,r5
  819930:	e0bfff05 	stb	r2,-4(fp)
  unsigned int base = sp->base;
  819934:	e0bffe17 	ldw	r2,-8(fp)
  819938:	10800017 	ldw	r2,0(r2)
  81993c:	e0bffd15 	stw	r2,-12(fp)
  /* We impose a timeout on the driver in case the LCD panel isn't connected.
   * The first time we call this function the timeout is approx 25ms 
   * (assuming 5 cycles per loop and a 200MHz clock).  Obviously systems
   * with slower clocks, or debug builds, or slower memory will take longer.
   */
  int i = 1000000;
  819940:	008003f4 	movhi	r2,15
  819944:	10909004 	addi	r2,r2,16960
  819948:	e0bffc15 	stw	r2,-16(fp)

  /* Don't bother if the LCD panel didn't work before */
  if (sp->broken)
  81994c:	e0bffe17 	ldw	r2,-8(fp)
  819950:	10800803 	ldbu	r2,32(r2)
  819954:	10803fcc 	andi	r2,r2,255
  819958:	1080201c 	xori	r2,r2,128
  81995c:	10bfe004 	addi	r2,r2,-128
  819960:	1000151e 	bne	r2,zero,8199b8 <lcd_write_command+0xa0>
    return;

  /* Wait until LCD isn't busy. */
  while (IORD_ALTERA_AVALON_LCD_16207_STATUS(base) & ALTERA_AVALON_LCD_16207_STATUS_BUSY_MSK)
  819964:	00000906 	br	81998c <lcd_write_command+0x74>
    if (--i == 0)
  819968:	e0bffc17 	ldw	r2,-16(fp)
  81996c:	10bfffc4 	addi	r2,r2,-1
  819970:	e0bffc15 	stw	r2,-16(fp)
  819974:	e0bffc17 	ldw	r2,-16(fp)
  819978:	1000041e 	bne	r2,zero,81998c <lcd_write_command+0x74>
    {
      sp->broken = 1;
  81997c:	e0bffe17 	ldw	r2,-8(fp)
  819980:	00c00044 	movi	r3,1
  819984:	10c00805 	stb	r3,32(r2)
      return;
  819988:	00000c06 	br	8199bc <lcd_write_command+0xa4>
  /* Don't bother if the LCD panel didn't work before */
  if (sp->broken)
    return;

  /* Wait until LCD isn't busy. */
  while (IORD_ALTERA_AVALON_LCD_16207_STATUS(base) & ALTERA_AVALON_LCD_16207_STATUS_BUSY_MSK)
  81998c:	e0bffd17 	ldw	r2,-12(fp)
  819990:	10800104 	addi	r2,r2,4
  819994:	10800037 	ldwio	r2,0(r2)
  819998:	1080200c 	andi	r2,r2,128
  81999c:	103ff21e 	bne	r2,zero,819968 <__alt_data_end+0xff819968>
    }

  /* Despite what it says in the datasheet, the LCD isn't ready to accept
   * a write immediately after it returns BUSY=0.  Wait for 100us more.
   */
  usleep(100);
  8199a0:	01001904 	movi	r4,100
  8199a4:	0818c340 	call	818c34 <usleep>

  IOWR_ALTERA_AVALON_LCD_16207_COMMAND(base, command);
  8199a8:	e0bffd17 	ldw	r2,-12(fp)
  8199ac:	e0ffff03 	ldbu	r3,-4(fp)
  8199b0:	10c00035 	stwio	r3,0(r2)
  8199b4:	00000106 	br	8199bc <lcd_write_command+0xa4>
   */
  int i = 1000000;

  /* Don't bother if the LCD panel didn't work before */
  if (sp->broken)
    return;
  8199b8:	0001883a 	nop
   * a write immediately after it returns BUSY=0.  Wait for 100us more.
   */
  usleep(100);

  IOWR_ALTERA_AVALON_LCD_16207_COMMAND(base, command);
}
  8199bc:	e037883a 	mov	sp,fp
  8199c0:	dfc00117 	ldw	ra,4(sp)
  8199c4:	df000017 	ldw	fp,0(sp)
  8199c8:	dec00204 	addi	sp,sp,8
  8199cc:	f800283a 	ret

008199d0 <lcd_write_data>:

/* --------------------------------------------------------------------- */

static void lcd_write_data(altera_avalon_lcd_16207_state* sp, 
  unsigned char data)
{
  8199d0:	defffa04 	addi	sp,sp,-24
  8199d4:	dfc00515 	stw	ra,20(sp)
  8199d8:	df000415 	stw	fp,16(sp)
  8199dc:	df000404 	addi	fp,sp,16
  8199e0:	e13ffe15 	stw	r4,-8(fp)
  8199e4:	2805883a 	mov	r2,r5
  8199e8:	e0bfff05 	stb	r2,-4(fp)
  unsigned int base = sp->base;
  8199ec:	e0bffe17 	ldw	r2,-8(fp)
  8199f0:	10800017 	ldw	r2,0(r2)
  8199f4:	e0bffd15 	stw	r2,-12(fp)
  /* We impose a timeout on the driver in case the LCD panel isn't connected.
   * The first time we call this function the timeout is approx 25ms 
   * (assuming 5 cycles per loop and a 200MHz clock).  Obviously systems
   * with slower clocks, or debug builds, or slower memory will take longer.
   */
  int i = 1000000;
  8199f8:	008003f4 	movhi	r2,15
  8199fc:	10909004 	addi	r2,r2,16960
  819a00:	e0bffc15 	stw	r2,-16(fp)

  /* Don't bother if the LCD panel didn't work before */
  if (sp->broken)
  819a04:	e0bffe17 	ldw	r2,-8(fp)
  819a08:	10800803 	ldbu	r2,32(r2)
  819a0c:	10803fcc 	andi	r2,r2,255
  819a10:	1080201c 	xori	r2,r2,128
  819a14:	10bfe004 	addi	r2,r2,-128
  819a18:	10001d1e 	bne	r2,zero,819a90 <lcd_write_data+0xc0>
    return;

  /* Wait until LCD isn't busy. */
  while (IORD_ALTERA_AVALON_LCD_16207_STATUS(base) & ALTERA_AVALON_LCD_16207_STATUS_BUSY_MSK)
  819a1c:	00000906 	br	819a44 <lcd_write_data+0x74>
    if (--i == 0)
  819a20:	e0bffc17 	ldw	r2,-16(fp)
  819a24:	10bfffc4 	addi	r2,r2,-1
  819a28:	e0bffc15 	stw	r2,-16(fp)
  819a2c:	e0bffc17 	ldw	r2,-16(fp)
  819a30:	1000041e 	bne	r2,zero,819a44 <lcd_write_data+0x74>
    {
      sp->broken = 1;
  819a34:	e0bffe17 	ldw	r2,-8(fp)
  819a38:	00c00044 	movi	r3,1
  819a3c:	10c00805 	stb	r3,32(r2)
      return;
  819a40:	00001406 	br	819a94 <lcd_write_data+0xc4>
  /* Don't bother if the LCD panel didn't work before */
  if (sp->broken)
    return;

  /* Wait until LCD isn't busy. */
  while (IORD_ALTERA_AVALON_LCD_16207_STATUS(base) & ALTERA_AVALON_LCD_16207_STATUS_BUSY_MSK)
  819a44:	e0bffd17 	ldw	r2,-12(fp)
  819a48:	10800104 	addi	r2,r2,4
  819a4c:	10800037 	ldwio	r2,0(r2)
  819a50:	1080200c 	andi	r2,r2,128
  819a54:	103ff21e 	bne	r2,zero,819a20 <__alt_data_end+0xff819a20>
    }

  /* Despite what it says in the datasheet, the LCD isn't ready to accept
   * a write immediately after it returns BUSY=0.  Wait for 100us more.
   */
  usleep(100);
  819a58:	01001904 	movi	r4,100
  819a5c:	0818c340 	call	818c34 <usleep>

  IOWR_ALTERA_AVALON_LCD_16207_DATA(base, data);
  819a60:	e0bffd17 	ldw	r2,-12(fp)
  819a64:	10800204 	addi	r2,r2,8
  819a68:	1007883a 	mov	r3,r2
  819a6c:	e0bfff03 	ldbu	r2,-4(fp)
  819a70:	18800035 	stwio	r2,0(r3)

  sp->address++;
  819a74:	e0bffe17 	ldw	r2,-8(fp)
  819a78:	108008c3 	ldbu	r2,35(r2)
  819a7c:	10800044 	addi	r2,r2,1
  819a80:	1007883a 	mov	r3,r2
  819a84:	e0bffe17 	ldw	r2,-8(fp)
  819a88:	10c008c5 	stb	r3,35(r2)
  819a8c:	00000106 	br	819a94 <lcd_write_data+0xc4>
   */
  int i = 1000000;

  /* Don't bother if the LCD panel didn't work before */
  if (sp->broken)
    return;
  819a90:	0001883a 	nop
  usleep(100);

  IOWR_ALTERA_AVALON_LCD_16207_DATA(base, data);

  sp->address++;
}
  819a94:	e037883a 	mov	sp,fp
  819a98:	dfc00117 	ldw	ra,4(sp)
  819a9c:	df000017 	ldw	fp,0(sp)
  819aa0:	dec00204 	addi	sp,sp,8
  819aa4:	f800283a 	ret

00819aa8 <lcd_clear_screen>:

/* --------------------------------------------------------------------- */

static void lcd_clear_screen(altera_avalon_lcd_16207_state* sp)
{
  819aa8:	defffc04 	addi	sp,sp,-16
  819aac:	dfc00315 	stw	ra,12(sp)
  819ab0:	df000215 	stw	fp,8(sp)
  819ab4:	df000204 	addi	fp,sp,8
  819ab8:	e13fff15 	stw	r4,-4(fp)
  int y;

  lcd_write_command(sp, LCD_CMD_CLEAR);
  819abc:	01400044 	movi	r5,1
  819ac0:	e13fff17 	ldw	r4,-4(fp)
  819ac4:	08199180 	call	819918 <lcd_write_command>

  sp->x = 0;
  819ac8:	e0bfff17 	ldw	r2,-4(fp)
  819acc:	10000845 	stb	zero,33(r2)
  sp->y = 0;
  819ad0:	e0bfff17 	ldw	r2,-4(fp)
  819ad4:	10000885 	stb	zero,34(r2)
  sp->address = 0;
  819ad8:	e0bfff17 	ldw	r2,-4(fp)
  819adc:	100008c5 	stb	zero,35(r2)

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  819ae0:	e03ffe15 	stw	zero,-8(fp)
  819ae4:	00001b06 	br	819b54 <lcd_clear_screen+0xac>
  {
    memset(sp->line[y].data, ' ', sizeof(sp->line[0].data));
  819ae8:	e0bffe17 	ldw	r2,-8(fp)
  819aec:	108018e4 	muli	r2,r2,99
  819af0:	10801004 	addi	r2,r2,64
  819af4:	e0ffff17 	ldw	r3,-4(fp)
  819af8:	1885883a 	add	r2,r3,r2
  819afc:	01801444 	movi	r6,81
  819b00:	01400804 	movi	r5,32
  819b04:	1009883a 	mov	r4,r2
  819b08:	0802dc40 	call	802dc4 <memset>
    memset(sp->line[y].visible, ' ', sizeof(sp->line[0].visible));
  819b0c:	e0bffe17 	ldw	r2,-8(fp)
  819b10:	108018e4 	muli	r2,r2,99
  819b14:	10800c04 	addi	r2,r2,48
  819b18:	e0ffff17 	ldw	r3,-4(fp)
  819b1c:	1885883a 	add	r2,r3,r2
  819b20:	01800404 	movi	r6,16
  819b24:	01400804 	movi	r5,32
  819b28:	1009883a 	mov	r4,r2
  819b2c:	0802dc40 	call	802dc4 <memset>
    sp->line[y].width = 0;
  819b30:	e0ffff17 	ldw	r3,-4(fp)
  819b34:	e0bffe17 	ldw	r2,-8(fp)
  819b38:	108018e4 	muli	r2,r2,99
  819b3c:	1885883a 	add	r2,r3,r2
  819b40:	10802444 	addi	r2,r2,145
  819b44:	10000005 	stb	zero,0(r2)

  sp->x = 0;
  sp->y = 0;
  sp->address = 0;

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  819b48:	e0bffe17 	ldw	r2,-8(fp)
  819b4c:	10800044 	addi	r2,r2,1
  819b50:	e0bffe15 	stw	r2,-8(fp)
  819b54:	e0bffe17 	ldw	r2,-8(fp)
  819b58:	10800090 	cmplti	r2,r2,2
  819b5c:	103fe21e 	bne	r2,zero,819ae8 <__alt_data_end+0xff819ae8>
  {
    memset(sp->line[y].data, ' ', sizeof(sp->line[0].data));
    memset(sp->line[y].visible, ' ', sizeof(sp->line[0].visible));
    sp->line[y].width = 0;
  }
}
  819b60:	0001883a 	nop
  819b64:	e037883a 	mov	sp,fp
  819b68:	dfc00117 	ldw	ra,4(sp)
  819b6c:	df000017 	ldw	fp,0(sp)
  819b70:	dec00204 	addi	sp,sp,8
  819b74:	f800283a 	ret

00819b78 <lcd_repaint_screen>:

/* --------------------------------------------------------------------- */

static void lcd_repaint_screen(altera_avalon_lcd_16207_state* sp)
{
  819b78:	defff704 	addi	sp,sp,-36
  819b7c:	dfc00815 	stw	ra,32(sp)
  819b80:	df000715 	stw	fp,28(sp)
  819b84:	df000704 	addi	fp,sp,28
  819b88:	e13fff15 	stw	r4,-4(fp)
  /* scrollpos controls how much the lines have scrolled round.  The speed
   * each line scrolls at is controlled by its speed variable - while
   * scrolline lines will wrap at the position set by width
   */

  int scrollpos = sp->scrollpos;
  819b8c:	e0bfff17 	ldw	r2,-4(fp)
  819b90:	10800943 	ldbu	r2,37(r2)
  819b94:	10803fcc 	andi	r2,r2,255
  819b98:	e0bffc15 	stw	r2,-16(fp)

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  819b9c:	e03ff915 	stw	zero,-28(fp)
  819ba0:	00006706 	br	819d40 <lcd_repaint_screen+0x1c8>
  {
    int width  = sp->line[y].width;
  819ba4:	e0ffff17 	ldw	r3,-4(fp)
  819ba8:	e0bff917 	ldw	r2,-28(fp)
  819bac:	108018e4 	muli	r2,r2,99
  819bb0:	1885883a 	add	r2,r3,r2
  819bb4:	10802444 	addi	r2,r2,145
  819bb8:	10800003 	ldbu	r2,0(r2)
  819bbc:	10803fcc 	andi	r2,r2,255
  819bc0:	1080201c 	xori	r2,r2,128
  819bc4:	10bfe004 	addi	r2,r2,-128
  819bc8:	e0bffd15 	stw	r2,-12(fp)
    int offset = (scrollpos * sp->line[y].speed) >> 8;
  819bcc:	e0ffff17 	ldw	r3,-4(fp)
  819bd0:	e0bff917 	ldw	r2,-28(fp)
  819bd4:	108018e4 	muli	r2,r2,99
  819bd8:	1885883a 	add	r2,r3,r2
  819bdc:	10802484 	addi	r2,r2,146
  819be0:	10800003 	ldbu	r2,0(r2)
  819be4:	10c03fcc 	andi	r3,r2,255
  819be8:	e0bffc17 	ldw	r2,-16(fp)
  819bec:	1885383a 	mul	r2,r3,r2
  819bf0:	1005d23a 	srai	r2,r2,8
  819bf4:	e0bffb15 	stw	r2,-20(fp)
    if (offset >= width)
  819bf8:	e0fffb17 	ldw	r3,-20(fp)
  819bfc:	e0bffd17 	ldw	r2,-12(fp)
  819c00:	18800116 	blt	r3,r2,819c08 <lcd_repaint_screen+0x90>
      offset = 0;
  819c04:	e03ffb15 	stw	zero,-20(fp)

    for (x = 0 ; x < ALT_LCD_WIDTH ; x++)
  819c08:	e03ffa15 	stw	zero,-24(fp)
  819c0c:	00004606 	br	819d28 <lcd_repaint_screen+0x1b0>
    {
      char c = sp->line[y].data[(x + offset) % width];
  819c10:	e0fffa17 	ldw	r3,-24(fp)
  819c14:	e0bffb17 	ldw	r2,-20(fp)
  819c18:	1885883a 	add	r2,r3,r2
  819c1c:	e17ffd17 	ldw	r5,-12(fp)
  819c20:	1009883a 	mov	r4,r2
  819c24:	08155140 	call	815514 <__modsi3>
  819c28:	1009883a 	mov	r4,r2
  819c2c:	e0ffff17 	ldw	r3,-4(fp)
  819c30:	e0bff917 	ldw	r2,-28(fp)
  819c34:	108018e4 	muli	r2,r2,99
  819c38:	1885883a 	add	r2,r3,r2
  819c3c:	1105883a 	add	r2,r2,r4
  819c40:	10801004 	addi	r2,r2,64
  819c44:	10800003 	ldbu	r2,0(r2)
  819c48:	e0bffe05 	stb	r2,-8(fp)

      /* Writing data takes 40us, so don't do it unless required */
      if (sp->line[y].visible[x] != c)
  819c4c:	e0ffff17 	ldw	r3,-4(fp)
  819c50:	e0bff917 	ldw	r2,-28(fp)
  819c54:	108018e4 	muli	r2,r2,99
  819c58:	1887883a 	add	r3,r3,r2
  819c5c:	e0bffa17 	ldw	r2,-24(fp)
  819c60:	1885883a 	add	r2,r3,r2
  819c64:	10800c04 	addi	r2,r2,48
  819c68:	10800003 	ldbu	r2,0(r2)
  819c6c:	10c03fcc 	andi	r3,r2,255
  819c70:	18c0201c 	xori	r3,r3,128
  819c74:	18ffe004 	addi	r3,r3,-128
  819c78:	e0bffe07 	ldb	r2,-8(fp)
  819c7c:	18802726 	beq	r3,r2,819d1c <lcd_repaint_screen+0x1a4>
      {
        unsigned char address = x + colstart[y];
  819c80:	e0fff917 	ldw	r3,-28(fp)
  819c84:	d0a01004 	addi	r2,gp,-32704
  819c88:	1885883a 	add	r2,r3,r2
  819c8c:	10800003 	ldbu	r2,0(r2)
  819c90:	1007883a 	mov	r3,r2
  819c94:	e0bffa17 	ldw	r2,-24(fp)
  819c98:	1885883a 	add	r2,r3,r2
  819c9c:	e0bffe45 	stb	r2,-7(fp)

        if (address != sp->address)
  819ca0:	e0fffe43 	ldbu	r3,-7(fp)
  819ca4:	e0bfff17 	ldw	r2,-4(fp)
  819ca8:	108008c3 	ldbu	r2,35(r2)
  819cac:	10803fcc 	andi	r2,r2,255
  819cb0:	1080201c 	xori	r2,r2,128
  819cb4:	10bfe004 	addi	r2,r2,-128
  819cb8:	18800a26 	beq	r3,r2,819ce4 <lcd_repaint_screen+0x16c>
        {
          lcd_write_command(sp, LCD_CMD_WRITE_DATA | address);
  819cbc:	e0fffe43 	ldbu	r3,-7(fp)
  819cc0:	00bfe004 	movi	r2,-128
  819cc4:	1884b03a 	or	r2,r3,r2
  819cc8:	10803fcc 	andi	r2,r2,255
  819ccc:	100b883a 	mov	r5,r2
  819cd0:	e13fff17 	ldw	r4,-4(fp)
  819cd4:	08199180 	call	819918 <lcd_write_command>
          sp->address = address;
  819cd8:	e0fffe43 	ldbu	r3,-7(fp)
  819cdc:	e0bfff17 	ldw	r2,-4(fp)
  819ce0:	10c008c5 	stb	r3,35(r2)
        }

        lcd_write_data(sp, c);
  819ce4:	e0bffe03 	ldbu	r2,-8(fp)
  819ce8:	10803fcc 	andi	r2,r2,255
  819cec:	100b883a 	mov	r5,r2
  819cf0:	e13fff17 	ldw	r4,-4(fp)
  819cf4:	08199d00 	call	8199d0 <lcd_write_data>
        sp->line[y].visible[x] = c;
  819cf8:	e0ffff17 	ldw	r3,-4(fp)
  819cfc:	e0bff917 	ldw	r2,-28(fp)
  819d00:	108018e4 	muli	r2,r2,99
  819d04:	1887883a 	add	r3,r3,r2
  819d08:	e0bffa17 	ldw	r2,-24(fp)
  819d0c:	1885883a 	add	r2,r3,r2
  819d10:	10800c04 	addi	r2,r2,48
  819d14:	e0fffe03 	ldbu	r3,-8(fp)
  819d18:	10c00005 	stb	r3,0(r2)
    int width  = sp->line[y].width;
    int offset = (scrollpos * sp->line[y].speed) >> 8;
    if (offset >= width)
      offset = 0;

    for (x = 0 ; x < ALT_LCD_WIDTH ; x++)
  819d1c:	e0bffa17 	ldw	r2,-24(fp)
  819d20:	10800044 	addi	r2,r2,1
  819d24:	e0bffa15 	stw	r2,-24(fp)
  819d28:	e0bffa17 	ldw	r2,-24(fp)
  819d2c:	10800410 	cmplti	r2,r2,16
  819d30:	103fb71e 	bne	r2,zero,819c10 <__alt_data_end+0xff819c10>
   * scrolline lines will wrap at the position set by width
   */

  int scrollpos = sp->scrollpos;

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  819d34:	e0bff917 	ldw	r2,-28(fp)
  819d38:	10800044 	addi	r2,r2,1
  819d3c:	e0bff915 	stw	r2,-28(fp)
  819d40:	e0bff917 	ldw	r2,-28(fp)
  819d44:	10800090 	cmplti	r2,r2,2
  819d48:	103f961e 	bne	r2,zero,819ba4 <__alt_data_end+0xff819ba4>
        lcd_write_data(sp, c);
        sp->line[y].visible[x] = c;
      }
    }
  }
}
  819d4c:	0001883a 	nop
  819d50:	e037883a 	mov	sp,fp
  819d54:	dfc00117 	ldw	ra,4(sp)
  819d58:	df000017 	ldw	fp,0(sp)
  819d5c:	dec00204 	addi	sp,sp,8
  819d60:	f800283a 	ret

00819d64 <lcd_scroll_up>:

/* --------------------------------------------------------------------- */

static void lcd_scroll_up(altera_avalon_lcd_16207_state* sp)
{
  819d64:	defffc04 	addi	sp,sp,-16
  819d68:	dfc00315 	stw	ra,12(sp)
  819d6c:	df000215 	stw	fp,8(sp)
  819d70:	df000204 	addi	fp,sp,8
  819d74:	e13fff15 	stw	r4,-4(fp)
  int y;

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  819d78:	e03ffe15 	stw	zero,-8(fp)
  819d7c:	00001d06 	br	819df4 <lcd_scroll_up+0x90>
  {
    if (y < ALT_LCD_HEIGHT-1)
  819d80:	e0bffe17 	ldw	r2,-8(fp)
  819d84:	00800f16 	blt	zero,r2,819dc4 <lcd_scroll_up+0x60>
      memcpy(sp->line[y].data, sp->line[y+1].data, ALT_LCD_VIRTUAL_WIDTH);
  819d88:	e0bffe17 	ldw	r2,-8(fp)
  819d8c:	108018e4 	muli	r2,r2,99
  819d90:	10801004 	addi	r2,r2,64
  819d94:	e0ffff17 	ldw	r3,-4(fp)
  819d98:	1889883a 	add	r4,r3,r2
  819d9c:	e0bffe17 	ldw	r2,-8(fp)
  819da0:	10800044 	addi	r2,r2,1
  819da4:	108018e4 	muli	r2,r2,99
  819da8:	10801004 	addi	r2,r2,64
  819dac:	e0ffff17 	ldw	r3,-4(fp)
  819db0:	1885883a 	add	r2,r3,r2
  819db4:	01801404 	movi	r6,80
  819db8:	100b883a 	mov	r5,r2
  819dbc:	080958c0 	call	80958c <memcpy>
  819dc0:	00000906 	br	819de8 <lcd_scroll_up+0x84>
    else
      memset(sp->line[y].data, ' ', ALT_LCD_VIRTUAL_WIDTH);
  819dc4:	e0bffe17 	ldw	r2,-8(fp)
  819dc8:	108018e4 	muli	r2,r2,99
  819dcc:	10801004 	addi	r2,r2,64
  819dd0:	e0ffff17 	ldw	r3,-4(fp)
  819dd4:	1885883a 	add	r2,r3,r2
  819dd8:	01801404 	movi	r6,80
  819ddc:	01400804 	movi	r5,32
  819de0:	1009883a 	mov	r4,r2
  819de4:	0802dc40 	call	802dc4 <memset>

static void lcd_scroll_up(altera_avalon_lcd_16207_state* sp)
{
  int y;

  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  819de8:	e0bffe17 	ldw	r2,-8(fp)
  819dec:	10800044 	addi	r2,r2,1
  819df0:	e0bffe15 	stw	r2,-8(fp)
  819df4:	e0bffe17 	ldw	r2,-8(fp)
  819df8:	10800090 	cmplti	r2,r2,2
  819dfc:	103fe01e 	bne	r2,zero,819d80 <__alt_data_end+0xff819d80>
      memcpy(sp->line[y].data, sp->line[y+1].data, ALT_LCD_VIRTUAL_WIDTH);
    else
      memset(sp->line[y].data, ' ', ALT_LCD_VIRTUAL_WIDTH);
  }

  sp->y--;
  819e00:	e0bfff17 	ldw	r2,-4(fp)
  819e04:	10800883 	ldbu	r2,34(r2)
  819e08:	10bfffc4 	addi	r2,r2,-1
  819e0c:	1007883a 	mov	r3,r2
  819e10:	e0bfff17 	ldw	r2,-4(fp)
  819e14:	10c00885 	stb	r3,34(r2)
}
  819e18:	0001883a 	nop
  819e1c:	e037883a 	mov	sp,fp
  819e20:	dfc00117 	ldw	ra,4(sp)
  819e24:	df000017 	ldw	fp,0(sp)
  819e28:	dec00204 	addi	sp,sp,8
  819e2c:	f800283a 	ret

00819e30 <lcd_handle_escape>:

/* --------------------------------------------------------------------- */

static void lcd_handle_escape(altera_avalon_lcd_16207_state* sp, char c)
{
  819e30:	defff904 	addi	sp,sp,-28
  819e34:	dfc00615 	stw	ra,24(sp)
  819e38:	df000515 	stw	fp,20(sp)
  819e3c:	df000504 	addi	fp,sp,20
  819e40:	e13ffe15 	stw	r4,-8(fp)
  819e44:	2805883a 	mov	r2,r5
  819e48:	e0bfff05 	stb	r2,-4(fp)
  int parm1 = 0, parm2 = 0;
  819e4c:	e03ffb15 	stw	zero,-20(fp)
  819e50:	e03ffc15 	stw	zero,-16(fp)

  if (sp->escape[0] == '[')
  819e54:	e0bffe17 	ldw	r2,-8(fp)
  819e58:	10800a03 	ldbu	r2,40(r2)
  819e5c:	10803fcc 	andi	r2,r2,255
  819e60:	1080201c 	xori	r2,r2,128
  819e64:	10bfe004 	addi	r2,r2,-128
  819e68:	108016d8 	cmpnei	r2,r2,91
  819e6c:	1000411e 	bne	r2,zero,819f74 <lcd_handle_escape+0x144>
  {
    char * ptr = sp->escape+1;
  819e70:	e0bffe17 	ldw	r2,-8(fp)
  819e74:	10800a04 	addi	r2,r2,40
  819e78:	10800044 	addi	r2,r2,1
  819e7c:	e0bffd15 	stw	r2,-12(fp)
    while (isdigit(*ptr))
  819e80:	00000c06 	br	819eb4 <lcd_handle_escape+0x84>
      parm1 = (parm1 * 10) + (*ptr++ - '0');
  819e84:	e0bffb17 	ldw	r2,-20(fp)
  819e88:	10c002a4 	muli	r3,r2,10
  819e8c:	e0bffd17 	ldw	r2,-12(fp)
  819e90:	11000044 	addi	r4,r2,1
  819e94:	e13ffd15 	stw	r4,-12(fp)
  819e98:	10800003 	ldbu	r2,0(r2)
  819e9c:	10803fcc 	andi	r2,r2,255
  819ea0:	1080201c 	xori	r2,r2,128
  819ea4:	10bfe004 	addi	r2,r2,-128
  819ea8:	10bff404 	addi	r2,r2,-48
  819eac:	1885883a 	add	r2,r3,r2
  819eb0:	e0bffb15 	stw	r2,-20(fp)
  int parm1 = 0, parm2 = 0;

  if (sp->escape[0] == '[')
  {
    char * ptr = sp->escape+1;
    while (isdigit(*ptr))
  819eb4:	d0e00417 	ldw	r3,-32752(gp)
  819eb8:	e0bffd17 	ldw	r2,-12(fp)
  819ebc:	10800003 	ldbu	r2,0(r2)
  819ec0:	10803fcc 	andi	r2,r2,255
  819ec4:	1080201c 	xori	r2,r2,128
  819ec8:	10bfe004 	addi	r2,r2,-128
  819ecc:	10800044 	addi	r2,r2,1
  819ed0:	1885883a 	add	r2,r3,r2
  819ed4:	10800003 	ldbu	r2,0(r2)
  819ed8:	10803fcc 	andi	r2,r2,255
  819edc:	1080010c 	andi	r2,r2,4
  819ee0:	103fe81e 	bne	r2,zero,819e84 <__alt_data_end+0xff819e84>
      parm1 = (parm1 * 10) + (*ptr++ - '0');

    if (*ptr == ';')
  819ee4:	e0bffd17 	ldw	r2,-12(fp)
  819ee8:	10800003 	ldbu	r2,0(r2)
  819eec:	10803fcc 	andi	r2,r2,255
  819ef0:	1080201c 	xori	r2,r2,128
  819ef4:	10bfe004 	addi	r2,r2,-128
  819ef8:	10800ed8 	cmpnei	r2,r2,59
  819efc:	10001f1e 	bne	r2,zero,819f7c <lcd_handle_escape+0x14c>
    {
      ptr++;
  819f00:	e0bffd17 	ldw	r2,-12(fp)
  819f04:	10800044 	addi	r2,r2,1
  819f08:	e0bffd15 	stw	r2,-12(fp)
      while (isdigit(*ptr))
  819f0c:	00000c06 	br	819f40 <lcd_handle_escape+0x110>
        parm2 = (parm2 * 10) + (*ptr++ - '0');
  819f10:	e0bffc17 	ldw	r2,-16(fp)
  819f14:	10c002a4 	muli	r3,r2,10
  819f18:	e0bffd17 	ldw	r2,-12(fp)
  819f1c:	11000044 	addi	r4,r2,1
  819f20:	e13ffd15 	stw	r4,-12(fp)
  819f24:	10800003 	ldbu	r2,0(r2)
  819f28:	10803fcc 	andi	r2,r2,255
  819f2c:	1080201c 	xori	r2,r2,128
  819f30:	10bfe004 	addi	r2,r2,-128
  819f34:	10bff404 	addi	r2,r2,-48
  819f38:	1885883a 	add	r2,r3,r2
  819f3c:	e0bffc15 	stw	r2,-16(fp)
      parm1 = (parm1 * 10) + (*ptr++ - '0');

    if (*ptr == ';')
    {
      ptr++;
      while (isdigit(*ptr))
  819f40:	d0e00417 	ldw	r3,-32752(gp)
  819f44:	e0bffd17 	ldw	r2,-12(fp)
  819f48:	10800003 	ldbu	r2,0(r2)
  819f4c:	10803fcc 	andi	r2,r2,255
  819f50:	1080201c 	xori	r2,r2,128
  819f54:	10bfe004 	addi	r2,r2,-128
  819f58:	10800044 	addi	r2,r2,1
  819f5c:	1885883a 	add	r2,r3,r2
  819f60:	10800003 	ldbu	r2,0(r2)
  819f64:	10803fcc 	andi	r2,r2,255
  819f68:	1080010c 	andi	r2,r2,4
  819f6c:	103fe81e 	bne	r2,zero,819f10 <__alt_data_end+0xff819f10>
  819f70:	00000206 	br	819f7c <lcd_handle_escape+0x14c>
        parm2 = (parm2 * 10) + (*ptr++ - '0');
    }
  }
  else
    parm1 = -1;
  819f74:	00bfffc4 	movi	r2,-1
  819f78:	e0bffb15 	stw	r2,-20(fp)

  switch (c)
  819f7c:	e0bfff07 	ldb	r2,-4(fp)
  819f80:	10c012a0 	cmpeqi	r3,r2,74
  819f84:	1800291e 	bne	r3,zero,81a02c <lcd_handle_escape+0x1fc>
  819f88:	10c012c8 	cmpgei	r3,r2,75
  819f8c:	1800031e 	bne	r3,zero,819f9c <lcd_handle_escape+0x16c>
  819f90:	10801220 	cmpeqi	r2,r2,72
  819f94:	1000061e 	bne	r2,zero,819fb0 <lcd_handle_escape+0x180>
      if (sp->x < ALT_LCD_VIRTUAL_WIDTH)
        memset(sp->line[sp->y].data + sp->x, ' ', ALT_LCD_VIRTUAL_WIDTH - sp->x);
    }
    break;
  }
}
  819f98:	00004a06 	br	81a0c4 <lcd_handle_escape+0x294>
    }
  }
  else
    parm1 = -1;

  switch (c)
  819f9c:	10c012e0 	cmpeqi	r3,r2,75
  819fa0:	1800281e 	bne	r3,zero,81a044 <lcd_handle_escape+0x214>
  819fa4:	108019a0 	cmpeqi	r2,r2,102
  819fa8:	1000011e 	bne	r2,zero,819fb0 <lcd_handle_escape+0x180>
      if (sp->x < ALT_LCD_VIRTUAL_WIDTH)
        memset(sp->line[sp->y].data + sp->x, ' ', ALT_LCD_VIRTUAL_WIDTH - sp->x);
    }
    break;
  }
}
  819fac:	00004506 	br	81a0c4 <lcd_handle_escape+0x294>

  switch (c)
  {
  case 'H': /* ESC '[' <y> ';' <x> 'H'  : Move cursor to location */
  case 'f': /* Same as above */
    if (parm2 > 0)
  819fb0:	e0bffc17 	ldw	r2,-16(fp)
  819fb4:	0080050e 	bge	zero,r2,819fcc <lcd_handle_escape+0x19c>
      sp->x = parm2 - 1;
  819fb8:	e0bffc17 	ldw	r2,-16(fp)
  819fbc:	10bfffc4 	addi	r2,r2,-1
  819fc0:	1007883a 	mov	r3,r2
  819fc4:	e0bffe17 	ldw	r2,-8(fp)
  819fc8:	10c00845 	stb	r3,33(r2)
    if (parm1 > 0)
  819fcc:	e0bffb17 	ldw	r2,-20(fp)
  819fd0:	0080370e 	bge	zero,r2,81a0b0 <lcd_handle_escape+0x280>
    {
      sp->y = parm1 - 1;
  819fd4:	e0bffb17 	ldw	r2,-20(fp)
  819fd8:	10bfffc4 	addi	r2,r2,-1
  819fdc:	1007883a 	mov	r3,r2
  819fe0:	e0bffe17 	ldw	r2,-8(fp)
  819fe4:	10c00885 	stb	r3,34(r2)
      if (sp->y > ALT_LCD_HEIGHT * 2)
  819fe8:	e0bffe17 	ldw	r2,-8(fp)
  819fec:	10800883 	ldbu	r2,34(r2)
  819ff0:	10803fcc 	andi	r2,r2,255
  819ff4:	10800170 	cmpltui	r2,r2,5
  819ff8:	1000061e 	bne	r2,zero,81a014 <lcd_handle_escape+0x1e4>
        sp->y = ALT_LCD_HEIGHT * 2;
  819ffc:	e0bffe17 	ldw	r2,-8(fp)
  81a000:	00c00104 	movi	r3,4
  81a004:	10c00885 	stb	r3,34(r2)
      while (sp->y > ALT_LCD_HEIGHT)
  81a008:	00000206 	br	81a014 <lcd_handle_escape+0x1e4>
        lcd_scroll_up(sp);
  81a00c:	e13ffe17 	ldw	r4,-8(fp)
  81a010:	0819d640 	call	819d64 <lcd_scroll_up>
    if (parm1 > 0)
    {
      sp->y = parm1 - 1;
      if (sp->y > ALT_LCD_HEIGHT * 2)
        sp->y = ALT_LCD_HEIGHT * 2;
      while (sp->y > ALT_LCD_HEIGHT)
  81a014:	e0bffe17 	ldw	r2,-8(fp)
  81a018:	10800883 	ldbu	r2,34(r2)
  81a01c:	10803fcc 	andi	r2,r2,255
  81a020:	108000e8 	cmpgeui	r2,r2,3
  81a024:	103ff91e 	bne	r2,zero,81a00c <__alt_data_end+0xff81a00c>
        lcd_scroll_up(sp);
    }
    break;
  81a028:	00002106 	br	81a0b0 <lcd_handle_escape+0x280>
    /*   ESC J      is clear to beginning of line    [unimplemented]
     *   ESC [ 0 J  is clear to bottom of screen     [unimplemented]
     *   ESC [ 1 J  is clear to beginning of screen  [unimplemented]
     *   ESC [ 2 J  is clear screen
     */
    if (parm1 == 2)
  81a02c:	e0bffb17 	ldw	r2,-20(fp)
  81a030:	10800098 	cmpnei	r2,r2,2
  81a034:	1000201e 	bne	r2,zero,81a0b8 <lcd_handle_escape+0x288>
      lcd_clear_screen(sp);
  81a038:	e13ffe17 	ldw	r4,-8(fp)
  81a03c:	0819aa80 	call	819aa8 <lcd_clear_screen>
    break;
  81a040:	00001d06 	br	81a0b8 <lcd_handle_escape+0x288>
    /*   ESC K      is clear to end of line
     *   ESC [ 0 K  is clear to end of line
     *   ESC [ 1 K  is clear to beginning of line    [unimplemented]
     *   ESC [ 2 K  is clear line                    [unimplemented]
     */
    if (parm1 < 1)
  81a044:	e0bffb17 	ldw	r2,-20(fp)
  81a048:	00801d16 	blt	zero,r2,81a0c0 <lcd_handle_escape+0x290>
    {
      if (sp->x < ALT_LCD_VIRTUAL_WIDTH)
  81a04c:	e0bffe17 	ldw	r2,-8(fp)
  81a050:	10800843 	ldbu	r2,33(r2)
  81a054:	10803fcc 	andi	r2,r2,255
  81a058:	10801428 	cmpgeui	r2,r2,80
  81a05c:	1000181e 	bne	r2,zero,81a0c0 <lcd_handle_escape+0x290>
        memset(sp->line[sp->y].data + sp->x, ' ', ALT_LCD_VIRTUAL_WIDTH - sp->x);
  81a060:	e0bffe17 	ldw	r2,-8(fp)
  81a064:	10800883 	ldbu	r2,34(r2)
  81a068:	10803fcc 	andi	r2,r2,255
  81a06c:	108018e4 	muli	r2,r2,99
  81a070:	10801004 	addi	r2,r2,64
  81a074:	e0fffe17 	ldw	r3,-8(fp)
  81a078:	1887883a 	add	r3,r3,r2
  81a07c:	e0bffe17 	ldw	r2,-8(fp)
  81a080:	10800843 	ldbu	r2,33(r2)
  81a084:	10803fcc 	andi	r2,r2,255
  81a088:	1889883a 	add	r4,r3,r2
  81a08c:	e0bffe17 	ldw	r2,-8(fp)
  81a090:	10800843 	ldbu	r2,33(r2)
  81a094:	10803fcc 	andi	r2,r2,255
  81a098:	00c01404 	movi	r3,80
  81a09c:	1885c83a 	sub	r2,r3,r2
  81a0a0:	100d883a 	mov	r6,r2
  81a0a4:	01400804 	movi	r5,32
  81a0a8:	0802dc40 	call	802dc4 <memset>
    }
    break;
  81a0ac:	00000406 	br	81a0c0 <lcd_handle_escape+0x290>
      if (sp->y > ALT_LCD_HEIGHT * 2)
        sp->y = ALT_LCD_HEIGHT * 2;
      while (sp->y > ALT_LCD_HEIGHT)
        lcd_scroll_up(sp);
    }
    break;
  81a0b0:	0001883a 	nop
  81a0b4:	00000306 	br	81a0c4 <lcd_handle_escape+0x294>
     *   ESC [ 1 J  is clear to beginning of screen  [unimplemented]
     *   ESC [ 2 J  is clear screen
     */
    if (parm1 == 2)
      lcd_clear_screen(sp);
    break;
  81a0b8:	0001883a 	nop
  81a0bc:	00000106 	br	81a0c4 <lcd_handle_escape+0x294>
    if (parm1 < 1)
    {
      if (sp->x < ALT_LCD_VIRTUAL_WIDTH)
        memset(sp->line[sp->y].data + sp->x, ' ', ALT_LCD_VIRTUAL_WIDTH - sp->x);
    }
    break;
  81a0c0:	0001883a 	nop
  }
}
  81a0c4:	0001883a 	nop
  81a0c8:	e037883a 	mov	sp,fp
  81a0cc:	dfc00117 	ldw	ra,4(sp)
  81a0d0:	df000017 	ldw	fp,0(sp)
  81a0d4:	dec00204 	addi	sp,sp,8
  81a0d8:	f800283a 	ret

0081a0dc <altera_avalon_lcd_16207_write>:

/* --------------------------------------------------------------------- */

int altera_avalon_lcd_16207_write(altera_avalon_lcd_16207_state* sp, 
  const char* ptr, int len, int flags)
{
  81a0dc:	defff304 	addi	sp,sp,-52
  81a0e0:	dfc00c15 	stw	ra,48(sp)
  81a0e4:	df000b15 	stw	fp,44(sp)
  81a0e8:	df000b04 	addi	fp,sp,44
  81a0ec:	e13ffc15 	stw	r4,-16(fp)
  81a0f0:	e17ffd15 	stw	r5,-12(fp)
  81a0f4:	e1bffe15 	stw	r6,-8(fp)
  81a0f8:	e1ffff15 	stw	r7,-4(fp)
  const char* end = ptr + len;
  81a0fc:	e0bffe17 	ldw	r2,-8(fp)
  81a100:	e0fffd17 	ldw	r3,-12(fp)
  81a104:	1885883a 	add	r2,r3,r2
  81a108:	e0bff815 	stw	r2,-32(fp)

  ALT_SEM_PEND (sp->write_lock, 0);

  /* Tell the routine which is called off the timer interrupt that the
   * foreground routines are active so it must not repaint the display. */
  sp->active = 1;
  81a10c:	e0bffc17 	ldw	r2,-16(fp)
  81a110:	00c00044 	movi	r3,1
  81a114:	10c009c5 	stb	r3,39(r2)

  for ( ; ptr < end ; ptr++)
  81a118:	00009906 	br	81a380 <altera_avalon_lcd_16207_write+0x2a4>
  {
    char c = *ptr;
  81a11c:	e0bffd17 	ldw	r2,-12(fp)
  81a120:	10800003 	ldbu	r2,0(r2)
  81a124:	e0bff905 	stb	r2,-28(fp)

    if (sp->esccount >= 0)
  81a128:	e0bffc17 	ldw	r2,-16(fp)
  81a12c:	10800903 	ldbu	r2,36(r2)
  81a130:	10803fcc 	andi	r2,r2,255
  81a134:	1080201c 	xori	r2,r2,128
  81a138:	10bfe004 	addi	r2,r2,-128
  81a13c:	10003716 	blt	r2,zero,81a21c <altera_avalon_lcd_16207_write+0x140>
    {
      unsigned int esccount = sp->esccount;
  81a140:	e0bffc17 	ldw	r2,-16(fp)
  81a144:	10800903 	ldbu	r2,36(r2)
  81a148:	10803fcc 	andi	r2,r2,255
  81a14c:	1080201c 	xori	r2,r2,128
  81a150:	10bfe004 	addi	r2,r2,-128
  81a154:	e0bffa15 	stw	r2,-24(fp)

      /* Single character escape sequences can end with any character
       * Multi character escape sequences start with '[' and contain
       * digits and semicolons before terminating
       */
      if ((esccount == 0 && c != '[') ||
  81a158:	e0bffa17 	ldw	r2,-24(fp)
  81a15c:	1000031e 	bne	r2,zero,81a16c <altera_avalon_lcd_16207_write+0x90>
  81a160:	e0bff907 	ldb	r2,-28(fp)
  81a164:	108016d8 	cmpnei	r2,r2,91
  81a168:	10000d1e 	bne	r2,zero,81a1a0 <altera_avalon_lcd_16207_write+0xc4>
  81a16c:	e0bffa17 	ldw	r2,-24(fp)
  81a170:	10001826 	beq	r2,zero,81a1d4 <altera_avalon_lcd_16207_write+0xf8>
          (esccount > 0 && !isdigit(c) && c != ';'))
  81a174:	d0e00417 	ldw	r3,-32752(gp)
  81a178:	e0bff907 	ldb	r2,-28(fp)
  81a17c:	10800044 	addi	r2,r2,1
  81a180:	1885883a 	add	r2,r3,r2
  81a184:	10800003 	ldbu	r2,0(r2)
  81a188:	10803fcc 	andi	r2,r2,255
  81a18c:	1080010c 	andi	r2,r2,4
  81a190:	1000101e 	bne	r2,zero,81a1d4 <altera_avalon_lcd_16207_write+0xf8>
  81a194:	e0bff907 	ldb	r2,-28(fp)
  81a198:	10800ee0 	cmpeqi	r2,r2,59
  81a19c:	10000d1e 	bne	r2,zero,81a1d4 <altera_avalon_lcd_16207_write+0xf8>
      {
        sp->escape[esccount] = 0;
  81a1a0:	e0fffc17 	ldw	r3,-16(fp)
  81a1a4:	e0bffa17 	ldw	r2,-24(fp)
  81a1a8:	1885883a 	add	r2,r3,r2
  81a1ac:	10800a04 	addi	r2,r2,40
  81a1b0:	10000005 	stb	zero,0(r2)

        lcd_handle_escape(sp, c);
  81a1b4:	e0bff907 	ldb	r2,-28(fp)
  81a1b8:	100b883a 	mov	r5,r2
  81a1bc:	e13ffc17 	ldw	r4,-16(fp)
  81a1c0:	0819e300 	call	819e30 <lcd_handle_escape>

        sp->esccount = -1;
  81a1c4:	e0bffc17 	ldw	r2,-16(fp)
  81a1c8:	00ffffc4 	movi	r3,-1
  81a1cc:	10c00905 	stb	r3,36(r2)
  81a1d0:	00006806 	br	81a374 <altera_avalon_lcd_16207_write+0x298>
      }
      else if (sp->esccount < sizeof(sp->escape)-1)
  81a1d4:	e0bffc17 	ldw	r2,-16(fp)
  81a1d8:	10800903 	ldbu	r2,36(r2)
  81a1dc:	10803fcc 	andi	r2,r2,255
  81a1e0:	108001e8 	cmpgeui	r2,r2,7
  81a1e4:	1000631e 	bne	r2,zero,81a374 <altera_avalon_lcd_16207_write+0x298>
      {
        sp->escape[esccount] = c;
  81a1e8:	e0fffc17 	ldw	r3,-16(fp)
  81a1ec:	e0bffa17 	ldw	r2,-24(fp)
  81a1f0:	1885883a 	add	r2,r3,r2
  81a1f4:	10800a04 	addi	r2,r2,40
  81a1f8:	e0fff903 	ldbu	r3,-28(fp)
  81a1fc:	10c00005 	stb	r3,0(r2)
        sp->esccount++;
  81a200:	e0bffc17 	ldw	r2,-16(fp)
  81a204:	10800903 	ldbu	r2,36(r2)
  81a208:	10800044 	addi	r2,r2,1
  81a20c:	1007883a 	mov	r3,r2
  81a210:	e0bffc17 	ldw	r2,-16(fp)
  81a214:	10c00905 	stb	r3,36(r2)
  81a218:	00005606 	br	81a374 <altera_avalon_lcd_16207_write+0x298>
      }
    }
    else if (c == 27) /* ESC */
  81a21c:	e0bff907 	ldb	r2,-28(fp)
  81a220:	108006d8 	cmpnei	r2,r2,27
  81a224:	1000031e 	bne	r2,zero,81a234 <altera_avalon_lcd_16207_write+0x158>
    {
      sp->esccount = 0;
  81a228:	e0bffc17 	ldw	r2,-16(fp)
  81a22c:	10000905 	stb	zero,36(r2)
  81a230:	00005006 	br	81a374 <altera_avalon_lcd_16207_write+0x298>
    }
    else if (c == '\r')
  81a234:	e0bff907 	ldb	r2,-28(fp)
  81a238:	10800358 	cmpnei	r2,r2,13
  81a23c:	1000031e 	bne	r2,zero,81a24c <altera_avalon_lcd_16207_write+0x170>
    {
      sp->x = 0;
  81a240:	e0bffc17 	ldw	r2,-16(fp)
  81a244:	10000845 	stb	zero,33(r2)
  81a248:	00004a06 	br	81a374 <altera_avalon_lcd_16207_write+0x298>
    }
    else if (c == '\n')
  81a24c:	e0bff907 	ldb	r2,-28(fp)
  81a250:	10800298 	cmpnei	r2,r2,10
  81a254:	1000101e 	bne	r2,zero,81a298 <altera_avalon_lcd_16207_write+0x1bc>
    {
      sp->x = 0;
  81a258:	e0bffc17 	ldw	r2,-16(fp)
  81a25c:	10000845 	stb	zero,33(r2)
      sp->y++;
  81a260:	e0bffc17 	ldw	r2,-16(fp)
  81a264:	10800883 	ldbu	r2,34(r2)
  81a268:	10800044 	addi	r2,r2,1
  81a26c:	1007883a 	mov	r3,r2
  81a270:	e0bffc17 	ldw	r2,-16(fp)
  81a274:	10c00885 	stb	r3,34(r2)

      /* Let the cursor sit at X=0, Y=HEIGHT without scrolling so the user
       * can print two lines of data without losing one.
       */
      if (sp->y > ALT_LCD_HEIGHT)
  81a278:	e0bffc17 	ldw	r2,-16(fp)
  81a27c:	10800883 	ldbu	r2,34(r2)
  81a280:	10803fcc 	andi	r2,r2,255
  81a284:	108000f0 	cmpltui	r2,r2,3
  81a288:	10003a1e 	bne	r2,zero,81a374 <altera_avalon_lcd_16207_write+0x298>
        lcd_scroll_up(sp);
  81a28c:	e13ffc17 	ldw	r4,-16(fp)
  81a290:	0819d640 	call	819d64 <lcd_scroll_up>
  81a294:	00003706 	br	81a374 <altera_avalon_lcd_16207_write+0x298>
    }
    else if (c == '\b')
  81a298:	e0bff907 	ldb	r2,-28(fp)
  81a29c:	10800218 	cmpnei	r2,r2,8
  81a2a0:	10000b1e 	bne	r2,zero,81a2d0 <altera_avalon_lcd_16207_write+0x1f4>
    {
      if (sp->x > 0)
  81a2a4:	e0bffc17 	ldw	r2,-16(fp)
  81a2a8:	10800843 	ldbu	r2,33(r2)
  81a2ac:	10803fcc 	andi	r2,r2,255
  81a2b0:	10003026 	beq	r2,zero,81a374 <altera_avalon_lcd_16207_write+0x298>
        sp->x--;
  81a2b4:	e0bffc17 	ldw	r2,-16(fp)
  81a2b8:	10800843 	ldbu	r2,33(r2)
  81a2bc:	10bfffc4 	addi	r2,r2,-1
  81a2c0:	1007883a 	mov	r3,r2
  81a2c4:	e0bffc17 	ldw	r2,-16(fp)
  81a2c8:	10c00845 	stb	r3,33(r2)
  81a2cc:	00002906 	br	81a374 <altera_avalon_lcd_16207_write+0x298>
    }
    else if (isprint(c))
  81a2d0:	d0e00417 	ldw	r3,-32752(gp)
  81a2d4:	e0bff907 	ldb	r2,-28(fp)
  81a2d8:	10800044 	addi	r2,r2,1
  81a2dc:	1885883a 	add	r2,r3,r2
  81a2e0:	10800003 	ldbu	r2,0(r2)
  81a2e4:	10803fcc 	andi	r2,r2,255
  81a2e8:	1080201c 	xori	r2,r2,128
  81a2ec:	10bfe004 	addi	r2,r2,-128
  81a2f0:	108025cc 	andi	r2,r2,151
  81a2f4:	10001f26 	beq	r2,zero,81a374 <altera_avalon_lcd_16207_write+0x298>
    {
      /* If we didn't scroll on the last linefeed then we might need to do
       * it now. */
      if (sp->y >= ALT_LCD_HEIGHT)
  81a2f8:	e0bffc17 	ldw	r2,-16(fp)
  81a2fc:	10800883 	ldbu	r2,34(r2)
  81a300:	10803fcc 	andi	r2,r2,255
  81a304:	108000b0 	cmpltui	r2,r2,2
  81a308:	1000021e 	bne	r2,zero,81a314 <altera_avalon_lcd_16207_write+0x238>
        lcd_scroll_up(sp);
  81a30c:	e13ffc17 	ldw	r4,-16(fp)
  81a310:	0819d640 	call	819d64 <lcd_scroll_up>

      if (sp->x < ALT_LCD_VIRTUAL_WIDTH)
  81a314:	e0bffc17 	ldw	r2,-16(fp)
  81a318:	10800843 	ldbu	r2,33(r2)
  81a31c:	10803fcc 	andi	r2,r2,255
  81a320:	10801428 	cmpgeui	r2,r2,80
  81a324:	10000d1e 	bne	r2,zero,81a35c <altera_avalon_lcd_16207_write+0x280>
        sp->line[sp->y].data[sp->x] = c;
  81a328:	e0bffc17 	ldw	r2,-16(fp)
  81a32c:	10800883 	ldbu	r2,34(r2)
  81a330:	10c03fcc 	andi	r3,r2,255
  81a334:	e0bffc17 	ldw	r2,-16(fp)
  81a338:	10800843 	ldbu	r2,33(r2)
  81a33c:	10803fcc 	andi	r2,r2,255
  81a340:	e13ffc17 	ldw	r4,-16(fp)
  81a344:	18c018e4 	muli	r3,r3,99
  81a348:	20c7883a 	add	r3,r4,r3
  81a34c:	1885883a 	add	r2,r3,r2
  81a350:	10801004 	addi	r2,r2,64
  81a354:	e0fff903 	ldbu	r3,-28(fp)
  81a358:	10c00005 	stb	r3,0(r2)

      sp->x++;
  81a35c:	e0bffc17 	ldw	r2,-16(fp)
  81a360:	10800843 	ldbu	r2,33(r2)
  81a364:	10800044 	addi	r2,r2,1
  81a368:	1007883a 	mov	r3,r2
  81a36c:	e0bffc17 	ldw	r2,-16(fp)
  81a370:	10c00845 	stb	r3,33(r2)

  /* Tell the routine which is called off the timer interrupt that the
   * foreground routines are active so it must not repaint the display. */
  sp->active = 1;

  for ( ; ptr < end ; ptr++)
  81a374:	e0bffd17 	ldw	r2,-12(fp)
  81a378:	10800044 	addi	r2,r2,1
  81a37c:	e0bffd15 	stw	r2,-12(fp)
  81a380:	e0fffd17 	ldw	r3,-12(fp)
  81a384:	e0bff817 	ldw	r2,-32(fp)
  81a388:	18bf6436 	bltu	r3,r2,81a11c <__alt_data_end+0xff81a11c>
      sp->x++;
    }
  }

  /* Recalculate the scrolling parameters */
  widthmax = ALT_LCD_WIDTH;
  81a38c:	00800404 	movi	r2,16
  81a390:	e0bff615 	stw	r2,-40(fp)
  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  81a394:	e03ff515 	stw	zero,-44(fp)
  81a398:	00003706 	br	81a478 <altera_avalon_lcd_16207_write+0x39c>
  {
    int width;
    for (width = ALT_LCD_VIRTUAL_WIDTH ; width > 0 ; width--)
  81a39c:	00801404 	movi	r2,80
  81a3a0:	e0bff715 	stw	r2,-36(fp)
  81a3a4:	00001106 	br	81a3ec <altera_avalon_lcd_16207_write+0x310>
      if (sp->line[y].data[width-1] != ' ')
  81a3a8:	e0bff717 	ldw	r2,-36(fp)
  81a3ac:	10bfffc4 	addi	r2,r2,-1
  81a3b0:	e13ffc17 	ldw	r4,-16(fp)
  81a3b4:	e0fff517 	ldw	r3,-44(fp)
  81a3b8:	18c018e4 	muli	r3,r3,99
  81a3bc:	20c7883a 	add	r3,r4,r3
  81a3c0:	1885883a 	add	r2,r3,r2
  81a3c4:	10801004 	addi	r2,r2,64
  81a3c8:	10800003 	ldbu	r2,0(r2)
  81a3cc:	10803fcc 	andi	r2,r2,255
  81a3d0:	1080201c 	xori	r2,r2,128
  81a3d4:	10bfe004 	addi	r2,r2,-128
  81a3d8:	10800820 	cmpeqi	r2,r2,32
  81a3dc:	10000626 	beq	r2,zero,81a3f8 <altera_avalon_lcd_16207_write+0x31c>
  /* Recalculate the scrolling parameters */
  widthmax = ALT_LCD_WIDTH;
  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  {
    int width;
    for (width = ALT_LCD_VIRTUAL_WIDTH ; width > 0 ; width--)
  81a3e0:	e0bff717 	ldw	r2,-36(fp)
  81a3e4:	10bfffc4 	addi	r2,r2,-1
  81a3e8:	e0bff715 	stw	r2,-36(fp)
  81a3ec:	e0bff717 	ldw	r2,-36(fp)
  81a3f0:	00bfed16 	blt	zero,r2,81a3a8 <__alt_data_end+0xff81a3a8>
  81a3f4:	00000106 	br	81a3fc <altera_avalon_lcd_16207_write+0x320>
      if (sp->line[y].data[width-1] != ' ')
        break;
  81a3f8:	0001883a 	nop

    /* The minimum width is the size of the LCD panel.  If the real width
     * is long enough to require scrolling then add an extra space so the
     * end of the message doesn't run into the beginning of it.
     */
    if (width <= ALT_LCD_WIDTH)
  81a3fc:	e0bff717 	ldw	r2,-36(fp)
  81a400:	10800448 	cmpgei	r2,r2,17
  81a404:	1000031e 	bne	r2,zero,81a414 <altera_avalon_lcd_16207_write+0x338>
      width = ALT_LCD_WIDTH;
  81a408:	00800404 	movi	r2,16
  81a40c:	e0bff715 	stw	r2,-36(fp)
  81a410:	00000306 	br	81a420 <altera_avalon_lcd_16207_write+0x344>
    else
      width++;
  81a414:	e0bff717 	ldw	r2,-36(fp)
  81a418:	10800044 	addi	r2,r2,1
  81a41c:	e0bff715 	stw	r2,-36(fp)

    sp->line[y].width = width;
  81a420:	e0bff717 	ldw	r2,-36(fp)
  81a424:	1009883a 	mov	r4,r2
  81a428:	e0fffc17 	ldw	r3,-16(fp)
  81a42c:	e0bff517 	ldw	r2,-44(fp)
  81a430:	108018e4 	muli	r2,r2,99
  81a434:	1885883a 	add	r2,r3,r2
  81a438:	10802444 	addi	r2,r2,145
  81a43c:	11000005 	stb	r4,0(r2)
    if (widthmax < width)
  81a440:	e0fff617 	ldw	r3,-40(fp)
  81a444:	e0bff717 	ldw	r2,-36(fp)
  81a448:	1880020e 	bge	r3,r2,81a454 <altera_avalon_lcd_16207_write+0x378>
      widthmax = width;
  81a44c:	e0bff717 	ldw	r2,-36(fp)
  81a450:	e0bff615 	stw	r2,-40(fp)
    sp->line[y].speed = 0; /* By default lines don't scroll */
  81a454:	e0fffc17 	ldw	r3,-16(fp)
  81a458:	e0bff517 	ldw	r2,-44(fp)
  81a45c:	108018e4 	muli	r2,r2,99
  81a460:	1885883a 	add	r2,r3,r2
  81a464:	10802484 	addi	r2,r2,146
  81a468:	10000005 	stb	zero,0(r2)
    }
  }

  /* Recalculate the scrolling parameters */
  widthmax = ALT_LCD_WIDTH;
  for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  81a46c:	e0bff517 	ldw	r2,-44(fp)
  81a470:	10800044 	addi	r2,r2,1
  81a474:	e0bff515 	stw	r2,-44(fp)
  81a478:	e0bff517 	ldw	r2,-44(fp)
  81a47c:	10800090 	cmplti	r2,r2,2
  81a480:	103fc61e 	bne	r2,zero,81a39c <__alt_data_end+0xff81a39c>
    if (widthmax < width)
      widthmax = width;
    sp->line[y].speed = 0; /* By default lines don't scroll */
  }

  if (widthmax <= ALT_LCD_WIDTH)
  81a484:	e0bff617 	ldw	r2,-40(fp)
  81a488:	10800448 	cmpgei	r2,r2,17
  81a48c:	1000031e 	bne	r2,zero,81a49c <altera_avalon_lcd_16207_write+0x3c0>
    sp->scrollmax = 0;
  81a490:	e0bffc17 	ldw	r2,-16(fp)
  81a494:	10000985 	stb	zero,38(r2)
  81a498:	00002e06 	br	81a554 <altera_avalon_lcd_16207_write+0x478>
  else
  {
    widthmax *= 2;
  81a49c:	e0bff617 	ldw	r2,-40(fp)
  81a4a0:	1085883a 	add	r2,r2,r2
  81a4a4:	e0bff615 	stw	r2,-40(fp)
    sp->scrollmax = widthmax;
  81a4a8:	e0bff617 	ldw	r2,-40(fp)
  81a4ac:	1007883a 	mov	r3,r2
  81a4b0:	e0bffc17 	ldw	r2,-16(fp)
  81a4b4:	10c00985 	stb	r3,38(r2)

    /* Now calculate how fast each of the other lines should go */
    for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  81a4b8:	e03ff515 	stw	zero,-44(fp)
  81a4bc:	00002206 	br	81a548 <altera_avalon_lcd_16207_write+0x46c>
      if (sp->line[y].width > ALT_LCD_WIDTH)
  81a4c0:	e0fffc17 	ldw	r3,-16(fp)
  81a4c4:	e0bff517 	ldw	r2,-44(fp)
  81a4c8:	108018e4 	muli	r2,r2,99
  81a4cc:	1885883a 	add	r2,r3,r2
  81a4d0:	10802444 	addi	r2,r2,145
  81a4d4:	10800003 	ldbu	r2,0(r2)
  81a4d8:	10803fcc 	andi	r2,r2,255
  81a4dc:	1080201c 	xori	r2,r2,128
  81a4e0:	10bfe004 	addi	r2,r2,-128
  81a4e4:	10800450 	cmplti	r2,r2,17
  81a4e8:	1000141e 	bne	r2,zero,81a53c <altera_avalon_lcd_16207_write+0x460>
         */
#if 1
        /* This option makes all the lines scroll round at different speeds
         * which are chosen so that all the scrolls finish at the same time.
         */
        sp->line[y].speed = 256 * sp->line[y].width / widthmax;
  81a4ec:	e0fffc17 	ldw	r3,-16(fp)
  81a4f0:	e0bff517 	ldw	r2,-44(fp)
  81a4f4:	108018e4 	muli	r2,r2,99
  81a4f8:	1885883a 	add	r2,r3,r2
  81a4fc:	10802444 	addi	r2,r2,145
  81a500:	10800003 	ldbu	r2,0(r2)
  81a504:	10803fcc 	andi	r2,r2,255
  81a508:	1080201c 	xori	r2,r2,128
  81a50c:	10bfe004 	addi	r2,r2,-128
  81a510:	1004923a 	slli	r2,r2,8
  81a514:	e17ff617 	ldw	r5,-40(fp)
  81a518:	1009883a 	mov	r4,r2
  81a51c:	08154900 	call	815490 <__divsi3>
  81a520:	1009883a 	mov	r4,r2
  81a524:	e0fffc17 	ldw	r3,-16(fp)
  81a528:	e0bff517 	ldw	r2,-44(fp)
  81a52c:	108018e4 	muli	r2,r2,99
  81a530:	1885883a 	add	r2,r3,r2
  81a534:	10802484 	addi	r2,r2,146
  81a538:	11000005 	stb	r4,0(r2)
  {
    widthmax *= 2;
    sp->scrollmax = widthmax;

    /* Now calculate how fast each of the other lines should go */
    for (y = 0 ; y < ALT_LCD_HEIGHT ; y++)
  81a53c:	e0bff517 	ldw	r2,-44(fp)
  81a540:	10800044 	addi	r2,r2,1
  81a544:	e0bff515 	stw	r2,-44(fp)
  81a548:	e0bff517 	ldw	r2,-44(fp)
  81a54c:	10800090 	cmplti	r2,r2,2
  81a550:	103fdb1e 	bne	r2,zero,81a4c0 <__alt_data_end+0xff81a4c0>
   * (because active was set when the timer interrupt occurred).  If there
   * has been a missed repaint then paint again.  And again.  etc.
   */
  for ( ; ; )
  {
    int old_scrollpos = sp->scrollpos;
  81a554:	e0bffc17 	ldw	r2,-16(fp)
  81a558:	10800943 	ldbu	r2,37(r2)
  81a55c:	10803fcc 	andi	r2,r2,255
  81a560:	e0bffb15 	stw	r2,-20(fp)

    lcd_repaint_screen(sp);
  81a564:	e13ffc17 	ldw	r4,-16(fp)
  81a568:	0819b780 	call	819b78 <lcd_repaint_screen>

    /* Let the timer routines repaint the display again */
    sp->active = 0;
  81a56c:	e0bffc17 	ldw	r2,-16(fp)
  81a570:	100009c5 	stb	zero,39(r2)

    /* Have the timer routines tried to scroll while we were painting?
     * If not then we can exit */
    if (sp->scrollpos == old_scrollpos)
  81a574:	e0bffc17 	ldw	r2,-16(fp)
  81a578:	10800943 	ldbu	r2,37(r2)
  81a57c:	10c03fcc 	andi	r3,r2,255
  81a580:	e0bffb17 	ldw	r2,-20(fp)
  81a584:	18800426 	beq	r3,r2,81a598 <altera_avalon_lcd_16207_write+0x4bc>
      break;

    /* We need to repaint again since the display scrolled while we were
     * painting last time */
    sp->active = 1;
  81a588:	e0bffc17 	ldw	r2,-16(fp)
  81a58c:	00c00044 	movi	r3,1
  81a590:	10c009c5 	stb	r3,39(r2)
  }
  81a594:	003fef06 	br	81a554 <__alt_data_end+0xff81a554>
    sp->active = 0;

    /* Have the timer routines tried to scroll while we were painting?
     * If not then we can exit */
    if (sp->scrollpos == old_scrollpos)
      break;
  81a598:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->write_lock);

  return len;
  81a59c:	e0bffe17 	ldw	r2,-8(fp)
}
  81a5a0:	e037883a 	mov	sp,fp
  81a5a4:	dfc00117 	ldw	ra,4(sp)
  81a5a8:	df000017 	ldw	fp,0(sp)
  81a5ac:	dec00204 	addi	sp,sp,8
  81a5b0:	f800283a 	ret

0081a5b4 <alt_lcd_16207_timeout>:
/*
 * Timeout routine is called every second
 */

static alt_u32 alt_lcd_16207_timeout(void* context) 
{
  81a5b4:	defffc04 	addi	sp,sp,-16
  81a5b8:	dfc00315 	stw	ra,12(sp)
  81a5bc:	df000215 	stw	fp,8(sp)
  81a5c0:	df000204 	addi	fp,sp,8
  81a5c4:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_lcd_16207_state* sp = (altera_avalon_lcd_16207_state*)context;
  81a5c8:	e0bfff17 	ldw	r2,-4(fp)
  81a5cc:	e0bffe15 	stw	r2,-8(fp)

  /* Update the scrolling position */
  if (sp->scrollpos + 1 >= sp->scrollmax)
  81a5d0:	e0bffe17 	ldw	r2,-8(fp)
  81a5d4:	10800943 	ldbu	r2,37(r2)
  81a5d8:	10803fcc 	andi	r2,r2,255
  81a5dc:	10c00044 	addi	r3,r2,1
  81a5e0:	e0bffe17 	ldw	r2,-8(fp)
  81a5e4:	10800983 	ldbu	r2,38(r2)
  81a5e8:	10803fcc 	andi	r2,r2,255
  81a5ec:	18800316 	blt	r3,r2,81a5fc <alt_lcd_16207_timeout+0x48>
    sp->scrollpos = 0;
  81a5f0:	e0bffe17 	ldw	r2,-8(fp)
  81a5f4:	10000945 	stb	zero,37(r2)
  81a5f8:	00000606 	br	81a614 <alt_lcd_16207_timeout+0x60>
  else
    sp->scrollpos = sp->scrollpos + 1;
  81a5fc:	e0bffe17 	ldw	r2,-8(fp)
  81a600:	10800943 	ldbu	r2,37(r2)
  81a604:	10800044 	addi	r2,r2,1
  81a608:	1007883a 	mov	r3,r2
  81a60c:	e0bffe17 	ldw	r2,-8(fp)
  81a610:	10c00945 	stb	r3,37(r2)

  /* Repaint the panel unless the foreground will do it again soon */
  if (sp->scrollmax > 0 && !sp->active)
  81a614:	e0bffe17 	ldw	r2,-8(fp)
  81a618:	10800983 	ldbu	r2,38(r2)
  81a61c:	10803fcc 	andi	r2,r2,255
  81a620:	10000826 	beq	r2,zero,81a644 <alt_lcd_16207_timeout+0x90>
  81a624:	e0bffe17 	ldw	r2,-8(fp)
  81a628:	108009c3 	ldbu	r2,39(r2)
  81a62c:	10803fcc 	andi	r2,r2,255
  81a630:	1080201c 	xori	r2,r2,128
  81a634:	10bfe004 	addi	r2,r2,-128
  81a638:	1000021e 	bne	r2,zero,81a644 <alt_lcd_16207_timeout+0x90>
    lcd_repaint_screen(sp);
  81a63c:	e13ffe17 	ldw	r4,-8(fp)
  81a640:	0819b780 	call	819b78 <lcd_repaint_screen>

  return sp->period;
  81a644:	e0bffe17 	ldw	r2,-8(fp)
  81a648:	10800717 	ldw	r2,28(r2)
}
  81a64c:	e037883a 	mov	sp,fp
  81a650:	dfc00117 	ldw	ra,4(sp)
  81a654:	df000017 	ldw	fp,0(sp)
  81a658:	dec00204 	addi	sp,sp,8
  81a65c:	f800283a 	ret

0081a660 <altera_avalon_lcd_16207_init>:

/*
 * Called at boot time to initialise the LCD driver
 */
void altera_avalon_lcd_16207_init(altera_avalon_lcd_16207_state* sp)
{
  81a660:	defffc04 	addi	sp,sp,-16
  81a664:	dfc00315 	stw	ra,12(sp)
  81a668:	df000215 	stw	fp,8(sp)
  81a66c:	df000204 	addi	fp,sp,8
  81a670:	e13fff15 	stw	r4,-4(fp)
  unsigned int base = sp->base;
  81a674:	e0bfff17 	ldw	r2,-4(fp)
  81a678:	10800017 	ldw	r2,0(r2)
  81a67c:	e0bffe15 	stw	r2,-8(fp)

  /* Mark the device as functional */
  sp->broken = 0;
  81a680:	e0bfff17 	ldw	r2,-4(fp)
  81a684:	10000805 	stb	zero,32(r2)
   * the BUSY bit in the status register doesn't work until the display
   * has been reset three times.
   */

  /* Wait for 15 ms then reset */
  usleep(15000);
  81a688:	010ea604 	movi	r4,15000
  81a68c:	0818c340 	call	818c34 <usleep>
  IOWR_ALTERA_AVALON_LCD_16207_COMMAND(base, LCD_CMD_FUNCTION_SET | LCD_CMD_8BIT);
  81a690:	e0bffe17 	ldw	r2,-8(fp)
  81a694:	00c00c04 	movi	r3,48
  81a698:	10c00035 	stwio	r3,0(r2)

  /* Wait for another 4.1ms and reset again */
  usleep(4100);  
  81a69c:	01040104 	movi	r4,4100
  81a6a0:	0818c340 	call	818c34 <usleep>
  IOWR_ALTERA_AVALON_LCD_16207_COMMAND(base, LCD_CMD_FUNCTION_SET | LCD_CMD_8BIT);
  81a6a4:	e0bffe17 	ldw	r2,-8(fp)
  81a6a8:	00c00c04 	movi	r3,48
  81a6ac:	10c00035 	stwio	r3,0(r2)

  /* Wait a further 1 ms and reset a third time */
  usleep(1000);
  81a6b0:	0100fa04 	movi	r4,1000
  81a6b4:	0818c340 	call	818c34 <usleep>
  IOWR_ALTERA_AVALON_LCD_16207_COMMAND(base, LCD_CMD_FUNCTION_SET | LCD_CMD_8BIT);
  81a6b8:	e0bffe17 	ldw	r2,-8(fp)
  81a6bc:	00c00c04 	movi	r3,48
  81a6c0:	10c00035 	stwio	r3,0(r2)

  /* Setup interface parameters: 8 bit bus, 2 rows, 5x7 font */
  lcd_write_command(sp, LCD_CMD_FUNCTION_SET | LCD_CMD_8BIT | LCD_CMD_TWO_LINE);
  81a6c4:	01400e04 	movi	r5,56
  81a6c8:	e13fff17 	ldw	r4,-4(fp)
  81a6cc:	08199180 	call	819918 <lcd_write_command>
  
  /* Turn display off */
  lcd_write_command(sp, LCD_CMD_ONOFF);
  81a6d0:	01400204 	movi	r5,8
  81a6d4:	e13fff17 	ldw	r4,-4(fp)
  81a6d8:	08199180 	call	819918 <lcd_write_command>

  /* Clear display */
  lcd_clear_screen(sp);
  81a6dc:	e13fff17 	ldw	r4,-4(fp)
  81a6e0:	0819aa80 	call	819aa8 <lcd_clear_screen>
  
  /* Set mode: increment after writing, don't shift display */
  lcd_write_command(sp, LCD_CMD_MODES | LCD_CMD_MODE_INC);
  81a6e4:	01400184 	movi	r5,6
  81a6e8:	e13fff17 	ldw	r4,-4(fp)
  81a6ec:	08199180 	call	819918 <lcd_write_command>

  /* Turn display on */
  lcd_write_command(sp, LCD_CMD_ONOFF | LCD_CMD_ENABLE_DISP);
  81a6f0:	01400304 	movi	r5,12
  81a6f4:	e13fff17 	ldw	r4,-4(fp)
  81a6f8:	08199180 	call	819918 <lcd_write_command>

  sp->esccount = -1;
  81a6fc:	e0bfff17 	ldw	r2,-4(fp)
  81a700:	00ffffc4 	movi	r3,-1
  81a704:	10c00905 	stb	r3,36(r2)
  memset(sp->escape, 0, sizeof(sp->escape));
  81a708:	e0bfff17 	ldw	r2,-4(fp)
  81a70c:	10800a04 	addi	r2,r2,40
  81a710:	01800204 	movi	r6,8
  81a714:	000b883a 	mov	r5,zero
  81a718:	1009883a 	mov	r4,r2
  81a71c:	0802dc40 	call	802dc4 <memset>

  sp->scrollpos = 0;
  81a720:	e0bfff17 	ldw	r2,-4(fp)
  81a724:	10000945 	stb	zero,37(r2)
  sp->scrollmax = 0;
  81a728:	e0bfff17 	ldw	r2,-4(fp)
  81a72c:	10000985 	stb	zero,38(r2)
  sp->active = 0;
  81a730:	e0bfff17 	ldw	r2,-4(fp)
  81a734:	100009c5 	stb	zero,39(r2)
  81a738:	d0a77717 	ldw	r2,-25124(gp)

  sp->period = alt_ticks_per_second() / 10; /* Call every 100ms */
  81a73c:	01400284 	movi	r5,10
  81a740:	1009883a 	mov	r4,r2
  81a744:	08155880 	call	815588 <__udivsi3>
  81a748:	1007883a 	mov	r3,r2
  81a74c:	e0bfff17 	ldw	r2,-4(fp)
  81a750:	10c00715 	stw	r3,28(r2)

  alt_alarm_start(&sp->alarm, sp->period, &alt_lcd_16207_timeout, sp);
  81a754:	e0bfff17 	ldw	r2,-4(fp)
  81a758:	10c00104 	addi	r3,r2,4
  81a75c:	e0bfff17 	ldw	r2,-4(fp)
  81a760:	10800717 	ldw	r2,28(r2)
  81a764:	e1ffff17 	ldw	r7,-4(fp)
  81a768:	018020b4 	movhi	r6,130
  81a76c:	31a96d04 	addi	r6,r6,-23116
  81a770:	100b883a 	mov	r5,r2
  81a774:	1809883a 	mov	r4,r3
  81a778:	081b1b80 	call	81b1b8 <alt_alarm_start>
}
  81a77c:	0001883a 	nop
  81a780:	e037883a 	mov	sp,fp
  81a784:	dfc00117 	ldw	ra,4(sp)
  81a788:	df000017 	ldw	fp,0(sp)
  81a78c:	dec00204 	addi	sp,sp,8
  81a790:	f800283a 	ret

0081a794 <altera_avalon_lcd_16207_write_fd>:
extern int altera_avalon_lcd_16207_write(altera_avalon_lcd_16207_state* sp,
  const char* ptr, int count, int flags);

int 
altera_avalon_lcd_16207_write_fd(alt_fd* fd, const char* buffer, int space)
{
  81a794:	defffa04 	addi	sp,sp,-24
  81a798:	dfc00515 	stw	ra,20(sp)
  81a79c:	df000415 	stw	fp,16(sp)
  81a7a0:	df000404 	addi	fp,sp,16
  81a7a4:	e13ffd15 	stw	r4,-12(fp)
  81a7a8:	e17ffe15 	stw	r5,-8(fp)
  81a7ac:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_lcd_16207_dev* dev = (altera_avalon_lcd_16207_dev*) fd->dev; 
  81a7b0:	e0bffd17 	ldw	r2,-12(fp)
  81a7b4:	10800017 	ldw	r2,0(r2)
  81a7b8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_lcd_16207_write(&dev->state, buffer, space,
  81a7bc:	e0bffc17 	ldw	r2,-16(fp)
  81a7c0:	10c00a04 	addi	r3,r2,40
  81a7c4:	e0bffd17 	ldw	r2,-12(fp)
  81a7c8:	10800217 	ldw	r2,8(r2)
  81a7cc:	100f883a 	mov	r7,r2
  81a7d0:	e1bfff17 	ldw	r6,-4(fp)
  81a7d4:	e17ffe17 	ldw	r5,-8(fp)
  81a7d8:	1809883a 	mov	r4,r3
  81a7dc:	081a0dc0 	call	81a0dc <altera_avalon_lcd_16207_write>
      fd->fd_flags);
}
  81a7e0:	e037883a 	mov	sp,fp
  81a7e4:	dfc00117 	ldw	ra,4(sp)
  81a7e8:	df000017 	ldw	fp,0(sp)
  81a7ec:	dec00204 	addi	sp,sp,8
  81a7f0:	f800283a 	ret

0081a7f4 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
  81a7f4:	defff904 	addi	sp,sp,-28
  81a7f8:	dfc00615 	stw	ra,24(sp)
  81a7fc:	df000515 	stw	fp,20(sp)
  81a800:	df000504 	addi	fp,sp,20
  81a804:	e13ffe15 	stw	r4,-8(fp)
  81a808:	e17fff15 	stw	r5,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
  81a80c:	0007883a 	mov	r3,zero
  81a810:	e0bffe17 	ldw	r2,-8(fp)
  81a814:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
  81a818:	e0bffe17 	ldw	r2,-8(fp)
  81a81c:	10800104 	addi	r2,r2,4
  81a820:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81a824:	0005303a 	rdctl	r2,status
  81a828:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  81a82c:	e0fffc17 	ldw	r3,-16(fp)
  81a830:	00bfff84 	movi	r2,-2
  81a834:	1884703a 	and	r2,r3,r2
  81a838:	1001703a 	wrctl	status,r2
  
  return context;
  81a83c:	e0bffc17 	ldw	r2,-16(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  81a840:	e0bffb15 	stw	r2,-20(fp)
  alt_tick ();
  81a844:	081ba700 	call	81ba70 <alt_tick>
  81a848:	e0bffb17 	ldw	r2,-20(fp)
  81a84c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81a850:	e0bffd17 	ldw	r2,-12(fp)
  81a854:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
  81a858:	0001883a 	nop
  81a85c:	e037883a 	mov	sp,fp
  81a860:	dfc00117 	ldw	ra,4(sp)
  81a864:	df000017 	ldw	fp,0(sp)
  81a868:	dec00204 	addi	sp,sp,8
  81a86c:	f800283a 	ret

0081a870 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
  81a870:	defff904 	addi	sp,sp,-28
  81a874:	dfc00615 	stw	ra,24(sp)
  81a878:	df000515 	stw	fp,20(sp)
  81a87c:	df000504 	addi	fp,sp,20
  81a880:	e13ffc15 	stw	r4,-16(fp)
  81a884:	e17ffd15 	stw	r5,-12(fp)
  81a888:	e1bffe15 	stw	r6,-8(fp)
  81a88c:	e1ffff15 	stw	r7,-4(fp)
  81a890:	e0bfff17 	ldw	r2,-4(fp)
  81a894:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
  81a898:	d0a77717 	ldw	r2,-25124(gp)
  81a89c:	1000021e 	bne	r2,zero,81a8a8 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
  81a8a0:	e0bffb17 	ldw	r2,-20(fp)
  81a8a4:	d0a77715 	stw	r2,-25124(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
  81a8a8:	e0bffc17 	ldw	r2,-16(fp)
  81a8ac:	10800104 	addi	r2,r2,4
  81a8b0:	00c001c4 	movi	r3,7
  81a8b4:	10c00035 	stwio	r3,0(r2)
  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
  81a8b8:	018020b4 	movhi	r6,130
  81a8bc:	31a9fd04 	addi	r6,r6,-22540
  81a8c0:	e17ffc17 	ldw	r5,-16(fp)
  81a8c4:	e13ffe17 	ldw	r4,-8(fp)
  81a8c8:	08182740 	call	818274 <alt_irq_register>
#endif  
}
  81a8cc:	0001883a 	nop
  81a8d0:	e037883a 	mov	sp,fp
  81a8d4:	dfc00117 	ldw	ra,4(sp)
  81a8d8:	df000017 	ldw	fp,0(sp)
  81a8dc:	dec00204 	addi	sp,sp,8
  81a8e0:	f800283a 	ret

0081a8e4 <altera_avalon_uart_read_fd>:
 *
 */

int 
altera_avalon_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  81a8e4:	defffa04 	addi	sp,sp,-24
  81a8e8:	dfc00515 	stw	ra,20(sp)
  81a8ec:	df000415 	stw	fp,16(sp)
  81a8f0:	df000404 	addi	fp,sp,16
  81a8f4:	e13ffd15 	stw	r4,-12(fp)
  81a8f8:	e17ffe15 	stw	r5,-8(fp)
  81a8fc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_uart_dev* dev = (altera_avalon_uart_dev*) fd->dev; 
  81a900:	e0bffd17 	ldw	r2,-12(fp)
  81a904:	10800017 	ldw	r2,0(r2)
  81a908:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_uart_read(&dev->state, buffer, space,
  81a90c:	e0bffc17 	ldw	r2,-16(fp)
  81a910:	10c00a04 	addi	r3,r2,40
  81a914:	e0bffd17 	ldw	r2,-12(fp)
  81a918:	10800217 	ldw	r2,8(r2)
  81a91c:	100f883a 	mov	r7,r2
  81a920:	e1bfff17 	ldw	r6,-4(fp)
  81a924:	e17ffe17 	ldw	r5,-8(fp)
  81a928:	1809883a 	mov	r4,r3
  81a92c:	081adf40 	call	81adf4 <altera_avalon_uart_read>
      fd->fd_flags);
}
  81a930:	e037883a 	mov	sp,fp
  81a934:	dfc00117 	ldw	ra,4(sp)
  81a938:	df000017 	ldw	fp,0(sp)
  81a93c:	dec00204 	addi	sp,sp,8
  81a940:	f800283a 	ret

0081a944 <altera_avalon_uart_write_fd>:

int 
altera_avalon_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  81a944:	defffa04 	addi	sp,sp,-24
  81a948:	dfc00515 	stw	ra,20(sp)
  81a94c:	df000415 	stw	fp,16(sp)
  81a950:	df000404 	addi	fp,sp,16
  81a954:	e13ffd15 	stw	r4,-12(fp)
  81a958:	e17ffe15 	stw	r5,-8(fp)
  81a95c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_uart_dev* dev = (altera_avalon_uart_dev*) fd->dev; 
  81a960:	e0bffd17 	ldw	r2,-12(fp)
  81a964:	10800017 	ldw	r2,0(r2)
  81a968:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_uart_write(&dev->state, buffer, space,
  81a96c:	e0bffc17 	ldw	r2,-16(fp)
  81a970:	10c00a04 	addi	r3,r2,40
  81a974:	e0bffd17 	ldw	r2,-12(fp)
  81a978:	10800217 	ldw	r2,8(r2)
  81a97c:	100f883a 	mov	r7,r2
  81a980:	e1bfff17 	ldw	r6,-4(fp)
  81a984:	e17ffe17 	ldw	r5,-8(fp)
  81a988:	1809883a 	mov	r4,r3
  81a98c:	081b00c0 	call	81b00c <altera_avalon_uart_write>
      fd->fd_flags);
}
  81a990:	e037883a 	mov	sp,fp
  81a994:	dfc00117 	ldw	ra,4(sp)
  81a998:	df000017 	ldw	fp,0(sp)
  81a99c:	dec00204 	addi	sp,sp,8
  81a9a0:	f800283a 	ret

0081a9a4 <altera_avalon_uart_close_fd>:

#endif /* ALTERA_AVALON_UART_USE_IOCTL */

int 
altera_avalon_uart_close_fd(alt_fd* fd)
{
  81a9a4:	defffc04 	addi	sp,sp,-16
  81a9a8:	dfc00315 	stw	ra,12(sp)
  81a9ac:	df000215 	stw	fp,8(sp)
  81a9b0:	df000204 	addi	fp,sp,8
  81a9b4:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_uart_dev* dev = (altera_avalon_uart_dev*) fd->dev; 
  81a9b8:	e0bfff17 	ldw	r2,-4(fp)
  81a9bc:	10800017 	ldw	r2,0(r2)
  81a9c0:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_uart_close(&dev->state, fd->fd_flags);
  81a9c4:	e0bffe17 	ldw	r2,-8(fp)
  81a9c8:	10c00a04 	addi	r3,r2,40
  81a9cc:	e0bfff17 	ldw	r2,-4(fp)
  81a9d0:	10800217 	ldw	r2,8(r2)
  81a9d4:	100b883a 	mov	r5,r2
  81a9d8:	1809883a 	mov	r4,r3
  81a9dc:	081ad640 	call	81ad64 <altera_avalon_uart_close>
}
  81a9e0:	e037883a 	mov	sp,fp
  81a9e4:	dfc00117 	ldw	ra,4(sp)
  81a9e8:	df000017 	ldw	fp,0(sp)
  81a9ec:	dec00204 	addi	sp,sp,8
  81a9f0:	f800283a 	ret

0081a9f4 <altera_avalon_uart_init>:
  alt_u32 status);

void 
altera_avalon_uart_init(altera_avalon_uart_state* sp, 
  alt_u32 irq_controller_id,  alt_u32 irq)
{
  81a9f4:	defff904 	addi	sp,sp,-28
  81a9f8:	dfc00615 	stw	ra,24(sp)
  81a9fc:	df000515 	stw	fp,20(sp)
  81aa00:	df000504 	addi	fp,sp,20
  81aa04:	e13ffd15 	stw	r4,-12(fp)
  81aa08:	e17ffe15 	stw	r5,-8(fp)
  81aa0c:	e1bfff15 	stw	r6,-4(fp)
  void* base = sp->base;
  81aa10:	e0bffd17 	ldw	r2,-12(fp)
  81aa14:	10800017 	ldw	r2,0(r2)
  81aa18:	e0bffb15 	stw	r2,-20(fp)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
  81aa1c:	0005883a 	mov	r2,zero
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */
  error = ALT_FLAG_CREATE (&sp->events, 0)    || 
          ALT_SEM_CREATE (&sp->read_lock, 1)  ||
  81aa20:	1000041e 	bne	r2,zero,81aa34 <altera_avalon_uart_init+0x40>
  81aa24:	0005883a 	mov	r2,zero
  /* 
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */
  error = ALT_FLAG_CREATE (&sp->events, 0)    || 
  81aa28:	1000021e 	bne	r2,zero,81aa34 <altera_avalon_uart_init+0x40>
  81aa2c:	0005883a 	mov	r2,zero
          ALT_SEM_CREATE (&sp->read_lock, 1)  ||
  81aa30:	10000226 	beq	r2,zero,81aa3c <altera_avalon_uart_init+0x48>
  81aa34:	00800044 	movi	r2,1
  81aa38:	00000106 	br	81aa40 <altera_avalon_uart_init+0x4c>
  81aa3c:	0005883a 	mov	r2,zero
  /* 
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */
  error = ALT_FLAG_CREATE (&sp->events, 0)    || 
  81aa40:	e0bffc15 	stw	r2,-16(fp)
          ALT_SEM_CREATE (&sp->read_lock, 1)  ||
          ALT_SEM_CREATE (&sp->write_lock, 1);

  if (!error)
  81aa44:	e0bffc17 	ldw	r2,-16(fp)
  81aa48:	10000d1e 	bne	r2,zero,81aa80 <altera_avalon_uart_init+0x8c>
  {
    /* enable interrupts at the device */
    sp->ctrl = ALTERA_AVALON_UART_CONTROL_RTS_MSK  |
  81aa4c:	e0bffd17 	ldw	r2,-12(fp)
  81aa50:	00c32004 	movi	r3,3200
  81aa54:	10c00115 	stw	r3,4(r2)
                ALTERA_AVALON_UART_CONTROL_RRDY_MSK |
                ALTERA_AVALON_UART_CONTROL_DCTS_MSK;

    IOWR_ALTERA_AVALON_UART_CONTROL(base, sp->ctrl); 
  81aa58:	e0bffb17 	ldw	r2,-20(fp)
  81aa5c:	10800304 	addi	r2,r2,12
  81aa60:	e0fffd17 	ldw	r3,-12(fp)
  81aa64:	18c00117 	ldw	r3,4(r3)
  81aa68:	10c00035 	stwio	r3,0(r2)
    /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
    alt_ic_isr_register(irq_controller_id, irq, altera_avalon_uart_irq, sp, 
      0x0);
#else
    alt_irq_register (irq, sp, altera_avalon_uart_irq);
  81aa6c:	018020b4 	movhi	r6,130
  81aa70:	31aaa604 	addi	r6,r6,-21864
  81aa74:	e17ffd17 	ldw	r5,-12(fp)
  81aa78:	e13fff17 	ldw	r4,-4(fp)
  81aa7c:	08182740 	call	818274 <alt_irq_register>
#endif  
  }
}
  81aa80:	0001883a 	nop
  81aa84:	e037883a 	mov	sp,fp
  81aa88:	dfc00117 	ldw	ra,4(sp)
  81aa8c:	df000017 	ldw	fp,0(sp)
  81aa90:	dec00204 	addi	sp,sp,8
  81aa94:	f800283a 	ret

0081aa98 <altera_avalon_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_uart_irq(void* context)
#else
static void altera_avalon_uart_irq(void* context, alt_u32 id)
#endif
{
  81aa98:	defff904 	addi	sp,sp,-28
  81aa9c:	dfc00615 	stw	ra,24(sp)
  81aaa0:	df000515 	stw	fp,20(sp)
  81aaa4:	df000504 	addi	fp,sp,20
  81aaa8:	e13ffe15 	stw	r4,-8(fp)
  81aaac:	e17fff15 	stw	r5,-4(fp)
  alt_u32 status;

  altera_avalon_uart_state* sp = (altera_avalon_uart_state*) context;
  81aab0:	e0bffe17 	ldw	r2,-8(fp)
  81aab4:	e0bffb15 	stw	r2,-20(fp)
  void* base               = sp->base;
  81aab8:	e0bffb17 	ldw	r2,-20(fp)
  81aabc:	10800017 	ldw	r2,0(r2)
  81aac0:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Read the status register in order to determine the cause of the
   * interrupt.
   */

  status = IORD_ALTERA_AVALON_UART_STATUS(base);
  81aac4:	e0bffc17 	ldw	r2,-16(fp)
  81aac8:	10800204 	addi	r2,r2,8
  81aacc:	10800037 	ldwio	r2,0(r2)
  81aad0:	e0bffd15 	stw	r2,-12(fp)

  /* Clear any error flags set at the device */
  IOWR_ALTERA_AVALON_UART_STATUS(base, 0);
  81aad4:	e0bffc17 	ldw	r2,-16(fp)
  81aad8:	10800204 	addi	r2,r2,8
  81aadc:	0007883a 	mov	r3,zero
  81aae0:	10c00035 	stwio	r3,0(r2)

  /* Dummy read to ensure IRQ is negated before ISR returns */
  IORD_ALTERA_AVALON_UART_STATUS(base);
  81aae4:	e0bffc17 	ldw	r2,-16(fp)
  81aae8:	10800204 	addi	r2,r2,8
  81aaec:	10800037 	ldwio	r2,0(r2)
  
  /* process a read irq */
  if (status & ALTERA_AVALON_UART_STATUS_RRDY_MSK)
  81aaf0:	e0bffd17 	ldw	r2,-12(fp)
  81aaf4:	1080200c 	andi	r2,r2,128
  81aaf8:	10000326 	beq	r2,zero,81ab08 <altera_avalon_uart_irq+0x70>
  {
    altera_avalon_uart_rxirq(sp, status);
  81aafc:	e17ffd17 	ldw	r5,-12(fp)
  81ab00:	e13ffb17 	ldw	r4,-20(fp)
  81ab04:	081ab380 	call	81ab38 <altera_avalon_uart_rxirq>
  }

  /* process a write irq */
  if (status & (ALTERA_AVALON_UART_STATUS_TRDY_MSK | 
  81ab08:	e0bffd17 	ldw	r2,-12(fp)
  81ab0c:	1081100c 	andi	r2,r2,1088
  81ab10:	10000326 	beq	r2,zero,81ab20 <altera_avalon_uart_irq+0x88>
                  ALTERA_AVALON_UART_STATUS_DCTS_MSK))
  {
    altera_avalon_uart_txirq(sp, status);
  81ab14:	e17ffd17 	ldw	r5,-12(fp)
  81ab18:	e13ffb17 	ldw	r4,-20(fp)
  81ab1c:	081ac1c0 	call	81ac1c <altera_avalon_uart_txirq>
  }
  

}
  81ab20:	0001883a 	nop
  81ab24:	e037883a 	mov	sp,fp
  81ab28:	dfc00117 	ldw	ra,4(sp)
  81ab2c:	df000017 	ldw	fp,0(sp)
  81ab30:	dec00204 	addi	sp,sp,8
  81ab34:	f800283a 	ret

0081ab38 <altera_avalon_uart_rxirq>:
 * the receive circular buffer, and sets the apropriate flags to indicate 
 * that there is data ready to be processed.
 */
static void 
altera_avalon_uart_rxirq(altera_avalon_uart_state* sp, alt_u32 status)
{
  81ab38:	defffc04 	addi	sp,sp,-16
  81ab3c:	df000315 	stw	fp,12(sp)
  81ab40:	df000304 	addi	fp,sp,12
  81ab44:	e13ffe15 	stw	r4,-8(fp)
  81ab48:	e17fff15 	stw	r5,-4(fp)
  alt_u32 next;
  
  /* If there was an error, discard the data */

  if (status & (ALTERA_AVALON_UART_STATUS_PE_MSK | 
  81ab4c:	e0bfff17 	ldw	r2,-4(fp)
  81ab50:	108000cc 	andi	r2,r2,3
  81ab54:	10002c1e 	bne	r2,zero,81ac08 <altera_avalon_uart_rxirq+0xd0>
   * In a multi-threaded environment, set the read event flag to indicate
   * that there is data ready. This is only done if the circular buffer was
   * previously empty.
   */

  if (sp->rx_end == sp->rx_start)
  81ab58:	e0bffe17 	ldw	r2,-8(fp)
  81ab5c:	10800317 	ldw	r2,12(r2)
  81ab60:	e0bffe17 	ldw	r2,-8(fp)
  81ab64:	10800217 	ldw	r2,8(r2)
    ALT_FLAG_POST (sp->events, ALT_UART_READ_RDY, OS_FLAG_SET);
  }

  /* Determine which slot to use next in the circular buffer */

  next = (sp->rx_end + 1) & ALT_AVALON_UART_BUF_MSK;
  81ab68:	e0bffe17 	ldw	r2,-8(fp)
  81ab6c:	10800317 	ldw	r2,12(r2)
  81ab70:	10800044 	addi	r2,r2,1
  81ab74:	10800fcc 	andi	r2,r2,63
  81ab78:	e0bffd15 	stw	r2,-12(fp)

  /* Transfer data from the device to the circular buffer */

  sp->rx_buf[sp->rx_end] = IORD_ALTERA_AVALON_UART_RXDATA(sp->base);
  81ab7c:	e0bffe17 	ldw	r2,-8(fp)
  81ab80:	10800317 	ldw	r2,12(r2)
  81ab84:	e0fffe17 	ldw	r3,-8(fp)
  81ab88:	18c00017 	ldw	r3,0(r3)
  81ab8c:	18c00037 	ldwio	r3,0(r3)
  81ab90:	1809883a 	mov	r4,r3
  81ab94:	e0fffe17 	ldw	r3,-8(fp)
  81ab98:	1885883a 	add	r2,r3,r2
  81ab9c:	10800704 	addi	r2,r2,28
  81aba0:	11000005 	stb	r4,0(r2)

  sp->rx_end = next;
  81aba4:	e0bffe17 	ldw	r2,-8(fp)
  81aba8:	e0fffd17 	ldw	r3,-12(fp)
  81abac:	10c00315 	stw	r3,12(r2)

  next = (sp->rx_end + 1) & ALT_AVALON_UART_BUF_MSK;
  81abb0:	e0bffe17 	ldw	r2,-8(fp)
  81abb4:	10800317 	ldw	r2,12(r2)
  81abb8:	10800044 	addi	r2,r2,1
  81abbc:	10800fcc 	andi	r2,r2,63
  81abc0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * If the cicular buffer was full, disable interrupts. Interrupts will be
   * re-enabled when data is removed from the buffer.
   */

  if (next == sp->rx_start)
  81abc4:	e0bffe17 	ldw	r2,-8(fp)
  81abc8:	10c00217 	ldw	r3,8(r2)
  81abcc:	e0bffd17 	ldw	r2,-12(fp)
  81abd0:	18800e1e 	bne	r3,r2,81ac0c <altera_avalon_uart_rxirq+0xd4>
  {
    sp->ctrl &= ~ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
  81abd4:	e0bffe17 	ldw	r2,-8(fp)
  81abd8:	10c00117 	ldw	r3,4(r2)
  81abdc:	00bfdfc4 	movi	r2,-129
  81abe0:	1886703a 	and	r3,r3,r2
  81abe4:	e0bffe17 	ldw	r2,-8(fp)
  81abe8:	10c00115 	stw	r3,4(r2)
    IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl); 
  81abec:	e0bffe17 	ldw	r2,-8(fp)
  81abf0:	10800017 	ldw	r2,0(r2)
  81abf4:	10800304 	addi	r2,r2,12
  81abf8:	e0fffe17 	ldw	r3,-8(fp)
  81abfc:	18c00117 	ldw	r3,4(r3)
  81ac00:	10c00035 	stwio	r3,0(r2)
  81ac04:	00000106 	br	81ac0c <altera_avalon_uart_rxirq+0xd4>
  /* If there was an error, discard the data */

  if (status & (ALTERA_AVALON_UART_STATUS_PE_MSK | 
                  ALTERA_AVALON_UART_STATUS_FE_MSK))
  {
    return;
  81ac08:	0001883a 	nop
  if (next == sp->rx_start)
  {
    sp->ctrl &= ~ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
    IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl); 
  }   
}
  81ac0c:	e037883a 	mov	sp,fp
  81ac10:	df000017 	ldw	fp,0(sp)
  81ac14:	dec00104 	addi	sp,sp,4
  81ac18:	f800283a 	ret

0081ac1c <altera_avalon_uart_txirq>:
 * buffer to the device, and sets the apropriate flags to indicate that 
 * there is data ready to be processed.
 */
static void 
altera_avalon_uart_txirq(altera_avalon_uart_state* sp, alt_u32 status)
{
  81ac1c:	defffb04 	addi	sp,sp,-20
  81ac20:	df000415 	stw	fp,16(sp)
  81ac24:	df000404 	addi	fp,sp,16
  81ac28:	e13ffc15 	stw	r4,-16(fp)
  81ac2c:	e17ffd15 	stw	r5,-12(fp)
  /* Transfer data if there is some ready to be transfered */

  if (sp->tx_start != sp->tx_end)
  81ac30:	e0bffc17 	ldw	r2,-16(fp)
  81ac34:	10c00417 	ldw	r3,16(r2)
  81ac38:	e0bffc17 	ldw	r2,-16(fp)
  81ac3c:	10800517 	ldw	r2,20(r2)
  81ac40:	18803226 	beq	r3,r2,81ad0c <altera_avalon_uart_txirq+0xf0>
    /* 
     * If the device is using flow control (i.e. RTS/CTS), then the
     * transmitter is required to throttle if CTS is high.
     */

    if (!(sp->flags & ALT_AVALON_UART_FC) ||
  81ac44:	e0bffc17 	ldw	r2,-16(fp)
  81ac48:	10800617 	ldw	r2,24(r2)
  81ac4c:	1080008c 	andi	r2,r2,2
  81ac50:	10000326 	beq	r2,zero,81ac60 <altera_avalon_uart_txirq+0x44>
      (status & ALTERA_AVALON_UART_STATUS_CTS_MSK))
  81ac54:	e0bffd17 	ldw	r2,-12(fp)
  81ac58:	1082000c 	andi	r2,r2,2048
    /* 
     * If the device is using flow control (i.e. RTS/CTS), then the
     * transmitter is required to throttle if CTS is high.
     */

    if (!(sp->flags & ALT_AVALON_UART_FC) ||
  81ac5c:	10001d26 	beq	r2,zero,81acd4 <altera_avalon_uart_txirq+0xb8>
       * In a multi-threaded environment, set the write event flag to indicate
       * that there is space in the circular buffer. This is only done if the
       * buffer was previously empty.
       */

      if (sp->tx_start == ((sp->tx_end + 1) & ALT_AVALON_UART_BUF_MSK))
  81ac60:	e0bffc17 	ldw	r2,-16(fp)
  81ac64:	10800417 	ldw	r2,16(r2)
  81ac68:	e0bffc17 	ldw	r2,-16(fp)
  81ac6c:	10800517 	ldw	r2,20(r2)
                       OS_FLAG_SET);
      }

      /* Write the data to the device */

      IOWR_ALTERA_AVALON_UART_TXDATA(sp->base, sp->tx_buf[sp->tx_start]);
  81ac70:	e0bffc17 	ldw	r2,-16(fp)
  81ac74:	10800017 	ldw	r2,0(r2)
  81ac78:	10800104 	addi	r2,r2,4
  81ac7c:	e0fffc17 	ldw	r3,-16(fp)
  81ac80:	18c00417 	ldw	r3,16(r3)
  81ac84:	e13ffc17 	ldw	r4,-16(fp)
  81ac88:	20c7883a 	add	r3,r4,r3
  81ac8c:	18c01704 	addi	r3,r3,92
  81ac90:	18c00003 	ldbu	r3,0(r3)
  81ac94:	18c03fcc 	andi	r3,r3,255
  81ac98:	10c00035 	stwio	r3,0(r2)

      sp->tx_start = (++sp->tx_start) & ALT_AVALON_UART_BUF_MSK;
  81ac9c:	e0bffc17 	ldw	r2,-16(fp)
  81aca0:	10800417 	ldw	r2,16(r2)
  81aca4:	10800044 	addi	r2,r2,1
  81aca8:	e0fffc17 	ldw	r3,-16(fp)
  81acac:	18800415 	stw	r2,16(r3)
  81acb0:	10c00fcc 	andi	r3,r2,63
  81acb4:	e0bffc17 	ldw	r2,-16(fp)
  81acb8:	10c00415 	stw	r3,16(r2)
      /*
       * In case the tranmit interrupt had previously been disabled by 
       * detecting a low value on CTS, it is reenabled here.
       */ 

      sp->ctrl |= ALTERA_AVALON_UART_CONTROL_TRDY_MSK;
  81acbc:	e0bffc17 	ldw	r2,-16(fp)
  81acc0:	10800117 	ldw	r2,4(r2)
  81acc4:	10c01014 	ori	r3,r2,64
  81acc8:	e0bffc17 	ldw	r2,-16(fp)
  81accc:	10c00115 	stw	r3,4(r2)
  81acd0:	00000e06 	br	81ad0c <altera_avalon_uart_txirq+0xf0>
       * the last write to the status register. To avoid this resulting in
       * deadlock, it's necessary to re-check the status register here
       * before throttling.
       */
 
      status = IORD_ALTERA_AVALON_UART_STATUS(sp->base); 
  81acd4:	e0bffc17 	ldw	r2,-16(fp)
  81acd8:	10800017 	ldw	r2,0(r2)
  81acdc:	10800204 	addi	r2,r2,8
  81ace0:	10800037 	ldwio	r2,0(r2)
  81ace4:	e0bffd15 	stw	r2,-12(fp)

      if (!(status & ALTERA_AVALON_UART_STATUS_CTS_MSK))
  81ace8:	e0bffd17 	ldw	r2,-12(fp)
  81acec:	1082000c 	andi	r2,r2,2048
  81acf0:	1000061e 	bne	r2,zero,81ad0c <altera_avalon_uart_txirq+0xf0>
      {
        sp->ctrl &= ~ALTERA_AVALON_UART_CONTROL_TRDY_MSK;
  81acf4:	e0bffc17 	ldw	r2,-16(fp)
  81acf8:	10c00117 	ldw	r3,4(r2)
  81acfc:	00bfefc4 	movi	r2,-65
  81ad00:	1886703a 	and	r3,r3,r2
  81ad04:	e0bffc17 	ldw	r2,-16(fp)
  81ad08:	10c00115 	stw	r3,4(r2)
  /*
   * If the circular buffer is empty, disable the interrupt. This will be
   * re-enabled when new data is placed in the buffer.
   */

  if (sp->tx_start == sp->tx_end)
  81ad0c:	e0bffc17 	ldw	r2,-16(fp)
  81ad10:	10c00417 	ldw	r3,16(r2)
  81ad14:	e0bffc17 	ldw	r2,-16(fp)
  81ad18:	10800517 	ldw	r2,20(r2)
  81ad1c:	1880061e 	bne	r3,r2,81ad38 <altera_avalon_uart_txirq+0x11c>
  {
    sp->ctrl &= ~(ALTERA_AVALON_UART_CONTROL_TRDY_MSK |
  81ad20:	e0bffc17 	ldw	r2,-16(fp)
  81ad24:	10c00117 	ldw	r3,4(r2)
  81ad28:	00beefc4 	movi	r2,-1089
  81ad2c:	1886703a 	and	r3,r3,r2
  81ad30:	e0bffc17 	ldw	r2,-16(fp)
  81ad34:	10c00115 	stw	r3,4(r2)
                    ALTERA_AVALON_UART_CONTROL_DCTS_MSK);
  }

  IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  81ad38:	e0bffc17 	ldw	r2,-16(fp)
  81ad3c:	10800017 	ldw	r2,0(r2)
  81ad40:	10800304 	addi	r2,r2,12
  81ad44:	e0fffc17 	ldw	r3,-16(fp)
  81ad48:	18c00117 	ldw	r3,4(r3)
  81ad4c:	10c00035 	stwio	r3,0(r2)
}
  81ad50:	0001883a 	nop
  81ad54:	e037883a 	mov	sp,fp
  81ad58:	df000017 	ldw	fp,0(sp)
  81ad5c:	dec00104 	addi	sp,sp,4
  81ad60:	f800283a 	ret

0081ad64 <altera_avalon_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_uart_close(altera_avalon_uart_state* sp, int flags)
{
  81ad64:	defffd04 	addi	sp,sp,-12
  81ad68:	df000215 	stw	fp,8(sp)
  81ad6c:	df000204 	addi	fp,sp,8
  81ad70:	e13ffe15 	stw	r4,-8(fp)
  81ad74:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the UART ISR.
   */
  while (sp->tx_start != sp->tx_end) {
  81ad78:	00000506 	br	81ad90 <altera_avalon_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  81ad7c:	e0bfff17 	ldw	r2,-4(fp)
  81ad80:	1090000c 	andi	r2,r2,16384
  81ad84:	10000226 	beq	r2,zero,81ad90 <altera_avalon_uart_close+0x2c>
      return -EWOULDBLOCK; 
  81ad88:	00bffd44 	movi	r2,-11
  81ad8c:	00000606 	br	81ada8 <altera_avalon_uart_close+0x44>
int altera_avalon_uart_close(altera_avalon_uart_state* sp, int flags)
{
  /* 
   * Wait for all transmit data to be emptied by the UART ISR.
   */
  while (sp->tx_start != sp->tx_end) {
  81ad90:	e0bffe17 	ldw	r2,-8(fp)
  81ad94:	10c00417 	ldw	r3,16(r2)
  81ad98:	e0bffe17 	ldw	r2,-8(fp)
  81ad9c:	10800517 	ldw	r2,20(r2)
  81ada0:	18bff61e 	bne	r3,r2,81ad7c <__alt_data_end+0xff81ad7c>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
  81ada4:	0005883a 	mov	r2,zero
}
  81ada8:	e037883a 	mov	sp,fp
  81adac:	df000017 	ldw	fp,0(sp)
  81adb0:	dec00104 	addi	sp,sp,4
  81adb4:	f800283a 	ret

0081adb8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  81adb8:	defffe04 	addi	sp,sp,-8
  81adbc:	dfc00115 	stw	ra,4(sp)
  81adc0:	df000015 	stw	fp,0(sp)
  81adc4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  81adc8:	d0a00d17 	ldw	r2,-32716(gp)
  81adcc:	10000326 	beq	r2,zero,81addc <alt_get_errno+0x24>
  81add0:	d0a00d17 	ldw	r2,-32716(gp)
  81add4:	103ee83a 	callr	r2
  81add8:	00000106 	br	81ade0 <alt_get_errno+0x28>
  81addc:	d0a76c04 	addi	r2,gp,-25168
}
  81ade0:	e037883a 	mov	sp,fp
  81ade4:	dfc00117 	ldw	ra,4(sp)
  81ade8:	df000017 	ldw	fp,0(sp)
  81adec:	dec00204 	addi	sp,sp,8
  81adf0:	f800283a 	ret

0081adf4 <altera_avalon_uart_read>:
 */

int 
altera_avalon_uart_read(altera_avalon_uart_state* sp, char* ptr, int len,
  int flags)
{
  81adf4:	defff204 	addi	sp,sp,-56
  81adf8:	dfc00d15 	stw	ra,52(sp)
  81adfc:	df000c15 	stw	fp,48(sp)
  81ae00:	df000c04 	addi	fp,sp,48
  81ae04:	e13ffc15 	stw	r4,-16(fp)
  81ae08:	e17ffd15 	stw	r5,-12(fp)
  81ae0c:	e1bffe15 	stw	r6,-8(fp)
  81ae10:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context context;
  int             block;
  alt_u8          read_would_block = 0;
  81ae14:	e03ff405 	stb	zero,-48(fp)
  int             count = 0;
  81ae18:	e03ff515 	stw	zero,-44(fp)
  /* 
   * Construct a flag to indicate whether the device is being accessed in
   * blocking or non-blocking mode.
   */

  block = !(flags & O_NONBLOCK);
  81ae1c:	e0bfff17 	ldw	r2,-4(fp)
  81ae20:	1090000c 	andi	r2,r2,16384
  81ae24:	1005003a 	cmpeq	r2,r2,zero
  81ae28:	10803fcc 	andi	r2,r2,255
  81ae2c:	e0bff615 	stw	r2,-40(fp)
    /*
     * Read the required amount of data, until the circular buffer runs
     * empty
     */

    while ((count < len) && (sp->rx_start != sp->rx_end))
  81ae30:	00001306 	br	81ae80 <altera_avalon_uart_read+0x8c>
    {
      count++;
  81ae34:	e0bff517 	ldw	r2,-44(fp)
  81ae38:	10800044 	addi	r2,r2,1
  81ae3c:	e0bff515 	stw	r2,-44(fp)
      *ptr++ = sp->rx_buf[sp->rx_start];
  81ae40:	e0bffd17 	ldw	r2,-12(fp)
  81ae44:	10c00044 	addi	r3,r2,1
  81ae48:	e0fffd15 	stw	r3,-12(fp)
  81ae4c:	e0fffc17 	ldw	r3,-16(fp)
  81ae50:	18c00217 	ldw	r3,8(r3)
  81ae54:	e13ffc17 	ldw	r4,-16(fp)
  81ae58:	20c7883a 	add	r3,r4,r3
  81ae5c:	18c00704 	addi	r3,r3,28
  81ae60:	18c00003 	ldbu	r3,0(r3)
  81ae64:	10c00005 	stb	r3,0(r2)
      
      sp->rx_start = (sp->rx_start+1) & ALT_AVALON_UART_BUF_MSK;
  81ae68:	e0bffc17 	ldw	r2,-16(fp)
  81ae6c:	10800217 	ldw	r2,8(r2)
  81ae70:	10800044 	addi	r2,r2,1
  81ae74:	10c00fcc 	andi	r3,r2,63
  81ae78:	e0bffc17 	ldw	r2,-16(fp)
  81ae7c:	10c00215 	stw	r3,8(r2)
    /*
     * Read the required amount of data, until the circular buffer runs
     * empty
     */

    while ((count < len) && (sp->rx_start != sp->rx_end))
  81ae80:	e0fff517 	ldw	r3,-44(fp)
  81ae84:	e0bffe17 	ldw	r2,-8(fp)
  81ae88:	1880050e 	bge	r3,r2,81aea0 <altera_avalon_uart_read+0xac>
  81ae8c:	e0bffc17 	ldw	r2,-16(fp)
  81ae90:	10c00217 	ldw	r3,8(r2)
  81ae94:	e0bffc17 	ldw	r2,-16(fp)
  81ae98:	10800317 	ldw	r2,12(r2)
  81ae9c:	18bfe51e 	bne	r3,r2,81ae34 <__alt_data_end+0xff81ae34>
    /*
     * If no data has been transferred, the circular buffer is empty, and
     * this is not a non-blocking access, block waiting for data to arrive.
     */

    if (!count && (sp->rx_start == sp->rx_end))
  81aea0:	e0bff517 	ldw	r2,-44(fp)
  81aea4:	1000251e 	bne	r2,zero,81af3c <altera_avalon_uart_read+0x148>
  81aea8:	e0bffc17 	ldw	r2,-16(fp)
  81aeac:	10c00217 	ldw	r3,8(r2)
  81aeb0:	e0bffc17 	ldw	r2,-16(fp)
  81aeb4:	10800317 	ldw	r2,12(r2)
  81aeb8:	1880201e 	bne	r3,r2,81af3c <altera_avalon_uart_read+0x148>
    {
      if (!block)
  81aebc:	e0bff617 	ldw	r2,-40(fp)
  81aec0:	1000071e 	bne	r2,zero,81aee0 <altera_avalon_uart_read+0xec>
      {
        /* Set errno to indicate the reason we're not returning any data */

        ALT_ERRNO = EWOULDBLOCK;
  81aec4:	081adb80 	call	81adb8 <alt_get_errno>
  81aec8:	1007883a 	mov	r3,r2
  81aecc:	008002c4 	movi	r2,11
  81aed0:	18800015 	stw	r2,0(r3)
        read_would_block = 1;
  81aed4:	00800044 	movi	r2,1
  81aed8:	e0bff405 	stb	r2,-48(fp)
        break;
  81aedc:	00001b06 	br	81af4c <altera_avalon_uart_read+0x158>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81aee0:	0005303a 	rdctl	r2,status
  81aee4:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  81aee8:	e0fff917 	ldw	r3,-28(fp)
  81aeec:	00bfff84 	movi	r2,-2
  81aef0:	1884703a 	and	r2,r3,r2
  81aef4:	1001703a 	wrctl	status,r2
  
  return context;
  81aef8:	e0bff917 	ldw	r2,-28(fp)
      {
       /* Block waiting for some data to arrive */

       /* First, ensure read interrupts are enabled to avoid deadlock */

       context = alt_irq_disable_all ();
  81aefc:	e0bff815 	stw	r2,-32(fp)
       sp->ctrl |= ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
  81af00:	e0bffc17 	ldw	r2,-16(fp)
  81af04:	10800117 	ldw	r2,4(r2)
  81af08:	10c02014 	ori	r3,r2,128
  81af0c:	e0bffc17 	ldw	r2,-16(fp)
  81af10:	10c00115 	stw	r3,4(r2)
       IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  81af14:	e0bffc17 	ldw	r2,-16(fp)
  81af18:	10800017 	ldw	r2,0(r2)
  81af1c:	10800304 	addi	r2,r2,12
  81af20:	e0fffc17 	ldw	r3,-16(fp)
  81af24:	18c00117 	ldw	r3,4(r3)
  81af28:	10c00035 	stwio	r3,0(r2)
  81af2c:	e0bff817 	ldw	r2,-32(fp)
  81af30:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81af34:	e0bffa17 	ldw	r2,-24(fp)
  81af38:	1001703a 	wrctl	status,r2
                      OS_FLAG_WAIT_SET_ANY + OS_FLAG_CONSUME,
                      0);
      }
    }
  }
  while (!count && len);
  81af3c:	e0bff517 	ldw	r2,-44(fp)
  81af40:	1000021e 	bne	r2,zero,81af4c <altera_avalon_uart_read+0x158>
  81af44:	e0bffe17 	ldw	r2,-8(fp)
  81af48:	103fcd1e 	bne	r2,zero,81ae80 <__alt_data_end+0xff81ae80>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81af4c:	0005303a 	rdctl	r2,status
  81af50:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  81af54:	e0fffb17 	ldw	r3,-20(fp)
  81af58:	00bfff84 	movi	r2,-2
  81af5c:	1884703a 	and	r2,r3,r2
  81af60:	1001703a 	wrctl	status,r2
  
  return context;
  81af64:	e0bffb17 	ldw	r2,-20(fp)
  /*
   * Ensure that interrupts are enabled, so that the circular buffer can
   * re-fill.
   */

  context = alt_irq_disable_all ();
  81af68:	e0bff815 	stw	r2,-32(fp)
  sp->ctrl |= ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
  81af6c:	e0bffc17 	ldw	r2,-16(fp)
  81af70:	10800117 	ldw	r2,4(r2)
  81af74:	10c02014 	ori	r3,r2,128
  81af78:	e0bffc17 	ldw	r2,-16(fp)
  81af7c:	10c00115 	stw	r3,4(r2)
  IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  81af80:	e0bffc17 	ldw	r2,-16(fp)
  81af84:	10800017 	ldw	r2,0(r2)
  81af88:	10800304 	addi	r2,r2,12
  81af8c:	e0fffc17 	ldw	r3,-16(fp)
  81af90:	18c00117 	ldw	r3,4(r3)
  81af94:	10c00035 	stwio	r3,0(r2)
  81af98:	e0bff817 	ldw	r2,-32(fp)
  81af9c:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81afa0:	e0bff717 	ldw	r2,-36(fp)
  81afa4:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (context);

  /* Return the number of bytes read */
  if(read_would_block) {
  81afa8:	e0bff403 	ldbu	r2,-48(fp)
  81afac:	10000226 	beq	r2,zero,81afb8 <altera_avalon_uart_read+0x1c4>
    return -EWOULDBLOCK;
  81afb0:	00bffd44 	movi	r2,-11
  81afb4:	00000106 	br	81afbc <altera_avalon_uart_read+0x1c8>
  }
  else {
    return count;
  81afb8:	e0bff517 	ldw	r2,-44(fp)
  }
}
  81afbc:	e037883a 	mov	sp,fp
  81afc0:	dfc00117 	ldw	ra,4(sp)
  81afc4:	df000017 	ldw	fp,0(sp)
  81afc8:	dec00204 	addi	sp,sp,8
  81afcc:	f800283a 	ret

0081afd0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  81afd0:	defffe04 	addi	sp,sp,-8
  81afd4:	dfc00115 	stw	ra,4(sp)
  81afd8:	df000015 	stw	fp,0(sp)
  81afdc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  81afe0:	d0a00d17 	ldw	r2,-32716(gp)
  81afe4:	10000326 	beq	r2,zero,81aff4 <alt_get_errno+0x24>
  81afe8:	d0a00d17 	ldw	r2,-32716(gp)
  81afec:	103ee83a 	callr	r2
  81aff0:	00000106 	br	81aff8 <alt_get_errno+0x28>
  81aff4:	d0a76c04 	addi	r2,gp,-25168
}
  81aff8:	e037883a 	mov	sp,fp
  81affc:	dfc00117 	ldw	ra,4(sp)
  81b000:	df000017 	ldw	fp,0(sp)
  81b004:	dec00204 	addi	sp,sp,8
  81b008:	f800283a 	ret

0081b00c <altera_avalon_uart_write>:
 */

int
altera_avalon_uart_write(altera_avalon_uart_state* sp, const char* ptr, int len,
  int flags)
{
  81b00c:	defff204 	addi	sp,sp,-56
  81b010:	dfc00d15 	stw	ra,52(sp)
  81b014:	df000c15 	stw	fp,48(sp)
  81b018:	df000c04 	addi	fp,sp,48
  81b01c:	e13ffc15 	stw	r4,-16(fp)
  81b020:	e17ffd15 	stw	r5,-12(fp)
  81b024:	e1bffe15 	stw	r6,-8(fp)
  81b028:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context context;
  int             no_block;
  alt_u32         next;
  int             count = len;
  81b02c:	e0bffe17 	ldw	r2,-8(fp)
  81b030:	e0bff415 	stw	r2,-48(fp)
  /* 
   * Construct a flag to indicate whether the device is being accessed in
   * blocking or non-blocking mode.
   */

  no_block = (flags & O_NONBLOCK);
  81b034:	e0bfff17 	ldw	r2,-4(fp)
  81b038:	1090000c 	andi	r2,r2,16384
  81b03c:	e0bff515 	stw	r2,-44(fp)
   * Loop transferring data from the input buffer to the transmit circular
   * buffer. The loop is terminated once all the data has been transferred,
   * or, (if in non-blocking mode) the buffer becomes full.
   */

  while (count)
  81b040:	00003c06 	br	81b134 <altera_avalon_uart_write+0x128>
  {
    /* Determine the next slot in the buffer to access */

    next = (sp->tx_end + 1) & ALT_AVALON_UART_BUF_MSK;
  81b044:	e0bffc17 	ldw	r2,-16(fp)
  81b048:	10800517 	ldw	r2,20(r2)
  81b04c:	10800044 	addi	r2,r2,1
  81b050:	10800fcc 	andi	r2,r2,63
  81b054:	e0bff715 	stw	r2,-36(fp)

    /* block waiting for space if necessary */

    if (next == sp->tx_start)
  81b058:	e0bffc17 	ldw	r2,-16(fp)
  81b05c:	10c00417 	ldw	r3,16(r2)
  81b060:	e0bff717 	ldw	r2,-36(fp)
  81b064:	1880221e 	bne	r3,r2,81b0f0 <altera_avalon_uart_write+0xe4>
    {
      if (no_block)
  81b068:	e0bff517 	ldw	r2,-44(fp)
  81b06c:	10000526 	beq	r2,zero,81b084 <altera_avalon_uart_write+0x78>
      {
        /* Set errno to indicate why this function returned early */
 
        ALT_ERRNO = EWOULDBLOCK;
  81b070:	081afd00 	call	81afd0 <alt_get_errno>
  81b074:	1007883a 	mov	r3,r2
  81b078:	008002c4 	movi	r2,11
  81b07c:	18800015 	stw	r2,0(r3)
        break;
  81b080:	00002e06 	br	81b13c <altera_avalon_uart_write+0x130>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81b084:	0005303a 	rdctl	r2,status
  81b088:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  81b08c:	e0fff917 	ldw	r3,-28(fp)
  81b090:	00bfff84 	movi	r2,-2
  81b094:	1884703a 	and	r2,r3,r2
  81b098:	1001703a 	wrctl	status,r2
  
  return context;
  81b09c:	e0bff917 	ldw	r2,-28(fp)
      {
        /* Block waiting for space in the circular buffer */

        /* First, ensure transmit interrupts are enabled to avoid deadlock */

        context = alt_irq_disable_all ();
  81b0a0:	e0bff815 	stw	r2,-32(fp)
        sp->ctrl |= (ALTERA_AVALON_UART_CONTROL_TRDY_MSK |
  81b0a4:	e0bffc17 	ldw	r2,-16(fp)
  81b0a8:	10800117 	ldw	r2,4(r2)
  81b0ac:	10c11014 	ori	r3,r2,1088
  81b0b0:	e0bffc17 	ldw	r2,-16(fp)
  81b0b4:	10c00115 	stw	r3,4(r2)
                        ALTERA_AVALON_UART_CONTROL_DCTS_MSK);
        IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  81b0b8:	e0bffc17 	ldw	r2,-16(fp)
  81b0bc:	10800017 	ldw	r2,0(r2)
  81b0c0:	10800304 	addi	r2,r2,12
  81b0c4:	e0fffc17 	ldw	r3,-16(fp)
  81b0c8:	18c00117 	ldw	r3,4(r3)
  81b0cc:	10c00035 	stwio	r3,0(r2)
  81b0d0:	e0bff817 	ldw	r2,-32(fp)
  81b0d4:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81b0d8:	e0bff617 	ldw	r2,-40(fp)
  81b0dc:	1001703a 	wrctl	status,r2
          ALT_FLAG_PEND (sp->events, 
                         ALT_UART_WRITE_RDY,
                         OS_FLAG_WAIT_SET_ANY + OS_FLAG_CONSUME,
                         0);
        }
        while ((next == sp->tx_start));
  81b0e0:	e0bffc17 	ldw	r2,-16(fp)
  81b0e4:	10c00417 	ldw	r3,16(r2)
  81b0e8:	e0bff717 	ldw	r2,-36(fp)
  81b0ec:	18bffc26 	beq	r3,r2,81b0e0 <__alt_data_end+0xff81b0e0>
      }
    }

    count--;
  81b0f0:	e0bff417 	ldw	r2,-48(fp)
  81b0f4:	10bfffc4 	addi	r2,r2,-1
  81b0f8:	e0bff415 	stw	r2,-48(fp)

    /* Add the next character to the transmit buffer */

    sp->tx_buf[sp->tx_end] = *ptr++;
  81b0fc:	e0bffc17 	ldw	r2,-16(fp)
  81b100:	10c00517 	ldw	r3,20(r2)
  81b104:	e0bffd17 	ldw	r2,-12(fp)
  81b108:	11000044 	addi	r4,r2,1
  81b10c:	e13ffd15 	stw	r4,-12(fp)
  81b110:	10800003 	ldbu	r2,0(r2)
  81b114:	1009883a 	mov	r4,r2
  81b118:	e0bffc17 	ldw	r2,-16(fp)
  81b11c:	10c5883a 	add	r2,r2,r3
  81b120:	10801704 	addi	r2,r2,92
  81b124:	11000005 	stb	r4,0(r2)
    sp->tx_end = next;
  81b128:	e0bffc17 	ldw	r2,-16(fp)
  81b12c:	e0fff717 	ldw	r3,-36(fp)
  81b130:	10c00515 	stw	r3,20(r2)
   * Loop transferring data from the input buffer to the transmit circular
   * buffer. The loop is terminated once all the data has been transferred,
   * or, (if in non-blocking mode) the buffer becomes full.
   */

  while (count)
  81b134:	e0bff417 	ldw	r2,-48(fp)
  81b138:	103fc21e 	bne	r2,zero,81b044 <__alt_data_end+0xff81b044>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81b13c:	0005303a 	rdctl	r2,status
  81b140:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  81b144:	e0fffb17 	ldw	r3,-20(fp)
  81b148:	00bfff84 	movi	r2,-2
  81b14c:	1884703a 	and	r2,r3,r2
  81b150:	1001703a 	wrctl	status,r2
  
  return context;
  81b154:	e0bffb17 	ldw	r2,-20(fp)
  /* 
   * Ensure that interrupts are enabled, so that the circular buffer can 
   * drain.
   */

  context = alt_irq_disable_all ();
  81b158:	e0bff815 	stw	r2,-32(fp)
  sp->ctrl |= ALTERA_AVALON_UART_CONTROL_TRDY_MSK |
  81b15c:	e0bffc17 	ldw	r2,-16(fp)
  81b160:	10800117 	ldw	r2,4(r2)
  81b164:	10c11014 	ori	r3,r2,1088
  81b168:	e0bffc17 	ldw	r2,-16(fp)
  81b16c:	10c00115 	stw	r3,4(r2)
                 ALTERA_AVALON_UART_CONTROL_DCTS_MSK;
  IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
  81b170:	e0bffc17 	ldw	r2,-16(fp)
  81b174:	10800017 	ldw	r2,0(r2)
  81b178:	10800304 	addi	r2,r2,12
  81b17c:	e0fffc17 	ldw	r3,-16(fp)
  81b180:	18c00117 	ldw	r3,4(r3)
  81b184:	10c00035 	stwio	r3,0(r2)
  81b188:	e0bff817 	ldw	r2,-32(fp)
  81b18c:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81b190:	e0bffa17 	ldw	r2,-24(fp)
  81b194:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (context);

  /* return the number of bytes written */

  return (len - count);
  81b198:	e0fffe17 	ldw	r3,-8(fp)
  81b19c:	e0bff417 	ldw	r2,-48(fp)
  81b1a0:	1885c83a 	sub	r2,r3,r2
}
  81b1a4:	e037883a 	mov	sp,fp
  81b1a8:	dfc00117 	ldw	ra,4(sp)
  81b1ac:	df000017 	ldw	fp,0(sp)
  81b1b0:	dec00204 	addi	sp,sp,8
  81b1b4:	f800283a 	ret

0081b1b8 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  81b1b8:	defff504 	addi	sp,sp,-44
  81b1bc:	df000a15 	stw	fp,40(sp)
  81b1c0:	df000a04 	addi	fp,sp,40
  81b1c4:	e13ffc15 	stw	r4,-16(fp)
  81b1c8:	e17ffd15 	stw	r5,-12(fp)
  81b1cc:	e1bffe15 	stw	r6,-8(fp)
  81b1d0:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  81b1d4:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  81b1d8:	d0a77717 	ldw	r2,-25124(gp)
  
  if (alt_ticks_per_second ())
  81b1dc:	10003c26 	beq	r2,zero,81b2d0 <alt_alarm_start+0x118>
  {
    if (alarm)
  81b1e0:	e0bffc17 	ldw	r2,-16(fp)
  81b1e4:	10003826 	beq	r2,zero,81b2c8 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
  81b1e8:	e0bffc17 	ldw	r2,-16(fp)
  81b1ec:	e0fffe17 	ldw	r3,-8(fp)
  81b1f0:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
  81b1f4:	e0bffc17 	ldw	r2,-16(fp)
  81b1f8:	e0ffff17 	ldw	r3,-4(fp)
  81b1fc:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81b200:	0005303a 	rdctl	r2,status
  81b204:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  81b208:	e0fff917 	ldw	r3,-28(fp)
  81b20c:	00bfff84 	movi	r2,-2
  81b210:	1884703a 	and	r2,r3,r2
  81b214:	1001703a 	wrctl	status,r2
  
  return context;
  81b218:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
  81b21c:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  81b220:	d0a77817 	ldw	r2,-25120(gp)
      
      current_nticks = alt_nticks();
  81b224:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
  81b228:	e0fffd17 	ldw	r3,-12(fp)
  81b22c:	e0bff617 	ldw	r2,-40(fp)
  81b230:	1885883a 	add	r2,r3,r2
  81b234:	10c00044 	addi	r3,r2,1
  81b238:	e0bffc17 	ldw	r2,-16(fp)
  81b23c:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
  81b240:	e0bffc17 	ldw	r2,-16(fp)
  81b244:	10c00217 	ldw	r3,8(r2)
  81b248:	e0bff617 	ldw	r2,-40(fp)
  81b24c:	1880042e 	bgeu	r3,r2,81b260 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
  81b250:	e0bffc17 	ldw	r2,-16(fp)
  81b254:	00c00044 	movi	r3,1
  81b258:	10c00405 	stb	r3,16(r2)
  81b25c:	00000206 	br	81b268 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
  81b260:	e0bffc17 	ldw	r2,-16(fp)
  81b264:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  81b268:	e0bffc17 	ldw	r2,-16(fp)
  81b26c:	d0e01104 	addi	r3,gp,-32700
  81b270:	e0fffa15 	stw	r3,-24(fp)
  81b274:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  81b278:	e0bffb17 	ldw	r2,-20(fp)
  81b27c:	e0fffa17 	ldw	r3,-24(fp)
  81b280:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  81b284:	e0bffa17 	ldw	r2,-24(fp)
  81b288:	10c00017 	ldw	r3,0(r2)
  81b28c:	e0bffb17 	ldw	r2,-20(fp)
  81b290:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  81b294:	e0bffa17 	ldw	r2,-24(fp)
  81b298:	10800017 	ldw	r2,0(r2)
  81b29c:	e0fffb17 	ldw	r3,-20(fp)
  81b2a0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  81b2a4:	e0bffa17 	ldw	r2,-24(fp)
  81b2a8:	e0fffb17 	ldw	r3,-20(fp)
  81b2ac:	10c00015 	stw	r3,0(r2)
  81b2b0:	e0bff817 	ldw	r2,-32(fp)
  81b2b4:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81b2b8:	e0bff717 	ldw	r2,-36(fp)
  81b2bc:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
  81b2c0:	0005883a 	mov	r2,zero
  81b2c4:	00000306 	br	81b2d4 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
  81b2c8:	00bffa84 	movi	r2,-22
  81b2cc:	00000106 	br	81b2d4 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
  81b2d0:	00bfde84 	movi	r2,-134
  }
}
  81b2d4:	e037883a 	mov	sp,fp
  81b2d8:	df000017 	ldw	fp,0(sp)
  81b2dc:	dec00104 	addi	sp,sp,4
  81b2e0:	f800283a 	ret

0081b2e4 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
  81b2e4:	defffa04 	addi	sp,sp,-24
  81b2e8:	dfc00515 	stw	ra,20(sp)
  81b2ec:	df000415 	stw	fp,16(sp)
  81b2f0:	df000404 	addi	fp,sp,16
  81b2f4:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
  81b2f8:	008000c4 	movi	r2,3
  81b2fc:	e0bffd15 	stw	r2,-12(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
  81b300:	e0fffd17 	ldw	r3,-12(fp)
  81b304:	008003f4 	movhi	r2,15
  81b308:	10909004 	addi	r2,r2,16960
  81b30c:	1885383a 	mul	r2,r3,r2
  81b310:	100b883a 	mov	r5,r2
  81b314:	0100bef4 	movhi	r4,763
  81b318:	213c2004 	addi	r4,r4,-3968
  81b31c:	08155880 	call	815588 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
  81b320:	100b883a 	mov	r5,r2
  81b324:	01200034 	movhi	r4,32768
  81b328:	213fffc4 	addi	r4,r4,-1
  81b32c:	08155880 	call	815588 <__udivsi3>
  81b330:	100b883a 	mov	r5,r2
  81b334:	e13fff17 	ldw	r4,-4(fp)
  81b338:	08155880 	call	815588 <__udivsi3>
  81b33c:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  81b340:	e0bffe17 	ldw	r2,-8(fp)
  81b344:	10002a26 	beq	r2,zero,81b3f0 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
  81b348:	e03ffc15 	stw	zero,-16(fp)
  81b34c:	00001706 	br	81b3ac <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
  81b350:	00a00034 	movhi	r2,32768
  81b354:	10bfffc4 	addi	r2,r2,-1
  81b358:	10bfffc4 	addi	r2,r2,-1
  81b35c:	103ffe1e 	bne	r2,zero,81b358 <__alt_data_end+0xff81b358>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
  81b360:	e0fffd17 	ldw	r3,-12(fp)
  81b364:	008003f4 	movhi	r2,15
  81b368:	10909004 	addi	r2,r2,16960
  81b36c:	1885383a 	mul	r2,r3,r2
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
  81b370:	100b883a 	mov	r5,r2
  81b374:	0100bef4 	movhi	r4,763
  81b378:	213c2004 	addi	r4,r4,-3968
  81b37c:	08155880 	call	815588 <__udivsi3>
  81b380:	100b883a 	mov	r5,r2
  81b384:	01200034 	movhi	r4,32768
  81b388:	213fffc4 	addi	r4,r4,-1
  81b38c:	08155880 	call	815588 <__udivsi3>
  81b390:	1007883a 	mov	r3,r2
  81b394:	e0bfff17 	ldw	r2,-4(fp)
  81b398:	10c5c83a 	sub	r2,r2,r3
  81b39c:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
  81b3a0:	e0bffc17 	ldw	r2,-16(fp)
  81b3a4:	10800044 	addi	r2,r2,1
  81b3a8:	e0bffc15 	stw	r2,-16(fp)
  81b3ac:	e0fffc17 	ldw	r3,-16(fp)
  81b3b0:	e0bffe17 	ldw	r2,-8(fp)
  81b3b4:	18bfe616 	blt	r3,r2,81b350 <__alt_data_end+0xff81b350>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  81b3b8:	e0fffd17 	ldw	r3,-12(fp)
  81b3bc:	008003f4 	movhi	r2,15
  81b3c0:	10909004 	addi	r2,r2,16960
  81b3c4:	1885383a 	mul	r2,r3,r2
  81b3c8:	100b883a 	mov	r5,r2
  81b3cc:	0100bef4 	movhi	r4,763
  81b3d0:	213c2004 	addi	r4,r4,-3968
  81b3d4:	08155880 	call	815588 <__udivsi3>
  81b3d8:	1007883a 	mov	r3,r2
  81b3dc:	e0bfff17 	ldw	r2,-4(fp)
  81b3e0:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
  81b3e4:	10bfffc4 	addi	r2,r2,-1
  81b3e8:	103ffe1e 	bne	r2,zero,81b3e4 <__alt_data_end+0xff81b3e4>
  81b3ec:	00000d06 	br	81b424 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  81b3f0:	e0fffd17 	ldw	r3,-12(fp)
  81b3f4:	008003f4 	movhi	r2,15
  81b3f8:	10909004 	addi	r2,r2,16960
  81b3fc:	1885383a 	mul	r2,r3,r2
  81b400:	100b883a 	mov	r5,r2
  81b404:	0100bef4 	movhi	r4,763
  81b408:	213c2004 	addi	r4,r4,-3968
  81b40c:	08155880 	call	815588 <__udivsi3>
  81b410:	1007883a 	mov	r3,r2
  81b414:	e0bfff17 	ldw	r2,-4(fp)
  81b418:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
  81b41c:	10bfffc4 	addi	r2,r2,-1
  81b420:	00bffe16 	blt	zero,r2,81b41c <__alt_data_end+0xff81b41c>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
  81b424:	0005883a 	mov	r2,zero
}
  81b428:	e037883a 	mov	sp,fp
  81b42c:	dfc00117 	ldw	ra,4(sp)
  81b430:	df000017 	ldw	fp,0(sp)
  81b434:	dec00204 	addi	sp,sp,8
  81b438:	f800283a 	ret

0081b43c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
  81b43c:	defffe04 	addi	sp,sp,-8
  81b440:	df000115 	stw	fp,4(sp)
  81b444:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  81b448:	e03fff15 	stw	zero,-4(fp)
  81b44c:	00000506 	br	81b464 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  81b450:	e0bfff17 	ldw	r2,-4(fp)
  81b454:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  81b458:	e0bfff17 	ldw	r2,-4(fp)
  81b45c:	10800804 	addi	r2,r2,32
  81b460:	e0bfff15 	stw	r2,-4(fp)
  81b464:	e0bfff17 	ldw	r2,-4(fp)
  81b468:	10820030 	cmpltui	r2,r2,2048
  81b46c:	103ff81e 	bne	r2,zero,81b450 <__alt_data_end+0xff81b450>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
  81b470:	0001883a 	nop
  81b474:	e037883a 	mov	sp,fp
  81b478:	df000017 	ldw	fp,0(sp)
  81b47c:	dec00104 	addi	sp,sp,4
  81b480:	f800283a 	ret

0081b484 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  81b484:	defffe04 	addi	sp,sp,-8
  81b488:	dfc00115 	stw	ra,4(sp)
  81b48c:	df000015 	stw	fp,0(sp)
  81b490:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  81b494:	d0a00d17 	ldw	r2,-32716(gp)
  81b498:	10000326 	beq	r2,zero,81b4a8 <alt_get_errno+0x24>
  81b49c:	d0a00d17 	ldw	r2,-32716(gp)
  81b4a0:	103ee83a 	callr	r2
  81b4a4:	00000106 	br	81b4ac <alt_get_errno+0x28>
  81b4a8:	d0a76c04 	addi	r2,gp,-25168
}
  81b4ac:	e037883a 	mov	sp,fp
  81b4b0:	dfc00117 	ldw	ra,4(sp)
  81b4b4:	df000017 	ldw	fp,0(sp)
  81b4b8:	dec00204 	addi	sp,sp,8
  81b4bc:	f800283a 	ret

0081b4c0 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
  81b4c0:	defffa04 	addi	sp,sp,-24
  81b4c4:	dfc00515 	stw	ra,20(sp)
  81b4c8:	df000415 	stw	fp,16(sp)
  81b4cc:	df000404 	addi	fp,sp,16
  81b4d0:	e13ffe15 	stw	r4,-8(fp)
  81b4d4:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  81b4d8:	e0bffe17 	ldw	r2,-8(fp)
  81b4dc:	10000326 	beq	r2,zero,81b4ec <alt_dev_llist_insert+0x2c>
  81b4e0:	e0bffe17 	ldw	r2,-8(fp)
  81b4e4:	10800217 	ldw	r2,8(r2)
  81b4e8:	1000061e 	bne	r2,zero,81b504 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
  81b4ec:	081b4840 	call	81b484 <alt_get_errno>
  81b4f0:	1007883a 	mov	r3,r2
  81b4f4:	00800584 	movi	r2,22
  81b4f8:	18800015 	stw	r2,0(r3)
    return -EINVAL;
  81b4fc:	00bffa84 	movi	r2,-22
  81b500:	00001306 	br	81b550 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
  81b504:	e0bffe17 	ldw	r2,-8(fp)
  81b508:	e0ffff17 	ldw	r3,-4(fp)
  81b50c:	e0fffc15 	stw	r3,-16(fp)
  81b510:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  81b514:	e0bffd17 	ldw	r2,-12(fp)
  81b518:	e0fffc17 	ldw	r3,-16(fp)
  81b51c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  81b520:	e0bffc17 	ldw	r2,-16(fp)
  81b524:	10c00017 	ldw	r3,0(r2)
  81b528:	e0bffd17 	ldw	r2,-12(fp)
  81b52c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  81b530:	e0bffc17 	ldw	r2,-16(fp)
  81b534:	10800017 	ldw	r2,0(r2)
  81b538:	e0fffd17 	ldw	r3,-12(fp)
  81b53c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  81b540:	e0bffc17 	ldw	r2,-16(fp)
  81b544:	e0fffd17 	ldw	r3,-12(fp)
  81b548:	10c00015 	stw	r3,0(r2)

  return 0;  
  81b54c:	0005883a 	mov	r2,zero
}
  81b550:	e037883a 	mov	sp,fp
  81b554:	dfc00117 	ldw	ra,4(sp)
  81b558:	df000017 	ldw	fp,0(sp)
  81b55c:	dec00204 	addi	sp,sp,8
  81b560:	f800283a 	ret

0081b564 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
  81b564:	defffd04 	addi	sp,sp,-12
  81b568:	dfc00215 	stw	ra,8(sp)
  81b56c:	df000115 	stw	fp,4(sp)
  81b570:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  81b574:	008020b4 	movhi	r2,130
  81b578:	10b01604 	addi	r2,r2,-16296
  81b57c:	e0bfff15 	stw	r2,-4(fp)
  81b580:	00000606 	br	81b59c <_do_ctors+0x38>
        (*ctor) (); 
  81b584:	e0bfff17 	ldw	r2,-4(fp)
  81b588:	10800017 	ldw	r2,0(r2)
  81b58c:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  81b590:	e0bfff17 	ldw	r2,-4(fp)
  81b594:	10bfff04 	addi	r2,r2,-4
  81b598:	e0bfff15 	stw	r2,-4(fp)
  81b59c:	e0ffff17 	ldw	r3,-4(fp)
  81b5a0:	008020b4 	movhi	r2,130
  81b5a4:	10b01704 	addi	r2,r2,-16292
  81b5a8:	18bff62e 	bgeu	r3,r2,81b584 <__alt_data_end+0xff81b584>
        (*ctor) (); 
}
  81b5ac:	0001883a 	nop
  81b5b0:	e037883a 	mov	sp,fp
  81b5b4:	dfc00117 	ldw	ra,4(sp)
  81b5b8:	df000017 	ldw	fp,0(sp)
  81b5bc:	dec00204 	addi	sp,sp,8
  81b5c0:	f800283a 	ret

0081b5c4 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
  81b5c4:	defffd04 	addi	sp,sp,-12
  81b5c8:	dfc00215 	stw	ra,8(sp)
  81b5cc:	df000115 	stw	fp,4(sp)
  81b5d0:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  81b5d4:	008020b4 	movhi	r2,130
  81b5d8:	10b01604 	addi	r2,r2,-16296
  81b5dc:	e0bfff15 	stw	r2,-4(fp)
  81b5e0:	00000606 	br	81b5fc <_do_dtors+0x38>
        (*dtor) (); 
  81b5e4:	e0bfff17 	ldw	r2,-4(fp)
  81b5e8:	10800017 	ldw	r2,0(r2)
  81b5ec:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  81b5f0:	e0bfff17 	ldw	r2,-4(fp)
  81b5f4:	10bfff04 	addi	r2,r2,-4
  81b5f8:	e0bfff15 	stw	r2,-4(fp)
  81b5fc:	e0ffff17 	ldw	r3,-4(fp)
  81b600:	008020b4 	movhi	r2,130
  81b604:	10b01704 	addi	r2,r2,-16292
  81b608:	18bff62e 	bgeu	r3,r2,81b5e4 <__alt_data_end+0xff81b5e4>
        (*dtor) (); 
}
  81b60c:	0001883a 	nop
  81b610:	e037883a 	mov	sp,fp
  81b614:	dfc00117 	ldw	ra,4(sp)
  81b618:	df000017 	ldw	fp,0(sp)
  81b61c:	dec00204 	addi	sp,sp,8
  81b620:	f800283a 	ret

0081b624 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  81b624:	defffa04 	addi	sp,sp,-24
  81b628:	dfc00515 	stw	ra,20(sp)
  81b62c:	df000415 	stw	fp,16(sp)
  81b630:	df000404 	addi	fp,sp,16
  81b634:	e13ffe15 	stw	r4,-8(fp)
  81b638:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
  81b63c:	e0bfff17 	ldw	r2,-4(fp)
  81b640:	10800017 	ldw	r2,0(r2)
  81b644:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  81b648:	e13ffe17 	ldw	r4,-8(fp)
  81b64c:	08035a80 	call	8035a8 <strlen>
  81b650:	10800044 	addi	r2,r2,1
  81b654:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  81b658:	00000d06 	br	81b690 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  81b65c:	e0bffc17 	ldw	r2,-16(fp)
  81b660:	10800217 	ldw	r2,8(r2)
  81b664:	e0fffd17 	ldw	r3,-12(fp)
  81b668:	180d883a 	mov	r6,r3
  81b66c:	e17ffe17 	ldw	r5,-8(fp)
  81b670:	1009883a 	mov	r4,r2
  81b674:	081bd140 	call	81bd14 <memcmp>
  81b678:	1000021e 	bne	r2,zero,81b684 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  81b67c:	e0bffc17 	ldw	r2,-16(fp)
  81b680:	00000706 	br	81b6a0 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  81b684:	e0bffc17 	ldw	r2,-16(fp)
  81b688:	10800017 	ldw	r2,0(r2)
  81b68c:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  81b690:	e0fffc17 	ldw	r3,-16(fp)
  81b694:	e0bfff17 	ldw	r2,-4(fp)
  81b698:	18bff01e 	bne	r3,r2,81b65c <__alt_data_end+0xff81b65c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
  81b69c:	0005883a 	mov	r2,zero
}
  81b6a0:	e037883a 	mov	sp,fp
  81b6a4:	dfc00117 	ldw	ra,4(sp)
  81b6a8:	df000017 	ldw	fp,0(sp)
  81b6ac:	dec00204 	addi	sp,sp,8
  81b6b0:	f800283a 	ret

0081b6b4 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  81b6b4:	defffb04 	addi	sp,sp,-20
  81b6b8:	dfc00415 	stw	ra,16(sp)
  81b6bc:	df000315 	stw	fp,12(sp)
  81b6c0:	df000304 	addi	fp,sp,12
  81b6c4:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  81b6c8:	d0a00817 	ldw	r2,-32736(gp)
  81b6cc:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  81b6d0:	00003106 	br	81b798 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
  81b6d4:	e0bffd17 	ldw	r2,-12(fp)
  81b6d8:	10800217 	ldw	r2,8(r2)
  81b6dc:	1009883a 	mov	r4,r2
  81b6e0:	08035a80 	call	8035a8 <strlen>
  81b6e4:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
  81b6e8:	e0bffd17 	ldw	r2,-12(fp)
  81b6ec:	10c00217 	ldw	r3,8(r2)
  81b6f0:	e0bffe17 	ldw	r2,-8(fp)
  81b6f4:	10bfffc4 	addi	r2,r2,-1
  81b6f8:	1885883a 	add	r2,r3,r2
  81b6fc:	10800003 	ldbu	r2,0(r2)
  81b700:	10803fcc 	andi	r2,r2,255
  81b704:	1080201c 	xori	r2,r2,128
  81b708:	10bfe004 	addi	r2,r2,-128
  81b70c:	10800bd8 	cmpnei	r2,r2,47
  81b710:	1000031e 	bne	r2,zero,81b720 <alt_find_file+0x6c>
    {
      len -= 1;
  81b714:	e0bffe17 	ldw	r2,-8(fp)
  81b718:	10bfffc4 	addi	r2,r2,-1
  81b71c:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  81b720:	e0bffe17 	ldw	r2,-8(fp)
  81b724:	e0ffff17 	ldw	r3,-4(fp)
  81b728:	1885883a 	add	r2,r3,r2
  81b72c:	10800003 	ldbu	r2,0(r2)
  81b730:	10803fcc 	andi	r2,r2,255
  81b734:	1080201c 	xori	r2,r2,128
  81b738:	10bfe004 	addi	r2,r2,-128
  81b73c:	10800be0 	cmpeqi	r2,r2,47
  81b740:	1000081e 	bne	r2,zero,81b764 <alt_find_file+0xb0>
  81b744:	e0bffe17 	ldw	r2,-8(fp)
  81b748:	e0ffff17 	ldw	r3,-4(fp)
  81b74c:	1885883a 	add	r2,r3,r2
  81b750:	10800003 	ldbu	r2,0(r2)
  81b754:	10803fcc 	andi	r2,r2,255
  81b758:	1080201c 	xori	r2,r2,128
  81b75c:	10bfe004 	addi	r2,r2,-128
  81b760:	10000a1e 	bne	r2,zero,81b78c <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
  81b764:	e0bffd17 	ldw	r2,-12(fp)
  81b768:	10800217 	ldw	r2,8(r2)
  81b76c:	e0fffe17 	ldw	r3,-8(fp)
  81b770:	180d883a 	mov	r6,r3
  81b774:	e17fff17 	ldw	r5,-4(fp)
  81b778:	1009883a 	mov	r4,r2
  81b77c:	081bd140 	call	81bd14 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  81b780:	1000021e 	bne	r2,zero,81b78c <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
  81b784:	e0bffd17 	ldw	r2,-12(fp)
  81b788:	00000706 	br	81b7a8 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
  81b78c:	e0bffd17 	ldw	r2,-12(fp)
  81b790:	10800017 	ldw	r2,0(r2)
  81b794:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  81b798:	e0fffd17 	ldw	r3,-12(fp)
  81b79c:	d0a00804 	addi	r2,gp,-32736
  81b7a0:	18bfcc1e 	bne	r3,r2,81b6d4 <__alt_data_end+0xff81b6d4>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
  81b7a4:	0005883a 	mov	r2,zero
}
  81b7a8:	e037883a 	mov	sp,fp
  81b7ac:	dfc00117 	ldw	ra,4(sp)
  81b7b0:	df000017 	ldw	fp,0(sp)
  81b7b4:	dec00204 	addi	sp,sp,8
  81b7b8:	f800283a 	ret

0081b7bc <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  81b7bc:	defffc04 	addi	sp,sp,-16
  81b7c0:	df000315 	stw	fp,12(sp)
  81b7c4:	df000304 	addi	fp,sp,12
  81b7c8:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
  81b7cc:	00bffa04 	movi	r2,-24
  81b7d0:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  81b7d4:	e03ffd15 	stw	zero,-12(fp)
  81b7d8:	00001906 	br	81b840 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
  81b7dc:	008020b4 	movhi	r2,130
  81b7e0:	10b57b04 	addi	r2,r2,-10772
  81b7e4:	e0fffd17 	ldw	r3,-12(fp)
  81b7e8:	18c00324 	muli	r3,r3,12
  81b7ec:	10c5883a 	add	r2,r2,r3
  81b7f0:	10800017 	ldw	r2,0(r2)
  81b7f4:	10000f1e 	bne	r2,zero,81b834 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
  81b7f8:	008020b4 	movhi	r2,130
  81b7fc:	10b57b04 	addi	r2,r2,-10772
  81b800:	e0fffd17 	ldw	r3,-12(fp)
  81b804:	18c00324 	muli	r3,r3,12
  81b808:	10c5883a 	add	r2,r2,r3
  81b80c:	e0ffff17 	ldw	r3,-4(fp)
  81b810:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
  81b814:	d0e00c17 	ldw	r3,-32720(gp)
  81b818:	e0bffd17 	ldw	r2,-12(fp)
  81b81c:	1880020e 	bge	r3,r2,81b828 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
  81b820:	e0bffd17 	ldw	r2,-12(fp)
  81b824:	d0a00c15 	stw	r2,-32720(gp)
      }
      rc = i;
  81b828:	e0bffd17 	ldw	r2,-12(fp)
  81b82c:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
  81b830:	00000606 	br	81b84c <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  81b834:	e0bffd17 	ldw	r2,-12(fp)
  81b838:	10800044 	addi	r2,r2,1
  81b83c:	e0bffd15 	stw	r2,-12(fp)
  81b840:	e0bffd17 	ldw	r2,-12(fp)
  81b844:	10800810 	cmplti	r2,r2,32
  81b848:	103fe41e 	bne	r2,zero,81b7dc <__alt_data_end+0xff81b7dc>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  81b84c:	e0bffe17 	ldw	r2,-8(fp)
}
  81b850:	e037883a 	mov	sp,fp
  81b854:	df000017 	ldw	fp,0(sp)
  81b858:	dec00104 	addi	sp,sp,4
  81b85c:	f800283a 	ret

0081b860 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
  81b860:	defffe04 	addi	sp,sp,-8
  81b864:	dfc00115 	stw	ra,4(sp)
  81b868:	df000015 	stw	fp,0(sp)
  81b86c:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
  81b870:	01440004 	movi	r5,4096
  81b874:	0009883a 	mov	r4,zero
  81b878:	081bb9c0 	call	81bb9c <alt_icache_flush>
#endif
}
  81b87c:	0001883a 	nop
  81b880:	e037883a 	mov	sp,fp
  81b884:	dfc00117 	ldw	ra,4(sp)
  81b888:	df000017 	ldw	fp,0(sp)
  81b88c:	dec00204 	addi	sp,sp,8
  81b890:	f800283a 	ret

0081b894 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  81b894:	defff904 	addi	sp,sp,-28
  81b898:	dfc00615 	stw	ra,24(sp)
  81b89c:	df000515 	stw	fp,20(sp)
  81b8a0:	df000504 	addi	fp,sp,20
  81b8a4:	e13ffc15 	stw	r4,-16(fp)
  81b8a8:	e17ffd15 	stw	r5,-12(fp)
  81b8ac:	e1bffe15 	stw	r6,-8(fp)
  81b8b0:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
  81b8b4:	e1bfff17 	ldw	r6,-4(fp)
  81b8b8:	e17ffe17 	ldw	r5,-8(fp)
  81b8bc:	e13ffd17 	ldw	r4,-12(fp)
  81b8c0:	08188940 	call	818894 <open>
  81b8c4:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
  81b8c8:	e0bffb17 	ldw	r2,-20(fp)
  81b8cc:	10001c16 	blt	r2,zero,81b940 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
  81b8d0:	008020b4 	movhi	r2,130
  81b8d4:	10b57b04 	addi	r2,r2,-10772
  81b8d8:	e0fffb17 	ldw	r3,-20(fp)
  81b8dc:	18c00324 	muli	r3,r3,12
  81b8e0:	10c5883a 	add	r2,r2,r3
  81b8e4:	10c00017 	ldw	r3,0(r2)
  81b8e8:	e0bffc17 	ldw	r2,-16(fp)
  81b8ec:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  81b8f0:	008020b4 	movhi	r2,130
  81b8f4:	10b57b04 	addi	r2,r2,-10772
  81b8f8:	e0fffb17 	ldw	r3,-20(fp)
  81b8fc:	18c00324 	muli	r3,r3,12
  81b900:	10c5883a 	add	r2,r2,r3
  81b904:	10800104 	addi	r2,r2,4
  81b908:	10c00017 	ldw	r3,0(r2)
  81b90c:	e0bffc17 	ldw	r2,-16(fp)
  81b910:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  81b914:	008020b4 	movhi	r2,130
  81b918:	10b57b04 	addi	r2,r2,-10772
  81b91c:	e0fffb17 	ldw	r3,-20(fp)
  81b920:	18c00324 	muli	r3,r3,12
  81b924:	10c5883a 	add	r2,r2,r3
  81b928:	10800204 	addi	r2,r2,8
  81b92c:	10c00017 	ldw	r3,0(r2)
  81b930:	e0bffc17 	ldw	r2,-16(fp)
  81b934:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  81b938:	e13ffb17 	ldw	r4,-20(fp)
  81b93c:	0818b200 	call	818b20 <alt_release_fd>
  }
} 
  81b940:	0001883a 	nop
  81b944:	e037883a 	mov	sp,fp
  81b948:	dfc00117 	ldw	ra,4(sp)
  81b94c:	df000017 	ldw	fp,0(sp)
  81b950:	dec00204 	addi	sp,sp,8
  81b954:	f800283a 	ret

0081b958 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  81b958:	defffb04 	addi	sp,sp,-20
  81b95c:	dfc00415 	stw	ra,16(sp)
  81b960:	df000315 	stw	fp,12(sp)
  81b964:	df000304 	addi	fp,sp,12
  81b968:	e13ffd15 	stw	r4,-12(fp)
  81b96c:	e17ffe15 	stw	r5,-8(fp)
  81b970:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  81b974:	01c07fc4 	movi	r7,511
  81b978:	01800044 	movi	r6,1
  81b97c:	e17ffd17 	ldw	r5,-12(fp)
  81b980:	010020b4 	movhi	r4,130
  81b984:	21357e04 	addi	r4,r4,-10760
  81b988:	081b8940 	call	81b894 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  81b98c:	01c07fc4 	movi	r7,511
  81b990:	000d883a 	mov	r6,zero
  81b994:	e17ffe17 	ldw	r5,-8(fp)
  81b998:	010020b4 	movhi	r4,130
  81b99c:	21357b04 	addi	r4,r4,-10772
  81b9a0:	081b8940 	call	81b894 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  81b9a4:	01c07fc4 	movi	r7,511
  81b9a8:	01800044 	movi	r6,1
  81b9ac:	e17fff17 	ldw	r5,-4(fp)
  81b9b0:	010020b4 	movhi	r4,130
  81b9b4:	21358104 	addi	r4,r4,-10748
  81b9b8:	081b8940 	call	81b894 <alt_open_fd>
}  
  81b9bc:	0001883a 	nop
  81b9c0:	e037883a 	mov	sp,fp
  81b9c4:	dfc00117 	ldw	ra,4(sp)
  81b9c8:	df000017 	ldw	fp,0(sp)
  81b9cc:	dec00204 	addi	sp,sp,8
  81b9d0:	f800283a 	ret

0081b9d4 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  81b9d4:	defffa04 	addi	sp,sp,-24
  81b9d8:	df000515 	stw	fp,20(sp)
  81b9dc:	df000504 	addi	fp,sp,20
  81b9e0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81b9e4:	0005303a 	rdctl	r2,status
  81b9e8:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  81b9ec:	e0fffc17 	ldw	r3,-16(fp)
  81b9f0:	00bfff84 	movi	r2,-2
  81b9f4:	1884703a 	and	r2,r3,r2
  81b9f8:	1001703a 	wrctl	status,r2
  
  return context;
  81b9fc:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  81ba00:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
  81ba04:	e0bfff17 	ldw	r2,-4(fp)
  81ba08:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  81ba0c:	e0bffd17 	ldw	r2,-12(fp)
  81ba10:	10800017 	ldw	r2,0(r2)
  81ba14:	e0fffd17 	ldw	r3,-12(fp)
  81ba18:	18c00117 	ldw	r3,4(r3)
  81ba1c:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
  81ba20:	e0bffd17 	ldw	r2,-12(fp)
  81ba24:	10800117 	ldw	r2,4(r2)
  81ba28:	e0fffd17 	ldw	r3,-12(fp)
  81ba2c:	18c00017 	ldw	r3,0(r3)
  81ba30:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  81ba34:	e0bffd17 	ldw	r2,-12(fp)
  81ba38:	e0fffd17 	ldw	r3,-12(fp)
  81ba3c:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
  81ba40:	e0bffd17 	ldw	r2,-12(fp)
  81ba44:	e0fffd17 	ldw	r3,-12(fp)
  81ba48:	10c00015 	stw	r3,0(r2)
  81ba4c:	e0bffb17 	ldw	r2,-20(fp)
  81ba50:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81ba54:	e0bffe17 	ldw	r2,-8(fp)
  81ba58:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
  81ba5c:	0001883a 	nop
  81ba60:	e037883a 	mov	sp,fp
  81ba64:	df000017 	ldw	fp,0(sp)
  81ba68:	dec00104 	addi	sp,sp,4
  81ba6c:	f800283a 	ret

0081ba70 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  81ba70:	defffb04 	addi	sp,sp,-20
  81ba74:	dfc00415 	stw	ra,16(sp)
  81ba78:	df000315 	stw	fp,12(sp)
  81ba7c:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  81ba80:	d0a01117 	ldw	r2,-32700(gp)
  81ba84:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  81ba88:	d0a77817 	ldw	r2,-25120(gp)
  81ba8c:	10800044 	addi	r2,r2,1
  81ba90:	d0a77815 	stw	r2,-25120(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  81ba94:	00002e06 	br	81bb50 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
  81ba98:	e0bffd17 	ldw	r2,-12(fp)
  81ba9c:	10800017 	ldw	r2,0(r2)
  81baa0:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  81baa4:	e0bffd17 	ldw	r2,-12(fp)
  81baa8:	10800403 	ldbu	r2,16(r2)
  81baac:	10803fcc 	andi	r2,r2,255
  81bab0:	10000426 	beq	r2,zero,81bac4 <alt_tick+0x54>
  81bab4:	d0a77817 	ldw	r2,-25120(gp)
  81bab8:	1000021e 	bne	r2,zero,81bac4 <alt_tick+0x54>
    {
      alarm->rollover = 0;
  81babc:	e0bffd17 	ldw	r2,-12(fp)
  81bac0:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  81bac4:	e0bffd17 	ldw	r2,-12(fp)
  81bac8:	10800217 	ldw	r2,8(r2)
  81bacc:	d0e77817 	ldw	r3,-25120(gp)
  81bad0:	18801d36 	bltu	r3,r2,81bb48 <alt_tick+0xd8>
  81bad4:	e0bffd17 	ldw	r2,-12(fp)
  81bad8:	10800403 	ldbu	r2,16(r2)
  81badc:	10803fcc 	andi	r2,r2,255
  81bae0:	1000191e 	bne	r2,zero,81bb48 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
  81bae4:	e0bffd17 	ldw	r2,-12(fp)
  81bae8:	10800317 	ldw	r2,12(r2)
  81baec:	e0fffd17 	ldw	r3,-12(fp)
  81baf0:	18c00517 	ldw	r3,20(r3)
  81baf4:	1809883a 	mov	r4,r3
  81baf8:	103ee83a 	callr	r2
  81bafc:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  81bb00:	e0bfff17 	ldw	r2,-4(fp)
  81bb04:	1000031e 	bne	r2,zero,81bb14 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
  81bb08:	e13ffd17 	ldw	r4,-12(fp)
  81bb0c:	081b9d40 	call	81b9d4 <alt_alarm_stop>
  81bb10:	00000d06 	br	81bb48 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
  81bb14:	e0bffd17 	ldw	r2,-12(fp)
  81bb18:	10c00217 	ldw	r3,8(r2)
  81bb1c:	e0bfff17 	ldw	r2,-4(fp)
  81bb20:	1887883a 	add	r3,r3,r2
  81bb24:	e0bffd17 	ldw	r2,-12(fp)
  81bb28:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  81bb2c:	e0bffd17 	ldw	r2,-12(fp)
  81bb30:	10c00217 	ldw	r3,8(r2)
  81bb34:	d0a77817 	ldw	r2,-25120(gp)
  81bb38:	1880032e 	bgeu	r3,r2,81bb48 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
  81bb3c:	e0bffd17 	ldw	r2,-12(fp)
  81bb40:	00c00044 	movi	r3,1
  81bb44:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
  81bb48:	e0bffe17 	ldw	r2,-8(fp)
  81bb4c:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  81bb50:	e0fffd17 	ldw	r3,-12(fp)
  81bb54:	d0a01104 	addi	r2,gp,-32700
  81bb58:	18bfcf1e 	bne	r3,r2,81ba98 <__alt_data_end+0xff81ba98>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
  81bb5c:	0001883a 	nop
}
  81bb60:	0001883a 	nop
  81bb64:	e037883a 	mov	sp,fp
  81bb68:	dfc00117 	ldw	ra,4(sp)
  81bb6c:	df000017 	ldw	fp,0(sp)
  81bb70:	dec00204 	addi	sp,sp,8
  81bb74:	f800283a 	ret

0081bb78 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
  81bb78:	deffff04 	addi	sp,sp,-4
  81bb7c:	df000015 	stw	fp,0(sp)
  81bb80:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  81bb84:	000170fa 	wrctl	ienable,zero
}
  81bb88:	0001883a 	nop
  81bb8c:	e037883a 	mov	sp,fp
  81bb90:	df000017 	ldw	fp,0(sp)
  81bb94:	dec00104 	addi	sp,sp,4
  81bb98:	f800283a 	ret

0081bb9c <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
  81bb9c:	defffb04 	addi	sp,sp,-20
  81bba0:	df000415 	stw	fp,16(sp)
  81bba4:	df000404 	addi	fp,sp,16
  81bba8:	e13ffe15 	stw	r4,-8(fp)
  81bbac:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
  81bbb0:	e0bfff17 	ldw	r2,-4(fp)
  81bbb4:	10840070 	cmpltui	r2,r2,4097
  81bbb8:	1000021e 	bne	r2,zero,81bbc4 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
  81bbbc:	00840004 	movi	r2,4096
  81bbc0:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
  81bbc4:	e0fffe17 	ldw	r3,-8(fp)
  81bbc8:	e0bfff17 	ldw	r2,-4(fp)
  81bbcc:	1885883a 	add	r2,r3,r2
  81bbd0:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  81bbd4:	e0bffe17 	ldw	r2,-8(fp)
  81bbd8:	e0bffc15 	stw	r2,-16(fp)
  81bbdc:	00000506 	br	81bbf4 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
  81bbe0:	e0bffc17 	ldw	r2,-16(fp)
  81bbe4:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  81bbe8:	e0bffc17 	ldw	r2,-16(fp)
  81bbec:	10800804 	addi	r2,r2,32
  81bbf0:	e0bffc15 	stw	r2,-16(fp)
  81bbf4:	e0fffc17 	ldw	r3,-16(fp)
  81bbf8:	e0bffd17 	ldw	r2,-12(fp)
  81bbfc:	18bff836 	bltu	r3,r2,81bbe0 <__alt_data_end+0xff81bbe0>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
  81bc00:	e0bffe17 	ldw	r2,-8(fp)
  81bc04:	108007cc 	andi	r2,r2,31
  81bc08:	10000226 	beq	r2,zero,81bc14 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
  81bc0c:	e0bffc17 	ldw	r2,-16(fp)
  81bc10:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
  81bc14:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
  81bc18:	0001883a 	nop
  81bc1c:	e037883a 	mov	sp,fp
  81bc20:	df000017 	ldw	fp,0(sp)
  81bc24:	dec00104 	addi	sp,sp,4
  81bc28:	f800283a 	ret

0081bc2c <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
  81bc2c:	defffe04 	addi	sp,sp,-8
  81bc30:	df000115 	stw	fp,4(sp)
  81bc34:	df000104 	addi	fp,sp,4
  81bc38:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
  81bc3c:	e0bfff17 	ldw	r2,-4(fp)
  81bc40:	10bffe84 	addi	r2,r2,-6
  81bc44:	10c00428 	cmpgeui	r3,r2,16
  81bc48:	18001a1e 	bne	r3,zero,81bcb4 <alt_exception_cause_generated_bad_addr+0x88>
  81bc4c:	100690ba 	slli	r3,r2,2
  81bc50:	008020b4 	movhi	r2,130
  81bc54:	10af1904 	addi	r2,r2,-17308
  81bc58:	1885883a 	add	r2,r3,r2
  81bc5c:	10800017 	ldw	r2,0(r2)
  81bc60:	1000683a 	jmp	r2
  81bc64:	0081bca4 	muli	r2,zero,1778
  81bc68:	0081bca4 	muli	r2,zero,1778
  81bc6c:	0081bcb4 	movhi	r2,1778
  81bc70:	0081bcb4 	movhi	r2,1778
  81bc74:	0081bcb4 	movhi	r2,1778
  81bc78:	0081bca4 	muli	r2,zero,1778
  81bc7c:	0081bcac 	andhi	r2,zero,1778
  81bc80:	0081bcb4 	movhi	r2,1778
  81bc84:	0081bca4 	muli	r2,zero,1778
  81bc88:	0081bca4 	muli	r2,zero,1778
  81bc8c:	0081bcb4 	movhi	r2,1778
  81bc90:	0081bca4 	muli	r2,zero,1778
  81bc94:	0081bcac 	andhi	r2,zero,1778
  81bc98:	0081bcb4 	movhi	r2,1778
  81bc9c:	0081bcb4 	movhi	r2,1778
  81bca0:	0081bca4 	muli	r2,zero,1778
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
  81bca4:	00800044 	movi	r2,1
  81bca8:	00000306 	br	81bcb8 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
  81bcac:	0005883a 	mov	r2,zero
  81bcb0:	00000106 	br	81bcb8 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
  81bcb4:	0005883a 	mov	r2,zero
  }
}
  81bcb8:	e037883a 	mov	sp,fp
  81bcbc:	df000017 	ldw	fp,0(sp)
  81bcc0:	dec00104 	addi	sp,sp,4
  81bcc4:	f800283a 	ret

0081bcc8 <atexit>:
  81bcc8:	200b883a 	mov	r5,r4
  81bccc:	000f883a 	mov	r7,zero
  81bcd0:	000d883a 	mov	r6,zero
  81bcd4:	0009883a 	mov	r4,zero
  81bcd8:	081bd901 	jmpi	81bd90 <__register_exitproc>

0081bcdc <exit>:
  81bcdc:	defffe04 	addi	sp,sp,-8
  81bce0:	000b883a 	mov	r5,zero
  81bce4:	dc000015 	stw	r16,0(sp)
  81bce8:	dfc00115 	stw	ra,4(sp)
  81bcec:	2021883a 	mov	r16,r4
  81bcf0:	081bea80 	call	81bea8 <__call_exitprocs>
  81bcf4:	008020b4 	movhi	r2,130
  81bcf8:	10ba8404 	addi	r2,r2,-5616
  81bcfc:	11000017 	ldw	r4,0(r2)
  81bd00:	20800f17 	ldw	r2,60(r4)
  81bd04:	10000126 	beq	r2,zero,81bd0c <exit+0x30>
  81bd08:	103ee83a 	callr	r2
  81bd0c:	8009883a 	mov	r4,r16
  81bd10:	081c0280 	call	81c028 <_exit>

0081bd14 <memcmp>:
  81bd14:	01c000c4 	movi	r7,3
  81bd18:	3980192e 	bgeu	r7,r6,81bd80 <memcmp+0x6c>
  81bd1c:	2144b03a 	or	r2,r4,r5
  81bd20:	11c4703a 	and	r2,r2,r7
  81bd24:	10000f26 	beq	r2,zero,81bd64 <memcmp+0x50>
  81bd28:	20800003 	ldbu	r2,0(r4)
  81bd2c:	28c00003 	ldbu	r3,0(r5)
  81bd30:	10c0151e 	bne	r2,r3,81bd88 <memcmp+0x74>
  81bd34:	31bfff84 	addi	r6,r6,-2
  81bd38:	01ffffc4 	movi	r7,-1
  81bd3c:	00000406 	br	81bd50 <memcmp+0x3c>
  81bd40:	20800003 	ldbu	r2,0(r4)
  81bd44:	28c00003 	ldbu	r3,0(r5)
  81bd48:	31bfffc4 	addi	r6,r6,-1
  81bd4c:	10c00e1e 	bne	r2,r3,81bd88 <memcmp+0x74>
  81bd50:	21000044 	addi	r4,r4,1
  81bd54:	29400044 	addi	r5,r5,1
  81bd58:	31fff91e 	bne	r6,r7,81bd40 <__alt_data_end+0xff81bd40>
  81bd5c:	0005883a 	mov	r2,zero
  81bd60:	f800283a 	ret
  81bd64:	20c00017 	ldw	r3,0(r4)
  81bd68:	28800017 	ldw	r2,0(r5)
  81bd6c:	18bfee1e 	bne	r3,r2,81bd28 <__alt_data_end+0xff81bd28>
  81bd70:	31bfff04 	addi	r6,r6,-4
  81bd74:	21000104 	addi	r4,r4,4
  81bd78:	29400104 	addi	r5,r5,4
  81bd7c:	39bff936 	bltu	r7,r6,81bd64 <__alt_data_end+0xff81bd64>
  81bd80:	303fe91e 	bne	r6,zero,81bd28 <__alt_data_end+0xff81bd28>
  81bd84:	003ff506 	br	81bd5c <__alt_data_end+0xff81bd5c>
  81bd88:	10c5c83a 	sub	r2,r2,r3
  81bd8c:	f800283a 	ret

0081bd90 <__register_exitproc>:
  81bd90:	defffa04 	addi	sp,sp,-24
  81bd94:	dc000315 	stw	r16,12(sp)
  81bd98:	040020b4 	movhi	r16,130
  81bd9c:	843a8404 	addi	r16,r16,-5616
  81bda0:	80c00017 	ldw	r3,0(r16)
  81bda4:	dc400415 	stw	r17,16(sp)
  81bda8:	dfc00515 	stw	ra,20(sp)
  81bdac:	18805217 	ldw	r2,328(r3)
  81bdb0:	2023883a 	mov	r17,r4
  81bdb4:	10003726 	beq	r2,zero,81be94 <__register_exitproc+0x104>
  81bdb8:	10c00117 	ldw	r3,4(r2)
  81bdbc:	010007c4 	movi	r4,31
  81bdc0:	20c00e16 	blt	r4,r3,81bdfc <__register_exitproc+0x6c>
  81bdc4:	1a000044 	addi	r8,r3,1
  81bdc8:	8800221e 	bne	r17,zero,81be54 <__register_exitproc+0xc4>
  81bdcc:	18c00084 	addi	r3,r3,2
  81bdd0:	18c7883a 	add	r3,r3,r3
  81bdd4:	18c7883a 	add	r3,r3,r3
  81bdd8:	12000115 	stw	r8,4(r2)
  81bddc:	10c7883a 	add	r3,r2,r3
  81bde0:	19400015 	stw	r5,0(r3)
  81bde4:	0005883a 	mov	r2,zero
  81bde8:	dfc00517 	ldw	ra,20(sp)
  81bdec:	dc400417 	ldw	r17,16(sp)
  81bdf0:	dc000317 	ldw	r16,12(sp)
  81bdf4:	dec00604 	addi	sp,sp,24
  81bdf8:	f800283a 	ret
  81bdfc:	00800034 	movhi	r2,0
  81be00:	10800004 	addi	r2,r2,0
  81be04:	10002626 	beq	r2,zero,81bea0 <__register_exitproc+0x110>
  81be08:	01006404 	movi	r4,400
  81be0c:	d9400015 	stw	r5,0(sp)
  81be10:	d9800115 	stw	r6,4(sp)
  81be14:	d9c00215 	stw	r7,8(sp)
  81be18:	00000000 	call	0 <__alt_mem_sdram_0-0x800000>
  81be1c:	d9400017 	ldw	r5,0(sp)
  81be20:	d9800117 	ldw	r6,4(sp)
  81be24:	d9c00217 	ldw	r7,8(sp)
  81be28:	10001d26 	beq	r2,zero,81bea0 <__register_exitproc+0x110>
  81be2c:	81000017 	ldw	r4,0(r16)
  81be30:	10000115 	stw	zero,4(r2)
  81be34:	02000044 	movi	r8,1
  81be38:	22405217 	ldw	r9,328(r4)
  81be3c:	0007883a 	mov	r3,zero
  81be40:	12400015 	stw	r9,0(r2)
  81be44:	20805215 	stw	r2,328(r4)
  81be48:	10006215 	stw	zero,392(r2)
  81be4c:	10006315 	stw	zero,396(r2)
  81be50:	883fde26 	beq	r17,zero,81bdcc <__alt_data_end+0xff81bdcc>
  81be54:	18c9883a 	add	r4,r3,r3
  81be58:	2109883a 	add	r4,r4,r4
  81be5c:	1109883a 	add	r4,r2,r4
  81be60:	21802215 	stw	r6,136(r4)
  81be64:	01800044 	movi	r6,1
  81be68:	12406217 	ldw	r9,392(r2)
  81be6c:	30cc983a 	sll	r6,r6,r3
  81be70:	4992b03a 	or	r9,r9,r6
  81be74:	12406215 	stw	r9,392(r2)
  81be78:	21c04215 	stw	r7,264(r4)
  81be7c:	01000084 	movi	r4,2
  81be80:	893fd21e 	bne	r17,r4,81bdcc <__alt_data_end+0xff81bdcc>
  81be84:	11006317 	ldw	r4,396(r2)
  81be88:	218cb03a 	or	r6,r4,r6
  81be8c:	11806315 	stw	r6,396(r2)
  81be90:	003fce06 	br	81bdcc <__alt_data_end+0xff81bdcc>
  81be94:	18805304 	addi	r2,r3,332
  81be98:	18805215 	stw	r2,328(r3)
  81be9c:	003fc606 	br	81bdb8 <__alt_data_end+0xff81bdb8>
  81bea0:	00bfffc4 	movi	r2,-1
  81bea4:	003fd006 	br	81bde8 <__alt_data_end+0xff81bde8>

0081bea8 <__call_exitprocs>:
  81bea8:	defff504 	addi	sp,sp,-44
  81beac:	df000915 	stw	fp,36(sp)
  81beb0:	dd400615 	stw	r21,24(sp)
  81beb4:	dc800315 	stw	r18,12(sp)
  81beb8:	dfc00a15 	stw	ra,40(sp)
  81bebc:	ddc00815 	stw	r23,32(sp)
  81bec0:	dd800715 	stw	r22,28(sp)
  81bec4:	dd000515 	stw	r20,20(sp)
  81bec8:	dcc00415 	stw	r19,16(sp)
  81becc:	dc400215 	stw	r17,8(sp)
  81bed0:	dc000115 	stw	r16,4(sp)
  81bed4:	d9000015 	stw	r4,0(sp)
  81bed8:	2839883a 	mov	fp,r5
  81bedc:	04800044 	movi	r18,1
  81bee0:	057fffc4 	movi	r21,-1
  81bee4:	008020b4 	movhi	r2,130
  81bee8:	10ba8404 	addi	r2,r2,-5616
  81beec:	12000017 	ldw	r8,0(r2)
  81bef0:	45005217 	ldw	r20,328(r8)
  81bef4:	44c05204 	addi	r19,r8,328
  81bef8:	a0001c26 	beq	r20,zero,81bf6c <__call_exitprocs+0xc4>
  81befc:	a0800117 	ldw	r2,4(r20)
  81bf00:	15ffffc4 	addi	r23,r2,-1
  81bf04:	b8000d16 	blt	r23,zero,81bf3c <__call_exitprocs+0x94>
  81bf08:	14000044 	addi	r16,r2,1
  81bf0c:	8421883a 	add	r16,r16,r16
  81bf10:	8421883a 	add	r16,r16,r16
  81bf14:	84402004 	addi	r17,r16,128
  81bf18:	a463883a 	add	r17,r20,r17
  81bf1c:	a421883a 	add	r16,r20,r16
  81bf20:	e0001e26 	beq	fp,zero,81bf9c <__call_exitprocs+0xf4>
  81bf24:	80804017 	ldw	r2,256(r16)
  81bf28:	e0801c26 	beq	fp,r2,81bf9c <__call_exitprocs+0xf4>
  81bf2c:	bdffffc4 	addi	r23,r23,-1
  81bf30:	843fff04 	addi	r16,r16,-4
  81bf34:	8c7fff04 	addi	r17,r17,-4
  81bf38:	bd7ff91e 	bne	r23,r21,81bf20 <__alt_data_end+0xff81bf20>
  81bf3c:	00800034 	movhi	r2,0
  81bf40:	10800004 	addi	r2,r2,0
  81bf44:	10000926 	beq	r2,zero,81bf6c <__call_exitprocs+0xc4>
  81bf48:	a0800117 	ldw	r2,4(r20)
  81bf4c:	1000301e 	bne	r2,zero,81c010 <__call_exitprocs+0x168>
  81bf50:	a0800017 	ldw	r2,0(r20)
  81bf54:	10003226 	beq	r2,zero,81c020 <__call_exitprocs+0x178>
  81bf58:	a009883a 	mov	r4,r20
  81bf5c:	98800015 	stw	r2,0(r19)
  81bf60:	00000000 	call	0 <__alt_mem_sdram_0-0x800000>
  81bf64:	9d000017 	ldw	r20,0(r19)
  81bf68:	a03fe41e 	bne	r20,zero,81befc <__alt_data_end+0xff81befc>
  81bf6c:	dfc00a17 	ldw	ra,40(sp)
  81bf70:	df000917 	ldw	fp,36(sp)
  81bf74:	ddc00817 	ldw	r23,32(sp)
  81bf78:	dd800717 	ldw	r22,28(sp)
  81bf7c:	dd400617 	ldw	r21,24(sp)
  81bf80:	dd000517 	ldw	r20,20(sp)
  81bf84:	dcc00417 	ldw	r19,16(sp)
  81bf88:	dc800317 	ldw	r18,12(sp)
  81bf8c:	dc400217 	ldw	r17,8(sp)
  81bf90:	dc000117 	ldw	r16,4(sp)
  81bf94:	dec00b04 	addi	sp,sp,44
  81bf98:	f800283a 	ret
  81bf9c:	a0800117 	ldw	r2,4(r20)
  81bfa0:	80c00017 	ldw	r3,0(r16)
  81bfa4:	10bfffc4 	addi	r2,r2,-1
  81bfa8:	15c01426 	beq	r2,r23,81bffc <__call_exitprocs+0x154>
  81bfac:	80000015 	stw	zero,0(r16)
  81bfb0:	183fde26 	beq	r3,zero,81bf2c <__alt_data_end+0xff81bf2c>
  81bfb4:	95c8983a 	sll	r4,r18,r23
  81bfb8:	a0806217 	ldw	r2,392(r20)
  81bfbc:	a5800117 	ldw	r22,4(r20)
  81bfc0:	2084703a 	and	r2,r4,r2
  81bfc4:	10000b26 	beq	r2,zero,81bff4 <__call_exitprocs+0x14c>
  81bfc8:	a0806317 	ldw	r2,396(r20)
  81bfcc:	2088703a 	and	r4,r4,r2
  81bfd0:	20000c1e 	bne	r4,zero,81c004 <__call_exitprocs+0x15c>
  81bfd4:	89400017 	ldw	r5,0(r17)
  81bfd8:	d9000017 	ldw	r4,0(sp)
  81bfdc:	183ee83a 	callr	r3
  81bfe0:	a0800117 	ldw	r2,4(r20)
  81bfe4:	15bfbf1e 	bne	r2,r22,81bee4 <__alt_data_end+0xff81bee4>
  81bfe8:	98800017 	ldw	r2,0(r19)
  81bfec:	153fcf26 	beq	r2,r20,81bf2c <__alt_data_end+0xff81bf2c>
  81bff0:	003fbc06 	br	81bee4 <__alt_data_end+0xff81bee4>
  81bff4:	183ee83a 	callr	r3
  81bff8:	003ff906 	br	81bfe0 <__alt_data_end+0xff81bfe0>
  81bffc:	a5c00115 	stw	r23,4(r20)
  81c000:	003feb06 	br	81bfb0 <__alt_data_end+0xff81bfb0>
  81c004:	89000017 	ldw	r4,0(r17)
  81c008:	183ee83a 	callr	r3
  81c00c:	003ff406 	br	81bfe0 <__alt_data_end+0xff81bfe0>
  81c010:	a0800017 	ldw	r2,0(r20)
  81c014:	a027883a 	mov	r19,r20
  81c018:	1029883a 	mov	r20,r2
  81c01c:	003fb606 	br	81bef8 <__alt_data_end+0xff81bef8>
  81c020:	0005883a 	mov	r2,zero
  81c024:	003ffb06 	br	81c014 <__alt_data_end+0xff81c014>

0081c028 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  81c028:	defffd04 	addi	sp,sp,-12
  81c02c:	df000215 	stw	fp,8(sp)
  81c030:	df000204 	addi	fp,sp,8
  81c034:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
  81c038:	0001883a 	nop
  81c03c:	e0bfff17 	ldw	r2,-4(fp)
  81c040:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
  81c044:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  81c048:	10000226 	beq	r2,zero,81c054 <_exit+0x2c>
    ALT_SIM_FAIL();
  81c04c:	002af070 	cmpltui	zero,zero,43969
  81c050:	00000106 	br	81c058 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
  81c054:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  81c058:	003fff06 	br	81c058 <__alt_data_end+0xff81c058>
